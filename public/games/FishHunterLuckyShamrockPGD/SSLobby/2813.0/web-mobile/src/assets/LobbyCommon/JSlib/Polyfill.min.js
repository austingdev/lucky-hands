Array.prototype.find || Object.defineProperty(Array.prototype, "find", {
    value: function(r, t) {
        if (null == this) throw new TypeError('"this" is null or not defined');
        var e = Object(this),
            n = e.length >>> 0;
        if ("function" != typeof r) throw new TypeError("predicate must be a function");
        for (var i = 0; i < n;) {
            var o = e[i];
            if (r.call(t, o, i, e)) return o;
            i++
        }
    },
    configurable: !0,
    writable: !0
}), Array.prototype.findIndex || Object.defineProperty(Array.prototype, "findIndex", {
    value: function(r, t) {
        if (null == this) throw new TypeError('"this" is null or not defined');
        var e = Object(this),
            n = e.length >>> 0;
        if ("function" != typeof r) throw new TypeError("predicate must be a function");
        for (var i = 0; i < n;) {
            if (r.call(t, e[i], i, e)) return i;
            i++
        }
        return -1
    },
    configurable: !0,
    writable: !0
}), Array.prototype.includes || Object.defineProperty(Array.prototype, "includes", {
    value: function(r, t) {
        if (null == this) throw new TypeError('"this" is null or not defined');
        var e = Object(this),
            n = e.length >>> 0;
        if (0 === n) return !1;
        for (t |= 0, t = Math.max(0 <= t ? t : n - Math.abs(t), 0); t < n;) {
            var i = e[t],
                o = r;
            if (i === o || "number" == typeof i && "number" == typeof o && isNaN(i) && isNaN(o)) return !0;
            t++
        }
        return !1
    }
}), Array.prototype.map || (Array.prototype.map = function(r) {
    var t, e;
    if (null == this) throw new TypeError("this is null or not defined");
    var n = Object(this),
        i = n.length >>> 0;
    if ("function" != typeof r) throw new TypeError(r + " is not a function");
    1 < arguments.length && (t = arguments[1]);
    var o = Array(i);
    for (e = 0; e < i;) {
        if (e in n) {
            var f = n[e];
            f = r.call(t, f, e, n), o[e] = f
        }
        e++
    }
    return o
}), Array.prototype.indexOf || (Array.prototype.indexOf = function(r, t) {
    if (null == this) throw new TypeError('"this" is null or not defined');
    var e = Object(this),
        n = e.length >>> 0;
    if (0 === n) return -1;
    if ((t |= 0) >= n) return -1;
    for (t = Math.max(0 <= t ? t : n - Math.abs(t), 0); t < n;) {
        if (t in e && e[t] === r) return t;
        t++
    }
    return -1
}), String.prototype.includes || (String.prototype.includes = function(r, t) {
    return "number" != typeof t && (t = 0), !(t + r.length > this.length) && -1 !== this.indexOf(r, t)
});