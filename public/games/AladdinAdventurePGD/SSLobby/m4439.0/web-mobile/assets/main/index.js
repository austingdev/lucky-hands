var fStart=true;
window.__require = function e(t, o, n) {
    function i(r, a) {
        if (!o[r]) {
            if (!t[r]) {
                var l = r.split("/");
                if (l = l[l.length - 1], !t[l]) {
                    var c = "function" == typeof __require && __require;
                    if (!a && c) return c(l, !0);
                    if (s) return s(l, !0);
                    throw new Error("Cannot find module '" + r + "'")
                }
                r = l
            }
            var h = o[r] = {
                exports: {}
            };
            t[r][0].call(h.exports, function(e) {
                return i(t[r][1][e] || e)
            }, h, h.exports, e, t, o, n)
        }
        return o[r].exports
    }
    for (var s = "function" == typeof __require && __require, r = 0; r < n.length; r++) i(n[r]);
    return i
}({
    1: [function(e, t, o) {
        (function(e) {
            function t(e, t) {
                for (var o = 0, n = e.length - 1; n >= 0; n--) {
                    var i = e[n];
                    "." === i ? e.splice(n, 1) : ".." === i ? (e.splice(n, 1), o++) : o && (e.splice(n, 1), o--)
                }
                if (t)
                    for (; o--; o) e.unshift("..");
                return e
            }

            function n(e) {
                "string" != typeof e && (e += "");
                var t, o = 0,
                    n = -1,
                    i = !0;
                for (t = e.length - 1; t >= 0; --t)
                    if (47 === e.charCodeAt(t)) {
                        if (!i) {
                            o = t + 1;
                            break
                        }
                    } else -1 === n && (i = !1, n = t + 1);
                return -1 === n ? "" : e.slice(o, n)
            }

            function i(e, t) {
                if (e.filter) return e.filter(t);
                for (var o = [], n = 0; n < e.length; n++) t(e[n], n, e) && o.push(e[n]);
                return o
            }
            o.resolve = function() {
                for (var o = "", n = !1, s = arguments.length - 1; s >= -1 && !n; s--) {
                    var r = s >= 0 ? arguments[s] : e.cwd();
                    if ("string" != typeof r) throw new TypeError("Arguments to path.resolve must be strings");
                    r && (o = r + "/" + o, n = "/" === r.charAt(0))
                }
                return (n ? "/" : "") + (o = t(i(o.split("/"), function(e) {
                    return !!e
                }), !n).join("/")) || "."
            }, o.normalize = function(e) {
                var n = o.isAbsolute(e),
                    r = "/" === s(e, -1);
                return (e = t(i(e.split("/"), function(e) {
                    return !!e
                }), !n).join("/")) || n || (e = "."), e && r && (e += "/"), (n ? "/" : "") + e
            }, o.isAbsolute = function(e) {
                return "/" === e.charAt(0)
            }, o.join = function() {
                var e = Array.prototype.slice.call(arguments, 0);
                return o.normalize(i(e, function(e) {
                    if ("string" != typeof e) throw new TypeError("Arguments to path.join must be strings");
                    return e
                }).join("/"))
            }, o.relative = function(e, t) {
                function n(e) {
                    for (var t = 0; t < e.length && "" === e[t]; t++);
                    for (var o = e.length - 1; o >= 0 && "" === e[o]; o--);
                    return t > o ? [] : e.slice(t, o - t + 1)
                }
                e = o.resolve(e).substr(1), t = o.resolve(t).substr(1);
                for (var i = n(e.split("/")), s = n(t.split("/")), r = Math.min(i.length, s.length), a = r, l = 0; l < r; l++)
                    if (i[l] !== s[l]) {
                        a = l;
                        break
                    }
                var c = [];
                for (l = a; l < i.length; l++) c.push("..");
                return (c = c.concat(s.slice(a))).join("/")
            }, o.sep = "/", o.delimiter = ":", o.dirname = function(e) {
                if ("string" != typeof e && (e += ""), 0 === e.length) return ".";
                for (var t = e.charCodeAt(0), o = 47 === t, n = -1, i = !0, s = e.length - 1; s >= 1; --s)
                    if (47 === (t = e.charCodeAt(s))) {
                        if (!i) {
                            n = s;
                            break
                        }
                    } else i = !1;
                return -1 === n ? o ? "/" : "." : o && 1 === n ? "/" : e.slice(0, n)
            }, o.basename = function(e, t) {
                var o = n(e);
                return t && o.substr(-1 * t.length) === t && (o = o.substr(0, o.length - t.length)), o
            }, o.extname = function(e) {
                "string" != typeof e && (e += "");
                for (var t = -1, o = 0, n = -1, i = !0, s = 0, r = e.length - 1; r >= 0; --r) {
                    var a = e.charCodeAt(r);
                    if (47 !== a) - 1 === n && (i = !1, n = r + 1), 46 === a ? -1 === t ? t = r : 1 !== s && (s = 1) : -1 !== t && (s = -1);
                    else if (!i) {
                        o = r + 1;
                        break
                    }
                }
                return -1 === t || -1 === n || 0 === s || 1 === s && t === n - 1 && t === o + 1 ? "" : e.slice(t, n)
            };
            var s = "b" === "ab".substr(-1) ? function(e, t, o) {
                return e.substr(t, o)
            } : function(e, t, o) {
                return t < 0 && (t = e.length + t), e.substr(t, o)
            }
        }).call(this, e("_process"))
    }, {
        _process: 2
    }],
    2: [function(e, t) {
        var o, n, i = t.exports = {};

        function s() {
            throw new Error("setTimeout has not been defined")
        }

        function r() {
            throw new Error("clearTimeout has not been defined")
        }

        function a(e) {
            if (o === setTimeout) return setTimeout(e, 0);
            if ((o === s || !o) && setTimeout) return o = setTimeout, setTimeout(e, 0);
            try {
                return o(e, 0)
            } catch (t) {
                try {
                    return o.call(null, e, 0)
                } catch (t) {
                    return o.call(this, e, 0)
                }
            }
        }

        function l(e) {
            if (n === clearTimeout) return clearTimeout(e);
            if ((n === r || !n) && clearTimeout) return n = clearTimeout, clearTimeout(e);
            try {
                return n(e)
            } catch (t) {
                try {
                    return n.call(null, e)
                } catch (t) {
                    return n.call(this, e)
                }
            }
        }(function() {
            try {
                o = "function" == typeof setTimeout ? setTimeout : s
            } catch (e) {
                o = s
            }
            try {
                n = "function" == typeof clearTimeout ? clearTimeout : r
            } catch (e) {
                n = r
            }
        })();
        var c, h = [],
            m = !1,
            u = -1;

        function d() {
            m && c && (m = !1, c.length ? h = c.concat(h) : u = -1, h.length && p())
        }

        function p() {
            if (!m) {
                var e = a(d);
                m = !0;
                for (var t = h.length; t;) {
                    for (c = h, h = []; ++u < t;) c && c[u].run();
                    u = -1, t = h.length
                }
                c = null, m = !1, l(e)
            }
        }

        function g(e, t) {
            this.fun = e, this.array = t
        }

        function _() {}
        i.nextTick = function(e) {
            var t = new Array(arguments.length - 1);
            if (arguments.length > 1)
                for (var o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
            h.push(new g(e, t)), 1 !== h.length || m || a(p)
        }, g.prototype.run = function() {
            this.fun.apply(null, this.array)
        }, i.title = "browser", i.browser = !0, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = _, i.addListener = _, i.once = _, i.off = _, i.removeListener = _, i.removeAllListeners = _, i.emit = _, i.prependListener = _, i.prependOnceListener = _, i.listeners = function() {
            return []
        }, i.binding = function() {
            throw new Error("process.binding is not supported")
        }, i.cwd = function() {
            return "/"
        }, i.chdir = function() {
            throw new Error("process.chdir is not supported")
        }, i.umask = function() {
            return 0
        }
    }, {}],
    3: [function(e, t) {
        t.exports = function(e) {
            var t = new Date(e.getTime()),
                o = t.getTimezoneOffset();
            return t.setSeconds(0, 0), 6e4 * o + t.getTime() % 6e4
        }
    }, {}],
    4: [function(e, t) {
        var o = e("../start_of_day/index.js");
        t.exports = function(e, t) {
            var n = o(e),
                i = o(t),
                s = n.getTime() - 6e4 * n.getTimezoneOffset(),
                r = i.getTime() - 6e4 * i.getTimezoneOffset();
            return Math.round((s - r) / 864e5)
        }
    }, {
        "../start_of_day/index.js": 16
    }],
    5: [function(e, t) {
        var o = e("../get_day_of_year/index.js"),
            n = e("../get_iso_week/index.js"),
            i = e("../get_iso_year/index.js"),
            s = e("../parse/index.js"),
            r = e("../is_valid/index.js"),
            a = e("../locale/en/index.js"),
            l = {
                M: function(e) {
                    return e.getMonth() + 1
                },
                MM: function(e) {
                    return m(e.getMonth() + 1, 2)
                },
                Q: function(e) {
                    return Math.ceil((e.getMonth() + 1) / 3)
                },
                D: function(e) {
                    return e.getDate()
                },
                DD: function(e) {
                    return m(e.getDate(), 2)
                },
                DDD: function(e) {
                    return o(e)
                },
                DDDD: function(e) {
                    return m(o(e), 3)
                },
                d: function(e) {
                    return e.getDay()
                },
                E: function(e) {
                    return e.getDay() || 7
                },
                W: function(e) {
                    return n(e)
                },
                WW: function(e) {
                    return m(n(e), 2)
                },
                YY: function(e) {
                    return m(e.getFullYear(), 4).substr(2)
                },
                YYYY: function(e) {
                    return m(e.getFullYear(), 4)
                },
                GG: function(e) {
                    return String(i(e)).substr(2)
                },
                GGGG: function(e) {
                    return i(e)
                },
                H: function(e) {
                    return e.getHours()
                },
                HH: function(e) {
                    return m(e.getHours(), 2)
                },
                h: function(e) {
                    var t = e.getHours();
                    return 0 === t ? 12 : t > 12 ? t % 12 : t
                },
                hh: function(e) {
                    return m(l.h(e), 2)
                },
                m: function(e) {
                    return e.getMinutes()
                },
                mm: function(e) {
                    return m(e.getMinutes(), 2)
                },
                s: function(e) {
                    return e.getSeconds()
                },
                ss: function(e) {
                    return m(e.getSeconds(), 2)
                },
                S: function(e) {
                    return Math.floor(e.getMilliseconds() / 100)
                },
                SS: function(e) {
                    return m(Math.floor(e.getMilliseconds() / 10), 2)
                },
                SSS: function(e) {
                    return m(e.getMilliseconds(), 3)
                },
                Z: function(e) {
                    return h(e.getTimezoneOffset(), ":")
                },
                ZZ: function(e) {
                    return h(e.getTimezoneOffset())
                },
                X: function(e) {
                    return Math.floor(e.getTime() / 1e3)
                },
                x: function(e) {
                    return e.getTime()
                }
            };

        function c(e, t, o) {
            var n, i, s, r = e.match(o),
                a = r.length;
            for (n = 0; n < a; n++) i = t[r[n]] || l[r[n]], r[n] = i || ((s = r[n]).match(/\[[\s\S]/) ? s.replace(/^\[|]$/g, "") : s.replace(/\\/g, ""));
            return function(e) {
                for (var t = "", o = 0; o < a; o++) r[o] instanceof Function ? t += r[o](e, l) : t += r[o];
                return t
            }
        }

        function h(e, t) {
            t = t || "";
            var o = e > 0 ? "-" : "+",
                n = Math.abs(e),
                i = n % 60;
            return o + m(Math.floor(n / 60), 2) + t + m(i, 2)
        }

        function m(e, t) {
            for (var o = Math.abs(e).toString(); o.length < t;) o = "0" + o;
            return o
        }
        t.exports = function(e, t, o) {
            var n = t ? String(t) : "YYYY-MM-DDTHH:mm:ss.SSSZ",
                i = (o || {}).locale,
                l = a.format.formatters,
                h = a.format.formattingTokensRegExp;
            i && i.format && i.format.formatters && (l = i.format.formatters, i.format.formattingTokensRegExp && (h = i.format.formattingTokensRegExp));
            var m = s(e);
            return r(m) ? c(n, l, h)(m) : "Invalid Date"
        }
    }, {
        "../get_day_of_year/index.js": 6,
        "../get_iso_week/index.js": 7,
        "../get_iso_year/index.js": 8,
        "../is_valid/index.js": 10,
        "../locale/en/index.js": 14,
        "../parse/index.js": 15
    }],
    6: [function(e, t) {
        var o = e("../parse/index.js"),
            n = e("../start_of_year/index.js"),
            i = e("../difference_in_calendar_days/index.js");
        t.exports = function(e) {
            var t = o(e);
            return i(t, n(t)) + 1
        }
    }, {
        "../difference_in_calendar_days/index.js": 4,
        "../parse/index.js": 15,
        "../start_of_year/index.js": 20
    }],
    7: [function(e, t) {
        var o = e("../parse/index.js"),
            n = e("../start_of_iso_week/index.js"),
            i = e("../start_of_iso_year/index.js");
        t.exports = function(e) {
            var t = o(e),
                s = n(t).getTime() - i(t).getTime();
            return Math.round(s / 6048e5) + 1
        }
    }, {
        "../parse/index.js": 15,
        "../start_of_iso_week/index.js": 17,
        "../start_of_iso_year/index.js": 18
    }],
    8: [function(e, t) {
        var o = e("../parse/index.js"),
            n = e("../start_of_iso_week/index.js");
        t.exports = function(e) {
            var t = o(e),
                i = t.getFullYear(),
                s = new Date(0);
            s.setFullYear(i + 1, 0, 4), s.setHours(0, 0, 0, 0);
            var r = n(s),
                a = new Date(0);
            a.setFullYear(i, 0, 4), a.setHours(0, 0, 0, 0);
            var l = n(a);
            return t.getTime() >= r.getTime() ? i + 1 : t.getTime() >= l.getTime() ? i : i - 1
        }
    }, {
        "../parse/index.js": 15,
        "../start_of_iso_week/index.js": 17
    }],
    9: [function(e, t) {
        t.exports = function(e) {
            return e instanceof Date
        }
    }, {}],
    10: [function(e, t) {
        var o = e("../is_date/index.js");
        t.exports = function(e) {
            if (o(e)) return !isNaN(e);
            throw new TypeError(toString.call(e) + " is not an instance of Date")
        }
    }, {
        "../is_date/index.js": 9
    }],
    11: [function(e, t) {
        var o = ["M", "MM", "Q", "D", "DD", "DDD", "DDDD", "d", "E", "W", "WW", "YY", "YYYY", "GG", "GGGG", "H", "HH", "h", "hh", "m", "mm", "s", "ss", "S", "SS", "SSS", "Z", "ZZ", "X", "x"];
        t.exports = function(e) {
            var t = [];
            for (var n in e) e.hasOwnProperty(n) && t.push(n);
            var i = o.concat(t).sort().reverse();
            return new RegExp("(\\[[^\\[]*\\])|(\\\\)?(" + i.join("|") + "|.)", "g")
        }
    }, {}],
    12: [function(e, t) {
        t.exports = function() {
            var e = {
                lessThanXSeconds: {
                    one: "less than a second",
                    other: "less than {{count}} seconds"
                },
                xSeconds: {
                    one: "1 second",
                    other: "{{count}} seconds"
                },
                halfAMinute: "half a minute",
                lessThanXMinutes: {
                    one: "less than a minute",
                    other: "less than {{count}} minutes"
                },
                xMinutes: {
                    one: "1 minute",
                    other: "{{count}} minutes"
                },
                aboutXHours: {
                    one: "about 1 hour",
                    other: "about {{count}} hours"
                },
                xHours: {
                    one: "1 hour",
                    other: "{{count}} hours"
                },
                xDays: {
                    one: "1 day",
                    other: "{{count}} days"
                },
                aboutXMonths: {
                    one: "about 1 month",
                    other: "about {{count}} months"
                },
                xMonths: {
                    one: "1 month",
                    other: "{{count}} months"
                },
                aboutXYears: {
                    one: "about 1 year",
                    other: "about {{count}} years"
                },
                xYears: {
                    one: "1 year",
                    other: "{{count}} years"
                },
                overXYears: {
                    one: "over 1 year",
                    other: "over {{count}} years"
                },
                almostXYears: {
                    one: "almost 1 year",
                    other: "almost {{count}} years"
                }
            };
            return {
                localize: function(t, o, n) {
                    var i;
                    return n = n || {}, i = "string" == typeof e[t] ? e[t] : 1 === o ? e[t].one : e[t].other.replace("{{count}}", o), n.addSuffix ? n.comparison > 0 ? "in " + i : i + " ago" : i
                }
            }
        }
    }, {}],
    13: [function(e, t) {
        var o = e("../../_lib/build_formatting_tokens_reg_exp/index.js");

        function n(e) {
            var t = e % 100;
            if (t > 20 || t < 10) switch (t % 10) {
                case 1:
                    return e + "st";
                case 2:
                    return e + "nd";
                case 3:
                    return e + "rd"
            }
            return e + "th"
        }
        t.exports = function() {
            var e = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                t = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                i = ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                s = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                r = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                a = ["AM", "PM"],
                l = ["am", "pm"],
                c = ["a.m.", "p.m."],
                h = {
                    MMM: function(t) {
                        return e[t.getMonth()]
                    },
                    MMMM: function(e) {
                        return t[e.getMonth()]
                    },
                    dd: function(e) {
                        return i[e.getDay()]
                    },
                    ddd: function(e) {
                        return s[e.getDay()]
                    },
                    dddd: function(e) {
                        return r[e.getDay()]
                    },
                    A: function(e) {
                        return e.getHours() / 12 >= 1 ? a[1] : a[0]
                    },
                    a: function(e) {
                        return e.getHours() / 12 >= 1 ? l[1] : l[0]
                    },
                    aa: function(e) {
                        return e.getHours() / 12 >= 1 ? c[1] : c[0]
                    }
                };
            return ["M", "D", "DDD", "d", "Q", "W"].forEach(function(e) {
                h[e + "o"] = function(t, o) {
                    return n(o[e](t))
                }
            }), {
                formatters: h,
                formattingTokensRegExp: o(h)
            }
        }
    }, {
        "../../_lib/build_formatting_tokens_reg_exp/index.js": 11
    }],
    14: [function(e, t) {
        var o = e("./build_distance_in_words_locale/index.js"),
            n = e("./build_format_locale/index.js");
        t.exports = {
            distanceInWords: o(),
            format: n()
        }
    }, {
        "./build_distance_in_words_locale/index.js": 12,
        "./build_format_locale/index.js": 13
    }],
    15: [function(e, t) {
        var o = e("../_lib/getTimezoneOffsetInMilliseconds/index.js"),
            n = e("../is_date/index.js"),
            i = 36e5,
            s = 6e4,
            r = /[T ]/,
            a = /:/,
            l = /^(\d{2})$/,
            c = [/^([+-]\d{2})$/, /^([+-]\d{3})$/, /^([+-]\d{4})$/],
            h = /^(\d{4})/,
            m = [/^([+-]\d{4})/, /^([+-]\d{5})/, /^([+-]\d{6})/],
            u = /^-(\d{2})$/,
            d = /^-?(\d{3})$/,
            p = /^-?(\d{2})-?(\d{2})$/,
            g = /^-?W(\d{2})$/,
            _ = /^-?W(\d{2})-?(\d{1})$/,
            S = /^(\d{2}([.,]\d*)?)$/,
            y = /^(\d{2}):?(\d{2}([.,]\d*)?)$/,
            C = /^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,
            f = /([Z+-].*)$/,
            v = /^(Z)$/,
            P = /^([+-])(\d{2})$/,
            b = /^([+-])(\d{2}):?(\d{2})$/;

        function w(e) {
            var t, o = {},
                n = e.split(r);
            if (a.test(n[0]) ? (o.date = null, t = n[0]) : (o.date = n[0], t = n[1]), t) {
                var i = f.exec(t);
                i ? (o.time = t.replace(i[1], ""), o.timezone = i[1]) : o.time = t
            }
            return o
        }

        function I(e, t) {
            var o, n = c[t],
                i = m[t];
            if (o = h.exec(e) || i.exec(e)) {
                var s = o[1];
                return {
                    year: parseInt(s, 10),
                    restDateString: e.slice(s.length)
                }
            }
            if (o = l.exec(e) || n.exec(e)) {
                var r = o[1];
                return {
                    year: 100 * parseInt(r, 10),
                    restDateString: e.slice(r.length)
                }
            }
            return {
                year: null
            }
        }

        function E(e, t) {
            if (null === t) return null;
            var o, n, i;
            if (0 === e.length) return (n = new Date(0)).setUTCFullYear(t), n;
            if (o = u.exec(e)) return n = new Date(0), i = parseInt(o[1], 10) - 1, n.setUTCFullYear(t, i), n;
            if (o = d.exec(e)) {
                n = new Date(0);
                var s = parseInt(o[1], 10);
                return n.setUTCFullYear(t, 0, s), n
            }
            if (o = p.exec(e)) {
                n = new Date(0), i = parseInt(o[1], 10) - 1;
                var r = parseInt(o[2], 10);
                return n.setUTCFullYear(t, i, r), n
            }
            return (o = g.exec(e)) ? D(t, parseInt(o[1], 10) - 1) : (o = _.exec(e)) ? D(t, parseInt(o[1], 10) - 1, parseInt(o[2], 10) - 1) : null
        }

        function L(e) {
            var t, o, n;
            if (t = S.exec(e)) return (o = parseFloat(t[1].replace(",", "."))) % 24 * i;
            if (t = y.exec(e)) return o = parseInt(t[1], 10), n = parseFloat(t[2].replace(",", ".")), o % 24 * i + n * s;
            if (t = C.exec(e)) {
                o = parseInt(t[1], 10), n = parseInt(t[2], 10);
                var r = parseFloat(t[3].replace(",", "."));
                return o % 24 * i + n * s + 1e3 * r
            }
            return null
        }

        function D(e, t, o) {
            t = t || 0, o = o || 0;
            var n = new Date(0);
            n.setUTCFullYear(e, 0, 4);
            var i = 7 * t + o + 1 - (n.getUTCDay() || 7);
            return n.setUTCDate(n.getUTCDate() + i), n
        }
        t.exports = function(e, t) {
            if (n(e)) return new Date(e.getTime());
            if ("string" != typeof e) return new Date(e);
            var i = (t || {}).additionalDigits;
            i = null == i ? 2 : Number(i);
            var r, a, l, c = w(e),
                h = I(c.date, i),
                m = h.year,
                u = E(h.restDateString, m);
            if (u) {
                var d, p = u.getTime(),
                    g = 0;
                if (c.time && (g = L(c.time)), c.timezone) r = c.timezone, d = ((a = v.exec(r)) ? 0 : (a = P.exec(r)) ? (l = 60 * parseInt(a[2], 10), "+" === a[1] ? -l : l) : (a = b.exec(r)) ? (l = 60 * parseInt(a[2], 10) + parseInt(a[3], 10), "+" === a[1] ? -l : l) : 0) * s;
                else {
                    var _ = p + g,
                        S = new Date(_);
                    d = o(S);
                    var y = new Date(_);
                    y.setDate(S.getDate() + 1);
                    var C = o(y) - o(S);
                    C > 0 && (d += C)
                }
                return new Date(p + g + d)
            }
            return new Date(e)
        }
    }, {
        "../_lib/getTimezoneOffsetInMilliseconds/index.js": 3,
        "../is_date/index.js": 9
    }],
    16: [function(e, t) {
        var o = e("../parse/index.js");
        t.exports = function(e) {
            var t = o(e);
            return t.setHours(0, 0, 0, 0), t
        }
    }, {
        "../parse/index.js": 15
    }],
    17: [function(e, t) {
        var o = e("../start_of_week/index.js");
        t.exports = function(e) {
            return o(e, {
                weekStartsOn: 1
            })
        }
    }, {
        "../start_of_week/index.js": 19
    }],
    18: [function(e, t) {
        var o = e("../get_iso_year/index.js"),
            n = e("../start_of_iso_week/index.js");
        t.exports = function(e) {
            var t = o(e),
                i = new Date(0);
            return i.setFullYear(t, 0, 4), i.setHours(0, 0, 0, 0), n(i)
        }
    }, {
        "../get_iso_year/index.js": 8,
        "../start_of_iso_week/index.js": 17
    }],
    19: [function(e, t) {
        var o = e("../parse/index.js");
        t.exports = function(e, t) {
            var n = t && Number(t.weekStartsOn) || 0,
                i = o(e),
                s = i.getDay(),
                r = (s < n ? 7 : 0) + s - n;
            return i.setDate(i.getDate() - r), i.setHours(0, 0, 0, 0), i
        }
    }, {
        "../parse/index.js": 15
    }],
    20: [function(e, t) {
        var o = e("../parse/index.js");
        t.exports = function(e) {
            var t = o(e),
                n = new Date(0);
            return n.setFullYear(t.getFullYear(), 0, 1), n.setHours(0, 0, 0, 0), n
        }
    }, {
        "../parse/index.js": 15
    }],
    21: [function(e, t, o) {
        "use strict";
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.deinterlace = void 0, o.deinterlace = function(e, t) {
            for (var o = new Array(e.length), n = e.length / t, i = function(n, i) {
                    var s = e.slice(i * t, (i + 1) * t);
                    o.splice.apply(o, [n * t, t].concat(s))
                }, s = [0, 4, 2, 1], r = [8, 8, 4, 2], a = 0, l = 0; l < 4; l++)
                for (var c = s[l]; c < n; c += r[l]) i(c, a), a++;
            return o
        }
    }, {}],
    22: [function(e, t, o) {
        "use strict";
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.decompressFrames = o.decompressFrame = o.parseGIF = void 0;
        var n, i = (n = e("js-binary-schema-parser/lib/schemas/gif")) && n.__esModule ? n : {
                default: n
            },
            s = e("js-binary-schema-parser"),
            r = e("js-binary-schema-parser/lib/parsers/uint8"),
            a = e("./deinterlace"),
            l = e("./lzw");
        o.parseGIF = function(e) {
            var t = new Uint8Array(e);
            return (0, s.parse)((0, r.buildStream)(t), i.default)
        };
        var c = function(e) {
                for (var t = e.pixels.length, o = new Uint8ClampedArray(4 * t), n = 0; n < t; n++) {
                    var i = 4 * n,
                        s = e.pixels[n],
                        r = e.colorTable[s] || [0, 0, 0];
                    o[i] = r[0], o[i + 1] = r[1], o[i + 2] = r[2], o[i + 3] = s !== e.transparentIndex ? 255 : 0
                }
                return o
            },
            h = function(e, t, o) {
                if (e.image) {
                    var n = e.image,
                        i = n.descriptor.width * n.descriptor.height,
                        s = (0, l.lzw)(n.data.minCodeSize, n.data.blocks, i);
                    n.descriptor.lct.interlaced && (s = (0, a.deinterlace)(s, n.descriptor.width));
                    var r = {
                        pixels: s,
                        dims: {
                            top: e.image.descriptor.top,
                            left: e.image.descriptor.left,
                            width: e.image.descriptor.width,
                            height: e.image.descriptor.height
                        }
                    };
                    return n.descriptor.lct && n.descriptor.lct.exists ? r.colorTable = n.lct : r.colorTable = t, e.gce && (r.delay = 10 * (e.gce.delay || 10), r.disposalType = e.gce.extras.disposal, e.gce.extras.transparentColorGiven && (r.transparentIndex = e.gce.transparentColorIndex)), o && (r.patch = c(r)), r
                }
                console.warn("gif frame does not have associated image.")
            };
        o.decompressFrame = h, o.decompressFrames = function(e, t) {
            return e.frames.filter(function(e) {
                return e.image
            }).map(function(o) {
                return h(o, e.gct, t)
            })
        }
    }, {
        "./deinterlace": 21,
        "./lzw": 23,
        "js-binary-schema-parser": 24,
        "js-binary-schema-parser/lib/parsers/uint8": 25,
        "js-binary-schema-parser/lib/schemas/gif": 26
    }],
    23: [function(e, t, o) {
        "use strict";
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.lzw = void 0, o.lzw = function(e, t, o) {
            var n, i, s, r, a, l, c, h, m, u, d, p, g, _, S, y, C = o,
                f = new Array(o),
                v = new Array(4096),
                P = new Array(4096),
                b = new Array(4097);
            for (a = 1 + (i = 1 << (u = e)), n = i + 2, c = -1, s = (1 << (r = u + 1)) - 1, h = 0; h < i; h++) v[h] = 0, P[h] = h;
            for (d = p = g = _ = S = y = 0, m = 0; m < C;) {
                if (0 === _) {
                    if (p < r) {
                        d += t[y] << p, p += 8, y++;
                        continue
                    }
                    if (h = d & s, d >>= r, p -= r, h > n || h == a) break;
                    if (h == i) {
                        s = (1 << (r = u + 1)) - 1, n = i + 2, c = -1;
                        continue
                    }
                    if (-1 == c) {
                        b[_++] = P[h], c = h, g = h;
                        continue
                    }
                    for (l = h, h == n && (b[_++] = g, h = c); h > i;) b[_++] = P[h], h = v[h];
                    g = 255 & P[h], b[_++] = g, n < 4096 && (v[n] = c, P[n] = g, 0 == (++n & s) && n < 4096 && (r++, s += n)), c = l
                }
                _--, f[S++] = b[_], m++
            }
            for (m = S; m < C; m++) f[m] = 0;
            return f
        }
    }, {}],
    24: [function(e, t, o) {
        "use strict";
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.loop = o.conditional = o.parse = void 0, o.parse = function e(t, o) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : n;
            if (Array.isArray(o)) o.forEach(function(o) {
                return e(t, o, n, i)
            });
            else if ("function" == typeof o) o(t, n, i, e);
            else {
                var s = Object.keys(o)[0];
                Array.isArray(o[s]) ? (i[s] = {}, e(t, o[s], n, i[s])) : i[s] = o[s](t, n, i, e)
            }
            return n
        }, o.conditional = function(e, t) {
            return function(o, n, i, s) {
                t(o, n, i) && s(o, e, n, i)
            }
        }, o.loop = function(e, t) {
            return function(o, n, i, s) {
                for (var r = [], a = o.pos; t(o, n, i);) {
                    var l = {};
                    if (s(o, e, n, l), o.pos === a) break;
                    a = o.pos, r.push(l)
                }
                return r
            }
        }
    }, {}],
    25: [function(e, t, o) {
        "use strict";
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.readBits = o.readArray = o.readUnsigned = o.readString = o.peekBytes = o.readBytes = o.peekByte = o.readByte = o.buildStream = void 0, o.buildStream = function(e) {
            return {
                data: e,
                pos: 0
            }
        };
        o.readByte = function() {
            return function(e) {
                return e.data[e.pos++]
            }
        }, o.peekByte = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
            return function(t) {
                return t.data[t.pos + e]
            }
        };
        var n = function(e) {
            return function(t) {
                return t.data.subarray(t.pos, t.pos += e)
            }
        };
        o.readBytes = n, o.peekBytes = function(e) {
            return function(t) {
                return t.data.subarray(t.pos, t.pos + e)
            }
        }, o.readString = function(e) {
            return function(t) {
                return Array.from(n(e)(t)).map(function(e) {
                    return String.fromCharCode(e)
                }).join("")
            }
        }, o.readUnsigned = function(e) {
            return function(t) {
                var o = n(2)(t);
                return e ? (o[1] << 8) + o[0] : (o[0] << 8) + o[1]
            }
        }, o.readArray = function(e, t) {
            return function(o, i, s) {
                for (var r = "function" == typeof t ? t(o, i, s) : t, a = n(e), l = new Array(r), c = 0; c < r; c++) l[c] = a(o);
                return l
            }
        };
        var i = function(e, t, o) {
            for (var n = 0, i = 0; i < o; i++) n += e[t + i] && Math.pow(2, o - i - 1);
            return n
        };
        o.readBits = function(e) {
            return function(t) {
                for (var o = function(e) {
                        return e.data[e.pos++]
                    }(t), n = new Array(8), s = 0; s < 8; s++) n[7 - s] = !!(o & 1 << s);
                return Object.keys(e).reduce(function(t, o) {
                    var s = e[o];
                    return s.length ? t[o] = i(n, s.index, s.length) : t[o] = n[s.index], t
                }, {})
            }
        }
    }, {}],
    26: [function(e, t, o) {
        "use strict";
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.default = void 0;
        var n = e("../"),
            i = e("../parsers/uint8"),
            s = {
                blocks: function(e) {
                    for (var t = [], o = e.data.length, n = 0, s = (0, i.readByte)()(e); 0 !== s && s; s = (0, i.readByte)()(e)) {
                        if (e.pos + s >= o) {
                            var r = o - e.pos;
                            t.push((0, i.readBytes)(r)(e)), n += r;
                            break
                        }
                        t.push((0, i.readBytes)(s)(e)), n += s
                    }
                    for (var a = new Uint8Array(n), l = 0, c = 0; c < t.length; c++) a.set(t[c], l), l += t[c].length;
                    return a
                }
            },
            r = (0, n.conditional)({
                gce: [{
                    codes: (0, i.readBytes)(2)
                }, {
                    byteSize: (0, i.readByte)()
                }, {
                    extras: (0, i.readBits)({
                        future: {
                            index: 0,
                            length: 3
                        },
                        disposal: {
                            index: 3,
                            length: 3
                        },
                        userInput: {
                            index: 6
                        },
                        transparentColorGiven: {
                            index: 7
                        }
                    })
                }, {
                    delay: (0, i.readUnsigned)(!0)
                }, {
                    transparentColorIndex: (0, i.readByte)()
                }, {
                    terminator: (0, i.readByte)()
                }]
            }, function(e) {
                var t = (0, i.peekBytes)(2)(e);
                return 33 === t[0] && 249 === t[1]
            }),
            a = (0, n.conditional)({
                image: [{
                    code: (0, i.readByte)()
                }, {
                    descriptor: [{
                        left: (0, i.readUnsigned)(!0)
                    }, {
                        top: (0, i.readUnsigned)(!0)
                    }, {
                        width: (0, i.readUnsigned)(!0)
                    }, {
                        height: (0, i.readUnsigned)(!0)
                    }, {
                        lct: (0, i.readBits)({
                            exists: {
                                index: 0
                            },
                            interlaced: {
                                index: 1
                            },
                            sort: {
                                index: 2
                            },
                            future: {
                                index: 3,
                                length: 2
                            },
                            size: {
                                index: 5,
                                length: 3
                            }
                        })
                    }]
                }, (0, n.conditional)({
                    lct: (0, i.readArray)(3, function(e, t, o) {
                        return Math.pow(2, o.descriptor.lct.size + 1)
                    })
                }, function(e, t, o) {
                    return o.descriptor.lct.exists
                }), {
                    data: [{
                        minCodeSize: (0, i.readByte)()
                    }, s]
                }]
            }, function(e) {
                return 44 === (0, i.peekByte)()(e)
            }),
            l = (0, n.conditional)({
                text: [{
                    codes: (0, i.readBytes)(2)
                }, {
                    blockSize: (0, i.readByte)()
                }, {
                    preData: function(e, t, o) {
                        return (0, i.readBytes)(o.text.blockSize)(e)
                    }
                }, s]
            }, function(e) {
                var t = (0, i.peekBytes)(2)(e);
                return 33 === t[0] && 1 === t[1]
            }),
            c = (0, n.conditional)({
                application: [{
                    codes: (0, i.readBytes)(2)
                }, {
                    blockSize: (0, i.readByte)()
                }, {
                    id: function(e, t, o) {
                        return (0, i.readString)(o.blockSize)(e)
                    }
                }, s]
            }, function(e) {
                var t = (0, i.peekBytes)(2)(e);
                return 33 === t[0] && 255 === t[1]
            }),
            h = (0, n.conditional)({
                comment: [{
                    codes: (0, i.readBytes)(2)
                }, s]
            }, function(e) {
                var t = (0, i.peekBytes)(2)(e);
                return 33 === t[0] && 254 === t[1]
            }),
            m = [{
                header: [{
                    signature: (0, i.readString)(3)
                }, {
                    version: (0, i.readString)(3)
                }]
            }, {
                lsd: [{
                    width: (0, i.readUnsigned)(!0)
                }, {
                    height: (0, i.readUnsigned)(!0)
                }, {
                    gct: (0, i.readBits)({
                        exists: {
                            index: 0
                        },
                        resolution: {
                            index: 1,
                            length: 3
                        },
                        sort: {
                            index: 4
                        },
                        size: {
                            index: 5,
                            length: 3
                        }
                    })
                }, {
                    backgroundColorIndex: (0, i.readByte)()
                }, {
                    pixelAspectRatio: (0, i.readByte)()
                }]
            }, (0, n.conditional)({
                gct: (0, i.readArray)(3, function(e, t) {
                    return Math.pow(2, t.lsd.gct.size + 1)
                })
            }, function(e, t) {
                return t.lsd.gct.exists
            }), {
                frames: (0, n.loop)([r, c, h, a, l], function(e) {
                    var t = (0, i.peekByte)()(e);
                    return 33 === t || 44 === t
                })
            }];
        o.default = m
    }, {
        "../": 24,
        "../parsers/uint8": 25
    }],
    27: [function(e, t, o) {
        (function(e) {
            e([], function() {
                var e = function(e) {
                        return Number.prototype.toString.call(e, 36).toUpperCase()
                    },
                    t = function(e) {
                        return parseInt(e, 36)
                    },
                    o = Array.prototype.indexOf || function(e, t) {
                        for (var o = t || 0, n = this.length; o < n; o++)
                            if (this[o] === e) return o;
                        return -1
                    };
                return {
                    JSON: JSON,
                    pack: function(t, n) {
                        var i = (n = n || {}).verbose || !1;
                        i && console.log("Normalize the JSON Object"), t = "string" == typeof t ? this.JSON.parse(t) : t, i && console.log("Creating a empty dictionary");
                        var s = {
                            strings: [],
                            integers: [],
                            floats: []
                        };
                        i && console.log("Creating the AST");
                        var r = function t(n) {
                                i && console.log("Calling recursiveAstBuilder with " + this.JSON.stringify(n));
                                var r, a, l = typeof n;
                                if (null === n) return {
                                    type: "null",
                                    index: -3
                                };
                                if (void 0 === n) return {
                                    type: "undefined",
                                    index: -5
                                };
                                if (n instanceof Array) {
                                    var c = ["@"];
                                    for (var h in n) n.hasOwnProperty(h) && c.push(t(n[h]));
                                    return c
                                }
                                if ("object" === l) {
                                    for (var m in c = ["$"], n) n.hasOwnProperty(m) && (c.push(t(m)), c.push(t(n[m])));
                                    return c
                                }
                                if ("" === n) return {
                                    type: "empty",
                                    index: -4
                                };
                                if ("string" === l) return -1 == (r = o.call(s.strings, n)) && (s.strings.push("string" != typeof(a = n) ? a : a.replace(/[\+ \|\^\%]/g, function(e) {
                                    return {
                                        " ": "+",
                                        "+": "%2B",
                                        "|": "%7C",
                                        "^": "%5E",
                                        "%": "%25"
                                    }[e]
                                })), r = s.strings.length - 1), {
                                    type: "strings",
                                    index: r
                                };
                                if ("number" === l && n % 1 == 0) return -1 == (r = o.call(s.integers, n)) && (s.integers.push(e(n)), r = s.integers.length - 1), {
                                    type: "integers",
                                    index: r
                                };
                                if ("number" === l) return -1 == (r = o.call(s.floats, n)) && (s.floats.push(n), r = s.floats.length - 1), {
                                    type: "floats",
                                    index: r
                                };
                                if ("boolean" === l) return {
                                    type: "boolean",
                                    index: n ? -1 : -2
                                };
                                throw new Error("Unexpected argument of type " + typeof n)
                            }(t),
                            a = s.strings.length,
                            l = s.integers.length;
                        s.floats.length, i && console.log("Parsing the dictionary");
                        var c = s.strings.join("|");
                        return c += "^" + s.integers.join("|"), c += "^" + s.floats.join("|"), i && console.log("Parsing the structure"), c += "^" + function t(o) {
                            if (i && console.log("Calling a recursiveParser with " + this.JSON.stringify(o)), o instanceof Array) {
                                var n = o.shift();
                                for (var s in o) o.hasOwnProperty(s) && (n += t(o[s]) + "|");
                                return ("|" === n[n.length - 1] ? n.slice(0, -1) : n) + "]"
                            }
                            var r = o.type,
                                c = o.index;
                            if ("strings" === r) return e(c);
                            if ("integers" === r) return e(a + c);
                            if ("floats" === r) return e(a + l + c);
                            if ("boolean" === r) return o.index;
                            if ("null" === r) return -3;
                            if ("undefined" === r) return -5;
                            if ("empty" === r) return -4;
                            throw new TypeError("The item is alien!")
                        }(r), i && console.log("Ending parser"), n.debug ? {
                            dictionary: s,
                            ast: r,
                            packed: c
                        } : c
                    },
                    unpack: function(e, o) {
                        o = o || {};
                        var n = e.split("^");
                        o.verbose && console.log("Building dictionary");
                        var i, s = [],
                            r = n[0];
                        if ("" !== r) {
                            r = r.split("|"), o.verbose && console.log("Parse the strings dictionary");
                            for (var a = 0, l = r.length; a < l; a++) s.push("string" != typeof(i = r[a]) ? i : i.replace(/\+|%2B|%7C|%5E|%25/g, function(e) {
                                return {
                                    "+": " ",
                                    "%2B": "+",
                                    "%7C": "|",
                                    "%5E": "^",
                                    "%25": "%"
                                }[e]
                            }))
                        }
                        if ("" !== (r = n[1]))
                            for (r = r.split("|"), o.verbose && console.log("Parse the integers dictionary"), a = 0, l = r.length; a < l; a++) s.push(t(r[a]));
                        if ("" !== (r = n[2]))
                            for (r = r.split("|"), o.verbose && console.log("Parse the floats dictionary"), a = 0, l = r.length; a < l; a++) s.push(parseFloat(r[a]));
                        r = null, o.verbose && console.log("Tokenizing the structure");
                        var c = "",
                            h = [],
                            m = n[3].length;
                        for (a = 0; a < m; a++) {
                            var u = n[3].charAt(a);
                            "|" === u || "$" === u || "@" === u || "]" === u ? (c && (h.push(t(c)), c = ""), "|" !== u && h.push(u)) : c += u
                        }
                        var d = h.length,
                            p = 0;
                        return o.verbose && console.log("Starting recursive parser"),
                            function e() {
                                var t = h[p++];
                                if (o.verbose && console.log("Reading collection type " + ("$" === t ? "object" : "Array")), "@" === t) {
                                    for (var n = []; p < d; p++) {
                                        var i = h[p];
                                        if (o.verbose && console.log("Read " + i + " symbol"), "]" === i) return n;
                                        if ("@" === i || "$" === i) n.push(e());
                                        else switch (i) {
                                            case -1:
                                                n.push(!0);
                                                break;
                                            case -2:
                                                n.push(!1);
                                                break;
                                            case -3:
                                                n.push(null);
                                                break;
                                            case -5:
                                                n.push(void 0);
                                                break;
                                            case -4:
                                                n.push("");
                                                break;
                                            default:
                                                n.push(s[i])
                                        }
                                    }
                                    return o.verbose && console.log("Parsed " + this.JSON.stringify(n)), n
                                }
                                if ("$" === t) {
                                    for (n = {}; p < d; p++) {
                                        var r = h[p];
                                        if ("]" === r) return n;
                                        if (r = -4 === r ? "" : s[r], "@" === (i = h[++p]) || "$" === i) n[r] = e();
                                        else switch (i) {
                                            case -1:
                                                n[r] = !0;
                                                break;
                                            case -2:
                                                n[r] = !1;
                                                break;
                                            case -3:
                                                n[r] = null;
                                                break;
                                            case -5:
                                                n[r] = void 0;
                                                break;
                                            case -4:
                                                n[r] = "";
                                                break;
                                            default:
                                                n[r] = s[i]
                                        }
                                    }
                                    return o.verbose && console.log("Parsed " + this.JSON.stringify(n)), n
                                }
                                throw new TypeError("Bad token " + t + " isn't a type")
                            }()
                    }
                }
            })
        })("undefined" != typeof define && define.amd ? define : function(e, t) {
            var n = t();
            if (void 0 !== o)
                for (var i in n) o[i] = n[i];
            else window.jsonpack = n
        })
    }, {}],
    AchieveDefine: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "8b35cOBSN1FHIH5IajHjGkw", "AchieveDefine"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.AchieveRewardResult = o.AchieveInfo = void 0;
        const n = e("../ActCapsule/ActCapsuleDefine");
        o.default = class {
            constructor(e) {
                e && this.Parse(e)
            }
            Parse(e) {
                return this.roundId = e.RoundId, this.questId = e.QuestId, this.type = e.Type, this.startTime = new Date(e.StartTime), this.endTime = new Date(e.EndTime), this
            }
        }, o.AchieveInfo = class {
            constructor(e) {
                e && this.Parse(e)
            }
            Parse(e) {
                return this.genInterval = e.GenInterval, this.tab = e.Tab, this
            }
        }, o.AchieveRewardResult = class {
            constructor(e) {
                e && this.Parse(e)
            }
            Parse(e) {
                return this.roundId = e.RoundId, this.asset = new n.Asset(e.Asset), this
            }
        }, cc._RF.pop()
    }, {
        "../ActCapsule/ActCapsuleDefine": "ActCapsuleDefine"
    }],
    AchieveMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "5636bFd4DZPV6dq3ntPqd9L", "AchieveMgr");
        var n = this && this.__awaiter || function(e, t, o, n) {
            return new(o || (o = Promise))(function(i, s) {
                function r(e) {
                    try {
                        l(n.next(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function a(e) {
                    try {
                        l(n.throw(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                        e(t)
                    })).then(r, a)
                }
                l((n = n.apply(e, t || [])).next())
            })
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("../Helper/Download"),
            s = e("../Quest/Scripts/QuestCmd"),
            r = e("./Achieve");
        class a {
            constructor() {
                this.achieveDict = null
            }
            static get Instance() {
                return a.instance || (a.instance = new a), a.instance
            }
            InitDict() {
                a.instance.achieveDict = new SS.Common.Dictionary
            }
            InitAchieve(e, t, o, i) {
                return n(this, void 0, void 0, function*() {
                    if (t.endTime.getTime() - (new Date).getTime() > 0) {
                        const n = new r.default(t, o, i);
                        if (this.achieveDict || (this.achieveDict = new SS.Common.Dictionary), this.achieveDict.containsKey(e)) {
                            n.node = this.achieveDict.getValue(e).node, this.achieveDict.changeValueForKey(e, n);
                            const t = this.achieveDict.getValue(e);
                            t.node || (t.node = yield this.DownloadAchieve(e))
                        } else this.achieveDict.add(e, n), n.node = yield this.DownloadAchieve(e)
                    } else t.endTime.getTime() - (new Date).getTime() < 0 ? console.warn(`AchieveMgr:${e} is expired,\nEndTime:${t.endTime},\nNow Time:${new Date}}`) : t.startTime.getTime() - (new Date).getTime() > 0 && console.log(`AchieveMgr:${e} is not yet started,\nStartTime:${t.startTime},\nNow Time:${new Date}}`)
                })
            }
            DownloadAchieve(e) {
                return n(this, void 0, void 0, function*() {
                    const t = yield i.Download.Prefab(e);
                    return t ? (console.log(`[AchieveMgr]: Download Achieve Prefab ${e} success.`), cc.instantiate(t)) : null
                })
            }
            GetAchieve(e) {
                const t = this.achieveDict.values(),
                    o = [];
                for (let n of t) n.data.type === e && o.push(n);
                return o
            }
            AttachToNode(e) {
                this.achieveDict.values().forEach(t => {
                    t.node && (t.node.parent = e)
                })
            }
            UpdateAllTask(e, t) {
                return n(this, void 0, void 0, function*() {
                    return new Promise((o, i) => n(this, void 0, void 0, function*() {
                        const n = this.achieveDict.getValue(e),
                            {
                                roundId: r
                            } = n.data;
                        yield s.QuestCmd.GetAchieveTask(r, t, n.task).catch(e => {
                            i(e)
                        }), o()
                    }))
                })
            }
            Destroy() {
                var e;
                null === (e = this.achieveDict) || void 0 === e || e.clear(), this.achieveDict = null
            }
        }
        o.default = a, cc._RF.pop()
    }, {
        "../Helper/Download": "Download",
        "../Quest/Scripts/QuestCmd": "QuestCmd",
        "./Achieve": "Achieve"
    }],
    AchieveName: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "234da6b+HJLuIk32Oa7B6iP", "AchieveName"), Object.defineProperty(o, "__esModule", {
                value: !0
            }), o.AchieveName = void 0,
            function(e) {
                e.LuckyScratch = "LuckyScratch", e.LuckyShop = "LuckyShop", e.LuckyWheel = "LuckyWheel"
            }(o.AchieveName || (o.AchieveName = {})), cc._RF.pop()
    }, {}],
    Achieve: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "27140ZnEuVDP4oOdqrxXgXX", "Achieve"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.default = class {
            constructor(e, t, o) {
                this._data = null, this._info = null, this._node = null, this._task = null, this._data = e, this._info = t, this._task = o
            }
            set data(e) {
                this._data = e
            }
            set info(e) {
                this._info = e
            }
            get info() {
                return this._info
            }
            get data() {
                return this._data
            }
            set node(e) {
                this._node = e
            }
            get node() {
                return this._node
            }
            get task() {
                return this._task
            }
        }, cc._RF.pop()
    }, {}],
    ActCapsuleDefine: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "670412P9E9ESbL1iyl7o4Jb", "ActCapsuleDefine"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.HistoryData = o.ActCapsuleAwardHistory = o.ActCapsuleRollResult = o.Asset = o.ActCapsuleOdd = o.ActCapsuleMachine = o.ActCapsuleData = void 0, o.ActCapsuleData = class {
            constructor(e) {
                e && this.Parse(e)
            }
            Parse(e) {
                this.roundId = e.RoundId, this.questId = e.QuestId, this.machine ? this.machine.clear() : this.machine = new SS.Common.Dictionary;
                for (let t of Object.keys(e.Machine)) this.machine.add(t, new n(e.Machine[t]));
                return this.asset = new s(e.Asset), this.countDown = e.Countdown, this.guarantee = e.Guarantee, this
            }
        };
        class n {
            constructor(e) {
                this.cost = null, this.odds = null, e && this.Parse(e)
            }
            Parse(e) {
                this.currency = e.Currency, this.odds ? this.odds.clear() : this.odds = new SS.Common.Dictionary;
                for (let t of Object.keys(e.Odds)) this.odds.add(t, new i(e.Odds[t]));
                this.cost ? this.cost.clear() : this.cost = new SS.Common.Dictionary;
                for (let t of Object.keys(e.Cost)) this.cost.add(t, e.Cost[t]);
                return this
            }
        }
        o.ActCapsuleMachine = n;
        class i {
            constructor(e) {
                e && this.Parse(e)
            }
            Parse(e) {
                for (let t of Object.keys(e)) "ItemId" === t ? this.itemId = e.ItemId : "Amount" === t ? this.amount = e.Amount : "Remain" === t ? this.remain = e.Remain : "Total" === t ? this.total = e.Total : this[t] = e[t];
                return this
            }
        }
        o.ActCapsuleOdd = i;
        class s {
            constructor(e) {
                e && this.Parse(e)
            }
            Parse(e) {
                this.data = new SS.Common.Dictionary;
                for (let t of Object.keys(e)) this.data.add(t, e[t]);
                return this
            }
        }
        o.Asset = s, o.ActCapsuleRollResult = class {
            constructor(e) {
                e && this.Parse(e)
            }
            Parse(e) {
                return this.roundId = e.RoundId, this.countDown = e.CountDown, this.prize = new s(e.Prize), this.asset = new s(e.Asset), this
            }
        }, o.ActCapsuleAwardHistory = class {
            constructor(e) {
                this.data = [], e && this.Parse(e)
            }
            Parse(e) {
                return console.log("SSS gifthistorydata", e), this.data = [], this.data.push(new r(e)), this
            }
            GetHistoryItemID(e) {
                return this.data.find(t => t.roundId == e)
            }
        };
        class r {
            constructor(e) {
                e && this.Parse(e)
            }
            Parse(e) {
                return this.roundId = e.RoundId, this.itemId = e.ItemId, this.amount = e.amount, this
            }
        }
        o.HistoryData = r, cc._RF.pop()
    }, {}],
    ActCapsuleMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "e54ffY4b2BPR6O6e2qVcdb+", "ActCapsuleMgr"), Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const n = e("../Quest/Scripts/QuestCmd"),
            i = e("./ActCapsule"),
            s = e("./ActCapsuleDefine");
        class r {
            constructor() {
                this.actCapsuleDict = null
            }
            static get Instance() {
                return r.instance || (r.instance = new r, r.instance.actCapsuleDict = new SS.Common.Dictionary), r.instance
            }
            GetActCapsule(e) {
                return this.actCapsuleDict.getValue(e)
            }
            InitActCapsule(e, t) {
                this.actCapsuleDict || (this.actCapsuleDict = new SS.Common.Dictionary), this.actCapsuleDict.containsKey(e) ? this.actCapsuleDict.changeValueForKey(e, new i.default(t)) : this.actCapsuleDict.add(e, new i.default(t))
            }
            Roll(e, t, o, i) {
                return new Promise((r, a) => {
                    const l = this.actCapsuleDict.getValue(e);
                    n.QuestCmd.SendRollCmd(e, t, o, i, new s.ActCapsuleRollResult).then(e => {
                        l.UpdateAsset(e.asset), l.UpdatePrize(e.prize), r(e.prize)
                    }).catch(e => {
                        console.error("SSS ROLL ERR", e), a(e)
                    })
                })
            }
            GetMachineInfo(e) {
                return new Promise(t => {
                    n.QuestCmd.GetMachineInfo(e, new s.ActCapsuleData).then(e => {
                        t(e)
                    }).catch(() => {
                        t(null)
                    })
                })
            }
            UpdateActCapsule(e) {
                const t = this.GetActCapsule(e);
                return new Promise(o => {
                    n.QuestCmd.GetMachineInfo(e, t.data).then(() => {
                        o(t)
                    }).catch(() => {
                        console.error("ActCapsuleMgr:Update Failed"), o(t)
                    })
                })
            }
            Destroy() {
                var e;
                null === (e = this.actCapsuleDict) || void 0 === e || e.clear(), this.actCapsuleDict = null
            }
        }
        o.default = r, cc._RF.pop()
    }, {
        "../Quest/Scripts/QuestCmd": "QuestCmd",
        "./ActCapsule": "ActCapsule",
        "./ActCapsuleDefine": "ActCapsuleDefine"
    }],
    ActCapsule: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "05234MPyr5NMrYq7HwwNUM1", "ActCapsule"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.default = class {
            constructor(e) {
                e && this.Parse(e)
            }
            Parse(e) {
                return this.data = e, this
            }
            UpdateAsset(e) {
                this.data.asset = e
            }
            UpdatePrize(e) {
                this.data.prize = e
            }
        }, cc._RF.pop()
    }, {}],
    AnimationAutoPlay: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "e557al70NFER53legSOXhdW", "AnimationAutoPlay");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.animation = null, this.animationName = "", this.completeEventAry = [], this.compelteFunctionAry = []
            }
            onEnable() {
                this.PlayAnim()
            }
            onDisable() {
                this.PlayAnim()
            }
            PlayAnim() {
                0 == this.animationName.length && (this.animationName = this.animation.defaultClip.name), this.animation.play(this.animationName, 0), this.animation.on(cc.Animation.EventType.FINISHED, this.OnAnimPlayComplete.bind(this))
            }
            AddCompelteEvent(e) {
                this.compelteFunctionAry.push(e)
            }
            OnAnimPlayComplete() {
                for (let e = 0; e < this.compelteFunctionAry.length; e++) this.compelteFunctionAry[e]();
                cc.Component.EventHandler.emitEvents(this.completeEventAry)
            }
        };
        n([s(cc.Animation)], r.prototype, "animation", void 0), n([s()], r.prototype, "animationName", void 0), n([s([cc.Component.EventHandler])], r.prototype, "completeEventAry", void 0), r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    Asset: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "38e2edzUTRJ6ZR3P2qzEGmo", "Asset");
        var n = this && this.__awaiter || function(e, t, o, n) {
            return new(o || (o = Promise))(function(i, s) {
                function r(e) {
                    try {
                        l(n.next(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function a(e) {
                    try {
                        l(n.throw(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                        e(t)
                    })).then(r, a)
                }
                l((n = n.apply(e, t || [])).next())
            })
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.AssetIcon = void 0;
        const i = e("../../Helper/Download");
        let s = {},
            r = null,
            a = !1,
            l = [];
        const c = e => -1 != e.indexOf("FAC") || -1 != e.indexOf("FRM"),
            h = e => -1 != e.indexOf("GC-Amazon-"),
            m = () => n(void 0, void 0, void 0, function*() {
                const e = window.gd_nowLOGO;
                let t;
                a ? yield new Promise(e => {
                    l.push(e)
                }): (a = !0, t = yield i.Download.JSON(e + "/AvatarItemSetting"), l.forEach(e => {
                    e()
                }), a = !1, l = [], r = {}, t.forEach(e => {
                    const {
                        id: t
                    } = e;
                    r[t] = e
                }))
            });
        o.AssetIcon = {
            GetSpriteFrame: e => n(void 0, void 0, void 0, function*() {
                let t = null;
                return s.hasOwnProperty(e) ? t = s[e] : (t = c(e) ? yield i.Download.SpriteFrame("Avatar", e): h(e) ? yield i.Download.SpriteFrame("Common", "Texture/Reward/amazon_gift_card"): yield i.Download.SpriteFrame("Common", "Texture/Reward/" + e), s[e] = t), t
            }),
            Clear: () => n(void 0, void 0, void 0, function*() {
                s = {}, r = null
            }),
            GetName: e => n(void 0, void 0, void 0, function*() {
                return r || (yield m()), c(e) ? r[e].type : h(e) ? "Amazon Gift Card" : "MF100001" == e ? "Freeze" : "MF100002" == e ? "Summon" : e
            }),
            GetDescribe: e => n(void 0, void 0, void 0, function*() {
                return null === r && (yield m()), c(e) ? r[e].get_info_1 : h(e) ? e.slice(10) : "$Amount"
            }),
            IsAvatar: c,
            IsGiftCard: h
        }, cc._RF.pop()
    }, {
        "../../Helper/Download": "Download"
    }],
    AudioList: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "e8266P4rfxASoLV2qQy8a2o", "AudioList");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.AudioList = void 0;
        const i = e("../AudioMgr"),
            s = e("./AudioSetting"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_listAudioSetting = [], this.AudioClipList = [], this.AudioNameList = []
            }
            onLoad() {
                this.AudioClipList = [], this.AudioNameList = [];
                for (let e of this.m_listAudioSetting) this.AudioClipList.push(e.m_audioClip), this.AudioNameList.push(e.m_clipName);
                i.AudioMgr.Instance.setAudioClip(this.AudioClipList, this.AudioNameList)
            }
            Sort() {
                let e = new Array;
                for (let t of this.m_listAudioSetting) null !== t.m_audioClip && "" !== t.m_clipName && e.push(t);
                this.m_listAudioSetting = e
            }
        };
        n([a({
            type: s.AudioSetting,
            displayName: "\u97f3\u6548\u6a94\u6848"
        })], l.prototype, "m_listAudioSetting", void 0), l = n([r], l), o.AudioList = l, cc._RF.pop()
    }, {
        "../AudioMgr": "AudioMgr",
        "./AudioSetting": "AudioSetting"
    }],
    AudioMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "d6220uRGVxKKLpx3/gNjQJf", "AudioMgr");
        var n, i = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            s = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.AudioMgr = void 0;
        const r = e("../PopupMessage/Script/PopupMsgMgr"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        let c = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.tmpLastAudioJson = null, this.nameMapClip = null, this.audioInfoAry = [], this._update = []
            }
            onLoad() {
                null == n.Instance && (this._update = [], n.Instance = this, this.tmpLastAudioJson = JSON.parse("{}"), cc.game.on(cc.game.EVENT_HIDE, this.onAppPause.bind(this), this), cc.game.on(cc.game.EVENT_SHOW, this.onAppResume.bind(this), this))
            }
            update(e) {
                if (null != this.audioInfoAry)
                    for (let t of this.audioInfoAry) 0 !== t.duration && (t.duration -= e, t.duration > 0 ? (t.volume += (t.targetVolume - t.volume) / t.duration * e, SS.Common.GameEnvironment.IsMute || this.SafeSetVolume(t.id, t.volume)) : (t.duration = 0, t.targetDuration = 0, t.volume = t.targetVolume, SS.Common.GameEnvironment.IsMute || this.SafeSetVolume(t.id, t.volume)))
            }
            SafeSetVolume(e, t) {
                let o = t;
                o > 1 ? o = 1 : o < 0 && (o = 0), cc.audioEngine.setVolume(e, o)
            }
            onAppResume() {
                this.isPause && (this.isPause = !1, this.SetMute(SS.Common.GameEnvironment.IsMute))
            }
            onAppPause() {
                this.isPause = !0;
                try {
                    this.audioInfoAry && this.audioInfoAry.forEach(e => {
                        cc.audioEngine.getState(e.id) == cc.audioEngine.AudioState.PLAYING && cc.audioEngine.setVolume(e.id, 0)
                    })
                } catch (e) {
                    console.warn("onAppPause sound mute exception ", e)
                }
            }
            onDestroy() {
                n.Instance = null, this.nameMapClip = null, this.audioInfoAry = null, cc.game.targetOff(this)
            }
            setAudioClip(e, t) {
                null == this.nameMapClip && (this.nameMapClip = {}), null == this.audioInfoAry && (this.audioInfoAry = []);
                for (let o = 0; o < e.length; o++) this.nameMapClip[t[o]] = e[o]
            }
            LoadAudioClip(e, t) {
                return s(this, void 0, void 0, function*() {
                    yield new Promise((t, o) => {
                        cc.loader.loadResDir(e, (e, n) => {
                            if (e) return console.error(e), void o(e);
                            console.log(n);
                            let i = n.length;
                            null == this.nameMapClip && (this.nameMapClip = {}), null == this.audioInfoAry && (this.audioInfoAry = []);
                            for (let t = 0; t < i; t++) this.nameMapClip[n[t].name] = n[t];
                            t(null)
                        })
                    }).catch(e => {
                        r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Critical, "C06", t, e), SS.Common.GameEnvironment.Splash && "block" == SS.Common.GameEnvironment.Splash.style.display && (SS.Common.GameEnvironment.Splash.style.display = "none")
                    }), console.log(" this.nameMapClip", this.nameMapClip)
                })
            }
            UncacheAudioClip() {
                try {
                    if (this.audioInfoAry)
                        for (let t = 0; t < this.audioInfoAry.length; t++) try {
                            cc.audioEngine.stop(this.audioInfoAry[t].id)
                        } catch (e) {
                            console.error("UncacheAudioClip stop error", e)
                        }
                    this.nameMapClip = null, this.audioInfoAry = null, cc.audioEngine.uncacheAll()
                } catch (e) {
                    console.error("UncacheAudioClip error", e)
                }
            }
            ClearTmpAudio(e) {
                this.tmpLastAudioJson[e] = null
            }
            Play(e, t, o) {
                let n = this.tmpLastAudioJson[e];
                if (null == n || null == n) {
                    this.tmpLastAudioJson[e] = e, this.scheduleOnce(this.ClearTmpAudio.bind(this, e), .01);
                    let n = SS.Common.BaseFunction.Clamp(0, 1, o),
                        i = -1;
                    if (this.nameMapClip && this.nameMapClip[e]) {
                        if (SS.Common.GameEnvironment.IsMute) {
                            if (0 == t) return -1;
                            i = cc.audioEngine.play(this.nameMapClip[e], t, 0)
                        } else i = cc.audioEngine.play(this.nameMapClip[e], t, o);
                        let s = {
                            id: i,
                            volume: n,
                            targetVolume: n,
                            duration: 0,
                            targetDuration: 0
                        };
                        return this.audioInfoAry.push(s), t || cc.audioEngine.setFinishCallback(i, () => {
                            this.audioInfoAry && (this.audioInfoAry = this.audioInfoAry.filter(e => !(e.id == i)))
                        }), i
                    }
                    console.error("Not find clip ! clipName : " + e)
                } else console.warn("clip continuous Play ! clipName : " + e)
            }
            Stop(e) {
                this.audioInfoAry && (this.audioInfoAry = this.audioInfoAry.filter(t => !(t.id == e))), cc.audioEngine.stop(e)
            }
            SetVolume(e, t, o = 0) {
                return s(this, void 0, void 0, function*() {
                    console.log("Audio: ", e, "\tVolume: ", t, "\tDuration: ", o);
                    let n = this.audioInfoAry.find(t => t.id == e);
                    null != n && (n.duration = o, n.targetVolume = t, o <= 0 && (n.volume = t, SS.Common.GameEnvironment.IsMute || this.SafeSetVolume(e, t)))
                })
            }
            GetVolume(e) {
                let t = this.audioInfoAry.find(t => t.id == e);
                return t ? t.volume : 0
            }
            SetMute(e) {
                SS.Common.GameEnvironment.IsMute = e, this.audioInfoAry && this.audioInfoAry.forEach(e => {
                    SS.Common.GameEnvironment.IsMute ? cc.audioEngine.setVolume(e.id, 0) : cc.audioEngine.setVolume(e.id, e.volume)
                })
            }
            SetFinishCallback(e, t, o) {
                e < 0 && !SS.Common.GameEnvironment.IsMute && console.error("SetFinishCallback() Exception !! Caller : ", o), cc.audioEngine.setFinishCallback(e, t.bind(o))
            }
            GetDuration(e) {
                return cc.audioEngine.getDuration(e)
            }
        };
        c.Instance = null, c = n = i([a], c), o.AudioMgr = c, cc._RF.pop()
    }, {
        "../PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr"
    }],
    AudioPlaySetting: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "22b0eFlGRVCtJOmTWV5Krg9", "AudioPlaySetting");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.AudioPlaySetting = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class {
            constructor() {
                this.m_name = "", this.m_delay = 0, this.m_duration = 0, this.m_volume = .5, this.m_isLoop = !1
            }
        };
        n([s({
            displayName: "\u97f3\u6548\u540d\u5b57"
        })], r.prototype, "m_name", void 0), n([s({
            type: cc.Float,
            displayName: "\u97f3\u6548 Delay"
        })], r.prototype, "m_delay", void 0), n([s({
            type: cc.Float,
            displayName: "\u97f3\u6548 Duration"
        })], r.prototype, "m_duration", void 0), n([s({
            type: cc.Float,
            displayName: "\u97f3\u6548 Volume"
        })], r.prototype, "m_volume", void 0), n([s({
            displayName: "\u662f\u5426 Loop"
        })], r.prototype, "m_isLoop", void 0), r = n([i("AudioPlaySetting")], r), o.AudioPlaySetting = r, cc._RF.pop()
    }, {}],
    AudioSetting: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "782cb3B+lVFr7cHMqKOV9Qu", "AudioSetting");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.AudioSetting = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class {
            constructor() {
                this.m_audioClip = null, this.m_clipName = ""
            }
        };
        n([s({
            type: cc.AudioClip,
            displayName: "\u97f3\u6548\u6a94\u6848"
        })], r.prototype, "m_audioClip", void 0), n([s({
            displayName: "\u97f3\u6548\u540d\u5b57"
        })], r.prototype, "m_clipName", void 0), r = n([i("AudioSetting")], r), o.AudioSetting = r, cc._RF.pop()
    }, {}],
    AutoLogoutBtn: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "364a7J0keRKN7lE/oOFC35x", "AutoLogoutBtn");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("../../../LobbyCommon/Component/CookieCtrl"),
            s = e("../../../LobbyCommon/Component/NodeDrag"),
            r = e("../../../LobbyCommon/Helper/EventSystem"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this.timerTxt = null, this.root = null, this.nodeDrag = null, this.timeout = 0, this.startTime = 0, this.showMsgTimeout = 0, this.cookieName = ""
            }
            storePos() {
                const e = JSON.stringify({
                    x: this.nodeDrag.node.position.x,
                    y: this.nodeDrag.node.position.y
                });
                i.CookieCtrl.SetCookie(this.cookieName, e)
            }
            setStoredPosFromCookie() {
                const e = i.CookieCtrl.GetCookie(this.cookieName);
                if (e && "" != e) {
                    const t = JSON.parse(e);
                    this.nodeDrag.node.setPosition(cc.v2(t.x, t.y))
                }
            }
            onDragEnd() {
                this.startCountDown(), this.storePos()
            }
            logout() {
                this.unscheduleAllCallbacks(), this.unregisterEvents(), this.timerTxt.string = "Logging Out...", r.EventSystem.Event(r.DoLogOut).Notify()
            }
            onTouch() {
                try {
                    this.unscheduleAllCallbacks(), this.timerTxt.string = "Auto logout canceled."
                } catch (e) {}
            }
            startCountDown() {
                this.startTime = Date.now(), this.schedule(this.updateCountDownLabel, 1, cc.macro.REPEAT_FOREVER)
            }
            _start(e, t) {
                const o = document.getElementById("GameCanvas");
                o.addEventListener("touchstart", this._onTouch), o.addEventListener("mousedown", this._onTouch), o.addEventListener("mouseup", this._startCountDown), o.addEventListener("touchend", this._startCountDown), window.addEventListener("touchstart", this._onTouch), window.addEventListener("mousedown", this._onTouch), window.addEventListener("mouseup", this._startCountDown), window.addEventListener("touchend", this._startCountDown), this.timeout = e, this.showMsgTimeout = t, this.startCountDown(), this.setStoredPosFromCookie()
            }
            unregisterEvents() {
                const e = document.getElementById("GameCanvas");
                e.removeEventListener("touchstart", this._onTouch), e.removeEventListener("mousedown", this._onTouch), e.removeEventListener("mouseup", this._startCountDown), e.removeEventListener("touchend", this._startCountDown), window.removeEventListener("touchstart", this._onTouch), window.removeEventListener("mousedown", this._onTouch), window.removeEventListener("mouseup", this._startCountDown), window.removeEventListener("touchend", this._startCountDown)
            }
            onLoad() {
                this.cookieName = `${SS.Network.LoginModel.LoginInfo.user_id}_autologoutBtnPos`, this.root.active = !1, this._onTouch = this.onTouch.bind(this), this._startCountDown = this.startCountDown.bind(this), this.nodeDrag.Event_ClickItem = this.logout.bind(this), this.nodeDrag.Event_DragEnd = this.onDragEnd.bind(this), this.nodeDrag.Event_DragStart = this._onTouch
            }
            get interval() {
                return Math.floor((Date.now() - this.startTime) / 1e3)
            }
            updateCountDownLabel() {
                try {
                    this.interval >= this.timeout ? (this.root.active = !0, this.timerTxt.string = "Logging Out...", this.unscheduleAllCallbacks(), this.scheduleOnce(this.logout, .5)) : this.timeout - this.interval <= this.showMsgTimeout ? (this.root.active = !0, this.timerTxt.string = `Automatically logged out in : ${this.timeout-this.interval}s.`) : this.root.active = !1
                } catch (e) {}
            }
            onDestroy() {
                this.unscheduleAllCallbacks(), this.unregisterEvents()
            }
            Destroy() {
                this.unscheduleAllCallbacks(), this.node.destroy(), this.destroy()
            }
        };
        n([l(cc.Label)], c.prototype, "timerTxt", void 0), n([l(cc.Node)], c.prototype, "root", void 0), n([l(s.NodeDrag)], c.prototype, "nodeDrag", void 0), c = n([a], c), o.default = c, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Component/CookieCtrl": "CookieCtrl",
        "../../../LobbyCommon/Component/NodeDrag": "NodeDrag",
        "../../../LobbyCommon/Helper/EventSystem": "EventSystem"
    }],
    AvatarIcon: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "1aae6FIUa1M8Kq5KTgveF5K", "AvatarIcon");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const s = e("../Helper/EventSystem"),
            r = e("./BundleCtrl"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this.isMySelf = !0, this.faceSprite = null, this.faceCircleSprite = null, this.frameSprite = null, this.nicknameLabel = null, this.isRegistered = !1, this.lastFaceID = ";"
            }
            onLoad() {
                this.isRegistered = !1, this.isMySelf && this.SetRegister()
            }
            onDestroy() {
                this.UnRegister()
            }
            SetRegister() {
                this.isRegistered || (this.isRegistered = !0, s.EventSystem.Event(s.Avatar.SetFaceIcon).Insert(this.SetFaceSprite, this), s.EventSystem.Event(s.Avatar.SetFaceFrameIcon).Insert(this.SetFrameSprite, this), s.EventSystem.Event(s.Avatar.SetNickname).Insert(this.SetNickname, this), s.EventSystem.Event(s.Profile.NotifyUpdatePlayerSetting).Insert(this.SetByPlayerData, this))
            }
            UnRegister() {
                this.isRegistered = !1, s.EventSystem.Event(s.Avatar.SetFaceIcon).Remove(this.SetFaceSprite, this), s.EventSystem.Event(s.Avatar.SetFaceFrameIcon).Remove(this.SetFrameSprite, this), s.EventSystem.Event(s.Avatar.SetNickname).Remove(this.SetNickname, this), s.EventSystem.Event(s.Profile.NotifyUpdatePlayerSetting).Remove(this.SetByPlayerData, this)
            }
            SetByPlayerData(e) {
                this.SetFaceByID(e.FaceID), this.SetFrameByID(e.FaceFrameID), this.SetNickname(e.NickName)
            }
            SetNickname(e) {
                this.nicknameLabel && (this.nicknameLabel.string = e)
            }
            SetFaceSprite(e) {
                this.faceSprite && (this.faceSprite.spriteFrame = e)
            }
            SetFrameSprite(e) {
                this.frameSprite && (this.frameSprite.spriteFrame = e)
            }
            SetFaceByID(e) {
                return i(this, void 0, void 0, function*() {
                    0 == e.length && (e = "FAC000"), this.lastFaceID = e;
                    let t = yield r.default.Instance.GetSpirte("Avatar", e);
                    t && t.name == this.lastFaceID && this.SetFaceSprite(t)
                })
            }
            SetFrameByID(e) {
                return i(this, void 0, void 0, function*() {
                    if (0 == e.length) return void this.SetFrameSprite(null);
                    let t = yield r.default.Instance.GetSpirte("Avatar", e);
                    t && this.SetFrameSprite(t)
                })
            }
        };
        n([l({
            displayName: "\u662f\u73a9\u5bb6\u672c\u4eba\u4f7f\u7528\u55ce"
        })], c.prototype, "isMySelf", void 0), n([l(cc.Sprite)], c.prototype, "faceSprite", void 0), n([l(cc.Sprite)], c.prototype, "faceCircleSprite", void 0), n([l(cc.Sprite)], c.prototype, "frameSprite", void 0), n([l(cc.Label)], c.prototype, "nicknameLabel", void 0), c = n([a], c), o.default = c, cc._RF.pop()
    }, {
        "../Helper/EventSystem": "EventSystem",
        "./BundleCtrl": "BundleCtrl"
    }],
    AvatarNoticeMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "f450c716p1MOptSkOLDRrWq", "AvatarNoticeMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.AvatarNoticeMgr = o.AvatarNoticeItem = o.NoticeBuffer = void 0;
        const i = e("../../LobbyCommon/Component/AudioMgr"),
            s = e("../../LobbyCommon/Component/SSSpawnPool"),
            r = e("../../LobbyCommon/Helper/EventSystem"),
            a = e("./NewRedPointMgr"),
            l = e("./NoticeInteractive"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        var m, u;
        (function(e) {
            e[e.IDLE = 0] = "IDLE", e[e.IN = 1] = "IN", e[e.WAIT_IN = 2] = "WAIT_IN", e[e.LOOP = 3] = "LOOP", e[e.WAIT_LOOP = 4] = "WAIT_LOOP", e[e.OUT = 5] = "OUT", e[e.WAIT_OUT = 6] = "WAIT_OUT", e[e.FINISHED = 7] = "FINISHED"
        })(m || (m = {})),
        function(e) {
            e[e.FACE = 0] = "FACE", e[e.FACE_FRAME = 1] = "FACE_FRAME", e[e.MEDAL = 2] = "MEDAL"
        }(u || (u = {}));
        class d {
            constructor() {
                this.type = u.FACE, this.ID = ""
            }
        }
        o.NoticeBuffer = d;
        let p = class {
            constructor() {
                this.type = u.FACE, this.pfbAvatar = null, this.root = null, this.animIn = null, this.animLoop = null, this.animOut = null
            }
        };
        n([h({
            type: cc.Enum(u)
        })], p.prototype, "type", void 0), n([h(cc.Prefab)], p.prototype, "pfbAvatar", void 0), n([h(cc.Node)], p.prototype, "root", void 0), n([h(cc.AnimationClip)], p.prototype, "animIn", void 0), n([h(cc.AnimationClip)], p.prototype, "animLoop", void 0), n([h(cc.AnimationClip)], p.prototype, "animOut", void 0), p = n([c("AvatarNoticeItem")], p), o.AvatarNoticeItem = p;
        let g = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_AvatarNoticeItem = [], this.m_SpawnPool = null, this.AudioClipList = [], this.AudioNameList = [], this.m_NoticeBuffer = [], this.m_pfbCurrentNotice = null, this.m_nodeCurrentNotice = null, this.m_numLoopFinishedTime = 5, this.m_numLoopTimer = 0, this.m_nodeCurrentRoot = null, this.m_CurrentNotice = null, this.m_strAnimIn = "", this.m_strAnimLoop = "", this.m_strAnimOut = "", this.m_animCurrNotice = null, this.m_nodeEffectToBar = null, this.m_AvatarNoticeState = m.IDLE, this.m_IsTimeToShow = !1
            }
            start() {
                this.m_AvatarNoticeState = m.IDLE, this.m_pfbCurrentNotice = null, this.m_nodeCurrentNotice = null, this.m_numLoopTimer = 0, this.m_animCurrNotice = null, this.m_nodeEffectToBar = null, this.m_nodeCurrentRoot = null, this.m_CurrentNotice = null, this.m_IsTimeToShow = !1, r.EventSystem.Event(r.NoticedArrived.OnReceiveAvatar).Insert(this.OnReceiveAvatar, this), r.EventSystem.Event(r.NoticedArrived.ShowAvatarNotice).Insert(this.OnShowAvatarNotice, this), i.AudioMgr.Instance.setAudioClip(this.AudioClipList, this.AudioNameList)
            }
            onDestroy() {
                r.EventSystem.Event(r.NoticedArrived.OnReceiveAvatar).Remove(this.OnReceiveAvatar, this), r.EventSystem.Event(r.NoticedArrived.ShowAvatarNotice).Remove(this.OnShowAvatarNotice, this), this.m_pfbCurrentNotice = null, this.m_nodeCurrentNotice = null, this.m_nodeCurrentRoot = null, this.m_CurrentNotice = null, null != this.m_animCurrNotice && null != this.m_animCurrNotice.node && (this.m_animCurrNotice.off("finished", this.onAnimInFinished, this), this.m_animCurrNotice.off("lastframe", this.onAnimLoopLastFrame, this), this.m_animCurrNotice.off("finished", this.onAnimOutFinished, this), this.m_animCurrNotice = null), this.m_nodeEffectToBar && (this.m_SpawnPool.Despawn(this.m_nodeEffectToBar), this.m_nodeEffectToBar = null), this.unscheduleAllCallbacks()
            }
            update(e) {
                switch (this.m_AvatarNoticeState) {
                    case m.IDLE:
                        1 == this.m_IsTimeToShow && (this.IsGetNewAvatar() ? this.m_AvatarNoticeState = m.IN : this.m_IsTimeToShow = !1);
                        break;
                    case m.IN:
                        this.AvatarNoticeIn(), this.m_AvatarNoticeState = m.WAIT_IN;
                        break;
                    case m.WAIT_IN:
                        break;
                    case m.LOOP:
                        this.AvatarNoticeLoop(), this.m_AvatarNoticeState = m.WAIT_LOOP;
                        break;
                    case m.WAIT_LOOP:
                        this.m_numLoopTimer += e;
                        break;
                    case m.OUT:
                        this.AvatarNoticeOut(), this.m_AvatarNoticeState = m.WAIT_OUT;
                        break;
                    case m.WAIT_OUT:
                        break;
                    case m.FINISHED:
                        this.AvatarNoticeFinished(), this.m_AvatarNoticeState = m.IDLE
                }
            }
            IsGetNewAvatar() {
                let e = !1;
                if (this.m_NoticeBuffer.length > 0) {
                    let t = this.m_NoticeBuffer.shift();
                    for (let o = 0; o < this.m_AvatarNoticeItem.length; o++)
                        if (this.m_AvatarNoticeItem[o].type == t.type) {
                            this.m_pfbCurrentNotice = this.m_AvatarNoticeItem[o].pfbAvatar, this.m_strAnimIn = this.m_AvatarNoticeItem[o].animIn.name, this.m_strAnimLoop = this.m_AvatarNoticeItem[o].animLoop.name, this.m_strAnimOut = this.m_AvatarNoticeItem[o].animOut.name, this.m_nodeCurrentRoot = this.m_AvatarNoticeItem[o].root, this.m_CurrentNotice = t, e = !0;
                            break
                        }
                }
                return e
            }
            AvatarNoticeIn() {
                this.m_nodeCurrentNotice = this.m_SpawnPool.Spawn(this.m_pfbCurrentNotice.data), this.m_nodeCurrentNotice.active = !0, this.m_nodeCurrentNotice.parent = this.m_nodeCurrentRoot, this.m_nodeCurrentNotice.position = cc.Vec3.ZERO, this.SetAvatar(), this.m_animCurrNotice = this.m_nodeCurrentNotice.getComponent(cc.Animation), i.AudioMgr.Instance.Play("PS_Info_Avatar_New", !1, 1), this.m_animCurrNotice && (this.m_animCurrNotice.play(this.m_strAnimIn), this.m_numLoopTimer = 0, this.m_animCurrNotice.on("finished", this.onAnimInFinished, this), r.EventSystem.Event(r.NoticedArrived.OnAvatarShowIn).Length > 0 && r.EventSystem.Event(r.NoticedArrived.OnAvatarShowIn).Notify()), r.EventSystem.Event(r.Profile.ClearSelfUpdateCDTime).Length && r.EventSystem.Event(r.Profile.ClearSelfUpdateCDTime).Notify()
            }
            AvatarNoticeLoop() {
                this.m_animCurrNotice.play(this.m_strAnimLoop), this.m_animCurrNotice.on("lastframe", this.onAnimLoopLastFrame, this)
            }
            AvatarNoticeOut() {
                this.m_animCurrNotice.play(this.m_strAnimOut), r.EventSystem.Event(r.NoticedArrived.OnAvatarShowOut).Length > 0 && r.EventSystem.Event(r.NoticedArrived.OnAvatarShowOut).Notify(), this.m_animCurrNotice.on("finished", this.onAnimOutFinished, this)
            }
            AvatarNoticeFinished() {
                this.m_SpawnPool.Despawn(this.m_nodeCurrentNotice), r.EventSystem.Event(r.NoticedArrived.OnAvatarShowFinished).Length > 0 && r.EventSystem.Event(r.NoticedArrived.OnAvatarShowFinished).Notify(), this.m_NoticeBuffer.length <= 0 && (this.m_IsTimeToShow = !1)
            }
            SetAvatar() {
                if (this.m_CurrentNotice) {
                    let e = this.m_nodeCurrentNotice.getComponent(l.NoticeInteractive);
                    if (e) switch (this.m_CurrentNotice.type) {
                        case u.FACE:
                            e.SetFaceByID(this.m_CurrentNotice.ID), r.EventSystem.Event(r.NoticedArrived.SetNewsRedPoint).Length && r.EventSystem.Event(r.NoticedArrived.SetNewsRedPoint).Notify(!0, a.NewRedPointType.Avatar);
                            break;
                        case u.FACE_FRAME:
                            e.SetFrameByID(this.m_CurrentNotice.ID), r.EventSystem.Event(r.NoticedArrived.SetNewsRedPoint).Length && r.EventSystem.Event(r.NoticedArrived.SetNewsRedPoint).Notify(!0, a.NewRedPointType.AvatarFrame);
                            break;
                        case u.MEDAL:
                    }
                }
            }
            onAnimInFinished() {
                this.m_animCurrNotice.off("finished", this.onAnimInFinished, this), this.m_AvatarNoticeState = m.LOOP
            }
            onAnimLoopLastFrame() {
                this.m_numLoopTimer > this.m_numLoopFinishedTime && (this.m_animCurrNotice.off("lastframe", this.onAnimLoopLastFrame, this), this.m_AvatarNoticeState = m.OUT)
            }
            onAnimOutFinished() {
                this.m_animCurrNotice.off("finished", this.onAnimOutFinished, this), this.m_animCurrNotice = null, this.m_AvatarNoticeState = m.FINISHED
            }
            OnReceiveAvatar(e) {
                let t = new d;
                switch (t.ID = e, e.slice(0, 3)) {
                    case "FAC":
                        t.type = u.FACE;
                        break;
                    case "FRM":
                        t.type = u.FACE_FRAME
                }
                cc.log("OnReceiveAvatar ", t), this.m_NoticeBuffer.push(t), t = null
            }
            OnShowAvatarNotice() {
                this.m_IsTimeToShow = !0
            }
        };
        n([h([p])], g.prototype, "m_AvatarNoticeItem", void 0), n([h(s.SpawnPool)], g.prototype, "m_SpawnPool", void 0), n([h(cc.AudioClip)], g.prototype, "AudioClipList", void 0), n([h()], g.prototype, "AudioNameList", void 0), g = n([c], g), o.AvatarNoticeMgr = g, cc._RF.pop()
    }, {
        "../../LobbyCommon/Component/AudioMgr": "AudioMgr",
        "../../LobbyCommon/Component/SSSpawnPool": "SSSpawnPool",
        "../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "./NewRedPointMgr": "NewRedPointMgr",
        "./NoticeInteractive": "NoticeInteractive"
    }],
    AvatarTimerMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "3e7a80p7/dAfpF1Kns9XGMK", "AvatarTimerMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("../../LobbyCommon/Helper/EventSystem"),
            s = e("../../LobbyCommon/Net/LobbyClient"),
            r = e("./AvatarTimer"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this.avatarTimer = null, this.avatarFrameTimer = null
            }
            onLoad() {
                i.EventSystem.Event(i.Avatar.CheckExpireTime).Insert(this.OnCheckExpireTime, this)
            }
            onDestroy() {
                i.EventSystem.Event(i.Avatar.CheckExpireTime).Remove(this.OnCheckExpireTime, this)
            }
            OnCheckExpireTime() {
                console.warn("OnCheckExpireTime"), this.avatarTimer.SetData(SS.Network.UserClient.UserInfo.avatar_id, SS.Network.UserClient.UserInfo.avatar_expired_time, this.OnTimesUp), this.avatarFrameTimer.SetData(SS.Network.UserClient.UserInfo.avatar_frame_id, SS.Network.UserClient.UserInfo.avatar_frame_expired_time, this.OnTimesUp)
            }
            OnTimesUp(e, t) {
                let o = {};
                o.face_id = t == r.AvatarTimerType.FACE ? "" : SS.Network.UserClient.UserInfo.avatar_id, o.frame_id = t == r.AvatarTimerType.FACE_FRAME ? "" : SS.Network.UserClient.UserInfo.avatar_frame_id, o.change_name_status = !1, console.warn("\u982d\u50cf\u982d\u50cf\u6846 ID = " + e + " \u4f7f\u7528\u6642\u9593\u904e\u671f\uff0c\u8cc7\u6599\u66f4\u65b0 = ", o), s.LobbyClient.Instance.GetUserClient.ChangePlayerInfo(SS.Network.LoginModel.LoginInfo.pin_ark_id, SS.Network.UserClient.UserInfo.nickname, o, null), t == r.AvatarTimerType.FACE && (SS.Network.UserClient.UserInfo.avatar_id = "", SS.Network.UserClient.UserInfo.avatar_expired_time = "-1"), t == r.AvatarTimerType.FACE_FRAME && (SS.Network.UserClient.UserInfo.avatar_frame_id = "", SS.Network.UserClient.UserInfo.avatar_frame_expired_time = "-1"), i.EventSystem.Event(i.Avatar.RequestUpdate).Length > 0 && i.EventSystem.Event(i.Avatar.RequestUpdate).Notify()
            }
        };
        n([l(r.default)], c.prototype, "avatarTimer", void 0), n([l(r.default)], c.prototype, "avatarFrameTimer", void 0), c = n([a], c), o.default = c, cc._RF.pop()
    }, {
        "../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "./AvatarTimer": "AvatarTimer"
    }],
    AvatarTimer: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "6e494Bn4vtGgZ10G7JYdmEO", "AvatarTimer");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.AvatarTimerType = void 0;
        const i = e("../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        var a;
        (function(e) {
            e[e.FACE = 0] = "FACE", e[e.FACE_FRAME = 1] = "FACE_FRAME"
        })(a = o.AvatarTimerType || (o.AvatarTimerType = {}));
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.itemType = a.FACE, this.expiredTime = 0, this.timeCountDownDuration = 0, this.itemID = "", this.strTime = "", this.timesUpCallback = null, this.tmpTimeLog = ""
            }
            Clear() {
                this.node.parent = this.node.parent ? this.node.parent.parent : this.node.parent, this.itemID = "", this.expiredTime = 0, this.timeCountDownDuration = 0, this.timesUpCallback = null, this.unscheduleAllCallbacks()
            }
            SetData(e, t, o) {
                null != e && "" != e && null != t && (this.Clear(), this.itemID = e, this.expiredTime = t, this.timesUpCallback = o, t > -1 && (console.log("%c[AvatarTimer] itemID = " + e + ", \u904e\u671f\u6642\u9593(UTC) = " + t, "font-size:16px;color:#3333bb;font-weight:bold;"), this.FirstSetTimeCountDown()), -1 != e.indexOf("FAC") ? this.itemType = a.FACE : -1 != e.indexOf("FRM") && (this.itemType = a.FACE_FRAME))
            }
            FirstSetTimeCountDown() {
                let e = this.expiredTime - Date.now(),
                    t = Math.floor(e / 864e5),
                    o = 1;
                if (t > 1) o = e / 1e3 - 86400 * t;
                else {
                    let t = e % 6e4;
                    t > 0 && (o = t - Math.floor(t))
                }
                this.scheduleOnce(this.OnTimeCountDown, o), this.expiredTime = this.expiredTime - 1e3 * (o + .1)
            }
            OnTimeCountDown() {
                this.SetNextCountDown(), this.schedule(this.SetNextCountDown, this.timeCountDownDuration)
            }
            SetNextCountDown() {
                this.ResetTimeLabel();
                let e = this.expiredTime - Date.now();
                if (e <= 0) return this.unschedule(this.SetNextCountDown), void this.TimesUp();
                if (this.timeCountDownDuration > 1) {
                    let t = 1;
                    Math.floor(e / 864e5) > 1 && (t = 86400), t < this.timeCountDownDuration && (this.unschedule(this.SetNextCountDown), this.schedule(this.SetNextCountDown, t)), this.timeCountDownDuration = t
                }
                this.expiredTime = this.expiredTime - 1e3 * this.timeCountDownDuration
            }
            ResetTimeLabel() {
                let e = this.expiredTime - Date.now(),
                    t = Math.floor(e / 864e5);
                if (t < 1) {
                    let t = e % 864e5,
                        o = Math.floor(t / 36e5),
                        n = t % 36e5,
                        i = Math.floor(n / 6e4);
                    if (this.strTime = "", o > 0 && (this.strTime = o + "h"), i > 0 && (this.strTime += i + "m"), 0 == o) {
                        let e = n % 6e4,
                            t = Math.floor(e / 1e3);
                        t > 0 && (this.strTime += t + "s"), this.tmpTimeLog != this.strTime && (this.tmpTimeLog = this.strTime, console.log("[" + this.itemID + "] \u5269\u9918\u6642\u9593 = " + this.tmpTimeLog))
                    }
                } else this.strTime = t + "days"
            }
            TimesUp() {
                console.log("%c[" + this.itemID + "] \u6642\u9593\u5230 !!!", "font-size:16px;color:#3333bb;font-weight:bold;"), this.itemType == a.FACE ? i.PopupMsgMgr.Instance.ShowPopMsg(i.PopupPriority.Info, "C67", SS.Common.GameEnvironment.CurrentGameNow, "Avatar item times up") : this.itemType == a.FACE_FRAME && i.PopupMsgMgr.Instance.ShowPopMsg(i.PopupPriority.Info, "C74", SS.Common.GameEnvironment.CurrentGameNow, "Avatar_Frame item times up"), this.timesUpCallback && this.timesUpCallback(this.itemID, this.itemType)
            }
        };
        n([r({
            type: cc.Enum(a)
        })], l.prototype, "itemType", void 0), l = n([s], l), o.default = l, cc._RF.pop()
    }, {
        "../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr"
    }],
    BackpackMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "093f8Ld6rZI1qvdUBJVQ/fX", "BackpackMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.BackpackMgr = void 0;
        const i = e("./ItemIconCtrl"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeItemLayout = null, this.m_prefabLabel = null, this.m_prefabItemIcon = null, this.m_nodeBigIconGrid = null, this.m_labSelectedItemName = null, this.m_labSelectedItemInfoTop = null, this.m_labSelectedItemInfoBot = null, this.m_labSelectedItemUseNumber = null, this.m_btnUseItem = null, this.m_nodeGameIconLayer = null, this.m_nodeRankedFrameLayer = null, this.m_nodeTextLayer = null, this.m_ItemIconCtrlBigOne = null, this.m_arrPlayerItem = [], this.m_itemSelectedItem = null, this.m_arrItemData = [], this.m_iUseCount = 1, this.m_nodePool = null, this.m_arrNodeIcon = []
            }
            start() {
                this.setUseNum(1), this.m_nodePool = new cc.NodePool
            }
            createIconCtrl() {
                let e = this.m_nodePool.get();
                null == e && (e = cc.instantiate(this.m_prefabItemIcon)), this.m_arrNodeIcon.push(e), e.parent = this.m_nodeItemLayout, e.getComponent(i.ItemIconCtrl).setIcon(this, null)
            }
            setUseNum(e) {
                this.m_iUseCount = e, this.m_iUseCount = this.m_iUseCount > 3 ? 3 : this.m_iUseCount < 1 ? 1 : this.m_iUseCount, this.m_labSelectedItemUseNumber.string = this.m_iUseCount.toString()
            }
            addUseNum(e) {
                this.setUseNum(this.m_iUseCount + e)
            }
            onClickUseNum(e) {
                let t = e ? 1 : -1;
                this.addUseNum(t)
            }
            onClickUseNumAdd() {
                this.onClickUseNum(!0)
            }
            onClickUseNumMinus() {
                this.onClickUseNum(!1)
            }
            onClickUse() {}
            onClickItem(e) {
                this.m_itemSelected = e, this.showItemInfo(e)
            }
            showItemInfo(e) {
                this.m_itemSelectedItem = e, this.getItemData(e), this.m_ItemIconCtrlBigOne.setIcon(null, null), this.m_labSelectedItemName.string = e.ItemID, this.m_labSelectedItemInfoTop.string = e.infoTop, this.m_labSelectedItemInfoBot.string = e.infoBot
            }
            getItemData(e) {
                for (let t = 0; t < this.m_arrItemData.length; t++)
                    if (e.ItemID == this.m_arrItemData[t].ItemID) return this.m_arrItemData[t]
            }
            onClickCate() {
                this.clearAllItem()
            }
            clearAllItem() {
                this.m_nodeRankedFrameLayer.destroyAllChildren(), this.m_arrNodeIcon.forEach(e => {
                    this.m_nodePool.put(e)
                }), this.m_arrNodeIcon = []
            }
            onClickCateAll() {
                this.clearAllItem();
                for (let e = 0; e < 16; e++) this.createIconCtrl()
            }
            onClickCateFish() {
                this.clearAllItem();
                for (let e = 0; e < 3; e++) this.createIconCtrl()
            }
        };
        n([r(cc.Node)], a.prototype, "m_nodeItemLayout", void 0), n([r(cc.Prefab)], a.prototype, "m_prefabLabel", void 0), n([r(cc.Prefab)], a.prototype, "m_prefabItemIcon", void 0), n([r(cc.Node)], a.prototype, "m_nodeBigIconGrid", void 0), n([r(cc.Label)], a.prototype, "m_labSelectedItemName", void 0), n([r(cc.Label)], a.prototype, "m_labSelectedItemInfoTop", void 0), n([r(cc.Label)], a.prototype, "m_labSelectedItemInfoBot", void 0), n([r(cc.Label)], a.prototype, "m_labSelectedItemUseNumber", void 0), n([r(cc.Button)], a.prototype, "m_btnUseItem", void 0), n([r(cc.Node)], a.prototype, "m_nodeGameIconLayer", void 0), n([r(cc.Node)], a.prototype, "m_nodeRankedFrameLayer", void 0), n([r(cc.Node)], a.prototype, "m_nodeTextLayer", void 0), n([r(i.ItemIconCtrl)], a.prototype, "m_ItemIconCtrlBigOne", void 0), a = n([s], a), o.BackpackMgr = a, cc._RF.pop()
    }, {
        "./ItemIconCtrl": "ItemIconCtrl"
    }],
    BannerController: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "814708fkh1Cm5Qsg1IktNZK", "BannerController");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("../GuestLobbyPopupMgr"),
            s = e("../GuestLobbyUiMgr"),
            r = e("../GuestSysMgr"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this.spfArray = new Array, this.boardArray = new Array, this.board = null, this.duration = 5, this.guestLobbyUiMgrCache = null, this.currentSpfArray = new Array, this.idx = 0, this.maxSize = 0
            }
            start() {
                0 != r.default.getInstance().isGuestLogin() ? (this.maxSize = 4, this.idx = 0, this.currentSpfArray = new Array, this.currentSpfArray.splice(this.currentSpfArray.length, 0, this.spfArray[0]), this.currentSpfArray.splice(this.currentSpfArray.length, 0, this.spfArray[1]), this.currentSpfArray.splice(this.currentSpfArray.length, 0, this.spfArray[2]), 1 == r.default.isIpad() ? this.currentSpfArray.splice(this.currentSpfArray.length, 0, this.spfArray[4]) : this.currentSpfArray.splice(this.currentSpfArray.length, 0, this.spfArray[3]), this.scheduleOnce(() => {
                    this.nextFrame()
                }, this.duration)) : this.node.active = !1
            }
            nextFrame() {
                this.advanceIdx(), this.setSpriteFrame(), this.board.setPosition(0, 0), this.move(), this.scheduleOnce(() => {
                    this.nextFrame()
                }, this.duration)
            }
            getPreviousIdx() {
                let e = this.idx - 1;
                return e < 0 && (e = this.maxSize - 1), e
            }
            getNextIdx() {
                let e = this.idx + 1;
                return e >= this.maxSize && (e = 0), e
            }
            advanceIdx() {
                this.idx = this.idx + 1, this.idx >= this.maxSize && (this.idx = 0)
            }
            setSpriteFrame() {
                this.boardArray[0].spriteFrame = this.currentSpfArray[this.getPreviousIdx()], this.boardArray[1].spriteFrame = this.currentSpfArray[this.idx], this.boardArray[2].spriteFrame = this.currentSpfArray[this.getNextIdx()]
            }
            move() {
                let e = cc.sequence(cc.moveTo(.5, 0, -108), cc.moveTo(1, 0, -103).easing(cc.easeElasticOut(.3)));
                this.board.runAction(e)
            }
            onClickBanner() {
                switch (this.idx) {
                    case 0:
                        r.default.getInstance().openFbPage(), r.default.getInstance().logClickFanPage(0);
                        break;
                    case 1:
                        i.GuestLobbyPopupMgr.Instance.ShowPopMsg();
                        break;
                    case 2:
                        r.default.getInstance().logClickMessenger(21), r.default.getInstance().openFbMessenger();
                        break;
                    case 3:
                        r.default.isIpad() ? (r.default.getInstance().logClickMessenger(20), r.default.getInstance().openFbMessenger()) : (r.default.getInstance().logClickWhatsApp(20), r.default.getInstance().openWhatsApp())
                }
                r.default.getInstance().logClickBanner(this.idx)
            }
            onDestroy() {
                this.unscheduleAllCallbacks()
            }
        };
        n([l(cc.SpriteFrame)], c.prototype, "spfArray", void 0), n([l(cc.Sprite)], c.prototype, "boardArray", void 0), n([l(cc.Node)], c.prototype, "board", void 0), n([l(cc.Float)], c.prototype, "duration", void 0), n([l(s.default)], c.prototype, "guestLobbyUiMgrCache", void 0), c = n([a], c), o.default = c, cc._RF.pop()
    }, {
        "../GuestLobbyPopupMgr": "GuestLobbyPopupMgr",
        "../GuestLobbyUiMgr": "GuestLobbyUiMgr",
        "../GuestSysMgr": "GuestSysMgr"
    }],
    BannerMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "07732DkqBZONrE3ll2MUxJC", "BannerMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.BannerMgr = void 0;
        const s = e("../../../LobbyCommon/Component/AudioMgr"),
            r = e("../../../LobbyCommon/Net/ClickLog"),
            a = e("../../../LobbyCommon/Net/ClickLogEnum"),
            {
                ccclass: l,
                property: c
            } = cc._decorator;
        class h {
            constructor() {
                this.bannerBgSF = null, this.bannerName = "", this.buttonAction = "", this.buttonCustomEventID = "", this.onClickEvent = null, this.eventData = null
            }
        }
        let m = class extends cc.Component {
            constructor() {
                super(...arguments), this.defaultBanner = null, this.pagePointMgr = null, this.pagePointPrefab = null, this.bannerPage = null, this.pageView = null, this.pagePointSF_W = null, this.pagePointSF_R = null, this.bannerCmdData = null, this.centerIndex = 2, this.maxPageNum = 5, this.tmpLoopNum = 0, this.showSpriteIndex = 0, this.needDownloadMaxNum = 0, this.imgDownloadFinishNum = 0, this.needShowBannerMaxNum = 0, this.carouselLoadTime = 10, this.isUseDefaultBanner = !1, this.isAllowClickBtnEvent = !0, this.pagePointNodeAry = [], this.tmpBannerResAry = [], this.bannerInfoMembers = [], this.curOpenEventName = [], this.SwitchGameEvent = null, this.OpenBannerWebviewEvent = null
            }
            _start() {
                let e = this;
                this.pageView.node.on("scroll-ended", function() {
                    e.ScrollEndedCallBack()
                }), this.pageView.node.on("scroll-began", function() {
                    e.ScrollBeganCallBack()
                }), this.pageView.node.on("page-turning", function() {
                    e.ScrollTurningCallBack()
                })
            }
            _onDestroy() {
                if (this.bannerInfoMembers && this.bannerInfoMembers.length > 0)
                    for (let e = 0; e < this.bannerInfoMembers.length; e++) this.bannerInfoMembers[e].bannerBgSF = null;
                if (this.tmpBannerResAry && this.tmpBannerResAry.length > 0) {
                    for (let e = 0; e < this.tmpBannerResAry.length; e++) cc.loader.release(this.tmpBannerResAry[e]);
                    this.tmpBannerResAry = []
                }
                if (this.defaultBanner) {
                    let e = this.defaultBanner.getComponent(cc.Sprite);
                    e && e.spriteFrame.decRef()
                }
            }
            SaveBannerCmdData(e) {
                console.log("[banner Data]", e), this.bannerCmdData = e
            }
            SetBannerFeature(e, t) {
                this.SwitchGameEvent = e, this.OpenBannerWebviewEvent = t
            }
            SetDefaultBanner(e) {
                if (!this.defaultBanner) return;
                let t = this.defaultBanner.getComponent(cc.Sprite);
                t && (t.spriteFrame = e, t.spriteFrame.addRef())
            }
            BannerDataInit() {
                this.bannerCmdData && this.bannerCmdData.hasOwnProperty("banner_info") && this.filterDisableGame()
            }
            filterDisableGame() {
                for (let e = 0; e < this.bannerCmdData.banner_info.length; e++) {
                    let t = !0,
                        o = this.bannerCmdData.banner_info[e].mode,
                        n = this.bannerCmdData.banner_info[e].bundle_name,
                        s = this.bannerCmdData.banner_info[e].button_action;
                    for (let e = 0; e < o.length; e++)
                        if (o[e] == window.gd_LogoMode) {
                            t = !1;
                            break
                        }
                    if (!t)
                        if (-1 != s.toUpperCase().indexOf("GAME_ID")) {
                            let e = !1,
                                t = s.substring(s.indexOf("=") + 1),
                                o = this.GetThemeIdByGameName(t);
                            for (let n = 0; n < SS.Common.GameEnvironment.GameSetting.kioskOpenGameList.length; n++)
                                if (SS.Common.GameEnvironment.GameSetting.kioskOpenGameList[n] == o) {
                                    e = !0;
                                    break
                                }
                            "" != t && e && SS.Common.GameEnvironment.GameSetting.Icon.hasOwnProperty(t) && (this.needDownloadMaxNum++, this.AddDownloadBannerInfo(n, s, "", () => {
                                this.OpenReCheckGameWindow(o)
                            }))
                        } else if (-1 != s.toUpperCase().indexOf("CUSTOM_ID"))
                        for (let e = 0; e < this.curOpenEventName.length; e++) {
                            let t = s.substring(s.indexOf("=") + 1);
                            if (t == this.curOpenEventName[e]) {
                                this.needDownloadMaxNum++, this.AddDownloadBannerInfo(n, s, t, null);
                                break
                            }
                        } else if (-1 != s.toUpperCase().indexOf("REFRESH_URL")) {
                            this.needDownloadMaxNum++;
                            let e = s.substring(s.indexOf("=") + 1);
                            this.AddDownloadBannerInfo(n, s, "", () => i(this, void 0, void 0, function*() {
                                -1 != e.toUpperCase().indexOf("MAGICCITY") && r.ClickLog.recordClickLog(a.LogName.ClickEvent, -1, a.LogType_ClickEvent.MCEntry, a.LogEvent_Click.MC_Banner), yield r.ClickLog.SendRecordedList(a.LogName.ClickEvent), window.location.href = e
                            }))
                        } else if (-1 != s.toUpperCase().indexOf("URL")) {
                        this.needDownloadMaxNum++;
                        let e = s.substring(s.indexOf("=") + 1);
                        this.AddDownloadBannerInfo(n, s, "", () => {
                            this.OpenBannerWebview(e)
                        })
                    } else this.needDownloadMaxNum++, this.AddDownloadBannerInfo(n, s, "", null)
                }
                console.log("[Banner]", this.bannerInfoMembers), this.bannerInfoMembers.length <= 0 && this.SetBannerInit()
            }
            GetThemeIdByGameName(e) {
                return SS.Common.GameEnvironment.GameSetting.hasOwnProperty("Icon") && SS.Common.GameEnvironment.GameSetting.Icon.hasOwnProperty(e) && SS.Common.GameEnvironment.GameSetting.Icon[e].hasOwnProperty("GameName") ? SS.Common.GameEnvironment.GameSetting.Icon[e].GameName : ""
            }
            OpenReCheckGameWindow(e) {
                null != this.SwitchGameEvent && (r.ClickLog.EntryPoint = a.LogEvent_EntryPoint.Banner, this.SwitchGameEvent(e))
            }
            OpenBannerWebview(e) {
                null != this.OpenBannerWebviewEvent && this.OpenBannerWebviewEvent(e)
            }
            AddDownloadBannerInfo(e, t, o, n) {
                let i = this,
                    s = this.GetDownloadPath(e),
                    r = new h;
                r.bannerName = e, r.buttonAction = t, r.buttonCustomEventID = o, r.onClickEvent = n, this.bannerInfoMembers.push(r), console.log("banner image downloadPath = " + s), cc.assetManager.loadRemote(s, (e, t) => {
                    if (e) return i.imgDownloadFinishNum += 1, i.SetBannerInit(), void console.warn("[banner Image Download is notFind !!] ", e);
                    console.log("[banner Image Download is onFinish !!]", t), i.imgDownloadFinishNum += 1, i.tmpBannerResAry.push(t), i.needShowBannerMaxNum += 1, i.SetBannerInit();
                    for (let o = 0; o < this.bannerInfoMembers.length; o++)
                        if (this.bannerInfoMembers[o].bannerName, t.url.substring(t.url.lastIndexOf("/") + 1), t.url.lastIndexOf("?")) {
                            r.bannerBgSF = new cc.SpriteFrame(t);
                            break
                        }
                })
            }
            GetDownloadPath(e) {
                let t, o = SS.Common.GameEnvironment.ProjectSetting,
                    n = "";
                return n = (t = o.CDN_HOST ? window.location.protocol + "//" + o.CDN_HOST : "../../..") + "/Banner/" + this.bannerCmdData.banner_version + "/" + e + ".png?" + (new Date).getTime(), console.warn("[Download bannerImg Path] = " + n), n
            }
            IsCompleteLoadAllBanner() {
                return this.imgDownloadFinishNum >= this.needDownloadMaxNum && (console.warn("[Banner \u6210\u529f\u5b8c\u6210\u6240\u6709\u8f09\u5165]"), !0)
            }
            SetBannerInit() {
                this.imgDownloadFinishNum >= this.needDownloadMaxNum && this.needShowBannerMaxNum <= 0 && (this.isUseDefaultBanner = !0)
            }
            ShowBanner() {
                if (console.warn("ShowBanner !!"), this.isUseDefaultBanner || null == this.bannerCmdData || this.bannerInfoMembers.length <= 0) console.warn("\u4f7f\u7528\u9810\u8a2dBanner\u5716\u7247 !!"), this.defaultBanner.active = !0, this.pageView.node.active = !1;
                else if (this.defaultBanner.active = !1, this.pageView.node.active = !0, this.needShowBannerMaxNum > 0) {
                    for (let e = 0; e < this.maxPageNum; e++) {
                        let e = cc.instantiate(this.bannerPage);
                        this.pageView.addPage(e), e.position = cc.Vec3.ZERO
                    }
                    for (let e = 0; e < this.bannerInfoMembers.length; e++) {
                        let t = null;
                        this.checkEventDataVailed(e) && (t = cc.instantiate(this.pagePointPrefab), this.pagePointNodeAry.push(t))
                    }
                    for (let e = 0; e < this.pagePointNodeAry.length; e++) this.pagePointNodeAry[e].parent = this.pagePointMgr;
                    1 == this.pagePointNodeAry.length && (this.pagePointNodeAry[0].active = !1), this.Showing()
                }
            }
            IsNeedCarousel() {
                return this.pagePointNodeAry.length > 1
            }
            Showing() {
                this.pageView.setCurrentPageIndex(this.centerIndex), this.pageView.scrollToOffset(new cc.Vec2(628, 0)), this.SetBannerContent(), this.SetPagePoint(this.centerIndex), this.RunAutoCarousel(), this.IsNeedCarousel() || (this.pageView.enabled = !1)
            }
            checkEventDataVailed(e) {
                let t = this.bannerInfoMembers[e];
                return null != t.bannerBgSF && ("" == t.buttonCustomEventID || t.eventData && t.eventData.m_bValid)
            }
            SetBannerContent() {
                let e = 0,
                    t = !1;
                for (; e < this.maxPageNum;) {
                    if (this.showSpriteIndex < this.bannerInfoMembers.length) {
                        if (this.checkEventDataVailed(this.showSpriteIndex)) {
                            let n = this.pageView.getPages()[e];
                            if (null != n) {
                                n.getComponent(cc.Sprite).spriteFrame = this.bannerInfoMembers[this.showSpriteIndex].bannerBgSF;
                                let e = n.getComponent(cc.Button);
                                if (e.clickEvents = [], null != this.bannerInfoMembers[this.showSpriteIndex].onClickEvent) {
                                    var o = new cc.Component.EventHandler;
                                    o.target = this.node, o.component = "BannerMgr", o.handler = "RegisteredBtnClickEvent", o.customEventData = this.showSpriteIndex.toString(), e.clickEvents.push(o)
                                }
                                t || (t = !0)
                            }
                            e++
                        }
                        this.showSpriteIndex++
                    }
                    if (this.showSpriteIndex >= this.bannerInfoMembers.length && (this.showSpriteIndex = 0, !t)) {
                        console.warn("\u6c92\u6709\u5c0b\u627e\u5230\u4efb\u4f55\u4e00\u5f35Banner\uff0c\u6240\u4ee5\u4f7f\u7528\u9810\u8a2dBanner\u5716\u7247 !!"), this.defaultBanner.active = !0, this.pageView.node.active = !1;
                        break
                    }
                }
            }
            RunAutoCarousel() {
                if (!this.IsNeedCarousel()) return;
                let e = this;
                this.scheduleOnce(() => {
                    e.isAllowClickBtnEvent && (e.pageView.setCurrentPageIndex(3), e.RunAutoCarousel())
                }, this.carouselLoadTime)
            }
            ScrollBeganCallBack() {
                this.isAllowClickBtnEvent = !1, this.unscheduleAllCallbacks()
            }
            ScrollTurningCallBack() {}
            ScrollEndedCallBack() {
                this.isAllowClickBtnEvent || (this.RunAutoCarousel(), this.isAllowClickBtnEvent = !0);
                let e = this.pageView.getCurrentPageIndex();
                if (e != this.centerIndex) {
                    let t = !1;
                    if (e >= 2)
                        for (; !t;) this.tmpLoopNum += 1, this.tmpLoopNum >= this.bannerInfoMembers.length && (this.tmpLoopNum = 0), this.checkEventDataVailed(this.tmpLoopNum) && (t = !0);
                    else
                        for (; !t;) this.tmpLoopNum -= 1, this.tmpLoopNum < 0 && (this.tmpLoopNum = this.bannerInfoMembers.length - 1), this.checkEventDataVailed(this.tmpLoopNum) && (t = !0);
                    this.showSpriteIndex = this.tmpLoopNum, this.SetBannerContent(), this.pageView.scrollToOffset(new cc.Vec2(625, 0)), this.pageView.scrollToPage(this.centerIndex, 0), this.SetPagePoint(this.centerIndex)
                }
            }
            SetPagePoint(e) {
                let t = this.pageView.getPages()[e].getComponent(cc.Sprite),
                    o = this.pagePointNodeAry.length - 1;
                for (let n = 0; n < this.bannerInfoMembers.length; n++) this.checkEventDataVailed(n) && (t.spriteFrame == this.bannerInfoMembers[n].bannerBgSF ? this.pagePointNodeAry[o].getComponent(cc.Sprite).spriteFrame = this.pagePointSF_R : this.pagePointNodeAry[o].getComponent(cc.Sprite).spriteFrame = this.pagePointSF_W, o--)
            }
            RegisteredBtnClickEvent(e, t) {
                if (this.isAllowClickBtnEvent) {
                    s.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1);
                    let e = t;
                    null != this.bannerInfoMembers[e].onClickEvent && this.bannerInfoMembers[e].onClickEvent()
                }
            }
            setEventBanner(e) {
                let t = e.m_sBannerID,
                    o = e.m_fucClickEvent,
                    n = !1;
                for (let i = 0; i < this.bannerInfoMembers.length; i++)
                    if (this.bannerInfoMembers[i].buttonCustomEventID == t) {
                        n = !0, this.bannerInfoMembers[i].eventData = e, null != o && (this.bannerInfoMembers[i].onClickEvent = o);
                        break
                    }
                n || console.warn("[Set MissionBanner ButtonCustomEvent Error] Not find this Key!!", t)
            }
            SetBannerCustomEvent(e, t) {
                if (console.warn("SetBannerCustomEvent !!"), this.bannerInfoMembers.length <= 0) return;
                let o = !1;
                for (let n = 0; n < this.bannerInfoMembers.length; n++)
                    if (this.bannerInfoMembers[n].buttonCustomEventID == e) {
                        o = !0, null != t && (this.bannerInfoMembers[n].onClickEvent = t);
                        break
                    }
                o || console.warn("[Set MissionBanner ButtonCustomEvent Error] Not find this Key!!", e)
            }
        };
        n([c(cc.Node)], m.prototype, "defaultBanner", void 0), n([c(cc.Node)], m.prototype, "pagePointMgr", void 0), n([c(cc.Prefab)], m.prototype, "pagePointPrefab", void 0), n([c(cc.Prefab)], m.prototype, "bannerPage", void 0), n([c(cc.PageView)], m.prototype, "pageView", void 0), n([c(cc.SpriteFrame)], m.prototype, "pagePointSF_W", void 0), n([c(cc.SpriteFrame)], m.prototype, "pagePointSF_R", void 0), m = n([l], m), o.BannerMgr = m, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Component/AudioMgr": "AudioMgr",
        "../../../LobbyCommon/Net/ClickLog": "ClickLog",
        "../../../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum"
    }],
    BaseMachineHost: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "4dfe5XA0j5HgbTp2yskcer8", "BaseMachineHost");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.BaseMachineHost = void 0;
        const i = e("../../LobbyCommon/Component/ReturnLobbyHandler"),
            s = e("../../LobbyCommon/Connect/Script/ConnectPanelMgr"),
            r = e("../../LobbyCommon/LobbyCommon"),
            a = e("../../LobbyCommon/Net/ClickLog"),
            l = e("../../LobbyCommon/Net/ClickLogEnum"),
            c = e("../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            h = e("../CommonRoot/Script/CommonRoot"),
            {
                ccclass: m,
                property: u
            } = cc._decorator;
        let d = class extends cc.Component {
            constructor() {
                super(...arguments), this.handler = null
            }
            start() {
                this.Init()
            }
            Init() {
                r.LobbyCommon.Instance.InitWaitForSeconds(), this.RegisgerCommonListener()
            }
            Exit() {
                this.UnregisgerCommonListener()
            }
            RegisgerCommonListener() {
                h.CommonRoot.Instance.GetTopBarMgr.m_DelClickNews.Insert(this.OnClickNews, this), h.CommonRoot.Instance.m_nodeBulletinBoard && (h.CommonRoot.Instance.m_nodeBulletinBoard.on("call_activity", this.OnCallActivity, this, !0), h.CommonRoot.Instance.m_nodeBulletinBoard.on("call_switch_game", this.OnCallSwitchGame, this, !0), h.CommonRoot.Instance.m_nodeBulletinBoard.on("call_webview", this.OnCallWebview, this, !0), h.CommonRoot.Instance.m_nodeBulletinBoard.on("close_news_board", this.OnBulletinBoardClosed, this, !0))
            }
            UnregisgerCommonListener() {
                h.CommonRoot.Instance.GetTopBarMgr.m_DelClickNews.Remove(this.OnClickNews, this), h.CommonRoot.Instance.m_nodeBulletinBoard.targetOff(this)
            }
            OnSetBackToLobby() {
                null == this.handler && (this.handler = new i.ReturnLobbyHandler), a.ClickLog.DirectSend(l.LogName.PlayerConversion, l.LogType_PlayerConversion.GameLoading, l.LogEvent_LeaveGameProcess.BackToLobby), this.handler.BackToLobby(this.OnLoadCallBack.bind(this), this.OnErrorCallBack.bind(this)), this.handler = null
            }
            OnSetBackToLogin() {
                null == this.handler && (this.handler = new i.ReturnLobbyHandler), this.handler.BackToLogin(this.OnLoadCallBack.bind(this), this.OnErrorCallBack.bind(this)), this.handler = null
            }
            OnLoadCallBack() {
                this.StartLoadScene(1)
            }
            OnErrorCallBack() {
                c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Warning, "C44", "Game", "Load Error", null)
            }
            StartLoadScene(e) {
                this.scheduleOnce(() => {
                    SS.Common.GameEnvironment.Splash && (SS.Common.GameEnvironment.Splash.style.display = "block"), a.ClickLog.DirectSend(l.LogName.PlayerConversion, l.LogType_PlayerConversion.GameLoading, l.LogEvent_LeaveGameProcess.StaticLoading), s.ConnectPanelMgr.Instance.DisableConnectPanel(), cc.director.loadScene("ReleaseScene")
                }, e)
            }
            OnClickNews() {
                h.CommonRoot.Instance.m_nodeBulletinBoard && !h.CommonRoot.Instance.m_nodeBulletinBoard.active && (h.CommonRoot.Instance.m_nodeBulletinBoard.active = !0)
            }
            OnCallActivity(e) {
                let t = e.getUserData();
                cc.log("OnCallActivity: " + t)
            }
            OnCallSwitchGame(e) {
                let t = e.getUserData();
                cc.log("OnCallSwitchGame: " + t), h.CommonRoot.Instance.m_switchGameGroup.OnSwitchGameIgnoreWindow(t)
            }
            OnCallWebview(e) {
                let t = e.getUserData();
                cc.log("OnCallWebview: " + t), window.location.replace(t), window.location.reload()
            }
            OnBulletinBoardClosed() {
                cc.log("OnBulletinBoardClosed")
            }
        };
        d = n([m], d), o.BaseMachineHost = d, cc._RF.pop()
    }, {
        "../../LobbyCommon/Component/ReturnLobbyHandler": "ReturnLobbyHandler",
        "../../LobbyCommon/Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../../LobbyCommon/LobbyCommon": "LobbyCommon",
        "../../LobbyCommon/Net/ClickLog": "ClickLog",
        "../../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum",
        "../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../CommonRoot/Script/CommonRoot": "CommonRoot"
    }],
    BeginnersGuideMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "040ffZbPg1LtbkxpMsA8wQ2", "BeginnersGuideMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("../Component/AudioMgr"),
            s = e("../Helper/EventSystem"),
            r = e("../Net/ClickLog"),
            a = e("../Net/ClickLogEnum"),
            l = e("./BeginnersGuideStepItem"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        let m = class extends cc.Component {
            constructor() {
                super(...arguments), this.id = "", this.guideItemRoot = null, this.tipRoot = null, this.nextNode = null, this.nextButton = null, this.cookieSaveName = "", this.guideItemAry = null, this.currentStepIndex = 0, this.isCallOnLoad = !1, this.isFirstShow = !1
            }
            onLoad() {
                this.isCallOnLoad || (this.isCallOnLoad = !0, console.warn("[BeginnersGuideMgr]" + this.node.name + ">> onLoad: "), this.node.active = !1, s.EventSystem.Event(s.BeginnersGuide.Show).Insert(this.OnCallShow, this), s.EventSystem.Event(s.BeginnersGuide.Hide).Insert(this.OnCallExit, this))
            }
            onDestroy() {
                this.isCallOnLoad = !1, s.EventSystem.Event(s.BeginnersGuide.Show).Remove(this.OnCallShow, this), s.EventSystem.Event(s.BeginnersGuide.Hide).Remove(this.OnCallExit, this), this.guideItemAry = null
            }
            OnCallShow(e, t) {
                if (console.warn("[BeginnersGuideMgr]" + this.node.name + ">> OnCallShow: " + e + " vs " + this.id + "(force: " + t + ")"), e == this.id) return t || this.CheckCookieForShow() ? this.isFirstShow = !1 : (this.isFirstShow = !0, console.error("[BeginnersGuideMgr] id = " + e + ", isFirstShow = " + this.isFirstShow)), (t || !t && this.CheckCookieStatusCanOK()) && this.Init() ? (this.node.active = !0, void this.ShowFirstStep()) : void this.Exit(!1)
            }
            CheckCookieStatusCanOK() {
                return !(this.cookieSaveName.length > 0 && this.CheckCookieForShow())
            }
            Init() {
                if (this.guideItemRoot && !this.guideItemAry && (this.guideItemAry = this.guideItemRoot.getComponentsInChildren(l.default)), !this.guideItemAry || 0 == this.guideItemAry.length) return console.warn("[BeginnersGuideMgr]\u6c92\u6709\u5f15\u5c0e\u7269\u4ef6"), !1;
                for (let e = 0; e < this.guideItemAry.length; e++) this.guideItemAry[e].Init();
                return !0
            }
            Exit(e) {
                this.currentStepIndex = 0, this.node.active = !1, s.EventSystem.Event(s.BeginnersGuide.OnExit).Notify(this.id, this.node, e)
            }
            OnCallExit(e) {
                e == this.id && this.OnClickExit()
            }
            OnClickExit() {
                this.guideItemAry && this.currentStepIndex >= 0 && this.currentStepIndex < this.guideItemAry.length && this.guideItemAry[this.currentStepIndex].End(), this.SetCookieForShow(), this.Exit(!1)
            }
            OnClickComplete() {
                this.currentStepIndex >= 0 && this.currentStepIndex < this.guideItemAry.length && this.guideItemAry[this.currentStepIndex].End(), this.SetCookieForShow(), this.Exit(!0)
            }
            OnClickNext() {
                if (this.isFirstShow) {
                    let e = this.guideItemAry[this.currentStepIndex].nextClickLogEventID;
                    if (-1 != e) {
                        let t = e;
                        r.ClickLog.recordClickLog(a.LogName.Profile, 0, a.LogType_Profile.Guide, t)
                    }
                }
                i.AudioMgr.Instance.Play("PS_Beginner", !1, 1), this.ShowNext()
            }
            ShowFirstStep() {
                this.currentStepIndex = 0, this.guideItemAry[this.currentStepIndex].Record(this.tipRoot);
                let e = this.guideItemAry[this.currentStepIndex].isClickNext;
                this.nextNode && (this.nextNode.active = e), this.nextButton.active = e, i.AudioMgr.Instance.Play("PS_Beginner", !1, 1), this.ShowNext()
            }
            ShowNext() {
                if (!this.guideItemAry[this.currentStepIndex].NextTip()) {
                    if (this.guideItemAry[this.currentStepIndex].End(), this.currentStepIndex++, this.currentStepIndex >= this.guideItemAry.length) return this.SetCookieForShow(), void this.Exit(!0);
                    this.guideItemAry[this.currentStepIndex].Record(this.tipRoot);
                    let e = this.guideItemAry[this.currentStepIndex].isClickNext;
                    this.nextNode && (this.nextNode.active = e), this.nextButton.active = e, this.ShowNext()
                }
            }
            SetCookieForShow() {
                0 != this.cookieSaveName.length && (JSUtility.IsSupportLocalStorage() ? localStorage.setItem(this.cookieSaveName, "1") : JSUtility.IsSupportCookie() && (document.cookie = this.cookieSaveName + "=1;"))
            }
            CheckCookieForShow() {
                let e = "";
                return JSUtility.IsSupportLocalStorage() ? e = localStorage.getItem(this.cookieSaveName) : JSUtility.IsSupportCookie() && (e = JSUtility.GetCookie(this.cookieSaveName)), null != e
            }
        };
        n([h()], m.prototype, "id", void 0), n([h(cc.Node)], m.prototype, "guideItemRoot", void 0), n([h({
            type: cc.Node,
            displayName: "\u628a\u5f80\u524d\u79fb\u7684UI\u653e\u54ea"
        })], m.prototype, "tipRoot", void 0), n([h(cc.Node)], m.prototype, "nextNode", void 0), n([h(cc.Node)], m.prototype, "nextButton", void 0), n([h({
            displayName: "cookie\u5132\u5b58\u540d\u7a31(\u4e0d\u5b58\u7559\u7a7a)"
        })], m.prototype, "cookieSaveName", void 0), m = n([c], m), o.default = m, cc._RF.pop()
    }, {
        "../Component/AudioMgr": "AudioMgr",
        "../Helper/EventSystem": "EventSystem",
        "../Net/ClickLog": "ClickLog",
        "../Net/ClickLogEnum": "ClickLogEnum",
        "./BeginnersGuideStepItem": "BeginnersGuideStepItem"
    }],
    BeginnersGuideStepItem: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "24f5flhMThO1IJEgxhL90QC", "BeginnersGuideStepItem");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.isClickNext = !0, this.nextClickLogEventID = -1, this.showNodeAry = [], this.tipStepAry = [], this.startEventAry = [], this.completeEventAry = [], this.hideInGame = !1, this.recordStatusAry = null, this.currentIndex = -1
            }
            Init() {
                for (let e = 0; e < this.tipStepAry.length; e++) this.tipStepAry[e].active = !1;
                this.currentIndex = -1, this.node.active = !1, this.hideInGame && null != SS.Common.GameEnvironment.CurrentGameNow && (this.tipStepAry = [])
            }
            Record(e) {
                cc.Component.EventHandler.emitEvents(this.startEventAry), this.recordStatusAry = [];
                for (let t = 0; t < this.showNodeAry.length; t++) {
                    let o = this.showNodeAry[t];
                    if (o) {
                        this.recordStatusAry.push(new a(o.parent, o.getSiblingIndex(), o.position, o.active));
                        let t = o.convertToWorldSpaceAR(cc.Vec3.ZERO);
                        o.setParent(e), o.position = e.convertToNodeSpaceAR(t), o.active = !0
                    } else this.recordStatusAry.push(null)
                }
            }
            NextTip() {
                return console.warn("[111]" + this.node.name + ">> NextTip: " + this.currentIndex), this.currentIndex >= 0 && (this.tipStepAry[this.currentIndex].active = !1), this.currentIndex++, this.currentIndex >= this.tipStepAry.length ? (this.node.active = !1, !1) : (this.node.active = !0, this.tipStepAry[this.currentIndex].active = !0, !0)
            }
            End() {
                for (let e = 0; e < this.showNodeAry.length; e++) {
                    let t = this.showNodeAry[e];
                    t && (t.parent = this.recordStatusAry[e].parentNode, t.setSiblingIndex(this.recordStatusAry[e].siblingIndex), t.position = this.recordStatusAry[e].position, t.active = this.recordStatusAry[e].originActive)
                }
                this.recordStatusAry = null, cc.Component.EventHandler.emitEvents(this.completeEventAry)
            }
        };
        n([s({
            displayName: "\u51fa\u73fe\u9ede\u64ca\u4e0b\u4e00\u6b65\u7684\u6309\u9215"
        })], r.prototype, "isClickNext", void 0), n([s({
            displayName: "\u7b2c\u4e00\u6b21\u9ede\u64ca\u4e0b\u4e00\u6b65\u6309\u9215\u7684clickLog\u4e8b\u4ef6ID",
            visible: function() {
                return this.isClickNext
            }
        })], r.prototype, "nextClickLogEventID", void 0), n([s({
            type: [cc.Node],
            displayName: "\u5230\u6700\u524d\u7aef\u8981\u986f\u793a\u7684UI\u7269\u4ef6"
        })], r.prototype, "showNodeAry", void 0), n([s({
            type: [cc.Node],
            displayName: "\u65b0\u624b\u5f15\u5c0e\u7528\u7684\u63d0\u793a\u8a0a\u606f"
        })], r.prototype, "tipStepAry", void 0), n([s({
            type: [cc.Component.EventHandler],
            displayName: "\u9019\u6b65\u9a5f\u958b\u59cb\u6642\u8981\u547c\u53eb\u7684\u51fd\u5f0f"
        })], r.prototype, "startEventAry", void 0), n([s({
            type: [cc.Component.EventHandler],
            displayName: "\u9019\u6b65\u9a5f\u7d50\u675f\u5f8c\u8981\u547c\u53eb\u7684\u51fd\u5f0f"
        })], r.prototype, "completeEventAry", void 0), n([s({
            displayName: "\u904a\u6232\u4e2d\u8981\u96b1\u85cf\u7684flag"
        })], r.prototype, "hideInGame", void 0), r = n([i], r), o.default = r;
        class a {
            constructor(e, t, o, n) {
                this.parentNode = null, this.siblingIndex = 0, this.originActive = !0, this.parentNode = e, this.siblingIndex = t, this.originActive = n, this.position = o
            }
        }
        cc._RF.pop()
    }, {}],
    BlinkEffect: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "f845fZE/uFPIprCq+H7EMkN", "BlinkEffect");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.duration = 2
            }
            start() {
                let e = .5 * this.duration;
                cc.tween(this.node), cc.tween(this.node).then(cc.tween().to(e, {
                    opacity: 255
                }, {
                    easing: "sineInOut"
                }).then(cc.tween().to(e, {
                    opacity: 0
                }, {
                    easing: "sineInOut"
                }))).repeatForever().start()
            }
        };
        n([s(cc.Float)], r.prototype, "duration", void 0), r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    BtnState: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "65ddeUNTVtO95i/Y7agYqgo", "BtnState");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.enumState = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        (function(e) {
            e[e.STATE_0 = 0] = "STATE_0", e[e.STATE_1 = 1] = "STATE_1", e[e.STATE_2 = 2] = "STATE_2", e[e.STATE_3 = 3] = "STATE_3", e[e.STATE_4 = 4] = "STATE_4", e[e.STATE_5 = 5] = "STATE_5", e[e.STATE_6 = 6] = "STATE_6", e[e.STATE_7 = 7] = "STATE_7", e[e.STATE_8 = 8] = "STATE_8", e[e.STATE_9 = 9] = "STATE_9"
        })(o.enumState || (o.enumState = {}));
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.BtnSprite = null, this.BtnSpriteFrame = [], this.Icon = null, this.IconSpriteFrame = []
            }
            ChangeState(e) {
                this.BtnSprite && (this.BtnSprite.spriteFrame = this.BtnSpriteFrame[e]), this.Icon && (this.Icon.spriteFrame = this.IconSpriteFrame[e])
            }
        };
        n([s(cc.Sprite)], r.prototype, "BtnSprite", void 0), n([s([cc.SpriteFrame])], r.prototype, "BtnSpriteFrame", void 0), n([s(cc.Sprite)], r.prototype, "Icon", void 0), n([s([cc.SpriteFrame])], r.prototype, "IconSpriteFrame", void 0), r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    BundleCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "14491WqNuZFqrJE+S66wObQ", "BundleCtrl");
        var n, i = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            s = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const r = e("../Connect/Script/ConnectPanelMgr"),
            a = e("../Net/Downloader/VersionDownloader"),
            l = e("../PopupMessage/Script/PopupMsgMgr"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        let m = n = class {
            constructor() {
                this.m_configName = "Bundles", this.m_config = null
            }
            static get Instance() {
                return null == this.m_instance && (this.m_instance = new n), this.m_instance
            }
            DownloadConfig() {
                return s(this, void 0, void 0, function*() {
                    yield new Promise((e, t) => {
                        (new a.VersionDownloader).Start(SS.Common.GameEnvironment.S3URL + "/Bundle/", o => {
                            try {
                                this.m_config = o, e(o)
                            } catch (n) {
                                t(n)
                            }
                        }, e => {
                            t(e)
                        })
                    })
                })
            }
            DownloadCommonBundles() {
                return s(this, void 0, void 0, function*() {
                    if (!this.m_config) return;
                    let e = "",
                        t = this.m_config.PreDownload.Common;
                    for (let o = 0; o < t.length; o++) yield this.CheckDependencies(t[o]), e = this.GetDownloadPath(t[o]), yield this.DownloadBundle(e)
                })
            }
            DownloadLobbyBundles() {
                return s(this, void 0, void 0, function*() {
                    if (!this.m_config) return;
                    let e = "",
                        t = this.m_config.PreDownload.Lobby;
                    for (let o = 0; o < t.length; o++) e = this.GetDownloadPath(t[o]), yield this.DownloadBundle(e)
                })
            }
            DownloadGameFeatureBundles(e, t) {
                return s(this, void 0, void 0, function*() {
                    if (!this.m_config) return;
                    let o = "",
                        n = "";
                    for (let i = 0; i < t.length; i++) n = t[i], this.m_config.PreDownload.GameFeature[n] && (e && this.m_config.PreDownload.GameFeature[n].InLobby || !e && this.m_config.PreDownload.GameFeature[n].InGame) && (o = this.GetDownloadPath(this.m_config.PreDownload.GameFeature[n].BundleName), yield this.DownloadBundle(o))
                })
            }
            GetGameFeatureBundlesName(e) {
                if (this.m_config) return this.m_config.PreDownload.GameFeature[e] ? this.m_config.PreDownload.GameFeature[e].BundleName : void 0
            }
            GetBundle(e) {
                return new Promise((t, o) => {
                    let n = cc.assetManager.getBundle(e);
                    n && t(n);
                    let i = this.GetDownloadPath(e);
                    this.DownloadBundle(i).then(e => {
                        t(e)
                    }).catch(t => {
                        this.ShowDownloadError("Bundle(" + e + ") can't Download"), o(t)
                    })
                })
            }
            GetMainPrefab(e) {
                if (this.m_config) return new Promise((t, o) => {
                    let n = cc.assetManager.getBundle(e);
                    if (!n) {
                        let t = this.GetDownloadPath(e);
                        this.DownloadBundle(t).then(e => {
                            n = e
                        }).catch(() => {
                            this.ShowDownloadError("Bundle(" + e + ") can't Download"), o("Bundle(" + e + ") can't Download")
                        })
                    }
                    let i = this.m_config[e].path + this.m_config[e].MainPrefab;
                    n.load(i, cc.Prefab, (e, n) => {
                        e && (this.ShowDownloadError("Prefab(" + i + ") can't Load"), o(e)), t(n)
                    })
                })
            }
            GetOtherPrefab(e, t) {
                return new Promise((o, n) => {
                    let i = cc.assetManager.getBundle(e);
                    if (i) i.load(t, cc.Prefab, (e, t) => {
                        e && n(e), o(t)
                    });
                    else {
                        let s = this.GetDownloadPath(e);
                        this.DownloadBundle(s).then(e => {
                            (i = e).load(t, cc.Prefab, (e, t) => {
                                e && n(e), o(t)
                            })
                        }).catch(() => {
                            n("Bundle(" + e + ") can't Download")
                        })
                    }
                })
            }
            GetSpirte(e, t) {
                return new Promise((o, n) => {
                    let i = cc.assetManager.getBundle(e);
                    if (i) i.load(t, cc.SpriteFrame, (e, t) => {
                        e && n(e), o(t)
                    });
                    else {
                        let s = this.GetDownloadPath(e);
                        this.DownloadBundle(s).then(e => {
                            (i = e).load(t, cc.SpriteFrame, (e, t) => {
                                e && n(e), o(t)
                            })
                        }).catch(() => {
                            n("Bundle(" + e + ") can't Download")
                        })
                    }
                })
            }
            GetTargetBundlePrefabPath(e) {
                return this.m_config ? this.m_config[e].path : null
            }
            GetTargetBundlePrefabName(e) {
                return this.m_config ? this.m_config[e].MainPrefab : null
            }
            ClearSoFarTimeCacheBundle() {
                cc.assetManager.cacheManager.clearLRU()
            }
            ClearAllResources() {
                cc.assetManager.releaseAll()
            }
            GetDownloadPath(e) {
                let t = "";
                if (t = SS.Common.GameEnvironment.ProjectSetting.CDN_HOST ? window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.CDN_HOST + "/Bundle/" + e : window.location.origin + "/Bundle/" + e, this.m_config[e]) {
                    let o = this.m_config[e].Version;
                    SS.Common.GameEnvironment.IgnoreVersionCtrl && this.m_config[e].VersionDEV && (o = this.m_config[e].VersionDEV), t += "/" + o
                }
                return console.log("[BundleCtrl]Download Path: " + t), t
            }
            DownloadBundle(e) {
                return new Promise((t, o) => {
                    cc.assetManager.loadBundle(e, function(n, i) {
                        n ? (console.error("[BundleCtrl]Bundle (" + e + ") Download is error !! ", n), o(n)) : t(i)
                    })
                })
            }
            ShowDownloadError(e) {
                console.error("[BundleCtrl]ERROR:" + e), r.ConnectPanelMgr.Instance.DisableConnectPanel(), l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Warning, "C", "Lobby", e)
            }
            CheckDependencies(e) {
                return s(this, void 0, void 0, function*() {
                    let t = this.m_config[e].Dependency,
                        o = !0;
                    if (t) {
                        console.log("[Download] Check dependency of " + e);
                        for (let n = 0; n < t.length; n++) {
                            let i = this.GetDownloadPath(t[n]);
                            null === (yield this.DownloadBundle(i)) && (console.warn("[Download] Dependency of " + e + ": " + t[n] + " Download Failed"), o = !1)
                        }
                    }
                    return new Promise(e => {
                        e(o)
                    })
                })
            }
        };
        m.m_instance = null, m = n = i([c], m), o.default = m, cc._RF.pop()
    }, {
        "../Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../Net/Downloader/VersionDownloader": "VersionDownloader",
        "../PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr"
    }],
    ButtonHoverScale: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "3020drr715M7JleK8KSiad+", "ButtonHoverScale");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ButtonHoverScale = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.glowNode = null
            }
            onLoad() {
                this.Enable = !0
            }
            set Enable(e) {
                e ? (this.node.on(cc.Node.EventType.MOUSE_ENTER, this.OnHover, this), this.node.on(cc.Node.EventType.MOUSE_LEAVE, this.OnLeave, this)) : (this.node.off(cc.Node.EventType.MOUSE_ENTER, this.OnHover, this), this.node.off(cc.Node.EventType.MOUSE_LEAVE, this.OnLeave, this), null != this.glowNode && (this.glowNode.active = !1))
            }
            OnHover() {
                this.node.scale = 1.1
            }
            OnLeave() {
                this.node.scale = 1
            }
        };
        n([s(cc.Node)], r.prototype, "glowNode", void 0), r = n([i], r), o.ButtonHoverScale = r, cc._RF.pop()
    }, {}],
    CheatKeyCustomData: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "78eaah3M5xN0YJLAp7OMWgf", "CheatKeyCustomData");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.cheatKeyAry = ["No Cheat", "NO WIN", "Win1x", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+"]
            }
            Init(e) {
                e && (this.cheatKeyAry = e)
            }
            GetData() {
                return this.cheatKeyAry
            }
        };
        n([s([cc.String])], r.prototype, "cheatKeyAry", void 0), r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    CheatKeyData: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "ba789UUJ3FK+qVm1ZKRBWV1", "CheatKeyData");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CheatKeyData = void 0;
        const {
            ccclass: s,
            property: r
        } = cc._decorator;
        let a = n = class {
            static GetCheatKeyData(e) {
                switch (e) {
                    case "GreenShamrock":
                        return n.m_GreenShamrockList;
                    case "Runaway":
                        return n.m_RunawayList;
                    case "LittleRubberDucky":
                        return n.m_LittleRubberDuckList;
                    case "Crystal7s":
                        return n.m_Crystal7sList;
                    case "DaysOfTheDead":
                        return n.m_DaysOfTheDeadList;
                    case "CashTVShow":
                        return n.m_TVMillionaireList;
                    case "HelloDoggy":
                        return n.m_MrFidoList;
                    case "MerryXmas":
                        return n.m_TisTheSeasonList;
                    case "TheGoodLife":
                        return n.m_TheGoodLifeList;
                    case "LuckyFortune":
                    case "GoldenTreasures":
                        return n.m_LuckyFortuneList;
                    case "LuckyFortune2":
                        return n.m_LuckyFortune2List;
                    case "FirePhoenix":
                        return n.m_FirePhoenixList;
                    case "MidnightCastle":
                        return n.m_MidnightCastleList;
                    case "GoldenDragon":
                        return n.m_GoldenDragonList;
                    case "FiveDragon":
                        return n.m_DragonCityList;
                    case "FireSpin":
                    case "ThunderZeus":
                        return n.m_FireSpinList;
                    case "RainbowLuck":
                        return n.m_RainbowLuckList;
                    case "Fire7":
                        return n.m_Fire7List;
                    case "GoldenRooster":
                        return n.m_GoldenRoosterList;
                    case "HotShot":
                    case "Inferno7":
                        return n.m_HotShotList;
                    case "HighWayKing":
                        return n.m_HighWayKingList;
                    case "LittleRubberDucky":
                        return n.m_LittleRubberDuckyList;
                    case "LuckyDuck":
                        return n.m_LuckyDuckList;
                    case "OceanParty":
                        return n.m_OceanPartyList;
                    case "RobinHood":
                        return n.m_RobinHoodList;
                    case "FaFaFa":
                        return n.m_FaFaFaList;
                    case "MexBingo":
                        return n.m_MexBingoList;
                    case "AtlantisModern":
                    case "ShamrockFortune":
                        return n.m_AtlantisModernList;
                    case "CaptainJack":
                        return n.CaptainJackList;
                    case "AtlantisAncient":
                        return n.m_AtlantisAncientList;
                    case "HappyHour":
                        return n.m_HappyHour;
                    case "BookOfRa":
                    case "EgyptianGold2":
                    case "EgyptianGold3":
                        return n.m_EgyptianGold;
                    case "SuperKeno":
                        return n.m_SuperKeno;
                    case "JPkeno":
                        return n.m_JPKeno;
                    case "SalsaBingo":
                        return n.m_SalsaBingoList;
                    case "SMario":
                        return n.m_SmallMarioList;
                    case "Buffalo":
                        return n.m_BuffaloList;
                    case "SuperAgent":
                        return n.m_SuperAgentList;
                    case "ChickenDinner":
                        return n.m_ChickenDinnerList;
                    case "PyramidAdventure":
                        return n.m_PyramidAdvList;
                    case "FortuneLantern":
                        return n.m_FortuneLanternList;
                    case "Miner":
                        return n.m_CoalManList;
                    case "Witch":
                    case "FireLinkFaFaFa":
                        return n.m_WitchList;
                    case "Blazing777":
                        return n.m_Flaming777List;
                    case "Blazing777Deluxe":
                        return n.m_Flaming777DeluxeList;
                    case "FuLuShouXiEX":
                        return n.m_FuLuShouXiEX;
                    case "CrazyWheel":
                        return n.m_crazyWheelList;
                    case "LuckyIrish":
                        return n.m_LuckyIrish;
                    default:
                        return console.error("Can't Find Corresponding CheatKeyData Reference!!"), null
                }
            }
        };
        a.m_DragonCityList = ["NO Cheat", "NoWin", "SMALL", "X10_X20", "X20_X50", "TX50_X100", "MONEYBAG", "MONEYBAG_LINEWIN", "FREEGAME", "FREEGAME_LINEWIN", "FREEGAME_RETRIGER", "FREEGAME_LISTEN", "KILL_WIN"], a.m_GreenShamrockList = ["NO Cheat", "NO_WIN", "WIN_SMALL", "WIN_1-9", "WIN_10-20", "WIN_20-50", "WIN_50_UP", "FREE_GAME", "FREE_GAME_MORE", "WIN_TOP3_SYMBOL"], a.m_RunawayList = ["NO Cheat", "NO_WIN", "under totalBet * 1", "under totalBet * 10", "totalBet 10~20", "totalBet 20~50", "up totalBet 50", "freeGame"], a.m_LittleRubberDuckList = ["NO Cheat", "NO_WIN", "WIN_SMALL", "WIN_1-9", "WIN_10-20", "WIN_20-50", "WIN_50_UP", "FREE_GAME", "FREE_GAME_MORE", "WIN_TOP3_SYMBOL"], a.m_Crystal7sList = ["NO Cheat", "NO_WIN", "WIN_SMALL", "WIN_1-9", "WIN_10-20", "WIN_20-50", "WIN_50_UP", "FREE_GAME", "FREE_GAME_MORE", "WIN_TOP3_SYMBOL"], a.m_DaysOfTheDeadList = ["NO Cheat", "NO_WIN", "KILL_WIN", "WIN_1-9", "WIN_10-20", "WIN_20-50", "WIN_50_UP", "FREE_GAME", "FREE_GAME_R1", "FREE_GAME_R2", "FREE_GAME_Cl", "FREE_GAME_LINE", "PRE_WIN"], a.m_TVMillionaireList = ["NO Cheat", "NoWin", "Win1x-", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+", "PreWin", "FreeGame", "FreeHitFree", "Free+LineWin"], a.m_MrFidoList = ["NO Cheat", "NoWin", "Win1x-", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+", "PreWin", "FreeGame", "FreeHitFree", "Free+LineWin", "FreeHitFree2x", "FreeDouble2x"], a.m_TisTheSeasonList = ["NO Cheat", "NoWin-", "Win1x", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+", "PreWin", "FreeGame", "FreeDoubleWild", "Feature"], a.m_TheGoodLifeList = ["NO Cheat", "NoWin-", "Win1x", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+", "PreWin", "FreeGame", "FreeReTriger", "Free+LineWin", "Free+Diamond"], a.m_LuckyFortuneList = ["NO Cheat", "NoWin-", "Win1x", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+", "FreeGame", "FreeGameWild", "FreeGameBonus", "FreeGameSpinAdd", "FreeGameLineWin", "FreeGameNoWild", "FreeGameNoWin", "BonusLineWin"], a.m_LuckyFortune2List = ["NO Cheat", "NoWin-", "Win1x", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+", "FreeGame", "FreeGameWild", "FreeGameBonus", "FreeGameSpinAdd", "FreeGameLineWin", "FreeGameNoWild", "FreeGameNoWin", "BonusLineWin"], a.m_FirePhoenixList = ["NO Cheat", "NoWin-", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+", "MONEYBAG", "MONEYBAG_LINEWIN", "FREEGAME", "FREEGAME_LINEWIN", "FREEGAME_RETRIGER", "FREEGAME_LISTEN"], a.m_MidnightCastleList = ["NO Cheat", "NoWin-", "Win1x", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+", "FreeGame", "FreeGameBonus1", "FreeGameBonus2", "Scatter2"], a.m_GoldenDragonList = ["NO Cheat", "NoWin", "Under TotalBet * 1", "Under TotalBet * 10", "TotalBet 10~20", "TotalBet 20~50", "Up TotalBet 50", "FreeGame", "FreeGameFeature", "FreeGameWin", "FreeGameRetrigger", "FreeGameUp", "FeatureWild"], a.m_FireSpinList = ["NO Cheat", "L_FEATURE ", "R_FEAUTRE", "LR_FEATURE ", "SC_1 ", "SC_13", "SC_135_NO_GIRL ", "SC_135_GIRL", "ODDS_01_99", "ODDS_100_199", "ODDS_200_499", "ODDS_500_UP ", "LINE_SC_FEATURE", "LINE_SCATTER", "SC_FEATURE ", "MAYBE_WIN", "NOWIN"], a.m_RainbowLuckList = ["NO Cheat", "NO_WIN", "WIN_X10", "WIN_X20", "WIN_X30", "RAINBOW_X1", "RAINBOW_X2", "RAINBOW_X3", "SCATTER", "SCATTER_2", "SMALL"], a.m_Fire7List = ["NO WIN", "10 \u500d\u4ee5\u4e0b", "10~20 \u500d", "20~30 \u500d", "50 UP \u500d", "FreeGame ", "Free + MoreFree", "JP", "Hit JP + Free", "JP + Line + Free + Scatter + MoreFree"], a.m_GoldenRoosterList = ["NO WIN", "Normal_Win", "Normal_Win_2", "Normal_Win_3", "Big_Win", "Mega_Win", "Mega_Win_2", "Super_Win", "Super_Win_2", "3 SCATTER-FreeGame", "4 SCATTER-FreeGame", "5 SCATTER-FreeGame", "wild award", "(WILD+SCATTER) -FreeGame", "(WILD+SCATTER)-FreeGame(Retriger)"], a.m_HotShotList = ["NO WIN", "1 \u500d\u4ee5\u4e0b\u7dda\u734e", "10 \u500d\u4ee5\u4e0b\u7dda\u734e", "10~20 \u500d\u7dda\u734e", "20~50 \u500d\u7dda\u734e", "50 UP \u500d\u7dda\u734e", "1 FEATURE\u642d\u914d\u5176\u4ed6\u5169\u8f2aFEATURE ", "2 FEATURE\u642d\u914d\u5176\u4ed6\u5169\u8f2aFEATURE", "3 FEATURE\u642d\u914d\u5176\u4ed6\u5169\u8f2aFEATURE", "4 FEATURE\u642d\u914d\u5176\u4ed6\u5169\u8f2aFEATURE", "5 FEATURE\u642d\u914d\u4efb\u610f\u5169\u8f2aFEATURE\u6c92JP", "5 FEATURE\u642d\u914d\u5169\u8f2a\u4ee5\u4e0aFEATURE\u6709JP"], a.m_HighWayKingList = ["NO WIN", "TotalBet 10 under", "TotalBet 10~20", "TotalBet 20~30", "TotalBet 50 up", "FreeGame", "Free+MoreFree", "Hit Jp", "JP+Line+Free+MoreFree", "ANY WILD", "Free + JP", "Normal"], a.m_LittleRubberDuckyList = ["\u6b63\u5e38\u51fa\u734e", "NO WIN", "Total Bet 1\u500d\u4ee5\u4e0b", "Total Bet 10\u500d\u4ee5\u4e0b", "Total Bet 10~20\u500d\u734e", "Total Bet 20~50\u500d\u734e", "Total Bet 50UP\u500d\u734e", "FreeGame", "Free + MoreFree", "JP", "\u6b63\u5e38\u51fa\u734e"], a.m_LuckyDuckList = ["normal", "no win", "under totalBet *1", "under totalBet *10", "totalBet 10~20", "totalBet 20~50", "up totalBet 50", "MainGameRespin", "MainGameRespinGetFreeGame", "freeGame", "freeGame+lineWin", "freeGame with re-trigger", "freeGameRespin", "free with Respin Get Free", "free last spin Respin No Free", "CHEAT_WILD_X3", "CHEAT_WILD_X4", "CHEAT_WILD_X5", "CHEAT_FREEGAME_X5", "CHEAT_RESPIN_WIN", "RESPIN_LineWin&FG", "ReTrigger*5"], a.m_OceanPartyList = ["NO WIN", "Total Bet 10", "Total Bet 10~20 ", "Total Bet 20~30", "Total Bet 50 UP", "FreeGame", "Free + MoreFree", "Hit JP", "JP+Line+Free+Scatter+MoreFree", "\u6b63\u5e38\u51fa\u734e(\u9810\u8a2d)"], a.m_RobinHoodList = ["normal", "NO WIN", "WIN SMALL", "WIN X10~X20", "WIN X20~X50", "WIN X50~X100", "\u9ec3\u91d1\u7bad", "FREE GAME", "FREE GAME-LINE WIN", "\u6389\u843d + LINE WIN", "\u6389\u843d + \u9ec3\u91d1\u7bad", "\u6389\u843d + FREE GAME", "\u780d\u724c\u7528", "ENDING_LineWin", "FREE_WILD_LV3"], a.m_FaFaFaList = ["NoWin", "YouWin_1", "YouWin_2", "BigWin", "FreeSpins_1x10", "FreeSpins_2x10", "FreeSpinsx20", "FreeSpinsx50", "Featurex2", "Featurex3", "Featurex4", "AllSame_WildGold_1", "AllSame_WildGold_2", "AllSame_Cai_1", "AllSame_Cai_2", "AllSame_Fu_1", "AllSame_Fu_2", "AllSame_Boy_1", "AllSame_Boy_2", "AllSame_Girl_1", "AllSame_Girl_2", "AllSame_Drum_1", "AllSame_Drum_2", "AllSame_Jade_1", "AllSame_Jade_2", "AllSame_Firecracker_1", "AllSame_Firecracker_2", "AllSame_Coins_1", "AllSame_Coins_2", "Caix5", "Fux5", "Boyx5", "Girlx5", "Drumx5", "Jadex5", "Firecrackerx5", "Coinsx5", "Fux3", "Jadex4", "Drumx4_Caix3", "??", "Free * Free"], a.m_MexBingoList = ["NO Cheat", "NO Win", "Kill Win", "Small Win", "Win X10_X20", "Win X20_X50", "Win X50_X100", "Bonus Game", "2 Bonus Game", "Extra Game", "Extra Game Win", "Extra Game No Win", "Extra Game No Bonus"], a.m_AtlantisModernList = ["NO Cheat", "NO_WIN", "WIN_SMALL", "WIN_1-9", "WIN_10-20", "WIN_20-50", "WIN_50_UP", "FEATURE_GAME", "FEATURE_GAME_Get_BonusWin", "Green_Scatter_5", "Green_Scatter_6"], a.CaptainJackList = ["NO Cheat", "NO_WIN", "BIG_WIN_1", "BIG_WIN_2", "BONUS_1", "BONUS_2", "BONUS_3", "FREEGAME_05", "FREEGAME_10", "FREEGAME_15", "FREEGAME_20"], a.m_AtlantisAncientList = ["NoWin", "Under TotalBet * 1", "Under TotalBet * 10", "TotalBet 10~20", "TotalBet 20~50", "Up TotalBet 50", "FreeGame", "NoWin + OneFGSymbol", "MainGameWild+LineWin"], a.m_HappyHour = ["ASSIGN_BONUS", "ASSIGN_JP1", "ASSIGN_JP2", "ASSIGN_JP3", "ASSIGN_FEATURE1", "ASSIGN_FEATURE2", "ASSIGN_SUPER", "ASSIGN_SYM01", "ASSIGN_SYM02", "ASSIGN_SYM03", "ASSIGN_SYM04", "ASSIGN_SYM05", "ASSIGN_SYM06", "ASSIGN_SYM07", "ASSIGN_SYM08", "LINEWIN_JP", "LINEWIN_FEA1", "LINEWIN_FEA2", "LINEWIN_JP_FEA1", "LINEWIN_JP_FEA2", "LINEWIN_FEA_1_2", "LINEWIN_JP_FEA_1_2"], a.m_EgyptianGold = ["normal", "no win", "LineWin", "LineWin * 2", "YouWin", "BigWin", "MegaWin", "freeGame", "freeGame + LineWin", "freeGame Trigger", "freeGame Symbol Show"], a.m_SuperKeno = ["Hit 0", "Hit 1", "Hit 2", "Hit 3", "Hit 4", "Hit 5", "Hit 6", "Hit 7", "Hit 8", "Hit 9", "Hit 10", "Random", "Force Lucky Ball"], a.m_JPKeno = ["Hit 0", "Hit 1", "Hit 2", "Hit 3", "Hit 4", "Hit 5", "Hit 6", "Hit 7", "Hit 8", "Hit 9", "Hit 10", "Random", "Force Lucky Ball"], a.m_SalsaBingoList = ["Random", "no win", "Win1x-", "Win Type1", "Win Type2", "Win Type3", "Win Type4", "Win Type5", "Win Type6", "Win Type7", "Win Type8", "Win Type9", "Win Type10", "Win Type11", "Win Type12", "Win TypeB", "Win TypeO", "Win TypeN", "Win TypeU", "Win TypeS", "ExtraGame", "ExtraGame Win", "ExtraGame NoWin", "ExtraGame TypeB", "ExtraGame TypeO", "ExtraGame TypeN", "ExtraGame TypeU", "ExtraGame TypeS", "WinType TwoWord"], a.m_SmallMarioList = ["Cheat Non", "\u5927 BAR", "\u5927 7", "\u5927 \u661f\u661f", "\u5927 \u897f\u74dc", "\u5927 \u9234\u943a", "\u5927 \u6ab8\u6aac", "\u5927 \u6a58\u5b50", "\u5927 \u860b\u679c", "\u5c0f BAR", "\u5c0f 7", "\u5c0f \u661f\u661f", "\u5c0f \u897f\u74dc", "\u5c0f \u9234\u943a", "\u5c0f \u6ab8\u6aac", "\u5c0f \u6a58\u5b50", "\u5c0f \u860b\u679c", "\u89f8\u767c\u96a8\u6a5f\u9001\u71c8", "XXX", "XXX", "XXX", "XXX", "\u5927\u706b\u8eca", "XXX", "\u5927\u98db\u789f", "XXX", "\u947d\u77f3JP", "XXX", "XXX", "DoubleGame \u8d0f", "DoubleGame \u8f38"], a.m_BuffaloList = ["Random", "NO WIN", "Win1x", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+", "Respin/FreeGame", "FullReSpin", "DoubleReSpin", "FreeGameNoCow", "PreWin"], a.m_SuperAgentList = ["NO", "NO_WIN", "BONUS1", "BONUS2", "JP1_3", "JP1_4", "JP1_5", "JP2_3", "JP2_4", "JP2_5", "JP3_3", "JP3_4", "JP3_5", "FREE", "SUPER", "PASS", "KNIFE", "TELESCOPE", "PHONE", "GUN", "CAR", "SUITCASE"], a.m_ChickenDinnerList = ["No Cheat", "No Win", "Win1x", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+", "Bonus Game", "Free Game", "Free Game Retrigger", "Free To Bonus", "Bonus To LV3", "Jackpot Diamond", "Jackpot Sapphire", "Jackpot Emerald", "No Cheat"], a.m_FortuneLanternList = ["no CheatKey", "NO WIN", "Win", "WIN_SMALL", "Win10-20x", "Win20-50x", "Win50-100x", "CHEAT_Wild", "FireWild", "FreeGame", "FreeGame_WIN", "FreeGame_FIRE", "FREEGAME_Wild", "FREEGAME_FIRE_SC", "FREEGAME_WILD_FIRE", "FREEGAME_WILD_LINE", "CHEATKEY_MAX"], a.m_PyramidAdvList = ["No Cheat", "No Win", "Win", "Win Small", "Win10-20x", "Win20-50x", "Win50x+", "All Open", "Jackpot 1", "Jackpot 2", "Jackpot 3", "Free Game"], a.m_CoalManList = ["DISABLE", "NO WIN", "TOTAL BET *1", "TOTAL BET *10", "TOTAL BET *10 ~ 20", "TOTAL BET *20 ~ 50", "TOTAL BET *50 ~", "FEATURE \u724c\u9762\u8b8a WILD", "FEATURE \u5927\u734e\u5ba3\u544a", "BONUS GAME", "BG_\u5fc5\u5b9a\u6536\u96c6\u5230\u85cd\u5bf6\u77f3", "POWER LINK", "PL_20\u9846\u4ee5\u4e0a", "PL_\u5168\u6eff", "PL_JP Diamond", "PL_JP Ruby", "PL_JP Gold", "PL_JP Slver", "PL_JP Diamondx2", "PL_JP Rubyx2", "PL_JP Goldx2", "PL_JP Slverx2", "PL_\u5bb9\u6613\u51fa\u73feJP"], a.m_WitchList = ["No Cheat", "NO WIN", "Win1x", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+", "\u8b8a\u724cScatter", "\u8b8a\u724c Power\u65b0\u706b\u7403", "\u8b8a\u724cPower \u5206\u6578\u8b8a\u5927", "\u8b8a\u724cPower \u65b0\u706b\u7403+\u5206\u6578\u8b8a\u5927", "Feature \u5927\u734e\u5ba3\u544a", "FreeGame", "PowerLink", "PowerLink 20up\uff0c\u958b\u6700\u5f8c\u4e00\u968e", "PowerLink \u8490\u96c6\u5168\u6eff", "PowerLink jp0", "PowerLink jp1", "PowerLink jp2", "PowerLink jp3", "PowerLink jp0 x2", "PowerLink jp1 x2", "PowerLink jp2 x2", "PowerLink jp3 x2", "PL_\u5bb9\u6613\u51fa\u73feJP"], a.m_Flaming777List = ["DISABLE", "NO_WIN", "KILL_WIN", "WIN_SMALL", "WIN_X10_X20", "WIN_X20_X50", "WIN_X50_X100", "\u706b\u7130 7 x 3", "\u4e00\u822c 7 x 3", "3 BAR x 3", "2 BAR x 3", "1 BAR x 3", "BLANK x 3", "\u4efb\u610f7 x 3", "\u4efb\u610fBAR x 3"], a.m_Flaming777DeluxeList = ["DISABLE", "NO_WIN", "KILL_WIN", "WIN_SMALL", "WIN_X10_X20", "WIN_X20_X50", "WIN_X50_X100", "\u706b\u7130 7 x 3", "\u4e00\u822c 7 x 3", "3 BAR x 3", "2 BAR x 3", "1 BAR x 3", "BLANK x 3", "\u4efb\u610f7 x 3", "\u4efb\u610fBAR x 3"], a.m_FuLuShouXiEX = ["Random", "NO WIN", "Win1x", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+", "BG_LISTEN", "BG", "BG_NOFEATURE", "BG_FEATURE", "BG_PLUSSPIN", "BG_GREENPLUSSPIN", "BG_JP", "BG_JP_FEATURE", "BG_LINEWIN", "BG_LINEWIN_FEATURE", "BG_LINEWIN_JP", "BG_LINEWIN_JP_FEATURE", "BG_FIRSTHAND_PLUSSPIN", "BG_JP_GREENPLUSSPIN", "Max"], a.m_crazyWheelList = ["No Cheat", "NO WIN", "Win1x", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+", "Bonus:Random", "Bonus:w5_Score", "Bonus:w5_Multiple", "Bonus:w5_JP", "Bonus:Exit", "Bonus:w3->w5", "Bonus:w4->w5"], a.m_LuckyIrish = ["Random", "NO WIN", "Win1x", "Win1-10x", "Win10-20x", "Win20-50x", "Win50x+", "\u8b8a\u724c\u9032\u5165MagicLink ", "MagicLink", "MagicLink_JP", "MagicLink_\u5168\u76e4", "FreeGmae", "FreeGame_MagicLink", "FreeGame_MagicLink_JP", "FreeGame_MagicLink_\u5168\u76e4", "FG_Retrigger+MagicLink", "Max"], a = n = i([s], a), o.CheatKeyData = a, cc._RF.pop()
    }, {}],
    CheatKeyManager: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "bf6bc1MLZBKHZBD7UQpMjFo", "CheatKeyManager");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CheatKeyManager = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_UIRoot = null, this.m_contentRoot = null, this.m_cheatMenu = null, this.m_cheatBtn = null, this.DelCheatKeyClick = null
            }
            _onLoad() {
                this.DelCheatKeyClick = new SS.Common.Delegate, 1 == SS.Common.GameEnvironment.ProjectSetting.IsUseCheatKey && cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.ToggleCheatkeyData, this)
            }
            SetCheatKey(e) {
                if (!e) return;
                this.m_UIRoot.active = !0, this.m_contentRoot.removeAllChildren();
                let t = e.length;
                for (let n = 0; n < t; n++) {
                    let t = cc.instantiate(this.m_cheatBtn);
                    var o = new cc.Component.EventHandler;
                    let i = t.getComponentInChildren(cc.Label);
                    t.setParent(this.m_contentRoot), i.string = e[n], o.target = this.node, o.component = "CheatKeyManager", o.handler = "OnClickCheatBtn", o.customEventData = n.toString(), t.getComponent(cc.Button).clickEvents.push(o)
                }
            }
            OnClickRedPoint() {
                console.log("[CheatKeyManager.OnClickRedPoint] click"), this.m_cheatMenu.active = !this.m_cheatMenu.activeInHierarchy
            }
            OnClickCheatBtn(e, t) {
                console.log("[CheatKeyManager.OnClickCheatBtn] ", e, t), this.m_cheatMenu.active = !1, this.DelCheatKeyClick.Notify(t)
            }
            ToggleCheatkeyData(e) {
                e.keyCode == cc.macro.KEY.f1 && (cc.debug.setDisplayStats(!this.m_UIRoot.active), this.m_UIRoot.active = !this.m_UIRoot.active)
            }
        };
        n([s(cc.Node)], r.prototype, "m_UIRoot", void 0), n([s(cc.Node)], r.prototype, "m_contentRoot", void 0), n([s(cc.Node)], r.prototype, "m_cheatMenu", void 0), n([s(cc.Prefab)], r.prototype, "m_cheatBtn", void 0), r = n([i], r), o.CheatKeyManager = r, cc._RF.pop()
    }, {}],
    ClickLogDef: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "b7a523TXMtC2aK+OvMfoZjW", "ClickLogDef"), Object.defineProperty(o, "__esModule", {
                value: !0
            }), o.ItemMissionClickLogID = void 0,
            function(e) {
                e[e.MINI_LAYOUT = 1] = "MINI_LAYOUT", e[e.MAX_LAYOUT = 2] = "MAX_LAYOUT", e[e.NEXT_PAGE = 3] = "NEXT_PAGE", e[e.PRE_PAGE = 4] = "PRE_PAGE", e[e.SWITCH_LAYOUT_HORIZONTAL = 5] = "SWITCH_LAYOUT_HORIZONTAL", e[e.SWITCH_LAYOUT_STRAIGHT = 6] = "SWITCH_LAYOUT_STRAIGHT", e[e.SHOW_INFO = 7] = "SHOW_INFO"
            }(o.ItemMissionClickLogID || (o.ItemMissionClickLogID = {})), cc._RF.pop()
    }, {}],
    ClickLogEnum: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "e7c5arIuZZC47DX04z71LtN", "ClickLogEnum"), Object.defineProperty(o, "__esModule", {
                value: !0
            }), o.LogEvent_Mail = o.LogEvent_EmailBonus = o.LogEvent_ReferralBonus = o.LogEvent_LuckyShop = o.LogEvent_PopUpSource = o.LogEvent_LuckyScratch = o.LogEvent_InGame = o.LogType_PlayerAction = o.LogEvent_LeaveGameProcess = o.LogEvent_EnterGameProcess = o.LogEvent_EntryPoint = o.LogEvent_Login = o.LogType_PlayerStatus = o.LogType_PlayerConversion = o.LogEvent_SessionEvent = o.LogEvent_Click = o.LogType_ClickEvent = o.LogEvent_GameCloseTip = o.LogEvent_OpenOthersPanel = o.LogEvent_ShowRule = o.LogEvent_Button = o.LogEvent_Avatar = o.LogEvent_Nickname = o.LogEvent_OpenPanel = o.LogEvent_Guide = o.LogEvent_Lobby = o.LogType_Profile = o.LogName = void 0,
            function(e) {
                e.Profile = "Profile", e.ClickEvent = "ClickEvent", e.PlayerConversion = "PlayerConversion", e.PlayerAction = "PlayerAction", e.PopUp = "PopUp", e.PlayerStatus = "PlayerStatus"
            }(o.LogName || (o.LogName = {})),
            function(e) {
                e[e.Lobby = 1] = "Lobby", e[e.Guide = 2] = "Guide", e[e.OpenPanel = 3] = "OpenPanel", e[e.Nickname = 4] = "Nickname", e[e.Avatar = 5] = "Avatar", e[e.Button = 6] = "Button", e[e.ShowRule = 7] = "ShowRule", e[e.OpenOthersPanel = 8] = "OpenOthersPanel", e[e.GameCloseTip = 9] = "GameCloseTip", e[e.DailyBonus = 10] = "DailyBonus"
            }(o.LogType_Profile || (o.LogType_Profile = {})),
            function(e) {
                e[e.Enter = 1] = "Enter"
            }(o.LogEvent_Lobby || (o.LogEvent_Lobby = {})),
            function(e) {
                e[e.showHandTips = 1] = "showHandTips", e[e.Next1 = 4] = "Next1", e[e.Next2 = 5] = "Next2", e[e.Next3 = 6] = "Next3", e[e.Next4 = 7] = "Next4", e[e.Next5 = 8] = "Next5", e[e.Next6 = 9] = "Next6", e[e.Next7 = 10] = "Next7", e[e.Next8 = 11] = "Next8", e[e.Next9 = 12] = "Next9", e[e.Next10 = 13] = "Next10", e[e.Next11 = 14] = "Next11", e[e.Next12 = 15] = "Next12", e[e.Next13 = 16] = "Next13"
            }(o.LogEvent_Guide || (o.LogEvent_Guide = {})),
            function(e) {
                e[e.InLobby = 1] = "InLobby", e[e.InSlot = 2] = "InSlot", e[e.InKeno = 3] = "InKeno", e[e.InLobbyBattleShipIcon = 4] = "InLobbyBattleShipIcon", e[e.InFishBattleShipInfo = 5] = "InFishBattleShipInfo", e[e.InFishBattleShip = 6] = "InFishBattleShip", e[e.InFishBattleShipPanelInfo = 7] = "InFishBattleShipPanelInfo", e[e.InFishBattleShipPanelSingle = 8] = "InFishBattleShipPanelSingle", e[e.InFish = 9] = "InFish", e[e.InBattleShipBeenOccupy = 10] = "InBattleShipBeenOccupy", e[e.InAvatarNotice = 11] = "InAvatarNotice", e[e.InRewardNotice = 12] = "InRewardNotice", e[e.InBroadcast = 13] = "InBroadcast", e[e.InBanner = 14] = "InBanner", e[e.InPopup = 15] = "InPopup", e[e.InRankBonus = 16] = "InRankBonus", e[e.InFishRankBonus = 17] = "InFishRankBonus", e[e.InPuzzleEgg = 18] = "InPuzzleEgg", e[e.InRankBonusAward = 19] = "InRankBonusAward", e[e.InFishRankBonusAward = 20] = "InFishRankBonusAward", e[e.InRankBonus_1stPlace = 21] = "InRankBonus_1stPlace", e[e.InRankBonus_2ndPlace = 22] = "InRankBonus_2ndPlace", e[e.InRankBonus_3rdPlace = 23] = "InRankBonus_3rdPlace", e[e.InRankBonus_OutsideTop3 = 24] = "InRankBonus_OutsideTop3", e[e.InFishRankBonus_1stPlace = 25] = "InFishRankBonus_1stPlace", e[e.InFishRankBonus_2ndPlace = 26] = "InFishRankBonus_2ndPlace", e[e.InFishRankBonus_3rdPlace = 27] = "InFishRankBonus_3rdPlace", e[e.InFishRankBonus_OutsideTop3 = 28] = "InFishRankBonus_OutsideTop3", e[e.InPuzzleEgg_1stPlace = 29] = "InPuzzleEgg_1stPlace", e[e.InPuzzleEgg_2ndPlace = 30] = "InPuzzleEgg_2ndPlace", e[e.InPuzzleEgg_3rdPlace = 31] = "InPuzzleEgg_3rdPlace", e[e.InPuzzleEgg_OutsideTop3 = 32] = "InPuzzleEgg_OutsideTop3", e[e.InRankBonusAward_1stPlace = 33] = "InRankBonusAward_1stPlace", e[e.InRankBonusAward_2ndPlace = 34] = "InRankBonusAward_2ndPlace", e[e.InRankBonusAward_3rdPlace = 35] = "InRankBonusAward_3rdPlace", e[e.InRankBonusAward_OutsideTop3 = 36] = "InRankBonusAward_OutsideTop3", e[e.InFishRankBonusAward_1stPlace = 37] = "InFishRankBonusAward_1stPlace", e[e.InFishRankBonusAward_2ndPlace = 38] = "InFishRankBonusAward_2ndPlace", e[e.InFishRankBonusAward_3rdPlace = 39] = "InFishRankBonusAward_3rdPlace", e[e.InFishRankBonusAward_OutsideTop3 = 40] = "InFishRankBonusAward_OutsideTop3"
            }(o.LogEvent_OpenPanel || (o.LogEvent_OpenPanel = {})),
            function(e) {
                e[e.ChangeDone = 1] = "ChangeDone", e[e.Failed_SpecialSymbol = 2] = "Failed_SpecialSymbol", e[e.Failed_PrefixM = 3] = "Failed_PrefixM", e[e.Failed_BannedWords = 4] = "Failed_BannedWords", e[e.Failed_TooLong = 5] = "Failed_TooLong", e[e.Failed_TooShort = 6] = "Failed_TooShort", e[e.Failed_Duplicate = 7] = "Failed_Duplicate"
            }(o.LogEvent_Nickname || (o.LogEvent_Nickname = {})),
            function(e) {
                e[e.ChangeDone = 1] = "ChangeDone"
            }(o.LogEvent_Avatar || (o.LogEvent_Avatar = {})),
            function(e) {
                e[e.HotGame = 1] = "HotGame", e[e.TotalWin = 2] = "TotalWin", e[e.MaxJP = 3] = "MaxJP", e[e.MultiSlot = 4] = "MultiSlot", e[e.MultiFish = 5] = "MultiFish", e[e.TotalWin_Value = 6] = "TotalWin_Value", e[e.MaxJP_Value = 7] = "MaxJP_Value", e[e.MultiSlot_Value = 8] = "MultiSlot_Value", e[e.MultiFish_Value = 9] = "MultiFish_Value", e[e.Avatar = 10] = "Avatar", e[e.Guide = 11] = "Guide"
            }(o.LogEvent_Button || (o.LogEvent_Button = {})), o.LogEvent_ShowRule || (o.LogEvent_ShowRule = {}),
            function(e) {
                e[e.InLobbyBattleShipIcon = 1] = "InLobbyBattleShipIcon", e[e.InFishBattleShipInfo = 2] = "InFishBattleShipInfo", e[e.InFishBattleShip = 3] = "InFishBattleShip", e[e.InFishBattleShipPanelInfo = 4] = "InFishBattleShipPanelInfo", e[e.InFishBattleShipPanelSingle = 5] = "InFishBattleShipPanelSingle", e[e.InFish = 6] = "InFish", e[e.InBroadcast_MaxJP = 7] = "InBroadcast_MaxJP", e[e.InBroadcast_MultiSlot = 8] = "InBroadcast_MultiSlot", e[e.InBroadcast_MultiFish = 9] = "InBroadcast_MultiFish", e[e.InProfileNo1_TotalWin = 10] = "InProfileNo1_TotalWin", e[e.InProfileNo1_MaxJP = 11] = "InProfileNo1_MaxJP", e[e.InProfileNo1_MultiSlot = 12] = "InProfileNo1_MultiSlot", e[e.InProfileNo1_MultiFish = 13] = "InProfileNo1_MultiFish", e[e.InRankBonus_1stPlace = 14] = "InRankBonus_1stPlace", e[e.InRankBonus_2ndPlace = 15] = "InRankBonus_2ndPlace", e[e.InRankBonus_3rdPlace = 16] = "InRankBonus_3rdPlace", e[e.InRankBonus_OutsideTop3 = 17] = "InRankBonus_OutsideTop3", e[e.InFishRankBonus_1stPlace = 18] = "InFishRankBonus_1stPlace", e[e.InFishRankBonus_2ndPlace = 19] = "InFishRankBonus_2ndPlace", e[e.InFishRankBonus_3rdPlace = 20] = "InFishRankBonus_3rdPlace", e[e.InFishRankBonus_OutsideTop3 = 21] = "InFishRankBonus_OutsideTop3", e[e.InPuzzleEgg_1stPlace = 22] = "InPuzzleEgg_1stPlace", e[e.InPuzzleEgg_2ndPlace = 23] = "InPuzzleEgg_2ndPlace", e[e.InPuzzleEgg_3rdPlace = 24] = "InPuzzleEgg_3rdPlace", e[e.InPuzzleEgg_OutsideTop3 = 25] = "InPuzzleEgg_OutsideTop3", e[e.InRankBonusAward_1stPlace = 26] = "InRankBonusAward_1stPlace", e[e.InRankBonusAward_2ndPlace = 27] = "InRankBonusAward_2ndPlace", e[e.InRankBonusAward_3rdPlace = 28] = "InRankBonusAward_3rdPlace", e[e.InRankBonusAward_OutsideTop3 = 29] = "InRankBonusAward_OutsideTop3", e[e.InFishRankBonusAward_1stPlace = 30] = "InFishRankBonusAward_1stPlace", e[e.InFishRankBonusAward_2ndPlace = 31] = "InFishRankBonusAward_2ndPlace", e[e.InFishRankBonusAward_3rdPlace = 32] = "InFishRankBonusAward_3rdPlace", e[e.InFishRankBonusAward_OutsideTop3 = 33] = "InFishRankBonusAward_OutsideTop3"
            }(o.LogEvent_OpenOthersPanel || (o.LogEvent_OpenOthersPanel = {})),
            function(e) {
                e[e.FishLuckyShamrockGoMCPre_Ok = 1] = "FishLuckyShamrockGoMCPre_Ok", e[e.FishLuckyShamrockGoMCPre_Close = 2] = "FishLuckyShamrockGoMCPre_Close", e[e.FishLuckyShamrockGoMC_Ok = 3] = "FishLuckyShamrockGoMC_Ok", e[e.FishLuckyShamrockGoMC_Go = 4] = "FishLuckyShamrockGoMC_Go"
            }(o.LogEvent_GameCloseTip || (o.LogEvent_GameCloseTip = {})),
            function(e) {
                e[e.MCEntry = 1] = "MCEntry", e[e.SessionEvent = 2] = "SessionEvent"
            }(o.LogType_ClickEvent || (o.LogType_ClickEvent = {})),
            function(e) {
                e[e.MC_Icon = 1] = "MC_Icon", e[e.MC_Banner = 2] = "MC_Banner"
            }(o.LogEvent_Click || (o.LogEvent_Click = {})),
            function(e) {
                e[e.DailyBonus_Icon = 1] = "DailyBonus_Icon", e[e.DailyBonus_Banner = 2] = "DailyBonus_Banner", e[e.DailyBonus_Popup = 3] = "DailyBonus_Popup"
            }(o.LogEvent_SessionEvent || (o.LogEvent_SessionEvent = {})),
            function(e) {
                e[e.PlayerLogin = 0] = "PlayerLogin", e[e.GameEntryPoint = 1] = "GameEntryPoint", e[e.GameLoading = 2] = "GameLoading"
            }(o.LogType_PlayerConversion || (o.LogType_PlayerConversion = {})),
            function(e) {
                e[e.FPS = 0] = "FPS", e[e.Ping_Http = 1] = "Ping_Http", e[e.Ping_Socket = 2] = "Ping_Socket"
            }(o.LogType_PlayerStatus || (o.LogType_PlayerStatus = {})),
            function(e) {
                e[e.WaitCheckVersionState = 0] = "WaitCheckVersionState", e[e.WaitSettingState = 1] = "WaitSettingState", e[e.WaitInitAckState = 2] = "WaitInitAckState", e[e.WaitResDownload = 3] = "WaitResDownload", e[e.WaitIconDownload = 4] = "WaitIconDownload", e[e.IdleState = 5] = "IdleState", e[e.ShowBulletinBoard = 6] = "ShowBulletinBoard", e[e.BulletinBoardLoadingFinish = 7] = "BulletinBoardLoadingFinish", e[e.LeaveBulletinBoard = 8] = "LeaveBulletinBoard", e[e.IdleStateTxCustom = 9] = "IdleStateTxCustom"
            }(o.LogEvent_Login || (o.LogEvent_Login = {})),
            function(e) {
                e[e.BulletinBoard = 0] = "BulletinBoard", e[e.Popup = 1] = "Popup", e[e.Banner = 2] = "Banner", e[e.Icon = 3] = "Icon", e[e.Event = 4] = "Event", e[e.Profile = 5] = "Profile", e[e.OtherGame = 6] = "OtherGame", e[e.LuckyShop = 7] = "LuckyShop"
            }(o.LogEvent_EntryPoint || (o.LogEvent_EntryPoint = {})),
            function(e) {
                e[e.StaticLoading = 0] = "StaticLoading", e[e.DynamicLoading = 1] = "DynamicLoading", e[e.InGame = 2] = "InGame"
            }(o.LogEvent_EnterGameProcess || (o.LogEvent_EnterGameProcess = {})),
            function(e) {
                e[e.BackToLobby = 3] = "BackToLobby", e[e.StaticLoading = 4] = "StaticLoading", e[e.DynamicLoading = 5] = "DynamicLoading", e[e.EnterLobby = 6] = "EnterLobby"
            }(o.LogEvent_LeaveGameProcess || (o.LogEvent_LeaveGameProcess = {})),
            function(e) {
                e[e.InGame = 0] = "InGame", e[e.LuckyScratch = 5] = "LuckyScratch", e[e.LuckyShop = 7] = "LuckyShop", e[e.ReferralBonus = 8] = "ReferralBonus", e[e.EmailBonus = 9] = "EmailBonus", e[e.Mail = 10] = "Mail"
            }(o.LogType_PlayerAction || (o.LogType_PlayerAction = {})),
            function(e) {
                e[e.Spin = 0] = "Spin", e[e.ChangeBet = 1] = "ChangeBet", e[e.ClickInfo = 2] = "ClickInfo", e[e.ClickPreview = 3] = "ClickPreview", e[e.ShowPreview = 4] = "ShowPreview", e[e.PlayPreview = 5] = "PlayPreview", e[e.ClosePreview = 6] = "ClosePreview"
            }(o.LogEvent_InGame || (o.LogEvent_InGame = {})),
            function(e) {
                e[e.Icon = 0] = "Icon", e[e.Copy = 1] = "Copy", e[e.Popup = 2] = "Popup", e[e.Banner = 3] = "Banner"
            }(o.LogEvent_LuckyScratch || (o.LogEvent_LuckyScratch = {})),
            function(e) {
                e[e.GD_EnterLobby = 0] = "GD_EnterLobby", e[e.GD_Bullettin = 1] = "GD_Bullettin", e[e.MC_EnterLobby = 2] = "MC_EnterLobby", e[e.MC_Books = 3] = "MC_Books", e[e.MC_Event = 4] = "MC_Event"
            }(o.LogEvent_PopUpSource || (o.LogEvent_PopUpSource = {})),
            function(e) {
                e[e.Icon = 0] = "Icon", e[e.IconInGame = 1] = "IconInGame", e[e.ToGameStep1 = 2] = "ToGameStep1", e[e.ToGameStep2 = 3] = "ToGameStep2", e[e.ToGameStep3 = 4] = "ToGameStep3", e[e.RewardCopy = 5] = "RewardCopy", e[e.HistoryCopy = 6] = "HistoryCopy", e[e.Popup = 7] = "Popup", e[e.Banner = 8] = "Banner"
            }(o.LogEvent_LuckyShop || (o.LogEvent_LuckyShop = {})),
            function(e) {
                e[e.Icon = 0] = "Icon", e[e.Popup = 1] = "Popup", e[e.Banner = 2] = "Banner"
            }(o.LogEvent_ReferralBonus || (o.LogEvent_ReferralBonus = {})),
            function(e) {
                e[e.Icon = 0] = "Icon", e[e.ProfileIcon = 1] = "ProfileIcon", e[e.DontShowAgain = 2] = "DontShowAgain", e[e.Popup = 3] = "Popup", e[e.Banner = 4] = "Banner"
            }(o.LogEvent_EmailBonus || (o.LogEvent_EmailBonus = {})),
            function(e) {
                e[e.Icon = 0] = "Icon", e[e.ReadMail = 1] = "ReadMail"
            }(o.LogEvent_Mail || (o.LogEvent_Mail = {})), cc._RF.pop()
    }, {}],
    ClickLog: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "11c52IV1nBIMppeu3ZDuTIM", "ClickLog");
        var n = this && this.__awaiter || function(e, t, o, n) {
            return new(o || (o = Promise))(function(i, s) {
                function r(e) {
                    try {
                        l(n.next(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function a(e) {
                    try {
                        l(n.throw(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                        e(t)
                    })).then(r, a)
                }
                l((n = n.apply(e, t || [])).next())
            })
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ClickLog = void 0;
        const i = e("./ClickLogEnum"),
            s = e("./LobbyClient");
        class r {
            static getCookie(e) {
                return JSUtility.IsSupportLocalStorage() ? localStorage.getItem(e) : JSUtility.IsSupportCookie() ? JSUtility.GetCookie(e) : void 0
            }
            static setCookie(e, t) {
                JSUtility.IsSupportLocalStorage() ? localStorage.setItem(e, t) : JSUtility.IsSupportCookie() && (document.cookie = e + "=" + t + ";")
            }
            static recordClickLog(e, t, o, n) {
                console.warn("%c[recordClickLog] logName = " + e + ", type = " + o + ", subType = " + n, "font-size:16px;color:#3333bb;font-weight:bold;"), this.intervalSendLog(), this.m_logMap.has(e) || this.m_logMap.set(e, []);
                let i = this.m_logMap.get(e),
                    s = SS.Common.GameEnvironment.GetGameIdByName(SS.Common.GameEnvironment.CurrentGameNow),
                    r = !0;
                for (let a = 0; a < i.length; a++) {
                    let e = i[a];
                    if (e.GameID == s && e.SceneID == t && e.Type == o && e.SubType == n) {
                        r = !1, e.Count += 1;
                        break
                    }
                }
                if (r) {
                    let r = {
                        KioskID: SS.Network.LoginModel.LoginInfo.kiosk_id,
                        PinID: SS.Network.LoginModel.LoginInfo.pin_id,
                        GameID: s,
                        SceneID: t,
                        Type: o,
                        SubType: n,
                        Count: 1,
                        Name: e
                    };
                    i.push(r)
                }
                cc.log("ClickLog.recordClickLog  before set cookie", i), this.setCookie(e, JSON.stringify(i))
            }
            static recordClickLogNewVersion(e, t) {
                console.log("%c[recordClickLog] logName = " + e, "font-size:16px;color:#3333bb;font-weight:bold; data = ", t), this.intervalSendLog(), this.m_logMap.has(e) || this.m_logMap.set(e, []);
                let o = this.m_logMap.get(e),
                    n = SS.Common.GameEnvironment.GetGameIdByName(SS.Common.GameEnvironment.CurrentGameNow),
                    i = !0;
                for (let s = 0; s < o.length; s++) {
                    let e = o[s];
                    if (e.GameID == t.GameID && e.SceneID == t.SceneID && e.Type == t.Type && e.SubType == t.SubType && e.TempStr1 == t.TempStr1 && e.TempStr2 == t.TempStr2 && e.TempStr3 == t.TempStr3 && e.TempStr4 == t.TempStr4 && e.TempStr5 == t.TempStr5 && e.TempInt1 == t.TempInt1 && e.TempInt2 == t.TempInt2 && e.TempInt3 == t.TempInt3 && e.TempInt4 == t.TempInt4 && e.TempInt5 == t.TempInt5) {
                        i = !1, e.Count += 1;
                        break
                    }
                }
                i && (t.KioskID = SS.Network.LoginModel.LoginInfo.kiosk_id, t.PinID = SS.Network.LoginModel.LoginInfo.pin_id, t.GameID = n, t.Count = 1, t.Name = e, o.push(t)), cc.log("ClickLog.recordClickLog  before set cookie", o), this.setCookie(e, JSON.stringify(o))
            }
            static recordMainPlayerLog(e, t) {
                this.intervalSendLog(), this.m_logMap.has(e) || this.m_logMap.set(e, []);
                let o = this.m_logMap.get(e),
                    n = SS.Common.GameEnvironment.GetGameIdByName(SS.Common.GameEnvironment.CurrentGameNow);
                t.KioskID = SS.Network.LoginModel.LoginInfo.kiosk_id, t.PinID = SS.Network.LoginModel.LoginInfo.pin_id, t.GameID = n, o.push(t), this.setCookie(e, JSON.stringify(o))
            }
            static DataComplement(e) {
                r.NullCheck(e, "SceneID", -1), r.NullCheck(e, "Type", -1), r.NullCheck(e, "SubType", -1), r.NullCheck(e, "TempStr1", ""), r.NullCheck(e, "TempStr2", ""), r.NullCheck(e, "TempStr3", ""), r.NullCheck(e, "TempStr4", ""), r.NullCheck(e, "TempStr5", ""), r.NullCheck(e, "TempInt1", -1), r.NullCheck(e, "TempInt2", -1), r.NullCheck(e, "TempInt3", -1), r.NullCheck(e, "TempInt4", -1), r.NullCheck(e, "TempInt5", -1)
            }
            static NullCheck(e, t, o = null) {
                return (void 0 === e[t] || null === e[t]) && (e[t] = o, !0)
            }
            static intervalSendLog() {
                return n(this, void 0, void 0, function*() {
                    null == r.m_intervalSendLog && (r.m_intervalSendLog = setInterval(() => r.m_logMap.forEach(r.checkByKey), 3e4))
                })
            }
            static CheckDoLogoutSendFinished() {
                return n(this, void 0, void 0, function*() {
                    let e = 0;
                    for (; 0 == r.IsDoLogoutSendFinished && e < 10;) yield SS.Common.WaitForSeconds(.5), e++
                })
            }
            static SendLogWhenDoLogout() {
                return n(this, void 0, void 0, function*() {
                    r.IsDoLogoutSendFinished = !1, console.log("ClickLog.SendLogWhenDoLogout ", r.m_logMap), r.m_logMap.forEach(r.checkByKey), clearInterval(r.m_intervalSendLog), r.m_intervalSendLog = null, yield this.CheckDoLogoutSendFinished()
                })
            }
            static checkByKey(e, t, o) {
                r.checkSettingThenSendLog(t)
            }
            static readCookieAndSendLog(e) {
                let t;
                console.log("ClickLog.readCookieAndSendLog");
                let o = this.getCookie(e);
                if (console.log(o), null != o && "" != o) {
                    t = [];
                    var n = JSON.parse(o);
                    for (var i in n) t.push(n[i]);
                    console.log(t), this.m_logMap.set(e, t), this.checkSettingThenSendLog(e)
                }
            }
            static SendRecordedList(e) {
                return n(this, void 0, void 0, function*() {
                    for (r.SendFinished = !1, r.checkSettingThenSendLog(e); !r.SendFinished;) yield SS.Common.WaitForSeconds(.5)
                })
            }
            static checkSettingThenSendLog(e) {
                console.log("ClickLog.checkSettingThenSendLog");
                let t = SS.Common.GameEnvironment.ProjectSetting.Modules.Log.ServerHOST;
                t = window.location.protocol + "//" + t, console.log(t);
                let o = new ArkSDK.ArkClient(t);
                o.clone(s.LobbyClient.Instance.GetUserClient.GetPinClient), o.send_cmd("log", "GetSetting", null, r.sendLog.bind(r, e), null)
            }
            static sendLog(e, t, o) {
                if (console.log("ClickLog.sendLog (" + e), console.log(t), console.log(o), r.SendFinished = !0, r.IsDoLogoutSendFinished = !0, t == ArkSDK.HttpResult.OK && o && o.cmd_data && 1 == o.cmd_data.enable && (null == o.cmd_data.setting_list[e] || 1 == o.cmd_data.setting_list[e])) {
                    this.setCookie(e, "");
                    let t = SS.Common.GameEnvironment.ProjectSetting.Modules.Log.ServerHOST;
                    t = window.location.protocol + "//" + t, console.log(t);
                    let o = new ArkSDK.ArkClient(t);
                    o.clone(s.LobbyClient.Instance.GetUserClient.GetPinClient);
                    let n = {};
                    "FishSessionLog" == e ? (n.SessionList = this.m_logMap.get(e), o.send_cmd("log", "SendClientClickLog", n, null, null)) : (console.log("sendClickLog", n), n.ClickList = this.m_logMap.get(e), o.send_cmd("log", "SendClientClickLog", n, null, null)), this.m_logMap.set(e, [])
                }
            }
            static directlySendLog(e) {
                console.log("ClickLog.directlysendLog"), console.log(e);
                let t = SS.Common.GameEnvironment.ProjectSetting.Modules.Log.ServerHOST;
                t = window.location.protocol + "//" + t, console.log(t);
                let o = new ArkSDK.ArkClient(t);
                o.clone(s.LobbyClient.Instance.GetUserClient.GetPinClient);
                let n = {
                    ClickList: []
                };
                n.ClickList[0] = e, console.warn("directlysendLog"), console.warn(n), o.send_cmd("log", "SendClientClickLog", n, null, null)
            }
            static DirectSend(e, t, o, n = (SS.Common.GameEnvironment.CurrentGameNow ? SS.Common.GameEnvironment.GetGameIdByName(SS.Common.GameEnvironment.CurrentGameNow) : "Lobby"), i = null) {
                console.log("ClickLog DirectSend");
                let s = {
                    KioskID: SS.Network.LoginModel.LoginInfo.kiosk_id,
                    PinID: SS.Network.LoginModel.LoginInfo.pin_id,
                    GameID: n,
                    Type: t,
                    SubType: o,
                    Count: 1,
                    Name: e
                };
                i && (s.ExtraData = JSON.parse("{}"), Object.keys(i).forEach(e => {
                    s.ExtraData[e] = i[e]
                })), this.directlySendLog(s)
            }
            static SendLog(e, t, o, n = SS.Common.GameEnvironment.CurrentGameNow, i = null) {
                n = SS.Common.GameEnvironment.CurrentGameNow ? SS.Common.GameEnvironment.GetGameIdByName(SS.Common.GameEnvironment.CurrentGameNow) : "Lobby";
                let s = {
                    KioskID: SS.Network.LoginModel.LoginInfo.kiosk_id,
                    PinID: SS.Network.LoginModel.LoginInfo.pin_id,
                    GameID: n,
                    Type: t,
                    SubType: o,
                    Count: 1,
                    Name: e
                };
                i && (s.ExtraData = JSON.parse("{}"), Object.keys(i).forEach(e => {
                    s.ExtraData[e] = i[e]
                }));
                const r = this.getCookie("ClickLog");
                let a = JSON.parse(r);
                a || (a = []);
                const l = ["KioskID", "PinID", "GameID", "Type", "SubType", "Name"];
                let c = !1;
                a.forEach(e => {
                    let t = !0;
                    l.forEach(o => {
                        e[o] !== s[o] && (t = !1)
                    });
                    const o = e.ExtraData;
                    o && i && Object.keys(o).forEach(e => {
                        o[e] !== i[e] && (t = !1)
                    }), t && (c = !0, e.Count++)
                }), c || a.push(s), this.setCookie("ClickLog", JSON.stringify(a)), this.Send()
            }
            static Send() {
                this.logTimeout || (this.logTimeout = setTimeout(this.ClearLogList.bind(this), 6e4))
            }
            static ClearLogList() {
                let e = SS.Common.GameEnvironment.ProjectSetting.Modules.Log.ServerHOST;
                e = window.location.protocol + "//" + e;
                let t = new ArkSDK.ArkClient(e);
                t.clone(s.LobbyClient.Instance.GetUserClient.GetPinClient);
                const o = this.getCookie("ClickLog"),
                    n = JSON.parse(o);
                let i = {};
                i.ClickList = n, this.setCookie("ClickLog", "[]"), this.logTimeout = void 0, t.send_cmd("log", "SendClientClickLog", i)
            }
            static SendEntryPoint(e) {
                let t = SS.Common.GameEnvironment.GetGameIdByName(e),
                    o = {
                        KioskID: SS.Network.LoginModel.LoginInfo.kiosk_id,
                        PinID: SS.Network.LoginModel.LoginInfo.pin_id,
                        GameID: t || "Lobby",
                        Type: i.LogType_PlayerConversion.GameEntryPoint,
                        SubType: r.EntryPoint,
                        Count: 1,
                        Name: i.LogName.PlayerConversion
                    };
                r.EntryPoint = void 0, r.directlySendLog(o)
            }
            static set EntryPoint(e) {
                null == e ? r.setCookie("EntryPoint", "") : r.setCookie("EntryPoint", e.toString())
            }
            static get EntryPoint() {
                let e = r.getCookie("EntryPoint");
                return e ? Number(e) : i.LogEvent_EntryPoint.OtherGame
            }
            static set Scene(e) {
                r.setCookie("Scene", e)
            }
            static get Scene() {
                if (r.scene) return r.scene; {
                    let e = r.getCookie("Scene");
                    return r.scene = e, e
                }
            }
            static playerChooseSGLog(e, t, o, n, i) {
                console.log("ClickLog.playerChooseSGLog");
                let s = {
                    KioskID: SS.Network.LoginModel.LoginInfo.kiosk_id,
                    PinID: SS.Network.LoginModel.LoginInfo.pin_id,
                    GameID: SS.Common.GameEnvironment.GetGameIdByName(SS.Common.GameEnvironment.CurrentGameNow),
                    SceneID: t,
                    Type: o,
                    SubType: n,
                    Count: i,
                    Name: e
                };
                this.directlySendLog(s)
            }
        }
        o.ClickLog = r, r.m_logMap = new Map, r.m_intervalSendLog = null, r.m_bInit = !0, r.IsDoLogoutSendFinished = !0, r.SendFinished = !0, r.logTimeout = void 0, r.scene = "", cc._RF.pop()
    }, {
        "./ClickLogEnum": "ClickLogEnum",
        "./LobbyClient": "LobbyClient"
    }],
    CommBonusBtnCtrl_Rank: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "841b8n2S9NLrLNMVyrnv0Zk", "CommBonusBtnCtrl_Rank");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommBonusBtnCtrl_Rank = void 0;
        const i = e("../../../../Component/NodeDrag"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.root = null, this.m_nodeRedTag = null, this.m_labRedTag = null, this.m_nodeGreenTag = null, this.m_labGreenTag = null, this.m_nodeBtn = null, this.m_nodeFingerPtr = null, this.m_nodePrompt = null, this.m_labPrompt = null, this.m_nodeTimer = null, this.m_nodeDragFloatBtn = null, this.m_btn = null, this.autoClosePromptID = null
            }
            init(e) {
                this.setNumDot(), this.setPrompt(), this.show(!1), this.showFingerPtr(!1), this.m_btn = this.m_nodeDragFloatBtn.getComponent(cc.Button), this.m_nodeDragFloatBtn.Event_DragEnd = e.OnDragEnd.bind(e), this.m_nodeDragFloatBtn.Event_ClickItem = e.OnClickFloatBtn.bind(e)
            }
            setRedTag(e = 0) {
                let t = 0 != e;
                this.m_nodeRedTag.active = t, this.m_labRedTag.node.active = t, t && (this.m_labRedTag.string = "" + e)
            }
            setNumDot(e = 0, t = 0) {
                let o = 0 != e && t + e < 9;
                this.m_nodeRedTag.active = o, this.m_labRedTag.node.active = o;
                let n = t + e >= 9;
                this.m_nodeGreenTag.active = n, this.m_labGreenTag.node.active = n, o && (this.m_labRedTag.string = e.toString()), n && (this.m_labGreenTag.string = (t + e).toString(), this.m_nodeGreenTag.width = 50 + 18 * this.m_labGreenTag.string.length)
            }
            setPrompt(e = "") {
                if (null == this.m_nodePrompt) return;
                let t = "" != e;
                this.m_nodePrompt.active = t, t && (this.m_labPrompt.string = e, this.autoClosePromptID = setTimeout(() => {
                    this.setPrompt(), this.showFingerPtr(!1)
                }, 6e4))
            }
            showFingerPtr(e) {
                null != this.m_nodeFingerPtr && (this.m_nodeFingerPtr.active = e)
            }
            show(e) {
                null != this.m_nodeBtn && (this.m_nodeBtn.active = e, e || (this.setPrompt(), this.showFingerPtr(!1), clearTimeout(this.autoClosePromptID)))
            }
            setInteract(e) {
                null != this.m_btn && (this.m_btn.interactable = e)
            }
            setLocked(e) {
                this.m_nodeDragFloatBtn.setLocked(e)
            }
            move(e, t) {
                this.m_nodeDragFloatBtn.move(e, t)
            }
        };
        n([r(cc.Node)], a.prototype, "root", void 0), n([r(cc.Node)], a.prototype, "m_nodeRedTag", void 0), n([r(cc.Label)], a.prototype, "m_labRedTag", void 0), n([r(cc.Node)], a.prototype, "m_nodeGreenTag", void 0), n([r(cc.Label)], a.prototype, "m_labGreenTag", void 0), n([r(cc.Node)], a.prototype, "m_nodeBtn", void 0), n([r(cc.Node)], a.prototype, "m_nodeFingerPtr", void 0), n([r(cc.Node)], a.prototype, "m_nodePrompt", void 0), n([r(cc.Label)], a.prototype, "m_labPrompt", void 0), n([r(cc.Node)], a.prototype, "m_nodeTimer", void 0), n([r(i.NodeDrag)], a.prototype, "m_nodeDragFloatBtn", void 0), a = n([s], a), o.CommBonusBtnCtrl_Rank = a, cc._RF.pop()
    }, {
        "../../../../Component/NodeDrag": "NodeDrag"
    }],
    CommBonusBtnCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "34d93H3qAVDOK0qHRJBwbK2", "CommBonusBtnCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommBonusBtnCtrl = void 0;
        const i = e("../../../Component/NodeDrag"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.root = null, this.m_nodeRedTag = null, this.m_labRedTag = null, this.m_nodeBtn = null, this.m_nodeFingerPtr = null, this.m_nodePrompt = null, this.m_labPrompt = null, this.m_nodeTimer = null, this.m_nodeDragFloatBtn = null, this.m_btn = null, this.autoClosePromptID = null
            }
            init(e) {
                this.setRedTag(), this.setPrompt(), this.show(!1), this.showFingerPtr(!1), this.m_btn = this.m_nodeDragFloatBtn.getComponent(cc.Button), this.m_nodeDragFloatBtn.Event_DragEnd = e.OnDragEnd.bind(e), this.m_nodeDragFloatBtn.Event_ClickItem = e.OnClickFloatBtn.bind(e)
            }
            setRedTag(e = 0) {
                let t = 0 != e;
                this.m_nodeRedTag.active = t, this.m_labRedTag.node.active = t, t && (this.m_labRedTag.string = "" + e)
            }
            setPrompt(e = "") {
                if (null == this.m_nodePrompt) return;
                let t = "" != e;
                this.m_nodePrompt.active = t, t && (this.m_labPrompt.string = e, this.autoClosePromptID = setTimeout(() => {
                    this.setPrompt(), this.showFingerPtr(!1)
                }, 6e4))
            }
            showFingerPtr(e) {
                null != this.m_nodeFingerPtr && (this.m_nodeFingerPtr.active = e)
            }
            show(e) {
                null != this.m_nodeBtn && (this.m_nodeBtn.active = e, e || (this.setPrompt(), this.showFingerPtr(!1), clearTimeout(this.autoClosePromptID)))
            }
            setInteract(e) {
                null != this.m_btn && (this.m_btn.interactable = e)
            }
            setLocked(e) {
                this.m_nodeDragFloatBtn.setLocked(e)
            }
            move(e, t) {
                this.m_nodeDragFloatBtn.move(e, t)
            }
        };
        n([r(cc.Node)], a.prototype, "root", void 0), n([r(cc.Node)], a.prototype, "m_nodeRedTag", void 0), n([r(cc.Label)], a.prototype, "m_labRedTag", void 0), n([r(cc.Node)], a.prototype, "m_nodeBtn", void 0), n([r(cc.Node)], a.prototype, "m_nodeFingerPtr", void 0), n([r(cc.Node)], a.prototype, "m_nodePrompt", void 0), n([r(cc.Label)], a.prototype, "m_labPrompt", void 0), n([r(cc.Node)], a.prototype, "m_nodeTimer", void 0), n([r(i.NodeDrag)], a.prototype, "m_nodeDragFloatBtn", void 0), a = n([s], a), o.CommBonusBtnCtrl = a, cc._RF.pop()
    }, {
        "../../../Component/NodeDrag": "NodeDrag"
    }],
    CommBonusCoinCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "40a28IIGKJEpp9aFPiF9YR+", "CommBonusCoinCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommBonusCoinCtrl = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.goldCoin = null, this.coinCount = 0, this.m_nodeTaret = null
            }
            coinMoveToTarget(e, t, o = this.node) {
                if (null != this.m_nodeTaret) {
                    this.m_iFinishedCoid = 0;
                    for (let i = 0; i < this.coinCount; i++) {
                        var n = cc.instantiate(this.goldCoin);
                        n.parent = o.parent, n.setPosition(o.getPosition());
                        let s = cc.hide(),
                            r = cc.delayTime(.25 * i),
                            a = cc.show(),
                            l = cc.moveTo(.25, new cc.Vec2(o.getPosition().x + 200 * Math.random() - 100, o.getPosition().y + 100)),
                            c = cc.moveTo(.25, new cc.Vec2(o.getPosition().x + 200 * Math.random() - 100, o.getPosition().y + 0)),
                            h = cc.moveTo(.25, new cc.Vec2(o.getPosition().x + 200 * Math.random() - 100, o.getPosition().y + 100)),
                            m = cc.moveTo(e, new cc.Vec2(this.m_nodeTaret.getPosition().x, this.m_nodeTaret.getPosition().y)),
                            u = cc.removeSelf(),
                            d = cc.callFunc(() => {
                                this.m_iFinishedCoid++, this.m_iFinishedCoid >= this.coinCount && t && t()
                            }),
                            p = cc.sequence(s, r, a, l, c, h, m, u, d);
                        n.runAction(p)
                    }
                }
            }
        };
        n([s(cc.Prefab)], r.prototype, "goldCoin", void 0), n([s(cc.Integer)], r.prototype, "coinCount", void 0), n([s(cc.Node)], r.prototype, "m_nodeTaret", void 0), r = n([i], r), o.CommBonusCoinCtrl = r, cc._RF.pop()
    }, {}],
    CommBonusData: [function(e, t, o) {
        "use strict";
        var n;
        cc._RF.push(t, "eda81oCZPtGHbNrXfcU5kYl", "CommBonusData"), Object.defineProperty(o, "__esModule", {
                value: !0
            }), o.OceanHeartClickLogID = o.RankClickLogID = o.QustObjectiveType = o.UserQuestDataStatus = o.RankingPlayerData = o.RankAwardData = o.BonusData = o.Award = o.CommBonusData = void 0, o.CommBonusData = class {
                constructor() {
                    this.CustomInfoMsg = "", this.AwardAry = [], this.Status = -1, this.bonusData = null, this.m_arrRankAwardData = [], this.RankSize = 0, this.CanShow = !1, this.QuestType = n.NONE, this.needRebuff = !1, this.newProgress = 0, this.m_fProgressRate = 0
                }
            }, o.Award = class {}, o.BonusData = class {}, o.RankAwardData = class {}, o.RankingPlayerData = class {},
            function(e) {
                e[e.NONE = -1] = "NONE", e[e.QUEST_NOT_DONE = 0] = "QUEST_NOT_DONE", e[e.AWARD_AVAILABLE = 1] = "AWARD_AVAILABLE", e[e.AWARD_CLAIMED = 2] = "AWARD_CLAIMED"
            }(o.UserQuestDataStatus || (o.UserQuestDataStatus = {})),
            function(e) {
                e[e.NONE = -1] = "NONE", e[e.SPIN_TIME = 0] = "SPIN_TIME", e[e.SPIN_AMOUNT = 1] = "SPIN_AMOUNT", e[e.WIN_AMOUNT = 2] = "WIN_AMOUNT", e[e.CUSTOM = 3] = "CUSTOM"
            }(n = o.QustObjectiveType || (o.QustObjectiveType = {})),
            function(e) {
                e[e.FLOAT_BTN = 0] = "FLOAT_BTN", e[e.MAIN_X_BTN = 1] = "MAIN_X_BTN", e[e.INFO_BTN = 2] = "INFO_BTN", e[e.INFO_X_BTN = 3] = "INFO_X_BTN", e[e.RANKING_ID_X_BTN = 4] = "RANKING_ID_X_BTN", e[e.SWITCH_TO_GAME_PAGE = 5] = "SWITCH_TO_GAME_PAGE", e[e.SWITCH_TO_RANK_PAGE = 6] = "SWITCH_TO_RANK_PAGE", e[e.TOP_PROGRESS = 7] = "TOP_PROGRESS", e[e.AWARD_OK_BTN = 8] = "AWARD_OK_BTN", e[e.AWARD_X_BTN = 9] = "AWARD_X_BTN", e[e.AWARD_RANK_BTN = 10] = "AWARD_RANK_BTN", e[e.AWARD_RANK_X_BTN = 11] = "AWARD_RANK_X_BTN"
            }(o.RankClickLogID || (o.RankClickLogID = {})),
            function(e) {
                e[e.FLOAT_BTN = 0] = "FLOAT_BTN", e[e.MAIN_X_BTN = 1] = "MAIN_X_BTN", e[e.INFO_BTN_OPEN_MAIN = 2] = "INFO_BTN_OPEN_MAIN", e[e.INFO_BTN_X_MAIN = 3] = "INFO_BTN_X_MAIN", e[e.RANKING_ID_X_BTN = 4] = "RANKING_ID_X_BTN", e[e.SWITCH_TO_GAME_PAGE = 5] = "SWITCH_TO_GAME_PAGE", e[e.SWITCH_TO_RANK_PAGE = 6] = "SWITCH_TO_RANK_PAGE", e[e.TOP_PROGRESS = 7] = "TOP_PROGRESS", e[e.AWARD_COLLECT_BTN = 8] = "AWARD_COLLECT_BTN", e[e.AWARD_X_BTN = 9] = "AWARD_X_BTN", e[e.AWARD_RANK_BTN = 10] = "AWARD_RANK_BTN", e[e.AWARD_RANK_X_BTN = 11] = "AWARD_RANK_X_BTN", e[e.INFO_BTN_OPEN_RANK = 12] = "INFO_BTN_OPEN_RANK", e[e.INFO_BTN_X_RANK = 13] = "INFO_BTN_X_RANK"
            }(o.OceanHeartClickLogID || (o.OceanHeartClickLogID = {})), cc._RF.pop()
    }, {}],
    CommBonusInfoCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "e44b2IMVZNEhLQheF0Z1ocV", "CommBonusInfoCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommBonusInfoCtrl = void 0;
        const i = e("../../MissionMgr/Script/MissionMsgCtrl"),
            s = e("./CommBonusMsgCtrl"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_strThemeID = "", this.isFinishClaim = !1, this.m_nodeRoot = null, this.m_sprGameIcon = null, this.m_labGameName = null, this.m_sprProgressBar = null, this.m_labProgress = null, this.m_nodeToken = null, this.m_nodeRedDot = null, this.m_labRedDot = null, this.m_btnPlay = null, this.m_missionMsgCtrl = null, this.m_CommBonusMsgCtrl = null, this.m_numProgressFullWidth = 388, this.m_numProgressSpeed = .02, this.m_bIsProgressUp = !1, this.m_iRedDotNum = 0, this.errorCode = ""
            }
            update() {}
            setGame(e, t, o, n) {
                this.m_nodeMissionMgr = e, this.m_strThemeID = t, this.m_sGameName = o, this.m_sThemeTitle = n
            }
            SetMissionToProcessingStatus(e = "", t = "CommBonusMgr") {
                this.isFinishClaim = !1, this.m_sprProgressBar.node.active = !0, this.m_labProgress.node.active = !0, this.m_nodeToken.active = !0, this.m_CommBonusMsgCtrl.setMsg(e), this.m_labGameName.string = this.m_sThemeTitle, this.m_btnPlay.clickEvents[0] = new cc.Component.EventHandler, this.m_btnPlay.clickEvents[0].target = this.m_nodeMissionMgr, this.m_btnPlay.clickEvents[0].component = t, this.m_btnPlay.clickEvents[0].handler = "OpenSelectOptionPage", this.m_btnPlay.clickEvents[0].customEventData = this.m_sGameName
            }
            setInteract(e) {
                this.m_btnPlay.interactable = e
            }
            SetProcessBar(e, t) {
                e >= t && (e = t);
                let o = e / t;
                this.setProgress(o)
            }
            setProgress(e) {
                e = e > 1 ? 1 : e < 0 ? 0 : e, console.warn("this.m_numProgressFullWidth* num : " + this.m_numProgressFullWidth * e), this.m_sprProgressBar.fillRange = e, this.m_labProgress.string = SS.Common.BaseFunction.addCommas(100 * e, 2, !1) + "%"
            }
            setProgressRebuff(e) {
                this.m_numProgressUpTo = e, this.m_numProgressCtr = 0, this.m_bIsProgressUp = !0
            }
            setRedDot(e) {
                this.m_iRedDotNum = e;
                let t = e > 0;
                this.m_nodeRedDot.active = t, this.m_labRedDot.enabled = t, this.m_labRedDot.string = e.toString()
            }
            decrRedDot() {
                this.m_iRedDotNum--, this.setRedDot(this.m_iRedDotNum)
            }
        };
        n([a(cc.Node)], l.prototype, "m_nodeRoot", void 0), n([a(cc.Sprite)], l.prototype, "m_sprGameIcon", void 0), n([a(cc.Label)], l.prototype, "m_labGameName", void 0), n([a(cc.Sprite)], l.prototype, "m_sprProgressBar", void 0), n([a(cc.Label)], l.prototype, "m_labProgress", void 0), n([a(cc.Node)], l.prototype, "m_nodeToken", void 0), n([a(cc.Node)], l.prototype, "m_nodeRedDot", void 0), n([a(cc.Label)], l.prototype, "m_labRedDot", void 0), n([a(cc.Button)], l.prototype, "m_btnPlay", void 0), n([a(i.MissionMsgCtrl)], l.prototype, "m_missionMsgCtrl", void 0), n([a(s.CommBonusMsgCtrl)], l.prototype, "m_CommBonusMsgCtrl", void 0), l = n([r], l), o.CommBonusInfoCtrl = l, cc._RF.pop()
    }, {
        "../../MissionMgr/Script/MissionMsgCtrl": "MissionMsgCtrl",
        "./CommBonusMsgCtrl": "CommBonusMsgCtrl"
    }],
    CommBonusListCtrl_Rank: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "f936ceXeV9Hwb2t6QAV+Ytz", "CommBonusListCtrl_Rank");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommBonusListCtrl_Rank = void 0;
        const s = e("./CommBonusMgr_Rank"),
            r = e("../CommBonusInfoCtrl"),
            a = e("../CommBonusData"),
            l = e("../../../../Component/BundleCtrl"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        let m = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeMissionList = null, this.m_nodeContent = null, this.m_scroll = null, this.m_prefabMisionInfo = null, this.m_sprAtlasGameIcon = null, this.m_aryInfoCtrlList = [], this.m_nodePoolMissions = null, this.m_dateLastTimeOpenPanel = 0, this.m_Mgr = null, this.m_iDLPicCtr = 0, this.m_iDLPicTryCtr = 0, this.m_dictDLPic = null, this.errorCode = "", this.m_fucSprDLEndSetIdle = null, this.m_strCollectQuestID = "", this.m_sSpinAmountGateStr = ""
            }
            ClearRes() {
                if (this.m_dictDLPic) {
                    let e = this.m_dictDLPic.keys;
                    for (let t = 0; t < this.m_dictDLPic.keys.length; t++) this.m_dictDLPic[e[t]] = null;
                    this.m_dictDLPic.clear(), this.m_dictDLPic = null
                }
                this.m_nodePoolMissions && this.m_nodePoolMissions.clear()
            }
            init(e) {
                this.m_Mgr = e, this.show(!1), this.setLang(), this.m_nodePoolMissions = new cc.NodePool;
                for (let t = 0; t < 4; ++t) {
                    let e = cc.instantiate(this.m_prefabMisionInfo);
                    this.m_nodePoolMissions.put(e)
                }
                this.m_fucSprDLEndSetIdle = this.m_Mgr.setStatusIdle.bind(this.m_Mgr), this.m_dictDLPic = new SS.Common.Dictionary
            }
            setScrollTop() {
                this.m_scroll.scrollToTop()
            }
            show(e) {
                this.m_nodeMissionList.active = e
            }
            setInteract(e) {
                for (let t = 0; t < this.m_aryInfoCtrlList.length; t++) this.m_aryInfoCtrlList[t].setInteract(e)
            }
            getMissionInfoCtrlByThemeID(e) {
                for (let t = 0; t < this.m_aryInfoCtrlList.length; t++)
                    if (this.m_aryInfoCtrlList[t].m_strThemeID == e) return this.m_aryInfoCtrlList[t];
                return null
            }
            updateMisInfo(e) {
                let t = [],
                    o = e.length > 0;
                if (this.show(o), o) {
                    this.m_aryInfoCtrlList.forEach(e => {
                        this.m_nodePoolMissions.put(e.node)
                    }), this.m_aryInfoCtrlList = [], e.sort(this.cmpPriority), this.m_iDLPicCtr = e.length;
                    for (let o = 0; o < e.length; o++) {
                        let n = e[o],
                            i = this.m_nodePoolMissions.get();
                        null == i && (i = cc.instantiate(this.m_prefabMisionInfo)), i.parent = this.m_nodeContent;
                        let s = i.getComponent(r.CommBonusInfoCtrl);
                        this.m_aryInfoCtrlList.push(s);
                        let l = 0,
                            c = 0;
                        if (n.SpinTimesGate > 0) n.QuestType = a.QustObjectiveType.SPIN_TIME, l = n.SpinTimesGate, c = n.SpinTimes, n.CustomInfoMsg = "Complete " + l + " spin times";
                        else if (n.SpinAmountGate > 0) n.QuestType = a.QustObjectiveType.SPIN_AMOUNT, l = n.SpinAmountGate, c = n.SpinAmount, n.CustomInfoMsg = this.m_sSpinAmountGateStr.replace("{0}", n.SpinAmountGate.toString());
                        else if (n.WinAmountGate > 0) n.QuestType = a.QustObjectiveType.WIN_AMOUNT, l = n.WinAmountGate, c = n.WinAmount, n.CustomInfoMsg = "Accumulate winning above " + l;
                        else {
                            if (0 == n.CustomType) return void console.error("QuestType error");
                            n.QuestType = a.QustObjectiveType.CUSTOM, l = n.CustomGate, c = n.CustomAmount
                        }
                        let h = this.getGameNameByThemeID(n.ThemeID),
                            m = this.getThemeTitleByThemeID(n.ThemeID);
                        t.push(h), this.setSprFrameWithAtlas(h, s.m_sprGameIcon), s.setGame(this.m_Mgr.node, n.ThemeID, h, m), s.SetMissionToProcessingStatus(n.CustomInfoMsg, "CommBonusMgr_Rank"), s.SetProcessBar(c, l), s.setRedDot(n.newProgress)
                    }
                    t = null
                }
            }
            cmpPriority(e, t) {
                return e.Priority - t.Priority
            }
            getFilteredMisInfo(e) {
                try {
                    let o = e.QuestList,
                        n = [],
                        i = SS.Common.GameEnvironment.GameSetting.DisableGame,
                        s = SS.Common.GameEnvironment.GameSetting.Type.ALL;
                    for (let e = 0; e < o.length; e++) {
                        let t = o[e].ThemeID,
                            r = i.indexOf(t),
                            a = this.getGameNameByThemeID(t),
                            l = s.indexOf(a),
                            c = s.indexOf("BIGICON_" + a); - 1 == r && (l > -1 || c > -1) && n.push(o[e])
                    }
                    return n
                } catch (t) {
                    return []
                }
            }
            getThemeTitleByThemeID(e) {
                let t = null;
                try {
                    t = SS.Common.GameEnvironment.GameSetting.Icon[e].ThemeTitle
                } catch (o) {}
                if (t) return t;
                try {
                    t = SS.Common.GameEnvironment.GameSetting.Icon[e].FormalName
                } catch (n) {}
                return t || ""
            }
            getGameNameByThemeID(e) {
                let t = "";
                try {
                    t = SS.Common.GameEnvironment.GameSetting.Icon[e].GameName
                } catch (o) {}
                return t
            }
            getThemeIDByGameName(e) {
                try {
                    let o = SS.Common.GameEnvironment.GameSetting.Icon;
                    for (let t in o)
                        if (o[t].GameName = e) return +t
                } catch (t) {}
                return 0
            }
            setSprFrameWithAtlas(e, t) {
                return i(this, void 0, void 0, function*() {
                    let o = yield l.default.Instance.GetSpirte("SquareGameIcon", e);
                    o ? (t.spriteFrame = o, t.enabled = !0, t.node.active = !0) : t.node.active = !1, this.m_iDLPicCtr--, 0 == this.m_iDLPicCtr && (this.m_Mgr.m_status = s.MisMgrStatus.TOKEN_ENLARGE)
                })
            }
            setLang() {
                switch (SS.Common.GameEnvironment.Language) {
                    case "":
                    case "en":
                        this.m_sSpinAmountGateStr = "Complete total entries {0}";
                        break;
                    case "es":
                        this.m_sSpinAmountGateStr = "Completa con {0} cr\xe9ditos"
                }
            }
        };
        n([h(cc.Node)], m.prototype, "m_nodeMissionList", void 0), n([h(cc.Node)], m.prototype, "m_nodeContent", void 0), n([h(cc.ScrollView)], m.prototype, "m_scroll", void 0), n([h(cc.Prefab)], m.prototype, "m_prefabMisionInfo", void 0), n([h(cc.SpriteAtlas)], m.prototype, "m_sprAtlasGameIcon", void 0), m = n([c()], m), o.CommBonusListCtrl_Rank = m, cc._RF.pop()
    }, {
        "../../../../Component/BundleCtrl": "BundleCtrl",
        "../CommBonusData": "CommBonusData",
        "../CommBonusInfoCtrl": "CommBonusInfoCtrl",
        "./CommBonusMgr_Rank": "CommBonusMgr_Rank"
    }],
    CommBonusListCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7fa06bbt7FEb6wLkaQvHI5J", "CommBonusListCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommBonusListCtrl = void 0;
        const s = e("./CommBonusMgr"),
            r = e("./CommBonusInfoCtrl"),
            a = e("../../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            l = e("./CommBonusData"),
            c = e("../../../Component/BundleCtrl"),
            {
                ccclass: h,
                property: m
            } = cc._decorator;
        let u = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeMissionList = null, this.m_nodeContent = null, this.m_scroll = null, this.m_prefabMisionInfo = null, this.m_aryInfoCtrlList = [], this.m_nodePoolMissions = null, this.m_dateLastTimeOpenPanel = 0, this.m_Mgr = null, this.m_iDLPicCtr = 0, this.m_iDLPicTryCtr = 0, this.m_dictDLPic = null, this.errorCode = "", this.m_fucSprDLEndSetIdle = null, this.m_strCollectQuestID = ""
            }
            ClearRes() {
                if (this.m_dictDLPic) {
                    let e = this.m_dictDLPic.keys;
                    for (let t = 0; t < this.m_dictDLPic.keys.length; t++) this.m_dictDLPic[e[t]] = null;
                    this.m_dictDLPic.clear(), this.m_dictDLPic = null
                }
                this.m_nodePoolMissions && this.m_nodePoolMissions.clear()
            }
            init(e) {
                this.m_Mgr = e, this.show(!1), this.m_nodePoolMissions = new cc.NodePool;
                for (let t = 0; t < 4; ++t) {
                    let e = cc.instantiate(this.m_prefabMisionInfo);
                    this.m_nodePoolMissions.put(e)
                }
                this.m_fucSprDLEndSetIdle = this.m_Mgr.setStatusIdle.bind(this.m_Mgr), this.m_dictDLPic = new SS.Common.Dictionary
            }
            setScrollTop() {
                this.m_scroll.scrollToTop()
            }
            show(e) {
                this.m_nodeMissionList.active = e
            }
            setInteract(e) {
                for (let t = 0; t < this.m_aryInfoCtrlList.length; t++) this.m_aryInfoCtrlList[t].setInteract(e)
            }
            getMissionInfoCtrlByThemeID(e) {
                for (let t = 0; t < this.m_aryInfoCtrlList.length; t++)
                    if (this.m_aryInfoCtrlList[t].m_strThemeID == e) return this.m_aryInfoCtrlList[t];
                return null
            }
            updateMisInfo(e) {
                let t = [],
                    o = e.length > 0;
                if (this.show(o), o) {
                    this.m_aryInfoCtrlList.forEach(e => {
                        this.m_nodePoolMissions.put(e.node)
                    }), this.m_aryInfoCtrlList = [], e.sort(this.cmpPriority), this.m_iDLPicCtr = e.length;
                    for (let o = 0; o < e.length; o++) {
                        let n = e[o],
                            i = this.m_nodePoolMissions.get();
                        null == i && (i = cc.instantiate(this.m_prefabMisionInfo)), i.parent = this.m_nodeContent;
                        let s = i.getComponent(r.CommBonusInfoCtrl);
                        this.m_aryInfoCtrlList.push(s);
                        let a = 0,
                            c = 0;
                        if (n.SpinTimesGate > 0) n.QuestType = l.QustObjectiveType.SPIN_TIME, a = n.SpinTimesGate, c = n.SpinTimes, n.CustomInfoMsg = "Complete " + a + " spin times";
                        else if (n.SpinAmountGate > 0) n.QuestType = l.QustObjectiveType.SPIN_AMOUNT, a = n.SpinAmountGate, c = n.SpinAmount, n.CustomInfoMsg = "Complete total entries " + a;
                        else if (n.WinAmountGate > 0) n.QuestType = l.QustObjectiveType.WIN_AMOUNT, a = n.WinAmountGate, c = n.WinAmount, n.CustomInfoMsg = "Accumulate winning above " + a;
                        else {
                            if (0 == n.CustomType) return void console.error("QuestType error");
                            n.QuestType = l.QustObjectiveType.CUSTOM, a = n.CustomGate, c = n.CustomAmount
                        }
                        let h = this.getGameNameByThemeID(n.ThemeID),
                            m = this.getThemeTitleByThemeID(n.ThemeID);
                        t.push(h), this.setSprFrameWithAtlas(h, s.m_sprGameIcon), s.setGame(this.m_Mgr.node, n.ThemeID, h, m), s.SetMissionToProcessingStatus(n.CustomInfoMsg), s.SetProcessBar(c, a), s.setRedDot(n.newProgress)
                    }
                    t = null
                }
            }
            cmpPriority(e, t) {
                return e.Priority - t.Priority
            }
            getFilteredMisInfo(e) {
                try {
                    let o = e.QuestList,
                        n = [],
                        i = SS.Common.GameEnvironment.GameSetting.DisableGame,
                        s = SS.Common.GameEnvironment.GameSetting.Type.ALL;
                    for (let e = 0; e < o.length; e++) {
                        let t = o[e].ThemeID,
                            r = i.indexOf(t),
                            a = this.getGameNameByThemeID(t),
                            l = s.indexOf(a),
                            c = s.indexOf("BIGICON_" + a); - 1 == r && (l > -1 || c > -1) && n.push(o[e])
                    }
                    return n
                } catch (t) {
                    return []
                }
            }
            getThemeTitleByThemeID(e) {
                let t = null;
                try {
                    t = SS.Common.GameEnvironment.GameSetting.Icon[e].ThemeTitle
                } catch (o) {}
                return t || ""
            }
            getGameNameByThemeID(e) {
                let t = "";
                try {
                    t = SS.Common.GameEnvironment.GameSetting.Icon[e].GameName
                } catch (o) {}
                return t
            }
            getThemeIDByGameName(e) {
                try {
                    let o = SS.Common.GameEnvironment.GameSetting.Icon;
                    for (let t in o)
                        if (o[t].GameName = e) return +t
                } catch (t) {}
                return 0
            }
            setSprFrameWithAtlas(e, t) {
                return i(this, void 0, void 0, function*() {
                    let o = yield c.default.Instance.GetSpirte("SquareGameIcon", e);
                    o ? (t.spriteFrame = o, t.enabled = !0, t.node.active = !0) : t.node.active = !1, this.m_iDLPicCtr--, 0 == this.m_iDLPicCtr && (this.m_Mgr.m_status = s.MisMgrStatus.TOKEN_ENLARGE)
                })
            }
            DLAndSetSprFrame(e, t, o = "") {
                let n, i = (n = SS.Common.GameEnvironment.ProjectSetting.CDN_HOST ? window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.CDN_HOST : self == top ? "../../.." : "../../../..") + "/Icons/" + o + e;
                null != this.m_dictDLPic[i] ? this.setSprFrame(i, t, this.m_dictDLPic[i]) : (t.enabled = !1, this.m_iDLPicTryCtr = 0, this.DLSprFrame(i, t))
            }
            DLSprFrame(e, t) {
                try {
                    let n = e + ".png?" + (new Date).getTime();
                    cc.assetManager.loadRemote(n, (o, n) => {
                        if (o) return this.DLSprFrameErr(e, t), null;
                        let i = new cc.SpriteFrame(n);
                        this.setSprFrame(e, t, i), cc.loader.release(n)
                    })
                } catch (o) {
                    return this.DLSprFrameErr(e, t), null
                }
            }
            setSprFrame(e, t, o) {
                this.m_dictDLPic[e] = o, t.spriteFrame = o, t.sizeMode = cc.Sprite.SizeMode.RAW, t.enabled = !0, this.m_iDLPicCtr--, 0 == this.m_iDLPicCtr && (this.m_Mgr.m_status = s.MisMgrStatus.TOKEN_ENLARGE)
            }
            DLSprFrameErr(e, t) {
                this.m_iDLPicTryCtr++, this.m_iDLPicTryCtr >= 3 ? (this.errorCode = "C38", a.PopupMsgMgr.Instance.ShowPopMsg(a.PopupPriority.Error, this.errorCode, null, null, null), this.m_Mgr.m_status = s.MisMgrStatus.IDLE) : this.DLSprFrame(e, t)
            }
        };
        n([m(cc.Node)], u.prototype, "m_nodeMissionList", void 0), n([m(cc.Node)], u.prototype, "m_nodeContent", void 0), n([m(cc.ScrollView)], u.prototype, "m_scroll", void 0), n([m(cc.Prefab)], u.prototype, "m_prefabMisionInfo", void 0), u = n([h], u), o.CommBonusListCtrl = u, cc._RF.pop()
    }, {
        "../../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../../../Component/BundleCtrl": "BundleCtrl",
        "./CommBonusData": "CommBonusData",
        "./CommBonusInfoCtrl": "CommBonusInfoCtrl",
        "./CommBonusMgr": "CommBonusMgr"
    }],
    CommBonusMgr_Rank: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "fd3f9e6MNxAQa4ToQFZrakW", "CommBonusMgr_Rank");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommBonusMgr_Rank = o.MisMgrStatus = void 0;
        const s = e("../../../../../LobbyCommon/Net/LobbyClient"),
            r = e("../../../../../LobbyCommon/Connect/Script/ConnectPanelMgr"),
            a = e("../../../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            l = e("../../../../../GameCommon/CommonRoot/Script/CommonRoot"),
            c = e("../../../../Component/DateTimeCountDown"),
            h = e("../../../../Component/AudioMgr"),
            m = e("./RankAwardPanelCtrl"),
            u = e("./CommBonusBtnCtrl_Rank"),
            d = e("../CommBonusTopProgress"),
            p = e("./PlayerRankingMgr"),
            g = e("./RankBonusTotalProgress"),
            _ = e("../CommBonusTotalProgress"),
            S = e("../CommBonusMoneyMgr"),
            y = e("../CommBonusData"),
            C = e("../../../../EventModule/EventModule"),
            f = e("../../../../FakeScoreBox/Script/FakeScoreBoxCtrl"),
            v = e("../CommGetTokenShow"),
            P = e("../../../EventBannerData"),
            b = e("./RankingBonusListCtrl"),
            w = e("../../../../PopUpMgr/Scripts/PriorityCustomEvent"),
            I = e("./FinishPageTimer"),
            E = e("../../../EventTipsMask"),
            L = e("./NewPlayerGuideCtrl"),
            D = e("../../../../Helper/EventSystem"),
            M = e("../CommonBonusTakeAvatar"),
            T = e("../../../../Net/ClickLog"),
            R = e("../../../../Net/ClickLogEnum");
        var k;
        (function(e) {
            e[e.NONE = -1] = "NONE", e[e.IDLE = 0] = "IDLE", e[e.INIT = 1] = "INIT", e[e.UPDATE_CMD = 2] = "UPDATE_CMD", e[e.COLLECT = 3] = "COLLECT", e[e.COLLECT_RCV = 4] = "COLLECT_RCV", e[e.COLLECT_SHOW = 5] = "COLLECT_SHOW", e[e.TOKEN_ENLARGE = 6] = "TOKEN_ENLARGE", e[e.TOKEN_FLY_TOP = 7] = "TOKEN_FLY_TOP", e[e.REACH_GATE_POPUP = 8] = "REACH_GATE_POPUP", e[e.RANK_TOKEN_ENLARGE = 9] = "RANK_TOKEN_ENLARGE", e[e.RANK_TOKEN_FLY_TOP = 10] = "RANK_TOKEN_FLY_TOP", e[e.DISABLE = 11] = "DISABLE", e[e.FADE_TO_RANK_PAGE = 12] = "FADE_TO_RANK_PAGE"
        })(k = o.MisMgrStatus || (o.MisMgrStatus = {}));
        const {
            ccclass: B,
            property: A
        } = cc._decorator;
        let N = class extends C.EventModule {
            constructor() {
                super(...arguments), this.root = null, this.m_MissionBtnCtrl = null, this.m_ActivitiesMgrRoot = null, this.m_FinishMission = null, this.m_labFinishMission = null, this.m_FinishPageTimer = null, this.m_nodeMissionListCtrl = null, this.m_MissionListCtrl = null, this.m_PlayerRankingMgr = null, this.m_MissionTopProgress = null, this.m_CommGetTokenShow = null, this.m_CommBonusTotalProgress = null, this.m_RankBonusTotalProgress = null, this.m_CommBonusMoneyMgr = null, this.m_CommBonusTakeAvatar = null, this.gameMenuTimeReci = null, this.gameMenuTimeCountdown = null, this.floatBtnTimeReci = null, this.floatBtnTimeCountDown = null, this.finishPageTimeReci = null, this.finishPageTimeCountDown = null, this.m_RankAwardPanelCtrl = null, this.m_nodeLoginGetAward = null, this.m_nodeLoginGetAwardOKBtn = null, this.m_nodeLoginGetAwardXBtn = null, this.m_labLoginGetAwardMsg = null, this.m_labLoginGetAwardWinning = null, this.m_arrAnimateLoginGetAward = [], this.m_nodeObjList = null, this.m_nodeRankingPage = null, this.m_nodeReadMePage = null, this.m_nodeReadMePage_Rank = null, this.m_nodeRankIDPopup = null, this.m_labRankID = null, this.m_nodeDarkerBG = null, this.m_FakeScoreBoxPfb = null, this.m_FakeScoreBoxNode = null, this.m_FakeScoreBoxCtrl = null, this.m_nodeHint = null, this.m_nodeHintRank = null, this.m_nodeBlocker = null, this.m_iBlockerCtr = 0, this.m_RankingBonusListCtrl = null, this.m_nodeRangTag = null, this.m_nodeJPTag = null, this.m_nodeRangTagBtn = null, this.m_nodeJPTagBtn = null, this.m_NewPlayerGuideCtrl = null, this.m_dateLastTimeOpenPanel = 0, this.m_arrMissionData = [], this.m_arrAwardAvaiMapData = [], this.m_iAwardNum = 0, this.m_iBeginTime = -1, this.m_iEndTime = -1, this.m_iNowTime = -1, this.sData = "", this.errorCode = "", this.reason = "", this.errorMsg = "", this.isClickClaimBtn = !1, this.m_bBtnInterActable = !0, this.isTheFirstToLobby = !1, this.isRequestInfoNow = !1, this.intervalID = -1, this._countDownTime = 0, this.m_sLoginBtnHint = "", this.m_sEndsInTime = "", this.m_sSpinAmountGateStr = "", this.m_sLoginGetAwardMsg = "", this.m_sNumber = "", this.dragFloatBtn = null, this.curMisData = null, this.collectMisData = null, this.maxGameLineBet = 0, this.maxGameLines = 0, this.m_sCurGameName = "", this.SetUserBalance = null, this.SetGoToLobby = null, this.ClickClaimBtnEvent = null, this.SetFinshSingleMission = null, this.GetMissionCmdCallBack = null, this.Del_ForceToGameEvent = null, this.m_status = k.NONE, this.m_lastStatus = k.NONE, this.m_iLastProgress = 0, this.m_jsonPlayerInfo = null, this.m_strChangeToGameName = "", this.m_iTotalProgressMax = 0, this.m_iTotalProgressCur = 0, this.m_TotalPrgressStatus = y.UserQuestDataStatus.NONE, this.m_iTotalProgressAddAll = 0, this.m_bShowFinish = !1, this.m_iFinalBalance = 0, this.m_bFirstClickGetAward = !0, this.m_bTotalPrgressGetFull = !1, this.m_bNoobGuideRanking = !0, this.m_bInRankingPage = !1, this.m_bSlotLock = !0, this.m_bTokenLock = !0, this.m_bFishEventRun = !1, this.m_bHaveShow = !1, this.m_sLastSeason = "", this.m_iUpdateRetryCtr = 0, this.m_RankingRefreshTimestamp = 0, this.m_RankingListHash = 0, this.m_isRecvPlayerProfileList = !1, this.m_PlayerProfileList = null
            }
            GetTimestamp() {
                return Math.floor(Date.now() / 1e3)
            }
            update() {
                let e = this.m_status != this.m_lastStatus;
                switch (this.m_lastStatus = this.m_status, this.m_status) {
                    case k.IDLE:
                        e && (console.warn("MisMgrStatus.IDLE"), r.ConnectPanelMgr.Instance.DisableConnectPanel(0), this.m_nodeBlocker.active = !1, this.showRankingPage("en" == SS.Common.GameEnvironment.Language || this.m_iTotalProgressCur >= 9), this.m_RankBonusTotalProgress.node.active = this.m_CommBonusTotalProgress.hasGotAllToken(), this.m_RankBonusTotalProgress.setProgress(this.m_iTotalProgressCur));
                        break;
                    case k.FADE_TO_RANK_PAGE:
                        e && (console.warn("MisMgrStatus.FADE_TO_RANK_PAGE"), this.m_bHaveShow ? (this.m_bHaveShow = !1, this.fadeToRankingPage()) : this.m_status = k.IDLE);
                        break;
                    case k.INIT:
                        break;
                    case k.UPDATE_CMD:
                        e && (console.warn("MisMgrStatus.UPDATE_CMD"), r.ConnectPanelMgr.Instance.ShowConnectPanel(0), this.m_MissionTopProgress.show(!1), this.SendMissionBonusInfoCmd());
                        break;
                    case k.TOKEN_ENLARGE:
                        e && (console.warn("MisMgrStatus.TOKEN_ENLARGE"), this.m_nodeBlocker.active = !0, r.ConnectPanelMgr.Instance.DisableConnectPanel(0), 0 == this.m_iTotalProgressCur ? this.m_status = k.IDLE : this.m_CommBonusTotalProgress.hasGotAllToken() ? this.m_status = k.RANK_TOKEN_FLY_TOP : this.m_iTotalProgressAddAll - this.getCurGameNewProgress() > 0 ? (this.showRankingPage(!1), this.m_CommBonusTotalProgress.enLargeOneByOne(this.m_iTotalProgressCur - this.m_iTotalProgressAddAll, this.m_iTotalProgressAddAll - this.getCurGameNewProgress()), this.m_bHaveShow = !0) : this.m_status = k.TOKEN_FLY_TOP);
                        break;
                    case k.TOKEN_FLY_TOP:
                        if (e)
                            if (console.warn("MisMgrStatus.TOKEN_FLY_TOP"), this.m_CommBonusTotalProgress.hasGotAllToken() || 0 == this.getCurGameNewProgress()) this.m_status = k.REACH_GATE_POPUP;
                            else {
                                this.showRankingPage(!1);
                                let e = this.m_MissionListCtrl.m_aryInfoCtrlList[0].m_nodeToken;
                                this.m_CommBonusTotalProgress.showOneByOne(this.m_iTotalProgressCur - this.getCurGameNewProgress(), this.getCurGameNewProgress(), e), this.m_bHaveShow = !0
                            }
                        break;
                    case k.REACH_GATE_POPUP:
                        e && (console.warn("MisMgrStatus.REACH_GATE_POPUP"), this.m_CommBonusTotalProgress.hasGotAllToken() && this.m_iTotalProgressMax > this.m_iTotalProgressCur - this.m_iTotalProgressAddAll ? (this.m_RankBonusTotalProgress.node.active = !0, this.ToggleFinishMissionPage(!0)) : (this.clearAllNewProgress(), this.m_status = "es" == SS.Common.GameEnvironment.Language && this.m_iTotalProgressCur < 9 ? k.IDLE : k.FADE_TO_RANK_PAGE));
                        break;
                    case k.RANK_TOKEN_FLY_TOP:
                        if (e) {
                            console.warn("MisMgrStatus.RANK_TOKEN_FLY_TOP");
                            let e = Math.max(this.m_iTotalProgressMax, this.m_iTotalProgressCur - this.m_iTotalProgressAddAll),
                                t = Math.min(this.m_iTotalProgressCur - this.m_iTotalProgressMax, this.m_iTotalProgressAddAll);
                            if (t > 0) {
                                this.showRankingPage(!1), this.m_nodeBlocker.active = !0, this.m_RankBonusTotalProgress.setAllTokenShowEndCB(this.setRankRrogressAndIdle.bind(this, t)), this.m_RankBonusTotalProgress.setProgress(e);
                                for (let e = this.m_MissionListCtrl.m_aryInfoCtrlList.length - 1; e >= 0; e--)
                                    if (this.m_MissionListCtrl.m_aryInfoCtrlList[e].m_nodeRedDot.active) {
                                        let t = this.m_MissionListCtrl.m_aryInfoCtrlList[e].m_nodeToken;
                                        this.m_RankBonusTotalProgress.showFlyToken(t), this.m_MissionListCtrl.m_aryInfoCtrlList[e].setRedDot(0)
                                    }
                                this.m_bHaveShow = !0
                            } else this.m_status = k.IDLE;
                            this.clearAllNewProgress()
                        }
                        break;
                    case k.DISABLE:
                        e && (console.warn("MisMgrStatus.DISABLE"), r.ConnectPanelMgr.Instance.DisableConnectPanel(0), this.m_iLastProgress = 0, this.disableBannerPopUp(), this.root.active = !1)
                }
            }
            onLoad() {
                this.m_strEventID = "RankingBonus", this.m_ActivitiesMgrRoot.active = !1, this.floatBtnTimeCountDown.node.active = !1, this.gameMenuTimeCountdown.node.active = !1, this.m_nodeBlocker.active = !1, this.m_RankingRefreshTimestamp = this.GetTimestamp(), this.m_RankingListHash = 0
            }
            start() {
                if (this.m_MissionListCtrl = this.m_nodeMissionListCtrl.getComponent("CommBonusListCtrl_Rank"), this.m_MissionBtnCtrl.init(this), this.m_MissionTopProgress.init(), this.m_MissionListCtrl.init(this), this.isTheFirstToLobby = null == SS.Common.GameEnvironment.CurrentGameVersion || "" == SS.Common.GameEnvironment.CurrentGameVersion, this.m_LobbyMgr && this.m_LobbyMgr.popUpMgr.onCloseAllPopupEvent.push(this.popUpClosed.bind(this)), this.finishPageTimeCountDown && (this.finishPageTimeCountDown.node.active = !1), this.parseMisInfo(s.LobbyClient.Instance.m_CommonEventInfo_900004) && (this.m_curMapData && (this.m_RankingBonusListCtrl.init(this.m_curMapData.m_arrRankAwardData, this.m_curMapData.bonusData.exchange_rate, this.m_curMapData.RankSize), self == top && this.isTheFirstToLobby && this.clearAllNewProgress(), this.getAllNewProgress(!0)), this.updateMisInfo(), this.InitTimer()), self == top) {
                    this.m_MissionBtnCtrl.show(!0), this.SetUserBalance = this.lobbySetUserBalance.bind(this), console.warn("\u6392\u884c\u8a3b\u518a");
                    let e = new w.PriorityCustomEvent(w.PopEventPriority.CommBonusRank, this.loginGetAward.bind(this));
                    this.m_LobbyMgr.popUpMgr.priorityShowEvents.push(e), null == SS.Common.GameEnvironment.CurrentGameVersion || SS.Common.GameEnvironment.CurrentGameVersion;
                    let t = new P.EventBannerData(this.m_strEventID, 100, this.onClickBnnerCB.bind(this));
                    t.m_bValid = !0, this.m_LobbyMgr.m_arrEventBannerData.push(t), this.SetEventActive()
                } else "es" == SS.Common.GameEnvironment.Language && this.m_MissionBtnCtrl.move(-30, -550);
                this.m_CommBonusTotalProgress.setTokenShowStartCB(this.decrTokenRedDot.bind(this, 0)), this.m_CommBonusTotalProgress.setAllTokenShowEndCB(this.allTokenShowEnd.bind(this)), this.m_CommBonusTotalProgress.m_fucTokenEnlargeStartCB = this.decrOtherToken.bind(this), this.m_CommBonusTotalProgress.m_fucAllTokenEnlargeEndCB = this.setStatusFly.bind(this), this.m_FinishPageTimer.m_cb = this.closeFinishPage.bind(this), this.setLang(), this.initDone(), D.EventSystem.Event(D.CommunityBonus.ClickGetAwardCollect).Insert(this.onClickGetAwardOK, this), D.EventSystem.Event(D.SwitchGame).Insert(this.onProfileSwitchGame, this)
            }
            setBlocker(e) {
                this.m_iBlockerCtr += e ? 1 : -1, this.m_nodeBlocker.active = 0 == this.m_iBlockerCtr
            }
            ShowMainPanel() {
                this.onClickBnnerCB()
            }
            onClickBnnerCB() {
                this.m_status != k.DISABLE && this.OnClickFloatBtn()
            }
            disableBannerPopUp() {
                if (self == top && this.m_LobbyMgr)
                    for (let e = 0; e < this.m_LobbyMgr.m_arrEventBannerData.length; e++)
                        if ("RankingBonus" == this.m_LobbyMgr.m_arrEventBannerData[e].m_sBannerID) {
                            this.m_LobbyMgr.m_arrEventBannerData[e].m_bValid = !1;
                            break
                        }
                this.CloseEvent()
            }
            hideLoginGetAward() {
                this.showLoginGetAward(!1)
            }
            showLoginGetAward(e, t = "", o = "", n = "", i = "", s = "", r = 0, a = 0, l = 0, c = []) {
                if (this.m_nodeLoginGetAward.active = e, e) {
                    console.warn(this.m_curAwardAvaiMapData.bonusData), this.m_arrAnimateLoginGetAward.forEach(e => {
                        e.play()
                    });
                    let e = this.m_curAwardAvaiMapData.QuestID.substr(4, 2) + "/" + this.m_curAwardAvaiMapData.QuestID.substr(6, 2),
                        h = this.m_curAwardAvaiMapData.bonusData.people,
                        m = this.m_sLoginGetAwardMsg;
                    m = (m = m.replace("{0}", e)).replace("{1}", h.toString()), this.m_labLoginGetAwardMsg.string = m, this.m_RankAwardPanelCtrl.setDetail(t, o, n, i, s, l, r, a, c, this.m_curAwardAvaiMapData.m_arrRankAwardData, this.m_curAwardAvaiMapData.CustomAmount), this.m_nodeLoginGetAwardOKBtn.active = !0, this.m_nodeLoginGetAwardXBtn.active = !1
                }
            }
            tsToDate(e) {
                let t = new Date(1e3 * e).toLocaleDateString("en-US", {
                    timeZone: "EDT",
                    month: "long",
                    day: "numeric"
                });
                return t.substr(0, t.length - 5)
            }
            tsToDateTime(e) {
                let t = new Date(1e3 * (e += 3600)).toLocaleTimeString("en-US", {
                    timeZone: "EST",
                    month: "long",
                    day: "numeric",
                    hour12: !1
                });
                return t.substr(0, t.length - 3)
            }
            loginGetAward() {
                console.warn("loginGetAward()"), null == SS.Common.GameEnvironment.CurrentGameVersion || SS.Common.GameEnvironment.CurrentGameVersion, this.m_curAwardAvaiMapData = this.m_arrAwardAvaiMapData.pop(), this.m_curAwardAvaiMapData ? (r.ConnectPanelMgr.Instance.ShowConnectPanel(0), s.LobbyClient.Instance.GetUserClient.collectQuest(this.m_curAwardAvaiMapData.QuestID, this.m_curAwardAvaiMapData.QuestLevel, this.rcvCollectQuestAck.bind(this))) : this.m_LobbyMgr.popUpMgr.checkAndShowPopup()
            }
            onClickGetAwardOK() {
                0 != this.m_nodeLoginGetAward.active && (this.m_bFirstClickGetAward = !1, null == this.m_FakeScoreBoxCtrl && this.InstantiateFakeScoreBox(), this.m_FakeScoreBoxCtrl.countUpShowJumpMoney(this.m_iFinalBalance, 2, .5), this.m_CommBonusTakeAvatar.Show(), this.m_nodeLoginGetAwardOKBtn.active = !1, this.m_nodeLoginGetAwardXBtn.active = !0, s.LobbyClient.Instance.GetUserClient.recordClickLog("Rank", y.RankClickLogID.AWARD_OK_BTN), D.EventSystem.Event(D.CommunityBonus.SetCollected).Length > 0 && D.EventSystem.Event(D.CommunityBonus.SetCollected).Notify("RankBonus"))
            }
            onClickGetAwardX() {
                this.m_RankAwardPanelCtrl.Reset(), this.loginGetAward(), this.hideLoginGetAward(), s.LobbyClient.Instance.GetUserClient.recordClickLog("Rank", y.RankClickLogID.AWARD_X_BTN)
            }
            popUpClosed() {
                null != this.m_arrMissionData && (null == E.EventTipsMask.Instance || E.EventTipsMask.Instance.m_bClickAnyEvent || (this.m_bFishEventRun || this.m_MissionBtnCtrl.setPrompt(this.m_sLoginBtnHint), null != E.EventTipsMask.Instance && null != this.m_curMapData && (E.EventTipsMask.Instance.m_delHideCb.Insert(this.m_MissionBtnCtrl.setPrompt, this.m_MissionBtnCtrl), E.EventTipsMask.Instance.checkNewEvent(this.m_curMapData.QuestID))), "es" == SS.Common.GameEnvironment.Language && this.m_MissionBtnCtrl.setPrompt(this.m_sLoginBtnHint))
            }
            decrOtherToken() {
                for (let e = this.m_MissionListCtrl.m_aryInfoCtrlList.length - 1; e >= 0; e--)
                    if (null == this.getCurGameMisData() || this.m_MissionListCtrl.m_aryInfoCtrlList[e].m_strThemeID != this.getCurGameMisData().ThemeID) {
                        let t = this.getMisDataByThemeID(this.m_MissionListCtrl.m_aryInfoCtrlList[e].m_strThemeID);
                        if (t.newProgress > 0) {
                            t.newProgress--, this.decrTokenRedDot(e);
                            break
                        }
                    }
            }
            decrTokenRedDot(e) {
                this.m_MissionListCtrl.m_aryInfoCtrlList[e].decrRedDot()
            }
            setStatusIdle() {
                this.m_status != k.DISABLE && (this.m_status = k.IDLE)
            }
            setRankRrogressAndIdle(e) {
                this.m_RankBonusTotalProgress.setProgress(this.m_iTotalProgressCur), this.m_RankBonusTotalProgress.setProgressAdd(e), this.m_status != k.DISABLE && (this.m_status = k.FADE_TO_RANK_PAGE)
            }
            allTokenShowEnd() {
                this.m_status != k.DISABLE && (this.m_status = k.REACH_GATE_POPUP)
            }
            setStatusFly() {
                this.m_status != k.DISABLE && (this.m_status = k.TOKEN_FLY_TOP)
            }
            checkAwardAvailible() {
                let e = 0,
                    t = 0;
                if (null != this.m_arrMissionData) {
                    for (let o = 0; o < this.m_arrMissionData.length; o++) {
                        let n = this.m_arrMissionData[o];
                        n.Status == y.UserQuestDataStatus.AWARD_AVAILABLE && (e += n.Award.AwardWinnings, t += n.Award.AwardEntries)
                    }
                    return e + t > 0
                }
            }
            lobbySetUserBalance(e) {
                let t = e.entries,
                    o = e.winnings;
                D.EventSystem.Event(D.DownBar.SetPlayerInfo).Notify(t, o), this.m_LobbyMgr.UserEntries = t, this.m_LobbyMgr.UserWinnings = o
            }
            onDestroy() {
                this.SetUserBalance = null, -1 != this.intervalID && clearInterval(this.intervalID), D.EventSystem.Event(D.CommunityBonus.ClickGetAwardCollect) && D.EventSystem.Event(D.CommunityBonus.ClickGetAwardCollect).Length > 0 && D.EventSystem.Event(D.CommunityBonus.ClickGetAwardCollect).Remove(this.onClickGetAwardOK, this), D.EventSystem.Event(D.SwitchGame) && D.EventSystem.Event(D.SwitchGame).Length > 0 && D.EventSystem.Event(D.SwitchGame).Remove(this.onProfileSwitchGame, this), s.LobbyClient.Instance.GetJPSystem && (s.LobbyClient.Instance.GetJPSystem.getTreasureMapCB = null)
            }
            ClearTimer() {
                -1 != this.intervalID && clearInterval(this.intervalID)
            }
            SetAllBtnInteract(e) {
                this.m_bBtnInterActable = e, this.m_MissionBtnCtrl.setInteract(e), this.m_MissionTopProgress.setInteract(e), this.m_MissionListCtrl.setInteract(e)
            }
            SetAllBtnInteractTrue() {
                this.m_bSlotLock = !0, this.SetAllBtnInteract(this.m_bSlotLock && this.m_bTokenLock)
            }
            SetAllBtnInteractFalse() {
                this.m_bSlotLock = !1, this.SetAllBtnInteract(this.m_bSlotLock && this.m_bTokenLock)
            }
            getMisDataByGameName(e) {
                let t = this.getThemeIDByGameName(e);
                return this.getMisDataByThemeID(t)
            }
            getMisDataByThemeID(e) {
                for (let t = 0; t < this.m_arrMissionData.length; t++)
                    if (this.m_arrMissionData[t].ThemeID == e) return this.m_arrMissionData[t];
                return null
            }
            getCurGameMisData() {
                return this.getMisDataByGameName(this.m_sCurGameName)
            }
            getCurGameNewProgress() {
                let e;
                return null == (e = "" == this.m_sCurGameName ? 0 : SS.Common.GameEnvironment.ProjectSetting.Modules[this.m_sCurGameName][this.m_curMapData.QuestID]) && (e = 0), e
            }
            gotNewToken() {
                this.m_status != k.DISABLE && (this.m_bTokenLock = !0, this.SetAllBtnInteract(this.m_bSlotLock && this.m_bTokenLock), this.m_MissionBtnCtrl.setLocked(!1), this.setNewProgress(this.getCurGameNewProgress() + 1))
            }
            setNewProgress(e) {
                SS.Common.GameEnvironment.ProjectSetting.Modules[this.m_sCurGameName][this.m_curMapData.QuestID] = e, this.getAllNewProgress()
            }
            setCurGameName(e) {
                this.m_sCurGameName = e, this.m_MissionTopProgress.setGameIcon(e), this.getAllNewProgress(!0)
            }
            getAllNewProgress(e = !1) {
                let t = SS.Common.GameEnvironment.ProjectSetting.Modules;
                if (t) {
                    let o = 0;
                    for (let e = 0; e < this.m_arrMissionData.length; e++) {
                        let n = 0,
                            i = t[this.getGameNameByThemeID(this.m_arrMissionData[e].ThemeID)];
                        null == i ? cc.error("[getAllNewProgress]\u6c92\u6709element!(ThemeID:" + this.m_arrMissionData[e].ThemeID + " QuestID:" + this.m_curMapData.QuestID + ")") : n = i[this.m_curMapData.QuestID], ((n = n || 0) > 0 || this.m_arrMissionData[e].m_fProgressRate > 0) && (o += n, this.m_arrMissionData[e].newProgress = n, this.m_arrMissionData[e].Priority = -(n + this.m_arrMissionData[e].m_fProgressRate))
                    }
                    this.m_iTotalProgressAddAll = o, e && this.m_RankBonusTotalProgress.setProgress(this.m_iTotalProgressCur - this.m_iTotalProgressAddAll);
                    let n = self == top ? this.m_iTotalProgressCur - this.m_iTotalProgressAddAll : this.m_RankBonusTotalProgress.getProgress();
                    this.m_MissionBtnCtrl.setNumDot(this.m_iTotalProgressAddAll, n)
                }
            }
            clearAllNewProgress() {
                cc.log("clearAllNewProgress");
                let e = SS.Common.GameEnvironment.ProjectSetting.Modules;
                if (e) {
                    for (let t = 0; t < this.m_arrMissionData.length; t++) {
                        let o = e[this.getGameNameByThemeID(this.m_arrMissionData[t].ThemeID)];
                        null == o ? cc.error("[ClearAllNewProgress]\u6c92\u6709element!(ThemeID:" + this.m_arrMissionData[t].ThemeID + " QuestID:" + this.m_curMapData.QuestID + ")") : o[this.m_curMapData.QuestID] && (o[this.m_curMapData.QuestID] = 0)
                    }
                    this.m_iTotalProgressAddAll = 0, this.m_MissionBtnCtrl.setNumDot(this.m_iTotalProgressAddAll, this.m_RankBonusTotalProgress.getProgress())
                }
            }
            parseSpinData(e) {
                let t = this.getCurGameMisData();
                if (null != t) try {
                    let n = e.cmd_data;
                    if (n.hasOwnProperty("data") && n.data.hasOwnProperty("eventInfo") && n.data.eventInfo.hasOwnProperty("900004") && n.data.eventInfo[900004].hasOwnProperty("UserQuestData")) {
                        let e = n.data.eventInfo[900004].UserQuestData;
                        this.parseUserDataList(e);
                        for (let o = 0; o < e.length; o++) {
                            let n, i, s = e[o];
                            if (t.ThemeID == s.GameThemeID && t.QuestID == s.QuestID && t.QuestLevel == s.QuestLevel) {
                                if (t.Status = s.Status, t.Status == y.UserQuestDataStatus.AWARD_CLAIMED) break;
                                if (t.QuestType == y.QustObjectiveType.SPIN_TIME) i = t.SpinTimesGate, n = s.SpinTimes, t.SpinTimes = n;
                                else if (t.QuestType == y.QustObjectiveType.SPIN_AMOUNT) i = t.SpinAmountGate, n = s.SpinAmount, t.SpinAmount = n;
                                else if (t.QuestType == y.QustObjectiveType.WIN_AMOUNT) i = t.WinAmountGate, n = s.WinAmount, t.WinAmount = n;
                                else {
                                    if (t.QuestType != y.QustObjectiveType.CUSTOM) {
                                        console.warn("parseSpinData else");
                                        continue
                                    }
                                    i = t.CustomGate, n = s.CustomAmount, t.CustomAmount = n
                                }
                                let e = n / i;
                                e = e > 1 ? 1 : e, this.m_MissionTopProgress.setProgressChargeTo(e), (0 == this.m_iLastProgress && e > 0 || 1 != this.m_iLastProgress && 1 == e || e - this.m_iLastProgress >= .1) && (e >= 1 && (this.m_MissionTopProgress.m_fucFullChargeCB = this.getTokenShow.bind(this)), this.m_MissionTopProgress.show(!0, t.CustomInfoMsg), this.m_iLastProgress = e >= 1 ? 0 : e);
                                break
                            }
                        }
                        this.updateMisInfo()
                    }
                } catch (o) {
                    console.error("parseSpinData error")
                } else console.warn("curGameMisData==null")
            }
            getTokenShow() {
                this.m_bTokenLock = !1, this.SetAllBtnInteract(this.m_bSlotLock && this.m_bTokenLock), this.m_MissionBtnCtrl.setLocked(!0), this.m_CommGetTokenShow && this.m_CommGetTokenShow.moveToken(this.gotNewToken.bind(this))
            }
            parseMisInfo(e) {
                if (null == e) return !1;
                try {
                    let o = JSON.parse(e);
                    if (o.hasOwnProperty("Enable") && o.Enable && o.hasOwnProperty("QuestList") && o.QuestList.length > 0 && o.hasOwnProperty("UserQuestData")) {
                        let e = o.QuestList,
                            t = o.UserQuestData;
                        if (this.m_arrMissionData = [], 0 == e.length) return !1;
                        this.m_iBeginTime = o.BeginTimeUTC, this.m_iEndTime = o.EndTimeUTC, this.m_iNowTime = o.NowTimeUTC;
                        for (let o = 0; o < e.length; o++) {
                            let n = new y.CommBonusData,
                                i = e[o];
                            if (100 == i.TitleType || 102 == i.TitleType) {
                                n.QuestID = i.QuestID, n.QuestLevel = i.QuestLevel, n.ThemeID = i.GameThemeID, n.SpinTimesGate = i.SpinTimesGate, n.SpinAmountGate = i.SpinAmountGate, n.WinAmountGate = i.WinAmountGate, n.CustomGate = i.CustomGate, n.CustomType = i.CustomType, n.CustomInfo = i.CustomInfo, n.Award = i.Award, n.Priority = i.Priority, n.CycleSeconds = i.CycleSeconds, n.ExpireTimeUTC = i.ExpireTimeUTC, null != i.CustomInfo && i.CustomInfo.hasOwnProperty("Msg") && (n.CustomInfoMsg = i.CustomInfo.Msg);
                                for (let e = 0; e < t.length; e++) {
                                    let o = t[e];
                                    if (n.QuestID == o.QuestID && n.QuestLevel == o.QuestLevel && n.ThemeID == o.GameThemeID) {
                                        n.SpinTimes = o.SpinTimes, n.SpinAmount = o.SpinAmount, n.WinAmount = o.WinAmount, n.CustomAmount = o.CustomAmount, n.Status = o.Status;
                                        break
                                    }
                                }
                                if (100 == i.TitleType && this.checkThemeIsOpen(i.GameThemeID)) this.setGateAndAmount(n), this.m_arrMissionData.push(n), cc.log("[parseMisInfo]Quest: " + n.QuestID + "  Themem: " + n.ThemeID);
                                else if (102 == i.TitleType) {
                                    if (n.RankSize = i.CustomInfo.RankNum, i.CustomInfo && i.CustomInfo.RankAward && (n.RankSize = i.CustomInfo.RankNum, i.CustomInfo && i.CustomInfo.RankAward))
                                        for (let e = 0; e < i.CustomInfo.RankAward.length; e++) {
                                            let t = i.CustomInfo.RankAward[e],
                                                o = new y.RankAwardData;
                                            o.Begin = t.Begin, o.End = t.End, o.Award = t.Award, t.hasOwnProperty("Item") && (o.ItemID = t.Item[0].ItemId, o.ItemAmount = t.Item[0].Amount), n.m_arrRankAwardData.push(o)
                                        }
                                    if (n.bonusData = this.parseBonusData(i.ExtraInfo), Date.now(), n.bonusData.jp_begin_time <= this.m_iNowTime && n.bonusData.jp_end_time > this.m_iNowTime && (this.m_curMapData = n, this.updateBonusPrize(), this.m_PlayerRankingMgr.showRanking(this.m_curMapData), this.m_iTotalProgressMax = i.CustomGate, this.parseUserDataList(t), s.LobbyClient.Instance.GetJPSystem.getTreasureMapCB = this.parseAndUpdateBonusData.bind(this)), n.Status == y.UserQuestDataStatus.AWARD_AVAILABLE) this.m_arrAwardAvaiMapData.push(n);
                                    else if (n.Status == y.UserQuestDataStatus.QUEST_NOT_DONE && n.bonusData.jp_end_time <= this.m_iNowTime) {
                                        let e = n.bonusData.ranking_list;
                                        for (let t = 0; t < e.length; t++)
                                            if (e[t].ranking_id == n.bonusData.ranking_id) {
                                                this.m_arrAwardAvaiMapData.push(n);
                                                break
                                            }
                                    }
                                }
                            } else 300 == i.TitleType && (this.m_bFishEventRun = !0)
                        }
                        return !0
                    }
                    return !1
                } catch (t) {
                    return console.error("parseMisInfo"), !1
                }
            }
            parseUserDataList(e) {
                for (let t = 0; t < e.length; t++) {
                    let o = e[t];
                    if (o.QuestID == this.m_curMapData.QuestID) {
                        this.m_iTotalProgressCur = o.CustomAmount, this.m_TotalPrgressStatus = o.Status;
                        break
                    }
                }
            }
            parseBonusData(e) {
                let t = new y.BonusData;
                try {
                    if (t.exchange_rate = e.exchange_rate, t.extra_jp_value = e.extra_jp_value, t.jp_value = e.jp_value, t.people = e.people, t.quest_id = e.quest_id, t.state_id = e.state_id, t.jp_begin_time = e.jp_begin_time ? e.jp_begin_time : this.m_curMapData && this.m_curMapData.bonusData && this.m_curMapData.bonusData.jp_begin_time ? this.m_curMapData.bonusData.jp_begin_time : "", t.jp_end_time = e.jp_end_time ? e.jp_end_time : this.m_curMapData && this.m_curMapData.bonusData && this.m_curMapData.bonusData.jp_end_time ? this.m_curMapData.bonusData.jp_end_time : "", t.ranking_id = this.m_curMapData && this.m_curMapData.bonusData && this.m_curMapData.bonusData.ranking_id ? this.m_curMapData.bonusData.ranking_id : e.ranking_id ? e.ranking_id : "", t.AvatarID = this.m_curMapData && this.m_curMapData.bonusData && this.m_curMapData.bonusData.AvatarID ? this.m_curMapData.bonusData.AvatarID : e.equip_avatar ? e.equip_avatar : "", t.AvatarFrameID = this.m_curMapData && this.m_curMapData.bonusData && this.m_curMapData.bonusData.AvatarFrameID ? this.m_curMapData.bonusData.AvatarFrameID : e.equip_avatar_frame ? e.equip_avatar_frame : "", t.Nickname = this.m_curMapData && this.m_curMapData.bonusData && this.m_curMapData.bonusData.Nickname ? this.m_curMapData.bonusData.Nickname : e.nick_name ? e.nick_name : "", t.pin_ark_id = this.m_curMapData && this.m_curMapData.bonusData && this.m_curMapData.bonusData.pin_ark_id ? this.m_curMapData.bonusData.pin_ark_id : e.ark_id ? e.ark_id : "", t.ranking_list, t.ranking_list = [], e.hasOwnProperty("ranking_list")) {
                        let o = e.ranking_list;
                        if (o && o[0])
                            for (let e = 0; e < o.length; e++) {
                                let n = o[e],
                                    i = new y.RankingPlayerData;
                                i.amount = n.amount, i.ark_id = n.ark_id, i.ranking_id = n.ranking_id, i.time = n.time, t.ranking_list.push(i)
                            }
                    }
                } catch (o) {
                    console.error(o), t = null
                }
                return t
            }
            parseAndUpdateBonusData(e) {
                let t = this.parseBonusData(e);
                this.m_curMapData && t && this.m_curMapData.QuestID == t.quest_id && (this.m_curMapData.bonusData = t, this.updateBonusPrize(), this.IsNeedToRefreshRankPage() && this.m_PlayerRankingMgr.showRanking(this.m_curMapData))
            }
            IsNeedToRefreshRankPage() {
                let e = !1,
                    t = JSON.stringify(this.m_curMapData.bonusData.ranking_list),
                    o = this.sampleHashCode(t);
                return (1 == this.m_ActivitiesMgrRoot.activeInHierarchy && this.m_RankingListHash != o || this.GetTimestamp() > this.m_RankingRefreshTimestamp + 600) && (this.m_RankingRefreshTimestamp = this.GetTimestamp(), this.m_RankingListHash = o, e = !0), t = null, e
            }
            sampleHashCode(e) {
                let t = 0;
                for (let o = 0, n = e.length; o < n; o++) t = (t << 5) - t + e.charCodeAt(o), t |= 0;
                return t
            }
            setGateAndAmount(e) {
                let t, o;
                e.SpinTimesGate > 0 ? (e.QuestType = y.QustObjectiveType.SPIN_TIME, t = e.SpinTimesGate, o = e.SpinTimes, e.CustomInfoMsg = "Complete " + e.SpinTimesGate + " spin times") : e.SpinAmountGate > 0 ? (e.QuestType = y.QustObjectiveType.SPIN_AMOUNT, t = e.SpinAmountGate, o = e.SpinAmount, e.CustomInfoMsg = this.m_sSpinAmountGateStr.replace("{0}", e.SpinAmountGate.toString())) : e.WinAmountGate > 0 ? (e.QuestType = y.QustObjectiveType.WIN_AMOUNT, t = e.WinAmountGate, o = e.WinAmount, e.CustomInfoMsg = "Accumulate winning above " + e.WinAmountGate) : 0 != e.CustomType ? (e.QuestType = y.QustObjectiveType.CUSTOM, t = e.CustomGate, o = e.CustomAmount) : console.error("setGateAndAmount error"), e.m_fProgressRate = o / t
            }
            TimeCountDownCallBack() {
                console.warn("execute mission TimeCountDownCallBack !!"), h.AudioMgr.Instance.Play("Missions_Call", !1, 1), console.warn("close active page And Open falotButton !!"), this.setActivityRoot(!1), D.EventSystem.Event(D.CommunityBonus.TimesUp).Length > 0 && D.EventSystem.Event(D.CommunityBonus.TimesUp).Notify(), this.m_status = k.IDLE
            }
            InitTimer() {
                let e = this.m_iEndTime - this.m_iNowTime;
                if (!(e < 0)) {
                    for (let t = 0; t < this.m_arrMissionData.length; t++) {
                        let o = this.m_arrMissionData[t].ExpireTimeUTC - this.m_iNowTime;
                        o > 0 && o < e && (e = o)
                    }
                    this.ForceSetTime(e)
                }
            }
            ForceSetTime(e) {
                this.PauseTimer(), this._countDownTime = e, this.UpdateUI(this._countDownTime), this.StartConutDownTimer()
            }
            UpdateUI(e) {
                let t = e >= 86400 ? ": {day} days {hr}:{min}:{sec}" : ": {hr}:{min}:{sec}";
                null != this.gameMenuTimeCountdown && (this.gameMenuTimeCountdown.UpdateUIWithFormate(e, this.m_sEndsInTime + t), this.gameMenuTimeCountdown.node.active = !0), null != this.floatBtnTimeCountDown && (this.floatBtnTimeCountDown.UpdateUIWithDay(e), this.floatBtnTimeCountDown.node.active = !0), null != this.finishPageTimeCountDown && (this.finishPageTimeCountDown.UpdateUIWithFormate(e, t), this.finishPageTimeCountDown.node.active = !0)
            }
            PauseTimer() {
                clearInterval(this.intervalID)
            }
            Timer(e) {
                if (--e._countDownTime, e._countDownTime <= 0) {
                    this.m_iLastProgress = 0, this.clearAllNewProgress(), this.reloadLobby(), this.m_PlayerRankingMgr.Clear(), e._countDownTime = 0, e.PauseTimer(), e.GetMissionCmdCallBack = e.TimeCountDownCallBack;
                    let t = (new Date).getTime();
                    this.m_dateLastTimeOpenPanel = t, this.m_sLastSeason = this.m_curMapData.QuestID, this.m_curMapData = null, s.LobbyClient.Instance.GetJPSystem && (s.LobbyClient.Instance.GetJPSystem.getTreasureMapCB = null), this.m_status = k.DISABLE
                }
                e.UpdateUI(e._countDownTime)
            }
            StartConutDownTimer() {
                -1 != this.intervalID && clearInterval(this.intervalID), this.intervalID = setInterval(() => this.Timer(this), 1e3)
            }
            getGameNameByThemeID(e) {
                let t = "";
                try {
                    t = SS.Common.GameEnvironment.GameSetting.Icon[e].GameName
                } catch (o) {}
                return t
            }
            getThemeIDByGameName(e) {
                try {
                    let o = SS.Common.GameEnvironment.GameSetting.Icon;
                    for (let t in o)
                        if (o[t].GameName == e) return t
                } catch (t) {}
                return ""
            }
            checkThemeIsOpen(e) {
                let t = SS.Common.GameEnvironment.GameSetting.DisableGame,
                    o = SS.Common.GameEnvironment.GameSetting.Type.ALL,
                    n = t.indexOf(e),
                    i = this.getGameNameByThemeID(e),
                    s = -1 == o[0].indexOf("es_") ? "" : "es_",
                    r = o.indexOf(s + i),
                    a = o.indexOf(s + "BIGICON_" + i);
                return -1 == n && (r > -1 || a > -1)
            }
            ToggleMissionTimeCountDown(e) {
                e ? (this.gameMenuTimeReci.active = !0, this.floatBtnTimeReci.active = !0) : (this.gameMenuTimeReci.active = !1, this.floatBtnTimeReci.active = !1)
            }
            OnDragEnd() {
                console.warn("?\ufffd\u66f3\u7d50\ufffd?")
            }
            ToggleFinishMissionPage(e) {
                this.m_FinishPageTimer.show(e), this.m_nodeHint.active = !e && this.m_iTotalProgressCur < this.m_iTotalProgressMax, this.m_nodeHintRank.active = !e && this.m_iTotalProgressCur >= this.m_iTotalProgressMax, this.m_bShowFinish = e
            }
            closeFinishPage() {
                this.ToggleFinishMissionPage(!1), this.m_status = k.RANK_TOKEN_FLY_TOP
            }
            openReadMePage() {
                this.setReadMePage(!0), s.LobbyClient.Instance.GetUserClient.recordClickLog("Rank", y.RankClickLogID.INFO_BTN)
            }
            closeReadMePage() {
                this.setReadMePage(!1), s.LobbyClient.Instance.GetUserClient.recordClickLog("Rank", y.RankClickLogID.INFO_X_BTN)
            }
            closeRankIDPopup() {
                this.m_nodeRankIDPopup.active = !1, s.LobbyClient.Instance.GetUserClient.recordClickLog("Rank", y.RankClickLogID.RANKING_ID_X_BTN)
            }
            switchRankingPage() {
                this.showRankingPage(!this.m_bInRankingPage), this.m_bInRankingPage && this.m_PlayerRankingMgr.showRanking(this.m_curMapData), this.m_bInRankingPage ? s.LobbyClient.Instance.GetUserClient.recordClickLog("Rank", y.RankClickLogID.SWITCH_TO_RANK_PAGE) : s.LobbyClient.Instance.GetUserClient.recordClickLog("Rank", y.RankClickLogID.SWITCH_TO_GAME_PAGE)
            }
            fadeToRankingPage() {
                this.m_bInRankingPage = !0, this.m_nodeRankingPage.active = !0, this.m_nodeObjList.active = !0, this.m_nodeJPTag.active = !1, this.m_nodeRangTag.active = !0, this.m_nodeJPTagBtn.active = !0, this.m_nodeRangTagBtn.active = !1, this.m_nodeRankingPage.opacity = 0, cc.tween(this.m_nodeRankingPage).to(1, {
                    opacity: 255
                }).start(), this.m_nodeRangTag.opacity = 0, cc.tween(this.m_nodeRangTag).to(1, {
                    opacity: 255
                }).start(), this.m_nodeJPTagBtn.opacity = 0, cc.tween(this.m_nodeJPTagBtn).to(1, {
                    opacity: 255
                }).start(), this.m_nodeObjList.opacity = 255, cc.tween(this.m_nodeObjList).to(1, {
                    opacity: 0
                }).call(() => {
                    this.showRankingPage(!0), this.m_nodeObjList.opacity = 255, this.m_status = k.IDLE
                }).start()
            }
            showRankingPage(e) {
                this.m_nodeRankingPage.opacity = 255, this.m_nodeObjList.opacity = 255, this.m_bInRankingPage = e, this.m_nodeRankingPage.active = e, this.m_nodeObjList.active = !e, this.m_nodeJPTag.active = !e, this.m_nodeRangTag.active = e, this.m_nodeJPTagBtn.active = e, this.m_nodeRangTagBtn.active = !e, this.showReadMePage(!1, this.m_nodeReadMePage_Rank), this.showReadMePage(!1, this.m_nodeReadMePage)
            }
            hideBothPage() {
                this.m_nodeRankingPage.active = !0, this.m_nodeRankingPage.opacity = 0, this.m_nodeObjList.active = !0, this.m_nodeObjList.opacity = 0
            }
            showRankingID(e) {
                this.m_bNoobGuideRanking = !1, this.m_nodeRankIDPopup.active = !1
            }
            setReadMePage(e) {
                this.m_nodeDarkerBG.active = e, this.m_bInRankingPage ? (this.m_nodeRankingPage.active = !e, this.showReadMePage(e, this.m_nodeReadMePage_Rank)) : (this.m_nodeObjList.active = !e, this.showReadMePage(e, this.m_nodeReadMePage))
            }
            showReadMePage(e, t) {
                if (!(t.getNumberOfRunningActions() > 0))
                    if (t.stopAllActions(), t.scale = 1, t.opacity = 255, e) t.active = !0;
                    else {
                        let e = cc.fadeOut(.25),
                            o = cc.scaleTo(.5, 0),
                            n = cc.callFunc(() => t.active = !1),
                            i = cc.sequence(cc.spawn(e, o), n);
                        t.runAction(i)
                    }
            }
            setActivityRoot(e) {
                this.m_ActivitiesMgrRoot.active = e, this.m_MissionBtnCtrl.setNumDot(this.m_iTotalProgressAddAll, this.m_RankBonusTotalProgress.getProgress()), this.m_MissionBtnCtrl.show(!e), this.hideBothPage(), h.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), e ? (this.m_CommBonusTotalProgress.setTokens(this.m_iTotalProgressCur - this.m_iTotalProgressAddAll), this.m_RankBonusTotalProgress.node.active = this.m_CommBonusTotalProgress.hasGotAllToken(), this.m_nodeHint.active = this.m_iTotalProgressCur < this.m_iTotalProgressMax, this.m_nodeHintRank.active = this.m_iTotalProgressCur >= this.m_iTotalProgressMax) : this.ResetSiblingIndex()
            }
            OpenSelectOptionPage(e, t) {
                if (!this.m_bBtnInterActable) return;
                let o = this.getThemeIDByGameName(this.m_strChangeToGameName);
                if (cc.warn("switch to theme id: " + o), s.LobbyClient.Instance.GetUserClient.recordClickLog("Rank", parseInt(o)), h.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.m_strChangeToGameName = String(t), this.m_sCurGameName == this.m_strChangeToGameName) return console.warn("?\ufffd\ufffd??\ufffd\u6232\uff0c\ufffd??\ufffd\ufffd?\u8df3\ufffd??\ufffd\ufffd? !!"), void this.OnClickReturnBtn();
                this.setActivityRoot(!1), T.ClickLog.EntryPoint = R.LogEvent_EntryPoint.Event, self == top ? this.m_LobbyMgr.switchGame.OnSwitchGameIgnoreWindow(this.m_strChangeToGameName) : l.CommonRoot.Instance.m_switchGameGroup.OpenSwitchGameWindow(this.m_strChangeToGameName, this.m_sCurGameName)
            }
            onClickTopRankingInfo() {
                this.m_bInRankingPage ? this.m_PlayerRankingMgr.scrollToPlayer() : (this.showRankingPage(!0), this.m_PlayerRankingMgr.showRanking(this.m_curMapData), this.m_PlayerRankingMgr.scrollToTop()), s.LobbyClient.Instance.GetUserClient.recordClickLog("Rank", y.RankClickLogID.TOP_PROGRESS)
            }
            OnClickReturnBtn() {
                this.m_status != k.COLLECT && (this.setActivityRoot(!1), this.setReadMePage(!1), s.LobbyClient.Instance.GetUserClient.recordClickLog("Rank", y.RankClickLogID.MAIN_X_BTN))
            }
            onProfileSwitchGame() {
                this.setActivityRoot(!1), this.setReadMePage(!1)
            }
            OnClickLeaveGameBtn() {
                this.m_bBtnInterActable && (console.log("OnClickLeaveGameBtn !!"), h.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.OnClickReturnBtn(), this.SetReadyChangeGame())
            }
            OnClickFloatBtn() {
                this.m_bBtnInterActable && (this.setOnTop(), E.EventTipsMask.Instance && E.EventTipsMask.Instance.hide(), s.LobbyClient.Instance.GetUserClient.recordClickLog("Rank", y.RankClickLogID.FLOAT_BTN), this.m_MissionBtnCtrl.showFingerPtr(!1), this.GetMissionCmdCallBack = this.ClickFloatBtnCallEvent, this.m_status = k.UPDATE_CMD)
            }
            ClickFloatBtnCallEvent() {
                this.setActivityRoot(!0), this.m_MissionListCtrl.setScrollTop(), this.getAllNewProgress(), this.getCurGameMisData() && (this.getCurGameMisData().Priority = -99), this.m_MissionListCtrl.updateMisInfo(this.m_arrMissionData), 0 == this.m_iTotalProgressCur && (this.m_NewPlayerGuideCtrl ? this.m_NewPlayerGuideCtrl.checkCoockieAndShow(this.showRankingPage.bind(this, !0), this.showRankingPage.bind(this, !1), this.showRankingID.bind(this, !0)) : this.showRankingID(!0))
            }
            SendMissionBonusInfoCmd(e = !0) {
                this.GetMissionCmdCallBack, this.TimeCountDownCallBack, 1 != this.isRequestInfoNow && (this.isRequestInfoNow = !0, console.log("SendCmd GetMissionBonusInfo"), s.LobbyClient.Instance.GetUserClient.getCommonEventInfo(this.recMissionInfo.bind(this)))
            }
            OnClickCollectBtn(e, t) {
                h.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1);
                let o = this.getMisDataByThemeID(t.toString());
                this.setCollectMisData(o), this.m_MissionListCtrl.getMissionInfoCtrlByThemeID(t.toString())
            }
            setCollectMisData(e) {
                console.warn(e), (e.Status = y.UserQuestDataStatus.AWARD_AVAILABLE) && (this.collectMisData = e, this.m_status = k.COLLECT)
            }
            rcvCollectQuestAck(e, t) {
                return i(this, void 0, void 0, function*() {
                    if (e == ArkSDK.HttpResult.OK && t && t.cmd_data && t.cmd_data.data)
                        if (console.log("CommBonusMgr.rcvCollectQuestAck  Success : ", t), 0 == t.cmd_data.result) {
                            let e;
                            SS.Common.GameEnvironment.IsUseScoreBox ? (this.m_iAwardNum = t.cmd_data.data.AwardWinnings, this.m_iFinalBalance = t.cmd_data.playerInfo.winnings, e = f.ShowType.WINNING) : (this.m_iFinalBalance = t.cmd_data.playerInfo.winnings + t.cmd_data.playerInfo.entries, this.m_iAwardNum = t.cmd_data.data.AwardWinnings + t.cmd_data.data.AwardEntries, e = f.ShowType.CREDIT), this.node.setSiblingIndex(100);
                            let o = t.cmd_data.data.ExtraInfo;
                            o.hasOwnProperty("equip_avatar") || (o.equip_avatar = SS.Network.UserClient.UserInfo.avatar_id), o.hasOwnProperty("equip_avatar_frame") || (o.equip_avatar_frame = SS.Network.UserClient.UserInfo.avatar_frame_id), o.hasOwnProperty("nick_name") || (o.nick_name = SS.Network.UserClient.UserInfo.nickname), o.hasOwnProperty("ark_id") || (o.ark_id = SS.Network.LoginModel.LoginInfo.pin_ark_id), yield this.CheckPlayerProfileList(o), this.showLoginGetAward(!0, o.ranking_id, o.equip_avatar, o.equip_avatar_frame, o.nick_name, o.ark_id, this.m_iAwardNum, o.ranking_award, o.exchange_rate, o.ranking_list), this.lobbySetUserBalance(t.cmd_data.playerInfo), null == this.m_FakeScoreBoxCtrl && this.InstantiateFakeScoreBox(), this.m_FakeScoreBoxCtrl.show(e, this.m_iFinalBalance - this.m_iAwardNum - o.ranking_award), r.ConnectPanelMgr.Instance.DisableConnectPanel(0)
                        } else switch (t.cmd_data.result) {
                            case 1:
                                a.PopupMsgMgr.Instance.ShowPopMsg(a.PopupPriority.Info, "S174", null, null, null), this.lobbySetUserBalance(t.cmd_data.playerInfo), r.ConnectPanelMgr.Instance.DisableConnectPanel(0);
                                break;
                            case -999:
                                a.PopupMsgMgr.Instance.ShowPopMsg(a.PopupPriority.Info, "S175", null, null, null);
                                break;
                            default:
                                a.PopupMsgMgr.Instance.ShowPopMsg(a.PopupPriority.Critical, "S189", null, null, null)
                        } else {
                            let t = "";
                            t = e == ArkSDK.HttpResult.Abort ? "S183" : e == ArkSDK.HttpResult.Condition ? "S184" : e == ArkSDK.HttpResult.Error ? "S187" : e == ArkSDK.HttpResult.NotReset ? "S185" : e == ArkSDK.HttpResult.Status ? "S186" : e == ArkSDK.HttpResult.Timeout ? "S188" : "S189", a.PopupMsgMgr.Instance.ShowPopMsg(a.PopupPriority.Critical, t, null, null, null)
                        }
                })
            }
            recvPlayerProfileList(e, t) {
                null == t || null == t ? cc.error("!!! recvPlayerProfileList is null !!! ", e, t) : t.hasOwnProperty("cmd_data") && t.cmd_data.hasOwnProperty("player_profile_list") && (this.m_PlayerProfileList = t.cmd_data.player_profile_list), this.m_isRecvPlayerProfileList = !0
            }
            waitPlayerProfileList() {
                return i(this, void 0, void 0, function*() {
                    let e = 0;
                    for (; 0 == this.m_isRecvPlayerProfileList && e < 15;) e += .2, yield SS.Common.WaitForSeconds(.2)
                })
            }
            CheckPlayerProfileList(e) {
                return i(this, void 0, void 0, function*() {
                    let t = e.ranking_list,
                        o = [];
                    for (let e = 0; e < t.length; e++) t[e].ark_id && "" != t[e].ark_id && o.push(t[e].ark_id);
                    if (null != o) {
                        this.m_PlayerProfileList = null, this.m_isRecvPlayerProfileList = !1, s.LobbyClient.Instance.GetUserClient.getPlayerProfileList(o, this.recvPlayerProfileList.bind(this)), yield this.waitPlayerProfileList();
                        for (let o = 0; o < e.ranking_list.length; o++)
                            if (null != this.m_PlayerProfileList)
                                for (let n = 0; n < this.m_PlayerProfileList.length; n++)
                                    if (this.m_PlayerProfileList[n].hasOwnProperty("ark_id") && this.m_PlayerProfileList[n].ark_id == t[o].ark_id && this.m_PlayerProfileList[n].hasOwnProperty("equip_avatar") && this.m_PlayerProfileList[n].hasOwnProperty("equip_avatar_frame") && this.m_PlayerProfileList[n].hasOwnProperty("nick_name")) {
                                        e.ranking_list[o].AvatarID = this.m_PlayerProfileList[n].equip_avatar, e.ranking_list[o].AvatarFrameID = this.m_PlayerProfileList[n].equip_avatar_frame, e.ranking_list[o].Nickname = this.m_PlayerProfileList[n].nick_name;
                                        break
                                    }
                        t = null, o = null
                    } else cc.log("CheckPlayerProfileList no data. ", e)
                })
            }
            OnToggleMissonObj(e) {
                null != this.sData && this.m_MissionBtnCtrl.show(!e)
            }
            SetReadyChangeGame() {
                h.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), self == top ? (this.Del_ForceToGameEvent.Length > 0 && (this.Del_ForceToGameEvent.Notify(this.m_strChangeToGameName), this.Del_ForceToGameEvent.Clear()), this.m_strChangeToGameName = "") : l.CommonRoot.Instance.GetTopBarMgr.m_DelClickBackToLobby.Length > 0 && l.CommonRoot.Instance.GetTopBarMgr.m_DelClickBackToLobby.Notify()
            }
            updateBonusPrize() {
                let e = this.m_curMapData.bonusData;
                if (this.m_CommBonusMoneyMgr && e) {
                    let t = "es" == SS.Common.GameEnvironment.Language ? 1 : e.exchange_rate;
                    this.m_CommBonusMoneyMgr.setExtra(e.extra_jp_value * t), this.m_CommBonusMoneyMgr.setInfo(e.jp_value * t, e.people)
                }
            }
            updateMisInfo() {
                0 != this.m_arrMissionData.length && null != this.m_curMapData ? this.m_iEndTime < this.m_iNowTime ? setTimeout(() => {
                    this.isRequestInfoNow = !1, this.SendMissionBonusInfoCmd()
                }, 3e3) : (null != this.GetMissionCmdCallBack ? (this.GetMissionCmdCallBack(), this.GetMissionCmdCallBack = null) : this.m_status = k.IDLE, this.isRequestInfoNow = !1) : this.m_status = k.DISABLE
            }
            recMissionInfo(e, t) {
                if (e == ArkSDK.HttpResult.OK && t && t.cmd_data) {
                    let e = t.cmd_data[900004];
                    if (console.warn("CommBonusMgr.recMissionInfo: "), console.warn(e), e && 0 == e.result) {
                        let t = JSON.stringify(e.data);
                        if (this.parseMisInfo(t)) {
                            if (s.LobbyClient.Instance.m_CommonEventInfo_900004 = t, "" == this.m_sLastSeason) {
                                if (this.m_sLastSeason == this.m_curMapData.QuestID) return this.m_iUpdateRetryCtr++, void(this.m_iUpdateRetryCtr < 3 ? s.LobbyClient.Instance.GetUserClient.getCommonEventInfo(this.recMissionInfo.bind(this)) : this.m_status = k.DISABLE);
                                this.m_sLastSeason = "", this.m_iUpdateRetryCtr = 0
                            }
                            this.m_sLastSeason = this.m_curMapData.QuestID, this.updateMisInfo(), this.recMisInfoSetProgressCtr(), this.InitTimer()
                        }
                    }
                    e && e.result < 0 && (-999 == e.result ? this.m_status = k.DISABLE : (this.errorCode = "S182", a.PopupMsgMgr.Instance.ShowPopMsg(a.PopupPriority.Warning, this.errorCode, "Lobby", this.reason)))
                } else e == ArkSDK.HttpResult.Abort ? this.errorCode = "S176" : e == ArkSDK.HttpResult.Condition ? this.errorCode = "S177" : e == ArkSDK.HttpResult.Error ? this.errorCode = "S180" : e == ArkSDK.HttpResult.NotReset ? this.errorCode = "S178" : e == ArkSDK.HttpResult.Status ? this.errorCode = "S179" : e == ArkSDK.HttpResult.Timeout ? this.errorCode = "S181" : this.errorCode = "S182", this.errorMsg = "The Internet was lost! Please login again!", this.reason = t, a.PopupMsgMgr.Instance.ShowPopMsg(a.PopupPriority.Warning, this.errorCode, "Lobby", this.reason)
            }
            recMisInfoSetProgressCtr() {
                let e = this.getCurGameMisData();
                if (e) {
                    let t;
                    switch (e.QuestType) {
                        case y.QustObjectiveType.WIN_AMOUNT:
                            t = e.WinAmount / e.WinAmountGate;
                            break;
                        case y.QustObjectiveType.SPIN_AMOUNT:
                            t = e.SpinAmount / e.SpinAmountGate;
                            break;
                        case y.QustObjectiveType.SPIN_TIME:
                            t = e.SpinTimes / e.SpinTimesGate;
                            break;
                        case y.QustObjectiveType.CUSTOM:
                            t = e.CustomAmount / e.CustomGate;
                            break;
                        default:
                            console.error("CommBonusMgr.recMisInfoSetProgressCtr()")
                    }
                    this.m_MissionTopProgress.setProgressCtr(t)
                }
            }
            InstantiateFakeScoreBox() {
                if (null == this.m_FakeScoreBoxCtrl) {
                    let e = cc.instantiate(this.m_FakeScoreBoxPfb);
                    e.parent = this.m_FakeScoreBoxNode, this.m_FakeScoreBoxCtrl = e.getComponent(f.FakeScoreBoxCtrl)
                }
            }
            setLang() {
                switch (SS.Common.GameEnvironment.Language) {
                    case "":
                    case "en":
                        this.m_sSpinAmountGateStr = "Complete total entries {0}", this.m_sLoginBtnHint = "Treasure Map with Rankings\nBonus is NOW available!", this.m_sEndsInTime = "ENDS IN", this.m_sLoginGetAwardMsg = "{0} community jackpot shared by {1} people", this.m_sNumber = "No.";
                        break;
                    case "es":
                        this.m_sSpinAmountGateStr = "Completa con {0} cr\xe9ditos", this.m_sLoginBtnHint = "\xa1Collecta pisadas para ganar gran premios!\nPuedes arrastrar el \xedcono a cualquier lugar", this.m_sEndsInTime = "TERMINAR\xc1 EN", this.m_sLoginGetAwardMsg = "{0} bono comunitario repartido a {1} personas", this.m_sNumber = "N\xfam."
                }
            }
        };
        n([A(cc.Node)], N.prototype, "root", void 0), n([A(u.CommBonusBtnCtrl_Rank)], N.prototype, "m_MissionBtnCtrl", void 0), n([A(cc.Node)], N.prototype, "m_ActivitiesMgrRoot", void 0), n([A(cc.Node)], N.prototype, "m_FinishMission", void 0), n([A(cc.Label)], N.prototype, "m_labFinishMission", void 0), n([A(I.FinishPageTimer)], N.prototype, "m_FinishPageTimer", void 0), n([A(cc.Node)], N.prototype, "m_nodeMissionListCtrl", void 0), n([A(p.PlayerRankingMgr)], N.prototype, "m_PlayerRankingMgr", void 0), n([A(d.CommBonusTopProgress)], N.prototype, "m_MissionTopProgress", void 0), n([A(v.CommGetTokenShow)], N.prototype, "m_CommGetTokenShow", void 0), n([A(_.CommBonusTotalProgress)], N.prototype, "m_CommBonusTotalProgress", void 0), n([A(g.RankBonusTotalProgress)], N.prototype, "m_RankBonusTotalProgress", void 0), n([A(S.CommBonusMoneyMgr)], N.prototype, "m_CommBonusMoneyMgr", void 0), n([A(M.CommonBonusTakeAvatar)], N.prototype, "m_CommBonusTakeAvatar", void 0), n([A(cc.Node)], N.prototype, "gameMenuTimeReci", void 0), n([A(c.DateTimeCountDown)], N.prototype, "gameMenuTimeCountdown", void 0), n([A(cc.Node)], N.prototype, "floatBtnTimeReci", void 0), n([A(c.DateTimeCountDown)], N.prototype, "floatBtnTimeCountDown", void 0), n([A(cc.Node)], N.prototype, "finishPageTimeReci", void 0), n([A(c.DateTimeCountDown)], N.prototype, "finishPageTimeCountDown", void 0), n([A(m.RankAwardPanelCtrl)], N.prototype, "m_RankAwardPanelCtrl", void 0), n([A(cc.Node)], N.prototype, "m_nodeLoginGetAward", void 0), n([A(cc.Node)], N.prototype, "m_nodeLoginGetAwardOKBtn", void 0), n([A(cc.Node)], N.prototype, "m_nodeLoginGetAwardXBtn", void 0), n([A(cc.Label)], N.prototype, "m_labLoginGetAwardMsg", void 0), n([A(cc.Label)], N.prototype, "m_labLoginGetAwardWinning", void 0), n([A([cc.Animation])], N.prototype, "m_arrAnimateLoginGetAward", void 0), n([A(cc.Node)], N.prototype, "m_nodeObjList", void 0), n([A(cc.Node)], N.prototype, "m_nodeRankingPage", void 0), n([A(cc.Node)], N.prototype, "m_nodeReadMePage", void 0), n([A(cc.Node)], N.prototype, "m_nodeReadMePage_Rank", void 0), n([A(cc.Node)], N.prototype, "m_nodeRankIDPopup", void 0), n([A(cc.Label)], N.prototype, "m_labRankID", void 0), n([A(cc.Node)], N.prototype, "m_nodeDarkerBG", void 0), n([A(cc.Prefab)], N.prototype, "m_FakeScoreBoxPfb", void 0), n([A(cc.Node)], N.prototype, "m_FakeScoreBoxNode", void 0), n([A(cc.Node)], N.prototype, "m_nodeHint", void 0), n([A(cc.Node)], N.prototype, "m_nodeHintRank", void 0), n([A(cc.Node)], N.prototype, "m_nodeBlocker", void 0), n([A(b.RankingBonusListCtrl)], N.prototype, "m_RankingBonusListCtrl", void 0), n([A(cc.Node)], N.prototype, "m_nodeRangTag", void 0), n([A(cc.Node)], N.prototype, "m_nodeJPTag", void 0), n([A(cc.Node)], N.prototype, "m_nodeRangTagBtn", void 0), n([A(cc.Node)], N.prototype, "m_nodeJPTagBtn", void 0), n([A(L.NewPlayerGuideCtrl)], N.prototype, "m_NewPlayerGuideCtrl", void 0), N = n([B], N), o.CommBonusMgr_Rank = N, cc._RF.pop()
    }, {
        "../../../../../GameCommon/CommonRoot/Script/CommonRoot": "CommonRoot",
        "../../../../../LobbyCommon/Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../../../../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../../../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../../../../Component/AudioMgr": "AudioMgr",
        "../../../../Component/DateTimeCountDown": "DateTimeCountDown",
        "../../../../EventModule/EventModule": "EventModule",
        "../../../../FakeScoreBox/Script/FakeScoreBoxCtrl": "FakeScoreBoxCtrl",
        "../../../../Helper/EventSystem": "EventSystem",
        "../../../../Net/ClickLog": "ClickLog",
        "../../../../Net/ClickLogEnum": "ClickLogEnum",
        "../../../../PopUpMgr/Scripts/PriorityCustomEvent": "PriorityCustomEvent",
        "../../../EventBannerData": "EventBannerData",
        "../../../EventTipsMask": "EventTipsMask",
        "../CommBonusData": "CommBonusData",
        "../CommBonusMoneyMgr": "CommBonusMoneyMgr",
        "../CommBonusTopProgress": "CommBonusTopProgress",
        "../CommBonusTotalProgress": "CommBonusTotalProgress",
        "../CommGetTokenShow": "CommGetTokenShow",
        "../CommonBonusTakeAvatar": "CommonBonusTakeAvatar",
        "./CommBonusBtnCtrl_Rank": "CommBonusBtnCtrl_Rank",
        "./FinishPageTimer": "FinishPageTimer",
        "./NewPlayerGuideCtrl": "NewPlayerGuideCtrl",
        "./PlayerRankingMgr": "PlayerRankingMgr",
        "./RankAwardPanelCtrl": "RankAwardPanelCtrl",
        "./RankBonusTotalProgress": "RankBonusTotalProgress",
        "./RankingBonusListCtrl": "RankingBonusListCtrl"
    }],
    CommBonusMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "fcd1aPlULZO5rVi9IHuvtqt", "CommBonusMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommBonusMgr = o.MisMgrStatus = void 0;
        const i = e("../../../../LobbyCommon/Net/LobbyClient"),
            s = e("../../../../LobbyCommon/Connect/Script/ConnectPanelMgr"),
            r = e("../../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            a = e("../../../../GameCommon/CommonRoot/Script/CommonRoot"),
            l = e("../../../Component/DateTimeCountDown"),
            c = e("../../../Component/AudioMgr"),
            h = e("./CommBonusBtnCtrl"),
            m = e("./CommBonusTopProgress"),
            u = e("./CommBonusListCtrl"),
            d = e("./CommBonusTotalProgress"),
            p = e("./CommBonusMoneyMgr"),
            g = e("./CommBonusData"),
            _ = e("../../../EventModule/EventModule"),
            S = e("./../../../FakeScoreBox/Script/FakeScoreBoxCtrl"),
            y = e("./CommGetTokenShow"),
            C = e("../../EventBannerData"),
            f = e("../../../PopUpMgr/Scripts/PriorityCustomEvent"),
            v = e("../../EventTipsMask"),
            P = e("../../../Helper/EventSystem"),
            b = e("../../../Net/ClickLog"),
            w = e("../../../Net/ClickLogEnum");
        var I;
        (function(e) {
            e[e.NONE = -1] = "NONE", e[e.IDLE = 0] = "IDLE", e[e.INIT = 1] = "INIT", e[e.UPDATE_CMD = 2] = "UPDATE_CMD", e[e.COLLECT = 3] = "COLLECT", e[e.COLLECT_RCV = 4] = "COLLECT_RCV", e[e.COLLECT_SHOW = 5] = "COLLECT_SHOW", e[e.TOKEN_ENLARGE = 6] = "TOKEN_ENLARGE", e[e.TOKEN_FLY_TOP = 7] = "TOKEN_FLY_TOP", e[e.DISABLE = 8] = "DISABLE"
        })(I = o.MisMgrStatus || (o.MisMgrStatus = {}));
        const {
            ccclass: E,
            property: L
        } = cc._decorator;
        let D = class extends _.EventModule {
            constructor() {
                super(...arguments), this.root = null, this.m_MissionBtnCtrl = null, this.m_ActivitiesMgrRoot = null, this.m_FinishMission = null, this.m_labFinishMission = null, this.m_MissionListCtrl = null, this.m_MissionTopProgress = null, this.m_CommGetTokenShow = null, this.m_CommBonusTotalProgress = null, this.m_CommBonusMoneyMgr = null, this.gameMenuTimeReci = null, this.gameMenuTimeCountdown = null, this.floatBtnTimeReci = null, this.floatBtnTimeCountDown = null, this.finishPageTimeReci = null, this.finishPageTimeCountDown = null, this.m_nodeLoginGetAward = null, this.m_nodeLoginGetAwardOKBtn = null, this.m_nodeLoginGetAwardXBtn = null, this.m_labLoginGetAwardMsg = null, this.m_labLoginGetAwardWinning = null, this.m_arrAnimateLoginGetAward = [], this.m_nodeObjList = null, this.m_nodeReadMePage = null, this.m_FakeScoreBoxCtrl = null, this.m_labHint = null, this.m_nodeBlocker = null, this.m_dateLastTimeOpenPanel = 0, this.m_arrMissionData = [], this.m_arrAwardAvaiMapData = [], this.m_iAwardNum = 0, this.m_iBeginTime = -1, this.m_iEndTime = -1, this.m_iNowTime = -1, this.sData = "", this.errorCode = "", this.reason = "", this.errorMsg = "", this.isClickClaimBtn = !1, this.m_bBtnInterActable = !0, this.isTheFirstToLobby = !1, this.isRequestInfoNow = !1, this.intervalID = -1, this._countDownTime = 0, this.tapMissionIconContent = "Treasure Map \nis NOW available!", this.tapNewIconContent = "New Bonus are available.", this.newMissionContent = "Come to check it out New Missions event!", this.collectAwardContent = "Collect your winning {0} !!! Tap on the icon to explore.", this.dragFloatBtn = null, this.curMisData = null, this.collectMisData = null, this.maxGameLineBet = 0, this.maxGameLines = 0, this.m_sCurGameName = "", this.SetUserBalance = null, this.SetGoToLobby = null, this.ClickClaimBtnEvent = null, this.SetFinshSingleMission = null, this.GetMissionCmdCallBack = null, this.Del_ForceToGameEvent = null, this.m_status = I.NONE, this.m_lastStatus = I.NONE, this.m_iLastProgress = 0, this.m_jsonPlayerInfo = null, this.m_strChangeToGameName = "", this.m_iTotalPrgressMax = 0, this.m_iTotalPrgressCur = 0, this.m_TotalPrgressStatus = g.UserQuestDataStatus.NONE, this.m_iTotalProgressAddAll = 0, this.m_bShowFinish = !1, this.m_iFinalBalance = 0, this.m_bFirstClickGetAward = !0, this.m_bTotalPrgressGetFull = !1, this.m_bSlotLock = !0, this.m_bTokenLock = !0, this.m_bFishEventRun = !1
            }
            update() {
                let e = this.m_status != this.m_lastStatus;
                switch (this.m_lastStatus = this.m_status, this.m_status) {
                    case I.IDLE:
                        e && (console.warn("MisMgrStatus.IDLE"), s.ConnectPanelMgr.Instance.DisableConnectPanel(0), this.m_nodeBlocker.active = !1, this.ToggleFinishMissionPage(this.m_CommBonusTotalProgress.hasGotAllToken()));
                        break;
                    case I.INIT:
                        break;
                    case I.UPDATE_CMD:
                        e && (console.warn("MisMgrStatus.UPDATE_CMD"), this.isClickClaimBtn ? (this.isClickClaimBtn = !1, s.ConnectPanelMgr.Instance.DisableConnectPanel(0)) : (s.ConnectPanelMgr.Instance.ShowConnectPanel(0), this.collectMisData && (this.m_MissionListCtrl.m_strCollectQuestID = this.collectMisData.QuestID)), this.collectMisData = null, this.m_MissionTopProgress.show(!1), this.SendMissionBonusInfoCmd());
                        break;
                    case I.TOKEN_ENLARGE:
                        e && (console.warn("MisMgrStatus.TOKEN_ENLARGE"), this.m_nodeBlocker.active = !0, s.ConnectPanelMgr.Instance.DisableConnectPanel(0), this.m_iTotalProgressAddAll - this.getCurGameNewProgress() > 0 ? (this.ToggleFinishMissionPage(!1), this.m_CommBonusTotalProgress.enLargeOneByOne(Math.min(this.m_iTotalPrgressCur, this.m_iTotalPrgressMax) - this.m_iTotalProgressAddAll, this.m_iTotalProgressAddAll - this.getCurGameNewProgress())) : this.m_status = I.TOKEN_FLY_TOP);
                        break;
                    case I.TOKEN_FLY_TOP:
                        if (e)
                            if (console.warn("MisMgrStatus.TOKEN_FLY_TOP"), this.getCurGameNewProgress() > 0) {
                                this.ToggleFinishMissionPage(!1);
                                let e = this.m_MissionListCtrl.m_aryInfoCtrlList[0].m_nodeToken;
                                this.m_CommBonusTotalProgress.showOneByOne(Math.min(this.m_iTotalPrgressCur, this.m_iTotalPrgressMax) - this.getCurGameNewProgress(), this.getCurGameNewProgress(), e), this.clearAllNewProgress()
                            } else this.clearAllNewProgress(), this.m_status = I.IDLE;
                        break;
                    case I.DISABLE:
                        e && (console.warn("MisMgrStatus.DISABLE"), s.ConnectPanelMgr.Instance.DisableConnectPanel(0), this.m_iLastProgress = 0, this.disableBannerPopUp(), this.root.active = !1)
                }
            }
            onLoad() {
                this.m_ActivitiesMgrRoot.active = !1, this.floatBtnTimeCountDown.node.active = !1, this.gameMenuTimeCountdown.node.active = !1, this.m_nodeBlocker.active = !1
            }
            start() {
                if (this.m_MissionBtnCtrl.init(this), this.m_MissionTopProgress.init(), this.m_MissionListCtrl.init(this), this.isTheFirstToLobby = null == SS.Common.GameEnvironment.CurrentGameVersion || "" == SS.Common.GameEnvironment.CurrentGameVersion, this.m_LobbyMgr && this.m_LobbyMgr.popUpMgr.onCloseAllPopupEvent.push(this.popUpClosed.bind(this)), this.finishPageTimeCountDown && (this.finishPageTimeCountDown.node.active = !1), this.parseMisInfo(i.LobbyClient.Instance.m_CommonEventInfo_900004) && (this.m_curMapData && (self == top && this.isTheFirstToLobby && this.clearAllNewProgress(), this.getAllNewProgress()), this.updateMisInfo(), this.InitTimer()), self == top) {
                    this.m_MissionBtnCtrl.show(!0), this.SetUserBalance = this.lobbySetUserBalance.bind(this), console.warn("\u5f69\u91d1\u8a3b\u518a");
                    let e = new f.PriorityCustomEvent(f.PopEventPriority.CommBonus, this.loginGetAward.bind(this));
                    this.m_LobbyMgr.popUpMgr.priorityShowEvents.push(e), null == SS.Common.GameEnvironment.CurrentGameVersion || SS.Common.GameEnvironment.CurrentGameVersion;
                    let t = new C.EventBannerData("TreasureMap", 100, this.onClickBnnerCB.bind(this));
                    t.m_bValid = !0, this.m_LobbyMgr.m_arrEventBannerData.push(t)
                }
                this.m_CommBonusTotalProgress.setTokenShowStartCB(this.decrTokenRedDot.bind(this, 0)), this.m_CommBonusTotalProgress.setAllTokenShowEndCB(this.setStatusIdle.bind(this)), this.m_CommBonusTotalProgress.m_fucTokenEnlargeStartCB = this.decrOtherToken.bind(this), this.m_CommBonusTotalProgress.m_fucAllTokenEnlargeEndCB = this.setStatusFly.bind(this), i.LobbyClient.Instance.GetJPSystem.getTreasureMapCB = this.parseAndUpdateBonusData.bind(this), this.initDone()
            }
            ShowMainPanel() {
                this.onClickBnnerCB()
            }
            onClickBnnerCB() {
                this.m_status != I.DISABLE && this.OnClickFloatBtn()
            }
            disableBannerPopUp() {
                if (self == top && this.m_LobbyMgr)
                    for (let e = 0; e < this.m_LobbyMgr.m_arrEventBannerData.length; e++)
                        if ("TreasureMap" == this.m_LobbyMgr.m_arrEventBannerData[e].m_sBannerID) {
                            this.m_LobbyMgr.m_arrEventBannerData[e].m_bValid = !1;
                            break
                        }
            }
            hideLoginGetAward() {
                this.showLoginGetAward(!1)
            }
            showLoginGetAward(e) {
                if (this.m_nodeLoginGetAward.active = e, e) {
                    console.warn(this.m_curAwardAvaiMapData.bonusData), this.m_arrAnimateLoginGetAward.forEach(e => {
                        e.play()
                    });
                    let e = this.m_curAwardAvaiMapData.QuestID.substr(4, 2) + "/" + this.m_curAwardAvaiMapData.QuestID.substr(6, 2),
                        t = this.m_curAwardAvaiMapData.bonusData.people;
                    this.m_labLoginGetAwardMsg.string = e + " community jackpot shared by " + t + " people";
                    let o = "es" == SS.Common.GameEnvironment.Language ? 1 : this.m_curAwardAvaiMapData.bonusData.exchange_rate,
                        n = "es" == SS.Common.GameEnvironment.Language ? "" : "$",
                        i = this.m_iAwardNum * o;
                    this.m_labLoginGetAwardWinning.string = n + i.toLocaleString("en-US", {
                        minimumFractionDigits: 2
                    }), this.m_nodeLoginGetAwardOKBtn.active = !0, this.m_nodeLoginGetAwardXBtn.active = !1
                }
            }
            tsToDate(e) {
                let t = new Date(1e3 * e).toLocaleDateString("en-US", {
                    timeZone: "EDT",
                    month: "long",
                    day: "numeric"
                });
                return t.substr(0, t.length - 5)
            }
            tsToDateTime(e) {
                let t = new Date(1e3 * (e += 3600)).toLocaleTimeString("en-US", {
                    timeZone: "EST",
                    month: "long",
                    day: "numeric",
                    hour12: !1
                });
                return t.substr(0, t.length - 3)
            }
            loginGetAward() {
                console.warn("loginGetAward()"), null == SS.Common.GameEnvironment.CurrentGameVersion || SS.Common.GameEnvironment.CurrentGameVersion, this.m_curAwardAvaiMapData = this.m_arrAwardAvaiMapData.pop(), this.m_curAwardAvaiMapData ? (s.ConnectPanelMgr.Instance.ShowConnectPanel(0), i.LobbyClient.Instance.GetUserClient.collectQuest(this.m_curAwardAvaiMapData.QuestID, this.m_curAwardAvaiMapData.QuestLevel, this.rcvCollectQuestAck.bind(this))) : this.m_LobbyMgr.popUpMgr.checkAndShowPopup()
            }
            onClickGetAwordOK() {
                this.m_bFirstClickGetAward = !1, this.m_FakeScoreBoxCtrl.countUpShowJumpMoney(this.m_iFinalBalance, 2, .5), this.m_nodeLoginGetAwardOKBtn.active = !1, this.m_nodeLoginGetAwardXBtn.active = !0
            }
            onClickGetAwordX() {
                this.loginGetAward(), this.hideLoginGetAward()
            }
            popUpClosed() {
                null != this.m_arrMissionData && (null == v.EventTipsMask.Instance || v.EventTipsMask.Instance.m_bClickAnyEvent || (this.m_bFishEventRun || this.m_MissionBtnCtrl.setPrompt(this.tapMissionIconContent), null != v.EventTipsMask.Instance && null != this.m_curMapData && (v.EventTipsMask.Instance.m_delHideCb.Insert(this.m_MissionBtnCtrl.setPrompt, this.m_MissionBtnCtrl), v.EventTipsMask.Instance.checkNewEvent(this.m_curMapData.QuestID))))
            }
            decrOtherToken() {
                for (let e = this.m_MissionListCtrl.m_aryInfoCtrlList.length - 1; e >= 0; e--)
                    if (null == this.getCurGameMisData() || this.m_MissionListCtrl.m_aryInfoCtrlList[e].m_strThemeID != this.getCurGameMisData().ThemeID) {
                        let t = this.getMisDataByThemeID(this.m_MissionListCtrl.m_aryInfoCtrlList[e].m_strThemeID);
                        if (t.newProgress > 0) {
                            t.newProgress--, this.decrTokenRedDot(e);
                            break
                        }
                    }
            }
            decrTokenRedDot(e) {
                this.m_MissionListCtrl.m_aryInfoCtrlList[e].decrRedDot()
            }
            setStatusIdle() {
                this.m_status != I.DISABLE && (this.m_status = I.IDLE)
            }
            setStatusFly() {
                this.m_status != I.DISABLE && (this.m_status = I.TOKEN_FLY_TOP)
            }
            checkAwardAvailible() {
                let e = 0,
                    t = 0;
                if (null != this.m_arrMissionData) {
                    for (let o = 0; o < this.m_arrMissionData.length; o++) {
                        let n = this.m_arrMissionData[o];
                        n.Status == g.UserQuestDataStatus.AWARD_AVAILABLE && (e += n.Award.AwardWinnings, t += n.Award.AwardEntries)
                    }
                    return e + t > 0
                }
            }
            lobbySetUserBalance(e) {
                let t = e.entries,
                    o = e.winnings;
                P.EventSystem.Event(P.DownBar.SetPlayerInfo).Notify(t, o), this.m_LobbyMgr.UserEntries = t, this.m_LobbyMgr.UserWinnings = o
            }
            onDestroy() {
                this.SetUserBalance = null, -1 != this.intervalID && clearInterval(this.intervalID)
            }
            ClearTimer() {
                -1 != this.intervalID && clearInterval(this.intervalID)
            }
            SetAllBtnInteract(e) {
                this.m_bBtnInterActable = e, this.m_MissionBtnCtrl.setInteract(e), this.m_MissionTopProgress.setInteract(e), this.m_MissionListCtrl.setInteract(e)
            }
            SetAllBtnInteractTrue() {
                this.m_bSlotLock = !0, this.SetAllBtnInteract(this.m_bSlotLock && this.m_bTokenLock)
            }
            SetAllBtnInteractFalse() {
                this.m_bSlotLock = !1, this.SetAllBtnInteract(this.m_bSlotLock && this.m_bTokenLock)
            }
            getMisDataByGameName(e) {
                let t = this.getThemeIDByGameName(e);
                return this.getMisDataByThemeID(t)
            }
            getMisDataByThemeID(e) {
                for (let t = 0; t < this.m_arrMissionData.length; t++)
                    if (this.m_arrMissionData[t].ThemeID == e) return this.m_arrMissionData[t];
                return null
            }
            getCurGameMisData() {
                return this.getMisDataByGameName(this.m_sCurGameName)
            }
            getCurGameNewProgress() {
                let e;
                return null == (e = "" == this.m_sCurGameName ? 0 : SS.Common.GameEnvironment.ProjectSetting.Modules[this.m_sCurGameName][this.m_curMapData.QuestID]) && (e = 0), e
            }
            gotNewToken() {
                this.m_status != I.DISABLE && (this.m_bTokenLock = !0, this.SetAllBtnInteract(this.m_bSlotLock && this.m_bTokenLock), this.m_MissionBtnCtrl.setLocked(!1), this.setNewProgress(this.getCurGameNewProgress() + 1))
            }
            setNewProgress(e) {
                SS.Common.GameEnvironment.ProjectSetting.Modules[this.m_sCurGameName][this.m_curMapData.QuestID] = e, this.getAllNewProgress()
            }
            setCurGameName(e) {
                this.m_sCurGameName = e, this.m_MissionTopProgress.setGameIcon(e), this.getAllNewProgress()
            }
            getAllNewProgress() {
                let e = SS.Common.GameEnvironment.ProjectSetting.Modules;
                if (e) {
                    let t = 0;
                    for (let o = 0; o < this.m_arrMissionData.length; o++) {
                        let n = e[this.getGameNameByThemeID(this.m_arrMissionData[o].ThemeID)][this.m_curMapData.QuestID];
                        ((n = n || 0) > 0 || this.m_arrMissionData[o].m_fProgressRate > 0) && (t += n, this.m_arrMissionData[o].newProgress = n, this.m_arrMissionData[o].Priority = -(n + this.m_arrMissionData[o].m_fProgressRate))
                    }
                    this.m_iTotalProgressAddAll = t, this.m_MissionBtnCtrl.setRedTag(this.m_iTotalProgressAddAll)
                }
            }
            clearAllNewProgress() {
                let e = SS.Common.GameEnvironment.ProjectSetting.Modules;
                if (e) {
                    for (let t = 0; t < this.m_arrMissionData.length; t++) {
                        let o = e[this.getGameNameByThemeID(this.m_arrMissionData[t].ThemeID)];
                        o[this.m_curMapData.QuestID] && (o[this.m_curMapData.QuestID] = 0)
                    }
                    this.m_iTotalProgressAddAll = 0, this.m_MissionBtnCtrl.setRedTag(this.m_iTotalProgressAddAll)
                }
            }
            parseSpinData(e) {
                let t = this.getCurGameMisData();
                if (null != t) try {
                    let n = e.cmd_data;
                    if (n.hasOwnProperty("data") && n.data.hasOwnProperty("eventInfo") && n.data.eventInfo.hasOwnProperty("900004") && n.data.eventInfo[900004].hasOwnProperty("UserQuestData")) {
                        let e = n.data.eventInfo[900004].UserQuestData;
                        if (this.parseUserDataList(e), this.m_iTotalPrgressCur >= this.m_iTotalPrgressMax) return void console.warn("this.m_iTotalPrgressCur>=this.m_iTotalPrgressMax");
                        for (let o = 0; o < e.length; o++) {
                            let n, i, s = e[o];
                            if (t.ThemeID == s.GameThemeID && t.QuestID == s.QuestID && t.QuestLevel == s.QuestLevel) {
                                if (t.Status = s.Status, t.Status == g.UserQuestDataStatus.AWARD_CLAIMED) break;
                                if (t.QuestType == g.QustObjectiveType.SPIN_TIME) i = t.SpinTimesGate, n = s.SpinTimes, t.SpinTimes = n;
                                else if (t.QuestType == g.QustObjectiveType.SPIN_AMOUNT) i = t.SpinAmountGate, n = s.SpinAmount, t.SpinAmount = n;
                                else if (t.QuestType == g.QustObjectiveType.WIN_AMOUNT) i = t.WinAmountGate, n = s.WinAmount, t.WinAmount = n;
                                else {
                                    if (t.QuestType != g.QustObjectiveType.CUSTOM) {
                                        console.warn("parseSpinData else");
                                        continue
                                    }
                                    i = t.CustomGate, n = s.CustomAmount, t.CustomAmount = n
                                }
                                let e = n / i;
                                e = e > 1 ? 1 : e, this.m_MissionTopProgress.setProgressChargeTo(e), (0 == this.m_iLastProgress && e > 0 || 1 != this.m_iLastProgress && 1 == e || e - this.m_iLastProgress >= .1) && (e >= 1 && (this.m_MissionTopProgress.m_fucFullChargeCB = this.getTokenShow.bind(this)), this.m_MissionTopProgress.show(!0, t.CustomInfoMsg), this.m_iLastProgress = e >= 1 ? 0 : e);
                                break
                            }
                        }
                        this.updateMisInfo()
                    }
                } catch (o) {
                    console.error("parseSpinData error")
                } else console.warn("curGameMisData==null")
            }
            getTokenShow() {
                this.m_bTokenLock = !1, this.SetAllBtnInteract(this.m_bSlotLock && this.m_bTokenLock), this.m_MissionBtnCtrl.setLocked(!0), this.m_CommGetTokenShow && this.m_CommGetTokenShow.moveToken(this.gotNewToken.bind(this))
            }
            parseMisInfo(e) {
                if (null == e) return !1;
                try {
                    let o = JSON.parse(e);
                    if (o.hasOwnProperty("Enable") && o.Enable && o.hasOwnProperty("QuestList") && o.QuestList.length > 0 && o.hasOwnProperty("UserQuestData")) {
                        let e = o.QuestList,
                            t = o.UserQuestData;
                        if (this.m_arrMissionData = [], 0 == e.length) return !1;
                        this.m_iBeginTime = o.BeginTimeUTC, this.m_iEndTime = o.EndTimeUTC, this.m_iNowTime = o.NowTimeUTC;
                        for (let o = 0; o < e.length; o++) {
                            let n = new g.CommBonusData,
                                i = e[o];
                            if (100 == i.TitleType || 101 == i.TitleType) {
                                n.QuestID = i.QuestID, n.QuestLevel = i.QuestLevel, n.ThemeID = i.GameThemeID, n.SpinTimesGate = i.SpinTimesGate, n.SpinAmountGate = i.SpinAmountGate, n.WinAmountGate = i.WinAmountGate, n.CustomGate = i.CustomGate, n.CustomType = i.CustomType, n.CustomInfo = i.CustomInfo, n.Award = i.Award, n.Priority = i.Priority, n.CycleSeconds = i.CycleSeconds, n.ExpireTimeUTC = i.ExpireTimeUTC, null != i.CustomInfo && i.CustomInfo.hasOwnProperty("Msg") && (n.CustomInfoMsg = i.CustomInfo.Msg);
                                for (let e = 0; e < t.length; e++) {
                                    let o = t[e];
                                    if (n.QuestID == o.QuestID && n.QuestLevel == o.QuestLevel && n.ThemeID == o.GameThemeID) {
                                        n.SpinTimes = o.SpinTimes, n.SpinAmount = o.SpinAmount, n.WinAmount = o.WinAmount, n.CustomAmount = o.CustomAmount, n.Status = o.Status;
                                        break
                                    }
                                }
                                100 == i.TitleType && this.checkThemeIsOpen(i.GameThemeID) ? (this.setGateAndAmount(n), this.m_arrMissionData.push(n)) : 101 == i.TitleType && (n.bonusData = this.parseBonusData(i.ExtraInfo), Date.now(), n.bonusData.jp_begin_time <= this.m_iNowTime && n.bonusData.jp_end_time > this.m_iNowTime && (this.m_curMapData = n, this.updateBonusPrize(), this.m_iTotalPrgressMax = i.CustomGate, this.parseUserDataList(t)), n.Status == g.UserQuestDataStatus.AWARD_AVAILABLE && this.m_arrAwardAvaiMapData.push(n))
                            } else 300 == i.TitleType && (this.m_bFishEventRun = !0)
                        }
                        return !0
                    }
                    return !1
                } catch (t) {
                    return console.error("parseMisInfo"), !1
                }
            }
            parseUserDataList(e) {
                for (let t = 0; t < e.length; t++) {
                    let o = e[t];
                    if (o.QuestID == this.m_curMapData.QuestID) {
                        this.m_iTotalPrgressCur = o.CustomAmount, this.m_TotalPrgressStatus = o.Status;
                        break
                    }
                }
            }
            parseBonusData(e) {
                let t = new g.BonusData;
                return t.exchange_rate = e.exchange_rate, t.extra_jp_value = e.extra_jp_value, t.jp_value = e.jp_value, t.people = e.people, t.quest_id = e.quest_id, t.state_id = e.state_id, t.jp_begin_time = e.jp_begin_time, t.jp_end_time = e.jp_end_time, t
            }
            parseAndUpdateBonusData(e) {
                try {
                    this.m_curMapData.bonusData = this.parseBonusData(e), this.updateBonusPrize()
                } catch (t) {}
            }
            setGateAndAmount(e) {
                let t, o;
                e.SpinTimesGate > 0 ? (e.QuestType = g.QustObjectiveType.SPIN_TIME, t = e.SpinTimesGate, o = e.SpinTimes, e.CustomInfoMsg = "Complete " + e.SpinTimesGate + " spin times") : e.SpinAmountGate > 0 ? (e.QuestType = g.QustObjectiveType.SPIN_AMOUNT, t = e.SpinAmountGate, o = e.SpinAmount, e.CustomInfoMsg = "Complete total entries " + e.SpinAmountGate) : e.WinAmountGate > 0 ? (e.QuestType = g.QustObjectiveType.WIN_AMOUNT, t = e.WinAmountGate, o = e.WinAmount, e.CustomInfoMsg = "Accumulate winning above " + e.WinAmountGate) : 0 != e.CustomType ? (e.QuestType = g.QustObjectiveType.CUSTOM, t = e.CustomGate, o = e.CustomAmount) : console.error("setGateAndAmount error"), e.m_fProgressRate = o / t
            }
            TimeCountDownCallBack() {
                console.warn("execute mission TimeCountDownCallBack !!"), c.AudioMgr.Instance.Play("Missions_Call", !1, 1), console.warn("close active page And Open falotButton !!"), this.setActivityRoot(!1), this.m_status = I.IDLE
            }
            InitTimer() {
                let e = this.m_iEndTime - this.m_iNowTime;
                if (!(e < 0)) {
                    for (let t = 0; t < this.m_arrMissionData.length; t++) {
                        let o = this.m_arrMissionData[t].ExpireTimeUTC - this.m_iNowTime;
                        o > 0 && o < e && (e = o)
                    }
                    this.ForceSetTime(e)
                }
            }
            ForceSetTime(e) {
                this.PauseTimer(), this._countDownTime = e, this.UpdateUI(this._countDownTime), this.StartConutDownTimer()
            }
            UpdateUI(e) {
                let t = e >= 86400 ? "ENDS IN: {day} days {hr}:{min}:{sec}" : "ENDS IN: {hr}:{min}:{sec}";
                null != this.gameMenuTimeCountdown && (this.gameMenuTimeCountdown.UpdateUIWithFormate(e, t), this.gameMenuTimeCountdown.node.active = !0), null != this.floatBtnTimeCountDown && (this.floatBtnTimeCountDown.UpdateUIWithDay(e), this.floatBtnTimeCountDown.node.active = !0), null != this.finishPageTimeCountDown && (this.finishPageTimeCountDown.UpdateUIWithFormate(e, t), this.finishPageTimeCountDown.node.active = !0)
            }
            PauseTimer() {
                clearInterval(this.intervalID)
            }
            Timer(e) {
                if (--e._countDownTime, e._countDownTime <= 0) {
                    this.m_iLastProgress = 0, this.clearAllNewProgress(), this.reloadLobby(), e._countDownTime = 0, e.PauseTimer(), e.GetMissionCmdCallBack = e.TimeCountDownCallBack;
                    let t = (new Date).getTime();
                    this.m_dateLastTimeOpenPanel = t, this.m_status = I.UPDATE_CMD
                }
                e.UpdateUI(e._countDownTime)
            }
            StartConutDownTimer() {
                -1 != this.intervalID && clearInterval(this.intervalID), this.intervalID = setInterval(() => this.Timer(this), 1e3)
            }
            getGameNameByThemeID(e) {
                let t = "";
                try {
                    t = SS.Common.GameEnvironment.GameSetting.Icon[e].GameName
                } catch (o) {}
                return t
            }
            getThemeIDByGameName(e) {
                try {
                    let o = SS.Common.GameEnvironment.GameSetting.Icon;
                    for (let t in o)
                        if (o[t].GameName == e) return t
                } catch (t) {}
                return ""
            }
            checkThemeIsOpen(e) {
                let t = SS.Common.GameEnvironment.GameSetting.DisableGame,
                    o = SS.Common.GameEnvironment.GameSetting.Type.ALL,
                    n = t.indexOf(e),
                    i = this.getGameNameByThemeID(e),
                    s = o.indexOf(i),
                    r = o.indexOf("BIGICON_" + i);
                return -1 == n && (s > -1 || r > -1)
            }
            ToggleMissionTimeCountDown(e) {
                e ? (this.gameMenuTimeReci.active = !0, this.floatBtnTimeReci.active = !0) : (this.gameMenuTimeReci.active = !1, this.floatBtnTimeReci.active = !1)
            }
            OnDragEnd() {
                console.warn("?\ufffd\u66f3\u7d50\ufffd?")
            }
            ToggleFinishMissionPage(e) {
                this.m_FinishMission.active = e, this.m_nodeObjList.active = !e, this.m_labHint.enabled = !e, this.m_bShowFinish = e;
                let t = "",
                    o = "";
                try {
                    t = "You have reached the goal!!!Please login after the event has ended during the period of time " + (o = this.tsToDateTime(this.m_arrMissionData[0].ExpireTimeUTC) + " - " + this.tsToDateTime(this.m_curMapData.ExpireTimeUTC)) + " to receive your portion of the bonus."
                } catch (n) {
                    t = "You have reached the goal!!!Please login after the event has ended.Please receive the prize in 7 days or it will be expired."
                }
                this.m_labFinishMission.string = t
            }
            openReadMePage() {
                this.setReadMePage(!0)
            }
            closeReadMePage() {
                this.setReadMePage(!1)
            }
            setReadMePage(e) {
                e ? (this.m_FinishMission.active = !1, this.m_nodeObjList.active = !1, this.m_nodeReadMePage.active = !0) : (this.ToggleFinishMissionPage(this.m_bShowFinish), this.m_nodeReadMePage.active = !1)
            }
            setActivityRoot(e) {
                this.m_ActivitiesMgrRoot.active = e, this.m_MissionBtnCtrl.show(!e), c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), e ? this.m_CommBonusTotalProgress.setTokens(Math.min(this.m_iTotalPrgressCur, this.m_iTotalPrgressMax) - this.m_iTotalProgressAddAll) : this.ResetSiblingIndex()
            }
            OpenSelectOptionPage(e, t) {
                if (this.m_bBtnInterActable) {
                    if (c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.m_strChangeToGameName = String(t), this.m_sCurGameName == this.m_strChangeToGameName) return console.warn("?\ufffd\ufffd??\ufffd\u6232\uff0c\ufffd??\ufffd\ufffd?\u8df3\ufffd??\ufffd\ufffd? !!"), void this.OnClickReturnBtn();
                    this.setActivityRoot(!1), b.ClickLog.EntryPoint = w.LogEvent_EntryPoint.Event, self == top ? this.m_LobbyMgr.switchGame.OnSwitchGameIgnoreWindow(this.m_strChangeToGameName) : a.CommonRoot.Instance.m_switchGameGroup.OpenSwitchGameWindow(this.m_strChangeToGameName, this.m_sCurGameName)
                }
            }
            OnClickReturnBtn() {
                this.m_status != I.COLLECT && this.setActivityRoot(!1)
            }
            OnClickLeaveGameBtn() {
                this.m_bBtnInterActable && (console.log("OnClickLeaveGameBtn !!"), c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.OnClickReturnBtn(), this.SetReadyChangeGame())
            }
            OnClickFloatBtn() {
                this.m_bBtnInterActable && (this.setOnTop(), v.EventTipsMask.Instance && v.EventTipsMask.Instance.hide(), this.m_MissionBtnCtrl.showFingerPtr(!1), this.GetMissionCmdCallBack = this.ClickFloatBtnCallEvent, this.m_status = I.UPDATE_CMD)
            }
            ClickFloatBtnCallEvent() {
                this.setActivityRoot(!0), this.ToggleFinishMissionPage(this.m_CommBonusTotalProgress.hasGotAllToken()), this.m_MissionListCtrl.setScrollTop(), this.getAllNewProgress(), this.getCurGameMisData() && (this.getCurGameMisData().Priority = -99), this.m_MissionListCtrl.updateMisInfo(this.m_arrMissionData)
            }
            SendMissionBonusInfoCmd(e = !0) {
                this.GetMissionCmdCallBack, this.TimeCountDownCallBack, 1 != this.isRequestInfoNow && (this.isRequestInfoNow = !0, console.log("SendCmd GetMissionBonusInfo"), i.LobbyClient.Instance.GetUserClient.getCommonEventInfo(this.recMissionInfo.bind(this)))
            }
            OnClickClaimBtn() {
                c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1);
                let e = this.getCurGameMisData();
                this.setCollectMisData(e), this.isClickClaimBtn = !0
            }
            OnClickCollectBtn(e, t) {
                c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1);
                let o = this.getMisDataByThemeID(t.toString());
                this.setCollectMisData(o), this.m_MissionListCtrl.getMissionInfoCtrlByThemeID(t.toString())
            }
            setCollectMisData(e) {
                console.warn(e), (e.Status = g.UserQuestDataStatus.AWARD_AVAILABLE) && (this.collectMisData = e, this.m_status = I.COLLECT)
            }
            rcvCollectQuestAck(e, t) {
                if (e == ArkSDK.HttpResult.OK && t && t.cmd_data && t.cmd_data.data)
                    if (console.log("CommBonusMgr.rcvCollectQuestAck  Success : ", t), 0 == t.cmd_data.result) {
                        let e;
                        SS.Common.GameEnvironment.IsUseScoreBox ? t.cmd_data.data.AwardWinnings > 0 ? (this.m_iAwardNum = t.cmd_data.data.AwardWinnings, this.m_iFinalBalance = t.cmd_data.playerInfo.winnings, e = S.ShowType.WINNING) : (this.m_iAwardNum = t.cmd_data.data.AwardEntries, this.m_iFinalBalance = t.cmd_data.playerInfo.entries, e = S.ShowType.ENTRIES) : (this.m_iFinalBalance = t.cmd_data.playerInfo.winnings + t.cmd_data.playerInfo.entries, this.m_iAwardNum = t.cmd_data.data.AwardWinnings + t.cmd_data.data.AwardEntries, e = S.ShowType.CREDIT), this.node.setSiblingIndex(100), this.showLoginGetAward(!0), this.lobbySetUserBalance(t.cmd_data.playerInfo), this.m_FakeScoreBoxCtrl.show(e, this.m_iFinalBalance - this.m_iAwardNum), s.ConnectPanelMgr.Instance.DisableConnectPanel(0)
                    } else switch (t.cmd_data.result) {
                        case 1:
                            r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Info, "S174", null, null, null), this.lobbySetUserBalance(t.cmd_data.playerInfo), s.ConnectPanelMgr.Instance.DisableConnectPanel(0);
                            break;
                        case -999:
                            r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Info, "S175", null, null, null);
                            break;
                        default:
                            r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Critical, "S189", null, null, null)
                    } else {
                        let t = "";
                        t = e == ArkSDK.HttpResult.Abort ? "S183" : e == ArkSDK.HttpResult.Condition ? "S184" : e == ArkSDK.HttpResult.Error ? "S187" : e == ArkSDK.HttpResult.NotReset ? "S185" : e == ArkSDK.HttpResult.Status ? "S186" : e == ArkSDK.HttpResult.Timeout ? "S188" : "S189", r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Critical, t, null, null, null)
                    }
            }
            OnToggleMissonObj(e) {
                null != this.sData && this.m_MissionBtnCtrl.show(!e)
            }
            SetReadyChangeGame() {
                c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), self == top ? (this.Del_ForceToGameEvent.Length > 0 && (this.Del_ForceToGameEvent.Notify(this.m_strChangeToGameName), this.Del_ForceToGameEvent.Clear()), this.m_strChangeToGameName = "") : a.CommonRoot.Instance.GetTopBarMgr.m_DelClickBackToLobby.Length > 0 && a.CommonRoot.Instance.GetTopBarMgr.m_DelClickBackToLobby.Notify()
            }
            updateBonusPrize() {
                let e = this.m_curMapData.bonusData;
                if (this.m_CommBonusMoneyMgr && e) {
                    let t = "es" == SS.Common.GameEnvironment.Language ? 1 : e.exchange_rate;
                    this.m_CommBonusMoneyMgr.setExtra(e.extra_jp_value * t), this.m_CommBonusMoneyMgr.setInfo(e.jp_value * t, e.people)
                }
            }
            updateMisInfo() {
                if (0 != this.m_arrMissionData.length && null != this.m_curMapData)
                    if (this.m_iEndTime < this.m_iNowTime) setTimeout(() => {
                        this.isRequestInfoNow = !1, this.SendMissionBonusInfoCmd()
                    }, 3e3);
                    else {
                        null != this.GetMissionCmdCallBack ? (this.GetMissionCmdCallBack(), this.GetMissionCmdCallBack = null) : this.m_status = I.IDLE;
                        let e = !0;
                        for (let t = 0; t < this.m_arrMissionData.length; t++) this.m_arrMissionData[t].Status != g.UserQuestDataStatus.AWARD_CLAIMED && (e = !1);
                        this.isMissionLastDay = this.m_iEndTime == this.m_arrMissionData[0].ExpireTimeUTC, this.ToggleMissionTimeCountDown(!this.isMissionLastDay || !e), this.isRequestInfoNow = !1
                    }
                else this.m_status = I.DISABLE
            }
            recMissionInfo(e, t) {
                if (e == ArkSDK.HttpResult.OK && t && t.cmd_data) {
                    let e = t.cmd_data[900004];
                    if (console.warn("CommBonusMgr.recMissionInfo:"), console.warn(e), e && 0 == e.result) {
                        let t = JSON.stringify(e.data);
                        this.parseMisInfo(t) && (i.LobbyClient.Instance.m_CommonEventInfo_900004 = t, this.updateMisInfo(), this.recMisInfoSetProgressCtr(), this.InitTimer())
                    }
                    e && e.result < 0 && (-999 == e.result ? this.m_status = I.DISABLE : (this.errorCode = "S182", r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Warning, this.errorCode, "Lobby", this.reason)))
                } else e == ArkSDK.HttpResult.Abort ? this.errorCode = "S176" : e == ArkSDK.HttpResult.Condition ? this.errorCode = "S177" : e == ArkSDK.HttpResult.Error ? this.errorCode = "S180" : e == ArkSDK.HttpResult.NotReset ? this.errorCode = "S178" : e == ArkSDK.HttpResult.Status ? this.errorCode = "S179" : e == ArkSDK.HttpResult.Timeout ? this.errorCode = "S181" : this.errorCode = "S182", this.errorMsg = "The Internet was lost! Please login again!", this.reason = t, r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Warning, this.errorCode, "Lobby", this.reason)
            }
            recMisInfoSetProgressCtr() {
                let e = this.getCurGameMisData();
                if (e) {
                    let t;
                    switch (e.QuestType) {
                        case g.QustObjectiveType.WIN_AMOUNT:
                            t = e.WinAmount / e.WinAmountGate;
                            break;
                        case g.QustObjectiveType.SPIN_AMOUNT:
                            t = e.SpinAmount / e.SpinAmountGate;
                            break;
                        case g.QustObjectiveType.SPIN_TIME:
                            t = e.SpinTimes / e.SpinTimesGate;
                            break;
                        case g.QustObjectiveType.CUSTOM:
                            t = e.CustomAmount / e.CustomGate;
                            break;
                        default:
                            console.error("CommBonusMgr.recMisInfoSetProgressCtr()")
                    }
                    this.m_MissionTopProgress.setProgressCtr(t)
                }
            }
        };
        n([L(cc.Node)], D.prototype, "root", void 0), n([L(h.CommBonusBtnCtrl)], D.prototype, "m_MissionBtnCtrl", void 0), n([L(cc.Node)], D.prototype, "m_ActivitiesMgrRoot", void 0), n([L(cc.Node)], D.prototype, "m_FinishMission", void 0), n([L(cc.Label)], D.prototype, "m_labFinishMission", void 0), n([L(u.CommBonusListCtrl)], D.prototype, "m_MissionListCtrl", void 0), n([L(m.CommBonusTopProgress)], D.prototype, "m_MissionTopProgress", void 0), n([L(y.CommGetTokenShow)], D.prototype, "m_CommGetTokenShow", void 0), n([L(d.CommBonusTotalProgress)], D.prototype, "m_CommBonusTotalProgress", void 0), n([L(p.CommBonusMoneyMgr)], D.prototype, "m_CommBonusMoneyMgr", void 0), n([L(cc.Node)], D.prototype, "gameMenuTimeReci", void 0), n([L(l.DateTimeCountDown)], D.prototype, "gameMenuTimeCountdown", void 0), n([L(cc.Node)], D.prototype, "floatBtnTimeReci", void 0), n([L(l.DateTimeCountDown)], D.prototype, "floatBtnTimeCountDown", void 0), n([L(cc.Node)], D.prototype, "finishPageTimeReci", void 0), n([L(l.DateTimeCountDown)], D.prototype, "finishPageTimeCountDown", void 0), n([L(cc.Node)], D.prototype, "m_nodeLoginGetAward", void 0), n([L(cc.Node)], D.prototype, "m_nodeLoginGetAwardOKBtn", void 0), n([L(cc.Node)], D.prototype, "m_nodeLoginGetAwardXBtn", void 0), n([L(cc.Label)], D.prototype, "m_labLoginGetAwardMsg", void 0), n([L(cc.Label)], D.prototype, "m_labLoginGetAwardWinning", void 0), n([L([cc.Animation])], D.prototype, "m_arrAnimateLoginGetAward", void 0), n([L(cc.Node)], D.prototype, "m_nodeObjList", void 0), n([L(cc.Node)], D.prototype, "m_nodeReadMePage", void 0), n([L(S.FakeScoreBoxCtrl)], D.prototype, "m_FakeScoreBoxCtrl", void 0), n([L(cc.Label)], D.prototype, "m_labHint", void 0), n([L(cc.Node)], D.prototype, "m_nodeBlocker", void 0), D = n([E], D), o.CommBonusMgr = D, cc._RF.pop()
    }, {
        "../../../../GameCommon/CommonRoot/Script/CommonRoot": "CommonRoot",
        "../../../../LobbyCommon/Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../../../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../../../Component/AudioMgr": "AudioMgr",
        "../../../Component/DateTimeCountDown": "DateTimeCountDown",
        "../../../EventModule/EventModule": "EventModule",
        "../../../Helper/EventSystem": "EventSystem",
        "../../../Net/ClickLog": "ClickLog",
        "../../../Net/ClickLogEnum": "ClickLogEnum",
        "../../../PopUpMgr/Scripts/PriorityCustomEvent": "PriorityCustomEvent",
        "../../EventBannerData": "EventBannerData",
        "../../EventTipsMask": "EventTipsMask",
        "./../../../FakeScoreBox/Script/FakeScoreBoxCtrl": "FakeScoreBoxCtrl",
        "./CommBonusBtnCtrl": "CommBonusBtnCtrl",
        "./CommBonusData": "CommBonusData",
        "./CommBonusListCtrl": "CommBonusListCtrl",
        "./CommBonusMoneyMgr": "CommBonusMoneyMgr",
        "./CommBonusTopProgress": "CommBonusTopProgress",
        "./CommBonusTotalProgress": "CommBonusTotalProgress",
        "./CommGetTokenShow": "CommGetTokenShow"
    }],
    CommBonusMoneyMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "93a27oBIsJPiISUzuR0gw7X", "CommBonusMoneyMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommBonusMoneyMgr = void 0;
        const i = e("./../../../Component/NumberCountUp"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_numCountUpMoney = null, this.m_numCountUpPeople = null, this.m_nodeExtra = null, this.m_labExtra = null, this.m_numCountUpMoneyOnBtn = null, this.m_nodeExtraOnBtn = null, this.m_labExtraOnBtn = null, this.m_fucUpdateFloatBtn = null, this.m_fUpdateTime = 10, this.m_bInit = !0
            }
            start() {}
            setExtra(e) {
                this.m_nodeExtra.active = e > 0, this.m_labExtra.node.active = e > 0, this.m_labExtra.string = "+$" + e, this.m_nodeExtraOnBtn.active = e > 0, this.m_labExtraOnBtn.node.active = e > 0, this.m_labExtraOnBtn.string = "+$" + e
            }
            setInfo(e, t) {
                if (this.m_bInit) {
                    let o = "es" == SS.Common.GameEnvironment.Language;
                    this.m_numCountUpMoney.SetNumberFormat(o, !o), this.m_numCountUpMoneyOnBtn.SetNumberFormat(o, !o), this.m_numCountUpMoney.SetNumberNow(e), this.m_numCountUpMoneyOnBtn.SetNumberNow(e), this.m_numCountUpPeople.SetNumberNow(t)
                } else this.m_numCountUpMoney.CountUp(e, this.m_fUpdateTime), this.m_numCountUpMoneyOnBtn.CountUp(e, this.m_fUpdateTime), this.m_numCountUpPeople.CountUp(t, this.m_fUpdateTime);
                this.m_bInit = !1
            }
            Clear() {
                this.m_bInit = !0, this.setExtra(0), this.setInfo(0, 0)
            }
        };
        n([r(i.NumberCountUp)], a.prototype, "m_numCountUpMoney", void 0), n([r(i.NumberCountUp)], a.prototype, "m_numCountUpPeople", void 0), n([r(cc.Node)], a.prototype, "m_nodeExtra", void 0), n([r(cc.Label)], a.prototype, "m_labExtra", void 0), n([r(i.NumberCountUp)], a.prototype, "m_numCountUpMoneyOnBtn", void 0), n([r(cc.Node)], a.prototype, "m_nodeExtraOnBtn", void 0), n([r(cc.Label)], a.prototype, "m_labExtraOnBtn", void 0), a = n([s], a), o.CommBonusMoneyMgr = a, cc._RF.pop()
    }, {
        "./../../../Component/NumberCountUp": "NumberCountUp"
    }],
    CommBonusMsgCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "e7965wCxJpBT7f3OZglDokx", "CommBonusMsgCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommBonusMsgCtrl = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_color = null, this.m_colorOutline = null, this.m_fOutlineWidth = null, this.m_richTxtMsg = null, this.m_sPrefix = "", this.m_sPostfix = "", this.m_sNumPrefix = "<outline color=A52A2A width=1><color=#FFD700>", this.m_sNumPostfix = "</color></outline>"
            }
            setMsg(e) {
                let t = e.split(" "),
                    o = "",
                    n = 0;
                this.hide();
                for (let i = 0; i < t.length; i++) n = n + t[i].length + 1, isNaN(+t[i]) || (t[i] = this.numberFix(t[i])), o = "" == o ? t[i] : o + " " + t[i];
                this.m_richTxtMsg.string = this.globalFix(o), this.m_richTxtMsg.enabled = !0
            }
            numberFix(e) {
                return this.m_sNumPrefix + e + this.m_sNumPostfix
            }
            globalFix(e) {
                return this.m_sPrefix + e + this.m_sPostfix
            }
            hide() {
                null != this.m_richTxtMsg && (this.m_richTxtMsg.enabled = !1)
            }
        };
        n([s(cc.Color)], r.prototype, "m_color", void 0), n([s(cc.Color)], r.prototype, "m_colorOutline", void 0), n([s(cc.Float)], r.prototype, "m_fOutlineWidth", void 0), n([s(cc.RichText)], r.prototype, "m_richTxtMsg", void 0), r = n([i], r), o.CommBonusMsgCtrl = r, cc._RF.pop()
    }, {}],
    CommBonusTokenCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7ea0bYUCWhIeq65G8/KU/S5", "CommBonusTokenCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommBonusTokenCtrl = void 0;
        const i = e("./CommGetTokenShow"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeToken = null, this.m_nodePtr = null, this.m_animShow = null, this.m_labPlusOne = null, this.m_bHidePtr = !1, this.m_CommGetTokenShow = null, this.m_fOrgScale = 1, this.m_fucShowStartCB = null, this.m_fucShowEndCB = null
            }
            start() {
                null != this.m_nodePtr && (this.m_nodePtr.active = !this.m_bHidePtr), this.m_fOrgScale = this.m_nodeToken.scale
            }
            showFlyToken(e, t) {
                this.m_CommGetTokenShow.moveTokenFromTo(e, this.node, t, this.m_fucShowStartCB, this.showFlyTokenEnd.bind(this))
            }
            showFlyTokenEnd() {
                this.setToken(!0), this.m_fucShowEndCB && this.m_fucShowEndCB()
            }
            showToken() {
                this.m_nodeToken.active = !0, this.m_labPlusOne.string = "+1";
                let e = cc.scaleTo(.25, 1.5 * this.m_fOrgScale),
                    t = cc.scaleTo(.125, 1 * this.m_fOrgScale),
                    o = cc.sequence(e, t);
                this.m_nodeToken.stopAllActions(), this.m_nodeToken.scale = .5 * this.m_fOrgScale, this.m_nodeToken.runAction(o);
                let n = cc.fadeOut(2);
                this.m_labPlusOne.node.runAction(n)
            }
            setToken(e) {
                this.m_labPlusOne.node.active = !1, this.m_nodeToken.stopAllActions(), this.m_nodeToken.active = e, null != this.m_animShow && (e ? (this.m_animShow.node.opacity = 255, this.m_animShow.play()) : this.m_animShow.node.opacity = 0)
            }
            isTokenAct() {
                return this.m_nodeToken.active
            }
        };
        n([r(cc.Node)], a.prototype, "m_nodeToken", void 0), n([r(cc.Node)], a.prototype, "m_nodePtr", void 0), n([r(cc.Animation)], a.prototype, "m_animShow", void 0), n([r(cc.Label)], a.prototype, "m_labPlusOne", void 0), n([r()], a.prototype, "m_bHidePtr", void 0), n([r(i.CommGetTokenShow)], a.prototype, "m_CommGetTokenShow", void 0), a = n([s], a), o.CommBonusTokenCtrl = a, cc._RF.pop()
    }, {
        "./CommGetTokenShow": "CommGetTokenShow"
    }],
    CommBonusTopProgress: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "9937cLWzu1PMpKssyMRG1Qd", "CommBonusTopProgress");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommBonusTopProgress = void 0;
        const s = e("../../../Component/AudioMgr"),
            r = e("../../MissionMgr/Script/MissionMsgCtrl"),
            a = e("./CommBonusMsgCtrl"),
            l = e("../../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            c = e("../../../Component/BundleCtrl"),
            {
                ccclass: h,
                property: m
            } = cc._decorator;
        let u = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_Prompt = null, this.m_animate = null, this.m_sprGameIcon = null, this.m_sprAtlasGameIcon = null, this.promptBar = null, this.m_btn = null, this.promptClaimBtnHand = null, this.promptProcessLabel = null, this.m_labCustomInfo = null, this.m_missionMsgCtrl = null, this.m_CommBonusMsgCtrl = null, this.m_fucFullChargeCB = null, this.hidePromptEventId = null, this.m_numProgressUpTo = 0, this.m_numProgressSpeed = .002, this.m_bIsProgressUp = !1, this.m_bIsShow = !1, this.m_fOrgWidth = 0, this.m_iDLPicCtr = 0, this.m_iDLPicTryCtr = 0
            }
            update() {
                if (this.m_bIsProgressUp) {
                    let e = .1 * (this.m_numProgressUpTo - this.m_numProgressCtr);
                    e = e < this.m_numProgressSpeed ? this.m_numProgressSpeed : e, this.m_numProgressCtr += e, this.m_numProgressCtr > this.m_numProgressUpTo && (this.m_bIsProgressUp = !1, this.m_numProgressCtr = this.m_numProgressUpTo, this.m_fucFullChargeCB && 1 == this.m_numProgressUpTo && this.m_fucFullChargeCB()), this.setProgress(this.m_numProgressCtr)
                }
            }
            init() {
                this.m_Prompt.active = !1, this.m_fOrgWidth = this.promptBar.node.width, this.promptBar.enabled = !1, this.m_animate = this.m_Prompt.getComponent(cc.Animation), this.hidePromptEventId = void 0
            }
            show(e, t = "", o = 5e3) {
                if (null != this.m_Prompt) {
                    window.clearTimeout(this.hidePromptEventId);
                    let n = SS.Common.GameEnvironment.GetCurGameIsVertical();
                    e ? (this.m_bIsShow || (this.m_Prompt.active = e, this.m_labCustomInfo.enabled = !1, this.m_CommBonusMsgCtrl.setMsg(t), n ? this.m_animate.play("VerticalShowPrompt", 0) : this.m_animate.play("ShowPrompt", 0), s.AudioMgr.Instance.Play("Missions_Call", !1, 1)), o >= 0 && (this.hidePromptEventId = setTimeout(() => {
                        this.show(!1)
                    }, o))) : (this.showBtn(!1), n ? this.m_animate.play("VerticalHidePrompt", 0) : this.m_animate.play("HidePrompt", 0), this.hidePromptEventId = setTimeout(() => {
                        this.m_Prompt && (this.m_Prompt.active = !1)
                    }, 2e3)), this.m_bIsShow = e
                }
            }
            showBtn(e) {
                null != this.m_btn && (this.m_btn.node.active = e)
            }
            setInteract(e) {
                null != this.m_btn && (this.m_btn.interactable = e)
            }
            setProgress(e) {
                this.promptBar.enabled = !0, this.promptBar.node.width = this.m_fOrgWidth * e, this.promptProcessLabel.string = SS.Common.BaseFunction.addCommas(100 * e, 2, !1) + "%"
            }
            setProgressCtr(e) {
                this.m_numProgressCtr = e
            }
            setProgressChargeTo(e) {
                this.m_fucFullChargeCB && this.m_bIsProgressUp && 1 == this.m_numProgressUpTo && this.m_numProgressCtr > e && this.m_fucFullChargeCB(), this.m_numProgressUpTo = e, this.m_bIsProgressUp = !0
            }
            setGameIcon(e) {
                this.setSprFrameWithAtlas(e, this.m_sprGameIcon)
            }
            setSprFrameWithAtlas(e, t) {
                return i(this, void 0, void 0, function*() {
                    let o = yield c.default.Instance.GetSpirte("SquareGameIcon", e);
                    o ? (t.spriteFrame = o, t.enabled = !0, t.node.active = !0) : t.node.active = !1, this.m_iDLPicCtr--, this.m_iDLPicCtr
                })
            }
            DLAndSetSprFrame(e, t, o = "") {
                let n, i = (n = SS.Common.GameEnvironment.ProjectSetting.CDN_HOST ? window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.CDN_HOST : self == top ? "../../.." : "../../../..") + "/Icons/" + o + e;
                t.enabled = !1, this.m_iDLPicTryCtr = 0, this.DLSprFrame(i, t)
            }
            DLSprFrame(e, t) {
                try {
                    let n = e + ".png?" + (new Date).getTime();
                    cc.loader.load(n, (o, n) => {
                        if (o) return this.DLSprFrameErr(e, t), null;
                        let i = new cc.SpriteFrame(n);
                        this.setSprFrame(e, t, i), cc.loader.release(n)
                    })
                } catch (o) {
                    return this.DLSprFrameErr(e, t), null
                }
            }
            setSprFrame(e, t, o) {
                t.spriteFrame = o, t.enabled = !0, this.m_iDLPicCtr--, this.m_iDLPicCtr
            }
            DLSprFrameErr(e, t) {
                this.m_iDLPicTryCtr++, this.m_iDLPicTryCtr >= 3 ? l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Error, "C38", null, null, null) : this.DLSprFrame(e, t)
            }
        };
        n([m(cc.Node)], u.prototype, "m_Prompt", void 0), n([m(cc.Sprite)], u.prototype, "m_sprGameIcon", void 0), n([m(cc.SpriteAtlas)], u.prototype, "m_sprAtlasGameIcon", void 0), n([m(cc.Sprite)], u.prototype, "promptBar", void 0), n([m(cc.Button)], u.prototype, "m_btn", void 0), n([m(cc.Node)], u.prototype, "promptClaimBtnHand", void 0), n([m(cc.Label)], u.prototype, "promptProcessLabel", void 0), n([m(cc.Label)], u.prototype, "m_labCustomInfo", void 0), n([m(r.MissionMsgCtrl)], u.prototype, "m_missionMsgCtrl", void 0), n([m(a.CommBonusMsgCtrl)], u.prototype, "m_CommBonusMsgCtrl", void 0), u = n([h], u), o.CommBonusTopProgress = u, cc._RF.pop()
    }, {
        "../../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../../../Component/AudioMgr": "AudioMgr",
        "../../../Component/BundleCtrl": "BundleCtrl",
        "../../MissionMgr/Script/MissionMsgCtrl": "MissionMsgCtrl",
        "./CommBonusMsgCtrl": "CommBonusMsgCtrl"
    }],
    CommBonusTotalProgress: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "3b52dl9gVVLM4CR7gX53X20", "CommBonusTotalProgress");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommBonusTotalProgress = void 0;
        const i = e("./CommBonusTokenCtrl"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_arrTokenCtrlList = [], this.m_pfToken = null, this.m_pfMoveEnd = null, this.m_fucTokenShowStartCB = null, this.m_fucAllTokenShowEndCB = null, this.m_fucAllTokenEnlargeEndCB = null, this.m_fucTokenEnlargeEndCB = null, this.m_fucTokenEnlargeStartCB = null, this.m_iFlyTokenCtr = 0, this.m_iEnlargeTokenCtr = 0
            }
            start() {
                for (let e = 0; e < this.m_arrTokenCtrlList.length; e++) this.m_arrTokenCtrlList[e].m_CommGetTokenShow && (this.m_arrTokenCtrlList[e].m_CommGetTokenShow.m_pfToken = this.m_pfToken, this.m_arrTokenCtrlList[e].m_CommGetTokenShow.m_pfMoveEnd = this.m_pfMoveEnd)
            }
            setTokenShowStartCB(e) {
                this.m_fucTokenShowStartCB = e
            }
            setAllTokenShowEndCB(e) {
                this.m_fucAllTokenShowEndCB = e;
                for (let t = 0; t < this.m_arrTokenCtrlList.length; t++) this.m_arrTokenCtrlList[t].m_fucShowEndCB = this.checkAllTokenShowEnd.bind(this)
            }
            setTokens(e) {
                for (let t = 0; t < this.m_arrTokenCtrlList.length; t++) {
                    let o = this.m_arrTokenCtrlList[t];
                    t < e ? o.setToken(!0) : o.setToken(!1)
                }
            }
            showOneByOne(e, t, o) {
                for (let n = 0; n < t; n++) {
                    let t = e + n;
                    if (!this.m_arrTokenCtrlList[t]) return; {
                        this.m_iFlyTokenCtr++;
                        let e = this.m_arrTokenCtrlList[t];
                        e.m_fucShowStartCB = this.m_fucTokenShowStartCB, e.showFlyToken(n, o)
                    }
                }
            }
            enLargeOneByOne(e, t) {
                for (let o = 0; o < t; o++) {
                    let t = e + o;
                    if (!this.m_arrTokenCtrlList[t]) return; {
                        this.m_iEnlargeTokenCtr++;
                        let e = this.m_arrTokenCtrlList[t],
                            n = cc.delayTime(.5 * o),
                            i = cc.callFunc(this.m_fucTokenEnlargeStartCB),
                            s = cc.callFunc(e.showToken.bind(e)),
                            r = cc.callFunc(this.checkAllTokenEnlargeEnd.bind(this)),
                            a = cc.delayTime(1),
                            l = cc.sequence(n, i, s, a, r);
                        this.node.runAction(l)
                    }
                }
            }
            checkAllTokenShowEnd() {
                this.m_iFlyTokenCtr--, 0 == this.m_iFlyTokenCtr && this.m_fucAllTokenShowEndCB && this.m_fucAllTokenShowEndCB()
            }
            checkAllTokenEnlargeEnd() {
                this.m_iEnlargeTokenCtr--, this.m_fucTokenEnlargeEndCB && this.m_fucTokenEnlargeEndCB(), 0 == this.m_iEnlargeTokenCtr && this.m_fucAllTokenEnlargeEndCB && this.m_fucAllTokenEnlargeEndCB()
            }
            hasGotAllToken() {
                for (let e = 0; e < this.m_arrTokenCtrlList.length; e++)
                    if (0 == this.m_arrTokenCtrlList[e].isTokenAct()) return !1;
                return !0
            }
        };
        n([r([i.CommBonusTokenCtrl])], a.prototype, "m_arrTokenCtrlList", void 0), n([r(cc.Prefab)], a.prototype, "m_pfToken", void 0), n([r(cc.Prefab)], a.prototype, "m_pfMoveEnd", void 0), a = n([s], a), o.CommBonusTotalProgress = a, cc._RF.pop()
    }, {
        "./CommBonusTokenCtrl": "CommBonusTokenCtrl"
    }],
    CommGetTokenShow: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "817fdFhOC5ATobLpMG7KEVL", "CommGetTokenShow");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommGetTokenShow = void 0;
        const {
            ccclass: s,
            property: r
        } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_pfToken = null, this.m_pfMoveEnd = null, this.m_iTokenCount = 0, this.m_nodeTaret = null, this.m_nodeSource = null, this.m_fTokenFlySpeed = 600, this.m_nodeScene = null, this.m_npToken = null, this.m_arrNodeQueue = []
            }
            start() {
                return i(this, void 0, void 0, function*() {
                    this.m_npToken = new cc.NodePool;
                    for (let t = 0; t < 3; t++) {
                        var e = cc.instantiate(this.m_pfToken);
                        this.m_npToken.put(e)
                    }
                })
            }
            moveTokenFromTo(e, t, o, n, i) {
                if (this.m_nodeTaret = t, this.m_nodeSource = o, null != this.m_nodeTaret) {
                    let t = this.m_nodeSource.parent.convertToWorldSpaceAR(this.m_nodeSource.getPosition()),
                        o = new cc.Vec2(t.x, t.y),
                        s = this.m_nodeTaret.parent.convertToWorldSpaceAR(this.m_nodeTaret.getPosition()),
                        r = new cc.Vec2(s.x, s.y),
                        a = this.m_npToken.get();
                    null == this.m_nodeScene && (this.m_nodeScene = cc.director.getScene()), a.parent = this.m_nodeScene, a.setPosition(new cc.Vec2(1e5, 1e5)), cc.hide();
                    let l = cc.delayTime(.25 * e),
                        c = cc.callFunc(() => {
                            n && n(), a.setPosition(o)
                        }),
                        h = (cc.show(), cc.moveTo(1, r)),
                        m = (cc.fadeIn(0), cc.fadeOut(0), cc.show(), cc.callFunc(() => {
                            this.moveEndEffect(r), i && i(), a.setPosition(new cc.Vec2(1e5, 1e5))
                        })),
                        u = (cc.removeSelf(), cc.delayTime(1)),
                        d = cc.callFunc(() => {
                            this.m_npToken.put(a)
                        }),
                        p = cc.sequence(l, c, h, m, u, d);
                    a.runAction(p)
                }
            }
            moveToken(e) {
                if (null != this.m_nodeTaret) {
                    let t = this.m_nodeSource.parent.convertToWorldSpaceAR(this.m_nodeSource.getPosition()),
                        o = new cc.Vec2(t.x, t.y),
                        n = this.m_nodeTaret.parent.convertToWorldSpaceAR(this.m_nodeTaret.getPosition()),
                        i = new cc.Vec2(n.x, n.y),
                        s = this.dist(i, o) / this.m_fTokenFlySpeed;
                    this.m_iFinishedToken = 0;
                    for (let r = 0; r < this.m_iTokenCount; r++) {
                        let t = this.m_npToken.get();
                        null == this.m_nodeScene && (this.m_nodeScene = cc.director.getScene()), t.parent = this.m_nodeScene, t.setPosition(o), cc.hide();
                        let n = cc.delayTime(.25 * r),
                            a = (cc.show(), cc.moveTo(s, i)),
                            l = (cc.fadeIn(0), cc.fadeOut(0), cc.removeSelf(), cc.callFunc(() => {
                                this.m_iFinishedToken++, this.moveEndEffect(i), this.m_iFinishedToken >= this.m_iTokenCount && e && e(), t.setPosition(new cc.Vec2(1e5, 1e5))
                            })),
                            c = cc.delayTime(1),
                            h = cc.callFunc(() => {
                                this.m_npToken.put(t)
                            }),
                            m = (cc.removeSelf(), cc.sequence(n, a, l, c, h));
                        t.runAction(m)
                    }
                }
            }
            dist(e, t) {
                return e.sub(t).mag()
            }
            moveEndEffect(e) {
                var t = cc.instantiate(this.m_pfMoveEnd);
                null == this.m_nodeScene && (this.m_nodeScene = cc.director.getScene()), t.parent = this.m_nodeScene, t.setPosition(e);
                let o = cc.delayTime(5),
                    n = cc.removeSelf(),
                    i = cc.sequence(o, n);
                t.runAction(i)
            }
        };
        n([r(cc.Prefab)], a.prototype, "m_pfToken", void 0), n([r(cc.Prefab)], a.prototype, "m_pfMoveEnd", void 0), n([r(cc.Integer)], a.prototype, "m_iTokenCount", void 0), n([r(cc.Node)], a.prototype, "m_nodeTaret", void 0), n([r(cc.Node)], a.prototype, "m_nodeSource", void 0), a = n([s], a), o.CommGetTokenShow = a, cc._RF.pop()
    }, {}],
    CommonBonusTakeAvatar: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "b7058TaUKNIUq9TKBfCljGF", "CommonBonusTakeAvatar");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommonBonusTakeAvatar = void 0;
        const s = e("../../../Helper/EventSystem"),
            r = e("../../../Component/BundleCtrl"),
            a = e("../../../../GameCommon/Profile/NewRedPointMgr"),
            {
                ccclass: l,
                property: c
            } = cc._decorator;
        let h = class extends cc.Component {
            constructor() {
                super(...arguments), this.nodeRewardAvatarRoot = null, this.spRewardAvatart = null, this.pfbHitParticle = null, this.nodeFakeAvatarUI = null, this.spAvatarFace = null, this.spAvatarFaceFrame = null, this.spNewRedPoint = null, this.nodeFakeAvatarUI_InGameL = null, this.spAvatarFace_InGameL = null, this.spAvatarFaceFrame_InGameL = null, this.spNewRedPoint_InGameL = null, this.nodeFakeAvatarUI_InGameR = null, this.spAvatarFace_InGameR = null, this.spAvatarFaceFrame_InGameR = null, this.spNewRedPoint_InGameR = null, this.spBundleFace = null, this.spBundleFaceFrame = null
            }
            onDestroy() {
                this.spBundleFace = null, this.spBundleFaceFrame = null
            }
            start() {
                this.nodeFakeAvatarUI && (this.nodeFakeAvatarUI.active = !1), this.nodeFakeAvatarUI_InGameL && (this.nodeFakeAvatarUI_InGameL.active = !1), this.nodeFakeAvatarUI_InGameR && (this.nodeFakeAvatarUI_InGameR.active = !1), this.DownloadAvatarSprite()
            }
            DownloadAvatarSprite() {
                return i(this, void 0, void 0, function*() {
                    SS.Network.UserClient.UserInfo.avatar_id && "" != SS.Network.UserClient.UserInfo.avatar_id && (this.spBundleFace = yield r.default.Instance.GetSpirte("Avatar", SS.Network.UserClient.UserInfo.avatar_id)), SS.Network.UserClient.UserInfo.avatar_frame_id && "" != SS.Network.UserClient.UserInfo.avatar_frame_id && (this.spBundleFaceFrame = yield r.default.Instance.GetSpirte("Avatar", SS.Network.UserClient.UserInfo.avatar_frame_id)), this.spBundleFace && (null != this.spAvatarFace && (this.spAvatarFace.spriteFrame = this.spBundleFace), null != this.spAvatarFace_InGameL && (this.spAvatarFace_InGameL.spriteFrame = this.spBundleFace), null != this.spAvatarFace_InGameR && (this.spAvatarFace_InGameR.spriteFrame = this.spBundleFace)), this.spBundleFaceFrame && (null != this.spAvatarFaceFrame && (this.spAvatarFaceFrame.spriteFrame = this.spBundleFaceFrame), null != this.spAvatarFaceFrame_InGameL && (this.spAvatarFaceFrame_InGameL.spriteFrame = this.spBundleFaceFrame), null != this.spAvatarFaceFrame_InGameR && (this.spAvatarFaceFrame_InGameR.spriteFrame = this.spBundleFaceFrame))
                })
            }
            Show(e = !0, t = !0) {
                return i(this, void 0, void 0, function*() {
                    if (null == this.spRewardAvatart || null == this.spRewardAvatart.spriteFrame) return;
                    console.log("[CommonBonusTakeAvatar] \u958b\u59cb\u6f14\u51fa isInLobby = " + e + ", isSeatLeft = " + t);
                    for (let e = 0; e < 5; e++) null == this.spBundleFaceFrame && (console.log("[CommonBonusTakeAvatar] \u7b49\u5f85 spBundleFaceFrame \u4e0b\u8f09 "), yield SS.Common.WaitForSeconds(.1));
                    let o = this.nodeFakeAvatarUI,
                        n = this.spNewRedPoint;
                    if (e || (t ? (o = this.nodeFakeAvatarUI_InGameL, n = this.spNewRedPoint_InGameL) : (o = this.nodeFakeAvatarUI_InGameR, n = this.spNewRedPoint_InGameR)), o && (o.active = !0, this.FadeInNode(o, .3), yield this.ShowFlyItem(e, o)), n.node.active = !0, n.node.opacity = 255, this.spRewardAvatart) {
                        let e = this.spRewardAvatart.spriteFrame.name;
                        console.warn("\u9818\u734e! \u53d6\u5f97\u982d\u50cf\u6846 ID = " + e);
                        let t = a.NewRedPointType.AvatarFrame; - 1 != e.indexOf("FAC") && (t = a.NewRedPointType.Avatar), s.EventSystem.Event(s.NoticedArrived.SetNewsRedPoint).Length && s.EventSystem.Event(s.NoticedArrived.SetNewsRedPoint).Notify(!0, t)
                    }
                    o && (yield SS.Common.WaitForSeconds(.2), this.FadeOutNode(o, .2))
                })
            }
            ShowFlyItem(e = !0, t) {
                return i(this, void 0, void 0, function*() {
                    let o = cc.instantiate(this.nodeRewardAvatarRoot);
                    o.parent = this.nodeRewardAvatarRoot.parent, this.ChangeParent(o, t), o.opacity = 130, cc.tween(o).to(.2, {
                        scale: 2
                    }).start(), yield SS.Common.WaitForSeconds(.2);
                    let n = [],
                        i = new cc.Vec2(o.position.x, o.position.y),
                        s = cc.Vec2.ZERO,
                        r = new cc.Vec2(i.x + (s.x - i.x) / 2, i.y + (s.y - i.y) / 2 + 150);
                    n.push(i), n.push(r), n.push(s), cc.tween(o).parallel(cc.bezierTo(.7, n), cc.tween().to(.7 * .1, {
                        scale: e ? 1.2 : .6
                    }).delay(.7 * .2).to(.7 * .7, {
                        scale: .2
                    })).start(), yield SS.Common.WaitForSeconds(.7);
                    let a = cc.instantiate(this.pfbHitParticle);
                    a.parent = this.node, a.position = this.node.convertToNodeSpaceAR(t.convertToWorldSpaceAR(cc.Vec3.ZERO)), this.scheduleOnce(() => {
                        a.destroy()
                    }, 1);
                    let l = t.position;
                    cc.tween(t).parallel(cc.tween().to(.05, {
                        scale: .98
                    }).to(.1, {
                        scale: 1.05
                    }).to(.075, {
                        scale: .95
                    }).to(.025, {
                        scale: 1
                    }), cc.tween().to(.05, {
                        position: new cc.Vec3(l.x, l.y - 2, 0)
                    }).to(.1, {
                        position: new cc.Vec3(l.x, l.y + 1, 0)
                    }).to(.1, {
                        position: new cc.Vec3(l.x, l.y, 0)
                    })).start(), o.destroy()
                })
            }
            FadeInNode(e, t) {
                e.active = !0, e.opacity = 0, cc.tween(e).to(t, {
                    opacity: 255
                }).start()
            }
            FadeOutNode(e, t) {
                e.active = !0, e.opacity = 255, cc.tween(e).to(t, {
                    opacity: 0
                }).start()
            }
            ChangeParent(e, t) {
                let o = e.convertToWorldSpaceAR(cc.Vec3.ZERO);
                e.parent = t, e.position = t.convertToNodeSpaceAR(o)
            }
        };
        n([c(cc.Node)], h.prototype, "nodeRewardAvatarRoot", void 0), n([c(cc.Sprite)], h.prototype, "spRewardAvatart", void 0), n([c(cc.Prefab)], h.prototype, "pfbHitParticle", void 0), n([c(cc.Node)], h.prototype, "nodeFakeAvatarUI", void 0), n([c(cc.Sprite)], h.prototype, "spAvatarFace", void 0), n([c(cc.Sprite)], h.prototype, "spAvatarFaceFrame", void 0), n([c(cc.Sprite)], h.prototype, "spNewRedPoint", void 0), n([c(cc.Node)], h.prototype, "nodeFakeAvatarUI_InGameL", void 0), n([c(cc.Sprite)], h.prototype, "spAvatarFace_InGameL", void 0), n([c(cc.Sprite)], h.prototype, "spAvatarFaceFrame_InGameL", void 0), n([c(cc.Sprite)], h.prototype, "spNewRedPoint_InGameL", void 0), n([c(cc.Node)], h.prototype, "nodeFakeAvatarUI_InGameR", void 0), n([c(cc.Sprite)], h.prototype, "spAvatarFace_InGameR", void 0), n([c(cc.Sprite)], h.prototype, "spAvatarFaceFrame_InGameR", void 0), n([c(cc.Sprite)], h.prototype, "spNewRedPoint_InGameR", void 0), h = n([l], h), o.CommonBonusTakeAvatar = h, cc._RF.pop()
    }, {
        "../../../../GameCommon/Profile/NewRedPointMgr": "NewRedPointMgr",
        "../../../Component/BundleCtrl": "BundleCtrl",
        "../../../Helper/EventSystem": "EventSystem"
    }],
    CommonRoot: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "913d016m8xIKZ34MDK5F0L3", "CommonRoot");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CommonRoot = o.ModuleType = void 0;
        const s = e("./../../../LobbyCommon/TopBar/Script/TopbarMgr"),
            r = e("./../../../GameCommon/Message/Script/MessageMgr"),
            a = e("../../../GameCommon/CheatKey/CheatKeyManager"),
            l = e("../../../GameCommon/JPTimer/Script/JPTimerMgr"),
            c = e("../../../GameCommon/DownBar/GameBar"),
            h = e("../../../GameCommon/InforMgr/Script/InfoMgr"),
            m = e("../../../LobbyCommon/EventModule/MissionMgr/Script/RepeatingMissionMgr"),
            u = e("../../../LobbyCommon/SwitchGame/SwitchGameGroup"),
            d = e("../../../LobbyCommon/Component/GlobalData"),
            p = e("../../../LobbyCommon/Net/LobbyClient"),
            g = e("../../../LobbyCommon/EventModule/CommunityBonus/Script/CommBonusMgr"),
            _ = e("../../../LobbyCommon/EventModule/CommunityBonus/Script/Rank/CommBonusMgr_Rank"),
            {
                ccclass: S,
                property: y
            } = cc._decorator;
        var C, f;
        (function(e) {
            e[e.horizontal = 0] = "horizontal", e[e.vertical = 1] = "vertical", e[e.auto = 2] = "auto"
        })(C || (C = {})),
        function(e) {
            e[e.GameBar = 0] = "GameBar", e[e.JPTimerMgr = 1] = "JPTimerMgr", e[e.PurchaseMgr = 2] = "PurchaseMgr", e[e.CheatKeyManager = 3] = "CheatKeyManager", e[e.MessageMgr = 4] = "MessageMgr", e[e.TopbarMgr = 5] = "TopbarMgr", e[e.InfoMgr = 6] = "InfoMgr", e[e.JPRewardMgr = 7] = "JPRewardMgr", e[e.SwitchGameGroup = 8] = "SwitchGameGroup"
        }(f = o.ModuleType || (o.ModuleType = {}));
        let v = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_GameBar = null, this.m_JPTimer = null, this.m_CheatKeyMgr = null, this.m_msgMgr = null, this.m_topbarMgr = null, this.m_infoMgr = null, this.m_switchGameGroup = null, this.m_nodeDynamicEvent = null, this.m_RepeatingMissionMgr = null, this.m_CommBonusMgr = null, this.m_CommBonusMgr_Rank = null, this.m_nodeBulletinBoard = null, this.m_Profile = null
            }
            static get Instance() {
                return this.instance
            }
            get GetGameBar() {
                return this.m_GameBar
            }
            get GetJPTimer() {
                return this.m_JPTimer
            }
            get GetCheatKeyMgr() {
                return this.m_CheatKeyMgr
            }
            get GetMsgMgr() {
                return this.m_msgMgr
            }
            get GetTopBarMgr() {
                return this.m_topbarMgr
            }
            get GetInfoMgr() {
                return this.m_infoMgr
            }
            get GetSwitchGameMgr() {
                return this.m_switchGameGroup
            }
            onLoad() {
                n.instance = this, this.m_GameBar && this.m_GameBar._onLoad(), this.m_JPTimer && this.m_JPTimer._onLoad(), this.m_infoMgr && this.m_infoMgr._onLoad(), this.m_CheatKeyMgr && this.m_CheatKeyMgr._onLoad(), this.m_msgMgr && this.m_msgMgr._onLoad(), this.m_topbarMgr && this.m_topbarMgr._onLoad(), this.m_switchGameGroup && this.m_switchGameGroup._onLoad(), d.GlobalData.isDeveloper || null == p.LobbyClient.Instance.m_CommonEventInfo_900004 || this.getDynamicRes(), this.getProfile()
            }
            start() {
                this.m_GameBar && this.m_GameBar._start(), this.m_JPTimer && this.m_JPTimer._start(), this.m_topbarMgr && this.m_topbarMgr._start(), this.ComposeModule()
            }
            onDestroy() {
                this.m_GameBar && this.m_GameBar._onDestroy(), this.m_infoMgr && this.m_infoMgr._onDestroy()
            }
            SwitchCustomModule(e, t) {
                console.warn("[SwitchCustomModule] Module: ", e);
                var o = null;
                switch (e) {
                    case f.GameBar:
                        o = this.m_GameBar, this.m_GameBar = t, this.ReSetModuleSiblingIndex(o, this.m_GameBar), this.m_GameBar._onLoad();
                        break;
                    case f.JPTimerMgr:
                        o = this.m_JPTimer, this.m_JPTimer = t, this.ReSetModuleSiblingIndex(o, this.m_JPTimer), this.m_JPTimer._onLoad();
                        break;
                    case f.PurchaseMgr:
                        break;
                    case f.CheatKeyManager:
                        o = this.m_CheatKeyMgr, this.m_CheatKeyMgr = t, this.ReSetModuleSiblingIndex(o, this.m_CheatKeyMgr), this.m_CheatKeyMgr._onLoad();
                        break;
                    case f.MessageMgr:
                        o = this.m_msgMgr, this.m_msgMgr = t, this.ReSetModuleSiblingIndex(o, this.m_msgMgr), this.m_msgMgr._onLoad();
                        break;
                    case f.TopbarMgr:
                        o = this.m_topbarMgr, this.m_topbarMgr = t, this.ReSetModuleSiblingIndex(o, this.m_topbarMgr), this.m_topbarMgr._onLoad();
                        break;
                    case f.InfoMgr:
                        o = this.m_infoMgr, this.m_infoMgr = t, this.ReSetModuleSiblingIndex(o, this.m_infoMgr), this.m_infoMgr._onLoad();
                        break;
                    case f.SwitchGameGroup:
                        o = this.m_switchGameGroup, this.m_switchGameGroup = t, this.ReSetModuleSiblingIndex(o, this.m_switchGameGroup), this.m_switchGameGroup._onLoad();
                        break;
                    default:
                        o = null
                }
                null != t && null != o && o.node.destroy()
            }
            ReSetModuleSiblingIndex(e, t) {
                let o = -1;
                null != e && null != t && (o = e.node.getSiblingIndex(), t.node.parent = this.node, t.node.setSiblingIndex(o))
            }
            ComposeModule() {
                this.m_GameBar && this.m_GameBar.Compose({
                    parMessageMgr: this.m_msgMgr
                })
            }
            getDynamicRes() {
                let e = SS.Common.GameEnvironment.GetCurGameIsVertical() ? "Vertical_" : "",
                    t = cc.director.getScene().getChildByName("LobbyCommon"),
                    o = cc.find("EventRoot"),
                    n = t.getChildByName(e + "900004");
                n && (n.parent = o || this.m_nodeDynamicEvent, this.m_RepeatingMissionMgr = n.getComponent(m.RepeatingMissionMgr), this.m_RepeatingMissionMgr.m_MissionBtnCtrl.show(!0));
                let i = t.getChildByName(e + "900004_CommunityBonus");
                i && (i.parent = o || this.m_nodeDynamicEvent, this.m_CommBonusMgr = i.getComponent(g.CommBonusMgr), this.m_CommBonusMgr.m_MissionBtnCtrl.show(!0)), cc.log("lobbyCommon = "), cc.log(t);
                let s = null;
                t.children.forEach(e => {
                    e.name.includes("900004_RankBonus") && (s = e)
                }), s && (s.parent = o || this.m_nodeDynamicEvent, this.m_CommBonusMgr_Rank = s.getComponent(_.CommBonusMgr_Rank), this.m_CommBonusMgr_Rank.m_MissionBtnCtrl.show(!0), console.warn("getDynamicRes() 900004_RankBonus")), this.m_nodeBulletinBoard = t.getChildByName("BulletinBoard")
            }
            getProfile() {
                let e = cc.director.getScene().getChildByName("LobbyCommon"),
                    t = SS.Common.GameEnvironment.GetCurGameIsVertical() ? "ProfileVertical" : "Profile",
                    o = e.getChildByName(t);
                if (o) {
                    let e = cc.find("ProfileRoot");
                    o.parent = e || this.m_nodeDynamicEvent, this.m_Profile = o.getComponent("Profile")
                }
                o = null, e = null, t = null
            }
            replaceJPTimer(e) {
                this.m_JPTimer.node.active = !1, this.m_JPTimer = e
            }
            replaceMsgMgr(e) {
                this.m_msgMgr.node.active = !1, this.m_msgMgr = e
            }
        };
        i([y(c.GameBar)], v.prototype, "m_GameBar", void 0), i([y(l.JPTimerMgr)], v.prototype, "m_JPTimer", void 0), i([y(a.CheatKeyManager)], v.prototype, "m_CheatKeyMgr", void 0), i([y(r.MessageMgr)], v.prototype, "m_msgMgr", void 0), i([y(s.TopbarMgr)], v.prototype, "m_topbarMgr", void 0), i([y(h.InfoMgr)], v.prototype, "m_infoMgr", void 0), i([y(u.SwitchGameGroup)], v.prototype, "m_switchGameGroup", void 0), i([y(cc.Node)], v.prototype, "m_nodeDynamicEvent", void 0), v = n = i([S], v), o.CommonRoot = v, cc._RF.pop()
    }, {
        "../../../GameCommon/CheatKey/CheatKeyManager": "CheatKeyManager",
        "../../../GameCommon/DownBar/GameBar": "GameBar",
        "../../../GameCommon/InforMgr/Script/InfoMgr": "InfoMgr",
        "../../../GameCommon/JPTimer/Script/JPTimerMgr": "JPTimerMgr",
        "../../../LobbyCommon/Component/GlobalData": "GlobalData",
        "../../../LobbyCommon/EventModule/CommunityBonus/Script/CommBonusMgr": "CommBonusMgr",
        "../../../LobbyCommon/EventModule/CommunityBonus/Script/Rank/CommBonusMgr_Rank": "CommBonusMgr_Rank",
        "../../../LobbyCommon/EventModule/MissionMgr/Script/RepeatingMissionMgr": "RepeatingMissionMgr",
        "../../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../../../LobbyCommon/SwitchGame/SwitchGameGroup": "SwitchGameGroup",
        "./../../../GameCommon/Message/Script/MessageMgr": "MessageMgr",
        "./../../../LobbyCommon/TopBar/Script/TopbarMgr": "TopbarMgr"
    }],
    ComponentPool: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "04d41btr+1J4Ly9A7updSBo", "ComponentPool"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ComponentPool = void 0;
        const {
            ccclass: n,
            property: i
        } = cc._decorator;
        o.ComponentPool = class {
            constructor() {
                this.prefab = null, this.list = [], this.root = null, this.getComponent = null, this.init = null, this.hide = null
            }
            Init(e, t, o, n, i) {
                this.prefab = e, this.root = t, this.getComponent = o, this.init = n, this.hide = i
            }
            Get() {
                let e = this.list.shift();
                if (!e) {
                    let t = cc.instantiate(this.prefab);
                    t.parent = this.root, e = this.getComponent(t), this.init(e)
                }
                return e
            }
            Put(e) {
                e.forEach(e => {
                    e && (this.list.push(e), this.hide(e))
                })
            }
        }, cc._RF.pop()
    }, {}],
    ConnectPanelMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "b9245QAPENB5I/cdpndrXav", "ConnectPanelMgr");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ConnectPanelMgr = void 0;
        const {
            ccclass: s,
            property: r
        } = cc._decorator;
        let a = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.root = null, this.priority = 9, this.m_arrOwner = []
            }
            onLoad() {
                null == n.Instance && (n.Instance = this)
            }
            onDestroy() {
                n.Instance = null
            }
            ShowConnectPanel(e = 9) {
                console.warn("ConnectPanelMgr.ShowConnectPanel, priorty = " + e), e < 0 && (e = 0), e > 9 && (e = 9), e < this.priority && (this.priority = e), this.root.active = !0
            }
            DisableConnectPanel(e = 9) {
                console.warn("ConnectPanelMgr.DisableConnectPanel, priorty = " + e), e < 0 && (e = 0), e > 9 && (e = 9), e > this.priority ? console.warn("ConnectPanelMgr.DisableConnectPanel fail,  priority = " + e + ", this.priority = " + this.priority) : (this.root.active = !1, this.priority = 9)
            }
            show(e) {
                console.warn("ConnectPanelMgr.show"), this.m_arrOwner.indexOf(e) > -1 || (this.m_arrOwner.push(e), this.root.active = !0)
            }
            disable(e) {
                console.warn("ConnectPanelMgr.disable");
                let t = this.m_arrOwner.indexOf(e);
                t > -1 && (this.m_arrOwner.splice(t, 1), 0 == this.m_arrOwner.length && (this.root.active = !1))
            }
        };
        a.Instance = null, i([r(cc.Node)], a.prototype, "root", void 0), a = n = i([s], a), o.ConnectPanelMgr = a, cc._RF.pop()
    }, {}],
    CookieCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "c65e9F14m9A/pnWyCcQXyD4", "CookieCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CookieCtrl = o.CookieKey = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        (function(e) {
            e.MusicIndex = "MUSIC_INDEX", e.MusicSaveName = "MUSIC_SAVE_NAME"
        })(o.CookieKey || (o.CookieKey = {}));
        let r = class extends cc.Component {
            static SetKeyBindUserPinArkID(e) {
                return e + "_" + SS.Network.LoginModel.LoginInfo.pin_ark_id
            }
            static SetKeyBindCurGame(e) {
                return e + "_" + SS.Common.GameEnvironment.CurrentGameNow
            }
            static GetCookie(e) {
                if (null != JSUtility) return JSUtility.IsSupportLocalStorage() ? localStorage.getItem(e) : JSUtility.IsSupportCookie() ? JSUtility.GetCookie(e) : void 0
            }
            static SetCookie(e, t) {
                JSUtility.IsSupportLocalStorage() ? localStorage.setItem(e, t) : JSUtility.IsSupportCookie() && (document.cookie = e + "=" + t + ";")
            }
        };
        r = n([i], r), o.CookieCtrl = r, cc._RF.pop()
    }, {}],
    CrossDomainCookie: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "76e5anu6l1HSpM7Dwa8u48z", "CrossDomainCookie");
        var n, i = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            s = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: r,
            property: a
        } = cc._decorator;
        let l = n = class {
            constructor() {
                this._src = "", this._iFrame = null, this._onLoad = null, this._waitResult = null, this._window = null
            }
            static Init(e = "cookie") {
                return s(this, void 0, void 0, function*() {
                    this._instance || (this._instance = new n), this._instance._iFrame || (this._instance._iFrame = document.getElementById(e))
                })
            }
            static GetCookie(e, t) {
                return s(this, void 0, void 0, function*() {
                    let o = SS.Common.GameEnvironment.ProjectSetting.Modules.CrossLog.Timeout;
                    yield n.Init();
                    let i = !0;
                    yield new Promise(t => {
                        try {
                            setTimeout(() => {
                                i && t("error")
                            }, 1e3 * o), this._instance._onLoad = this.OnLoad.bind(this, t), window.addEventListener("message", this._instance._onLoad), this._instance._src = e, this._instance._iFrame.src = e
                        } catch (n) {
                            return console.warn(n), "error"
                        }
                    }), i = !1;
                    let s = !0,
                        r = yield new Promise(n => {
                            try {
                                setTimeout(() => {
                                    s && n("error")
                                }, 1e3 * o), this._instance._waitResult = this.WaitResult.bind(this, n), window.addEventListener("message", this._instance._waitResult), this._instance._iFrame.contentWindow.postMessage(t, e)
                            } catch (i) {
                                return console.warn(i), "error"
                            }
                        });
                    return s = !1, r
                })
            }
            static OnLoad(e, t) {
                window.removeEventListener("message", this._instance._onLoad), console.log("[CrossDomainCookie] On Load"), e()
            }
            static WaitResult(e, t) {
                window.removeEventListener("message", this._instance._waitResult), console.log("[CrossDomainCookie] Wait Result"), e(t.data)
            }
            static Close() {
                this._instance && this._instance._iFrame && (this._instance._iFrame.src = "")
            }
            static Destroy() {
                this._instance && this._instance._iFrame && (this._instance._iFrame.innerHTML = "")
            }
        };
        l._instance = null, l = n = i([r], l), o.default = l, cc._RF.pop()
    }, {}],
    CustomConfig: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "a7bff3kOZBFM5D+4v5PflC7", "CustomConfig"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.CustomConfig = o.CustomConfigName = void 0, (o.CustomConfigName || (o.CustomConfigName = {})).TX = "tx";
        class n {
            constructor() {
                this.useVirtualKeyboard = !1, this.useCustomLoginBG = !1, this.useGifLoginBG = !1, this.useVideoLoginBG = !1, this.customLoginBGName = "", this.customLoginGifBGName = "", this.customLoginVideoBGName = "", this.allowRememberMe = !0, this.autoLogout = !1, this.autoLogoutTimeout = 300, this.autoLogoutMsgTimeout = 10, this.inited = !1, this.loginObjProps = null, this.useFacebook = !1, this.facebookURL = "", this.fbLogSendDelay = 1, this.configName = null, this.lobbyOption = null, this.showStoreInfoAtLogin = !1, this.useMexicoDownBar = !1, this.showLoginHint = !1, this.showLogo = !0, this.loginHintName = ""
            }
            static get Instance() {
                return n.instance || (n.instance = new n), n.instance
            }
            Init(e, t) {
                var o, i, s, r, a, l, c, h, m, u, d, p, g, _, S, y, C, f, v, P, b;
                t && (n.Instance.configName = e, n.Instance.inited = !0, n.Instance.useCustomLoginBG = null !== (o = t.useCustomLoginBG) && void 0 !== o && o, n.Instance.useGifLoginBG = null !== (i = t.useGifLoginBG) && void 0 !== i && i, n.Instance.useVideoLoginBG = null !== (s = t.useVideoLoginBG) && void 0 !== s && s, n.Instance.useVirtualKeyboard = null !== (r = t.useVirtualKeyboard) && void 0 !== r && r, n.Instance.customLoginBGName = null !== (a = t.customLoginBGName) && void 0 !== a ? a : "", n.Instance.customLoginGifBGName = null !== (l = t.customLoginGifBGName) && void 0 !== l ? l : "", n.Instance.customLoginVideoBGName = null !== (c = t.customLoginVideoBGName) && void 0 !== c ? c : "", n.instance.allowRememberMe = null === (h = t.allowRememberMe) || void 0 === h || h, n.instance.autoLogout = null !== (m = t.autoLogout) && void 0 !== m && m, n.instance.autoLogoutTimeout = null !== (u = t.autoLogoutTimeout) && void 0 !== u ? u : 300, n.instance.autoLogoutMsgTimeout = null !== (d = t.autoLogoutMsgTimeout) && void 0 !== d ? d : 10, n.instance.loginObjProps = null !== (p = t.loginObjProps) && void 0 !== p ? p : null, n.instance.useFacebook = null !== (g = t.useFacebook) && void 0 !== g && g, n.instance.facebookURL = null !== (_ = t.facebookURL) && void 0 !== _ ? _ : "", n.instance.fbLogSendDelay = null !== (S = t.fbLogSendDelay) && void 0 !== S ? S : 1, n.instance.lobbyOption = null !== (y = t.lobbyOption) && void 0 !== y ? y : {
                    enableFavorite: !0,
                    enablePlayerSystem: !0,
                    enableExtraComps: !0,
                    enableSessionBonus: !0,
                    enableBulletinBoard: !0
                }, n.instance.showStoreInfoAtLogin = null !== (C = t.showStoreInfoAtLogin) && void 0 !== C && C, n.instance.useMexicoDownBar = null !== (f = t.useMexicoDownBar) && void 0 !== f && f, n.instance.showLoginHint = null !== (v = t.showLoginHint) && void 0 !== v && v, n.instance.loginHintName = null !== (P = t.loginHintName) && void 0 !== P ? P : "", n.instance.showLogo = null !== (b = t.showLogo) && void 0 !== b && b)
            }
            get urlParamStr() {
                const {
                    inited: e,
                    configName: t
                } = n.Instance;
                return e && "default" != t ? `?CustomConfig=${t}` : ""
            }
            get isCustom() {
                return null != n.Instance.configName
            }
        }
        o.CustomConfig = n, cc._RF.pop()
    }, {}],
    CustomWidget: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "2e887Wl4OJA8b1X8XbmxrSS", "CustomWidget");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.WidgetParameter = void 0;
        const i = e("./FullScreenHandler"),
            s = e("./Helper/EventSystem"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class {
            constructor() {
                this.isAlignTop = !1, this.isAlignBottom = !1, this.isAlignLeft = !1, this.isAlignRight = !1
            }
        };
        n([a({
            displayName: "\u662f\u5426\u5c0d\u9f4a\u4e0a\u65b9"
        })], l.prototype, "isAlignTop", void 0), n([a({
            displayName: "\u662f\u5426\u5c0d\u9f4a\u4e0b\u65b9"
        })], l.prototype, "isAlignBottom", void 0), n([a({
            displayName: "\u662f\u5426\u5c0d\u9f4a\u5de6\u908a"
        })], l.prototype, "isAlignLeft", void 0), n([a({
            displayName: "\u662f\u5426\u5c0d\u9f4a\u53f3\u908a"
        })], l.prototype, "isAlignRight", void 0), l = n([r("WidgetParameter")], l), o.WidgetParameter = l;
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this._widget = null, this.widget = null, this.parameterPortrait = new l, this.parameterLanscape = new l
            }
            onLoad() {
                this.widget ? this._widget = this.widget : (this._widget = this.getComponent(cc.Widget), this._widget.enabled = !1);
                try {
                    s.EventSystem.Event(s.UpdateSafeArea).Insert(this.Update, this), s.EventSystem.Event(s.ScreenOrientationState.ChangeOrientation).Insert(this.OnOrientationChange, this)
                } catch (e) {
                    console.warn(e, "\n Event System is not Ready! node(" + this.node.name + ")")
                }
            }
            onDestroy() {
                s.EventSystem.Event(s.UpdateSafeArea).Remove(this.Update, this), s.EventSystem.Event(s.ScreenOrientationState.ChangeOrientation).Remove(this.OnOrientationChange, this)
            }
            onEnable() {
                this.UpdateAlignment()
            }
            Update(e, t, o, n, i) {
                this.UpdateAlignment()
            }
            UpdateAlignment() {
                this._widget.enabled = !0, this._widget.updateAlignment(), this._widget.enabled = !1
            }
            OnOrientationChange(e) {
                e === i.Orientation.Landscape ? this.SetWidget(this.parameterLanscape) : this.SetWidget(this.parameterPortrait)
            }
            SetWidget(e) {
                this.widget && (this.widget.isAlignTop = e.isAlignTop, this.widget.isAlignBottom = e.isAlignBottom, this.widget.isAlignLeft = e.isAlignLeft, this.widget.isAlignRight = e.isAlignRight, this.unscheduleAllCallbacks(), this.scheduleOnce(this.UpdateAlignment, 0))
            }
        };
        n([a({
            type: cc.Widget,
            displayName: "Widget"
        })], c.prototype, "widget", void 0), n([a({
            type: l,
            displayName: "\u76f4\u7248 Widget \u8a2d\u5b9a\u503c",
            visible: function() {
                return null !== this.widget
            }
        })], c.prototype, "parameterPortrait", void 0), n([a({
            type: l,
            displayName: "\u6a6b\u7248 Widget \u8a2d\u5b9a\u503c",
            visible: function() {
                return null !== this.widget
            }
        })], c.prototype, "parameterLanscape", void 0), c = n([r], c), o.default = c, cc._RF.pop()
    }, {
        "./FullScreenHandler": "FullScreenHandler",
        "./Helper/EventSystem": "EventSystem"
    }],
    DateTimeCountDown: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "57da6uIiDNIDoXzowOIRMjQ", "DateTimeCountDown");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.DateTimeCountDown = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.dateTimeLabel = null
            }
            UpdateUI(e) {
                let t = e % 60,
                    o = Math.floor(e / 60) % 60,
                    n = Math.floor(e / 3600);
                this.dateTimeLabel.string = this.AddZero(n) + ":" + this.AddZero(o) + ":" + this.AddZero(t), this.dateTimeLabel.node.color = 0 == n ? cc.Color.RED : cc.Color.WHITE
            }
            UpdateUIWithDay(e) {
                let t, o = e % 60,
                    n = Math.floor(e / 60) % 60,
                    i = Math.floor(e / 3600),
                    s = Math.floor(i / 24);
                i %= 24, t = s <= 0 ? this.AddZero(i) + ":" + this.AddZero(n) + ":" + this.AddZero(o) : s + "d " + this.AddZero(i) + "h", this.dateTimeLabel.string = t, this.dateTimeLabel.node.color = 0 == i && 0 == s ? new cc.Color(255, 32, 32) : new cc.Color(128, 255, 128)
            }
            AddZero(e) {
                return e < 10 ? "0" + e.toString() : e.toString()
            }
            getDayString(e) {
                if (e <= 0) return "";
                let t = e.toString();
                for (let o = 0; o < 3 && t.length < 3; o++) t = " " + t;
                return t + "D "
            }
            UpdateUIWithFormate(e, t) {
                let o = e % 60,
                    n = Math.floor(e / 60) % 60,
                    i = Math.floor(e / 3600),
                    s = Math.floor(i / 24);
                i %= 24, t = (t = (t = (t = t.replace("{sec}", this.AddZero(o))).replace("{min}", this.AddZero(n))).replace("{hr}", this.AddZero(i))).replace("{day}", s.toString()), this.dateTimeLabel.string = t, this.dateTimeLabel.node.color = 0 == i && 0 == s ? cc.Color.RED : cc.Color.WHITE
            }
        };
        n([s(cc.Label)], r.prototype, "dateTimeLabel", void 0), r = n([i], r), o.DateTimeCountDown = r, cc._RF.pop()
    }, {}],
    Device: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "897ef2eratOyLg1uu5vA4bA", "Device");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.Device = void 0;
        const {
            ccclass: s,
            property: r
        } = cc._decorator;
        var a, l;
        (function(e) {
            e[e.horizontal = 0] = "horizontal", e[e.vertical = 1] = "vertical", e[e.auto = 2] = "auto"
        })(a || (a = {})),
        function(e) {
            e[e.chrome = 0] = "chrome", e[e.safari = 1] = "safari"
        }(l || (l = {}));
        let c = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.mask = null, this.isDone = !1, this.isAllowShowSwipe = !0, this.scrollToResetTimeOut = null, this.checkScrollInterval = null, this.orientationTimeOut = null, this.fullScreenTimeOut = null, this.detectScreenPromptTimeOut = null, this.useLanguage = "", this.isiOS13Up = !1, this.isScrolling = !1, this.nowOrientationStatus = -1, this.browserType = l.chrome, this.iOS15SafariCloseSwipe = !1
            }
            static SetInstance(e) {
                n.Instance = e
            }
            onLoad() {
                null == n.Instance && (n.Instance = this, cc.game.addPersistRootNode(this.node))
            }
            start() {
                this.GetIsStandalone() || (cc.sys.os === cc.sys.OS_IOS && !0 === n.isSafari() ? this.browserType = l.safari : this.browserType = l.chrome), cc.sys.os === cc.sys.OS_ANDROID && this.FixCocosGameContainer(!1)
            }
            ChangeShowSwipeStatus(e) {
                if (!this.GetIsStandalone() && cc.sys.os === cc.sys.OS_IOS) {
                    if (!0 === n.isSafari()) return;
                    this.isAllowShowSwipe = e, e && this.DetectSwipeByIPhoneChrome()
                }
            }
            FixCocosGameContainer(e) {
                let t = window.document.getElementById("Cocos2dGameContainer");
                t && (t.style.position = e ? "fixed" : "absolute")
            }
            SafariSwipe() {
                let e = window.document.getElementById("bar"),
                    t = window.innerHeight;
                e.clientHeight === t ? this.hideSwipe() : this.showSwipe()
            }
            setOnOrientation() {
                if (console.log("webview: " + this.isWebview()), this.isWebview()) return;
                "" == this.useLanguage && (this.useLanguage = "en" == SS.Common.GameEnvironment.Language ? "en" : SS.Common.GameEnvironment.Language);
                let e = self == top ? "../../.." : "../../../..",
                    t = window.document.getElementById("orientation"),
                    o = window.document.getElementById("swipe");
                switch (null != t && (t.style.backgroundImage = window.gd_orientationType ? "url(" + e + "/Plugin/" + this.useLanguage + "_orientation_v.gif)" : "url(" + e + "/Plugin/" + this.useLanguage + "_orientation.gif)"), null != o && (o.style.backgroundImage = "url(" + e + "/Plugin/" + this.useLanguage + "_swipe.gif)"), null != this.orientationTimeOut && (clearTimeout(this.orientationTimeOut), this.orientationTimeOut = null), this.browserType) {
                    case l.safari:
                        this.orientationTimeOut = setTimeout(this.OritenationForSafari.bind(this), 0);
                        break;
                    case l.chrome:
                        this.orientationTimeOut = setTimeout(this.OritenationForChrome.bind(this), 500)
                }
            }
            OritenationForSafari() {
                let e, t = window.gd_orientationType;
                if (console.warn("[BrowserType.safari] orientationType = " + t), 0 == window.orientation || 180 == window.orientation ? e = !1 : 90 != window.orientation && -90 != window.orientation || (e = !0), console.log("deviceIsHorizontal: " + e), e) {
                    if (e) switch (t) {
                        case a.horizontal:
                            this.SafariSwipe(), this.hideOrientation(), this.nowOrientationStatus = 3;
                            break;
                        case a.vertical:
                            if (4 == this.nowOrientationStatus) return;
                            this.hideSwipe(), this.showOrientation(), this.nowOrientationStatus = 4;
                            break;
                        case a.auto:
                            this.nowOrientationStatus = 5
                    }
                } else switch (t) {
                    case a.horizontal:
                        if (0 == this.nowOrientationStatus) return;
                        this.hideSwipe(), this.showOrientation(), this.nowOrientationStatus = 0;
                        break;
                    case a.vertical:
                        this.SafariSwipe(), this.hideOrientation(), this.nowOrientationStatus = 1;
                        break;
                    case a.auto:
                        this.nowOrientationStatus = 2
                }
            }
            OritenationForChrome() {
                let e = this,
                    t = window.gd_orientationType;
                if (console.warn("[BrowserType.chrome] orientationType = " + t), 0 == window.orientation || 180 == window.orientation) switch (t) {
                    case a.horizontal:
                        if (6 == this.nowOrientationStatus) return;
                        e.hideSwipe(), e.showOrientation(), this.nowOrientationStatus = 6;
                        break;
                    case a.vertical:
                        e.hideOrientation(), this.nowOrientationStatus = 7;
                        break;
                    case a.auto:
                        this.nowOrientationStatus = 8
                } else if (90 == window.orientation || -90 == window.orientation) switch (t) {
                    case a.horizontal:
                        e.hideOrientation(), this.nowOrientationStatus = 9;
                        break;
                    case a.vertical:
                        if (10 == this.nowOrientationStatus) return;
                        e.hideSwipe(), e.showOrientation(), this.nowOrientationStatus = 10;
                        break;
                    case a.auto:
                        this.nowOrientationStatus = 11
                }
            }
            GetURLParameterByName(e) {
                e = (e = e.toLowerCase()).replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
                var t = new RegExp("[\\?&]" + e + "=([^&#]*)").exec(location.search.toLowerCase());
                return null === t ? "" : decodeURIComponent(t[1].replace(/\+/g, " "))
            }
            GetIsStandalone() {
                let e = window.matchMedia("(display-mode: standalone)").matches,
                    t = "" == this.GetURLParameterByName("standalone");
                return navigator.standalone || e && t
            }
            SetIsScrolling(e) {
                this.isScrolling = e
            }
            ClearScrollTimeOut() {
                null != this.detectScreenPromptTimeOut && (clearTimeout(this.detectScreenPromptTimeOut), this.detectScreenPromptTimeOut = null), this.checkScrollInterval && (clearInterval(this.checkScrollInterval), this.checkScrollInterval = null), null != this.scrollToResetTimeOut && (clearTimeout(this.scrollToResetTimeOut), this.scrollToResetTimeOut = null)
            }
            DetectScreenPrompt() {
                this.GetIsStandalone() || this.isWebview() || (null != this.detectScreenPromptTimeOut && (clearTimeout(this.detectScreenPromptTimeOut), this.detectScreenPromptTimeOut = null), this.detectScreenPromptTimeOut = setTimeout(this.ResetScreenPrompt.bind(this), 500))
            }
            ResetScreenPrompt() {
                this.nowOrientationStatus = -1, this.setOnOrientation(), cc.sys.os === cc.sys.OS_IOS && !0 === n.isChrome() && this.DetectSwipeByIPhoneChrome(), window.gd_EditBox_isEditing || window.scrollTo(0, 0)
            }
            DetectSwipeByIPhoneChrome() {
                if (this.isWebview()) return;
                let e = 0,
                    t = window.GetiOSDevice();
                if (t) {
                    const o = .99 * (screen.height - t.statusHeight - t.homeHeight - 20),
                        n = .99 * (screen.width - t.statusHeight - 20);
                    e = window.innerHeight >= window.innerWidth ? o : n, console.warn("DetectSwipeByIPhoneChrome : height = " + e + " , window.innerHeight = " + window.innerHeight), e <= window.innerHeight ? this.hideSwipe() : this.showSwipe()
                } else console.error("Not Find Device.")
            }
            SetFullScreen() {
                let fullScreenTag = window.parent.document.getElementsByTagName("html")[0];
                if (!window.parent.document.fullscreen) {
                    cc.screen.requestFullScreen(fullScreenTag, function() {});
                }

                // console.warn("[SetAutoFullScreen]"), cc.screen.requestFullScreen(null, null, null)
            }
            ExecuteFullScreen() {
                window.gd_EditBox_isEditing || cc.screen.fullScreen() || (this.fullScreenTimeOut && (clearTimeout(this.fullScreenTimeOut), this.fullScreenTimeOut = null), this.fullScreenTimeOut = setTimeout(this.SetFullScreen.bind(this), 500))
            }
            IsAllowRegisterFullScreenEvent() {
                return cc.sys.os === cc.sys.OS_ANDROID || cc.sys.os === cc.sys.OS_WINDOWS
            }
            RegisterFullScreenEvent(e) {
                cc.sys.os === cc.sys.OS_WINDOWS ? e.addEventListener("mousedown", this.ExecuteFullScreen.bind(this), !0) : e.addEventListener("touchend", this.ExecuteFullScreen.bind(this), !0)
            }
            init() {
                if (this.IsAllowRegisterFullScreenEvent() && this.RegisterFullScreenEvent(window), !this.GetIsStandalone()) {
                    if (!this.isDone)
                        if (this.isiOS13Up = Boolean(navigator.userAgent.match(/OS 1[3-9](_\d)* like Mac OS X/i)), cc.sys.os === cc.sys.OS_IOS && !1 === this.isWebview()) {
                            const e = window.document.getElementById("mask"),
                                t = window.document.getElementById("orientation");
                            if (!e || !t) return;
                            if (e.style.display = "inline", t.style.display = "inline", window.gd_EditBox_BeganCallBack.push(this.ClearScrollTimeOut.bind(this)), window.gd_EditBox_BeganCallBack.push(this.FixCocosGameContainer.bind(this, !1)), window.gd_EditBox_EndedCallBack.push(this.DetectScreenPrompt.bind(this)), window.gd_EditBox_EndedCallBack.push(this.FixCocosGameContainer.bind(this, !0)), n.isSafari()) this.setOnOrientation(), window.addEventListener("resize", this.setOnOrientation.bind(this), !0), (this.isiOS13Up || n.isIpad()) && (window.addEventListener("scroll", this.SetIsScrolling.bind(this, !0), {
                                capture: !1,
                                passive: !0
                            }), window.document.getElementById("mask").addEventListener("touchend", this.scrolling.bind(this)));
                            else {
                                let e = window.GetiOSDevice();
                                this.setOnOrientation(), window.addEventListener("orientationchange", this.setOnOrientation.bind(this)), window.gd_EditBox_BeganCallBack.push(this.ChangeShowSwipeStatus.bind(this, !1)), e ? (window.addEventListener("resize", this.DetectSwipeByIPhoneChrome.bind(this)), (this.isiOS13Up || n.isIpad()) && (window.addEventListener("scroll", this.SetIsScrolling.bind(this, !0), {
                                    capture: !1,
                                    passive: !0
                                }), window.document.getElementById("mask").addEventListener("touchend", this.scrolling.bind(this)))) : (this.hideSwipe(), console.error("Not Find Device."))
                            }
                        } else cc.sys.os === cc.sys.OS_ANDROID && !1 === this.isWebview() && (this.setOnOrientation(), window.addEventListener("orientationchange", this.setOnOrientation.bind(this)));
                    this.isDone = !0
                }
            }
            showOrientation() {
                let e = window.document.getElementById("orientation");
                if (e && (e.style.visibility = "visible"), cc.sys.os === cc.sys.OS_IOS && !0 === n.isChrome()) {
                    const e = window.document.getElementById("mask");
                    e && (e.style.display = "none")
                }
                console.warn("[Orientation] SHOW !!")
            }
            hideOrientation() {
                let e = window.document.getElementById("orientation");
                e && (e.style.visibility = "hidden"), cc.sys.os === cc.sys.OS_IOS && !0 === n.isChrome() && this.DetectSwipeByIPhoneChrome(), console.warn("[Orientation] HIDE !!")
            }
            showCloseMask() {
                window.document.getElementById("mask_close").style.display = "block"
            }
            onClickCloseMask() {
                if (cc.sys.os === cc.sys.OS_IOS) {
                    let e = Boolean(navigator.userAgent.match(/OS 15(_\d)* like Mac OS X/i));
                    console.log("isIOS15 = " + e), !0 === n.isSafari() && e && (this.iOS15SafariCloseSwipe = !0)
                }
                this.hideSwipe()
            }
            showSwipe() {
                if (window.gd_EditBox_isEditing || !this.isAllowShowSwipe || this.iOS15SafariCloseSwipe) return;
                const e = window.document.getElementById("mask_close");
                if (e) {
                    let t = window.GetExitSwipeMsg(this.useLanguage);
                    e.textContent = t, e.onclick || (e.onclick = this.onClickCloseMask.bind(this)), this.scheduleOnce(this.showCloseMask.bind(this), 3)
                }
                const t = window.document.getElementById("mask");
                t && (t.style.display = "inline", t.style.visibility = "visible");
                const o = window.document.getElementById("swipe");
                o && (o.style.visibility = "visible"), this.mask.active = !0, window.scrollTo(0, 0), this.isiOS13Up && (this.checkScrollInterval && (clearInterval(this.checkScrollInterval), this.checkScrollInterval = null), this.checkScrollInterval = setInterval(this.checkScroll.bind(this), 500)), console.warn("[Mask] SHOW !!")
            }
            checkScroll() {
                this.isScrolling && (this.isScrolling = !1, this.scrollToReset())
            }
            hideSwipe() {
                if (window.gd_EditBox_isEditing || !this.isAllowShowSwipe) return;
                const e = window.document.getElementById("mask");
                e && (e.style.visibility = "hidden");
                const t = window.document.getElementById("swipe");
                t && (t.style.visibility = "hidden"), this.mask.active && setTimeout(() => {
                    this.mask.active = !1
                }, 0);
                const o = window.document.getElementById("mask_close");
                o && (this.unschedule(this.showCloseMask.bind(this)), o.style.display = "none"), console.warn("[Mask] HIDE !!")
            }
            scrolling() {
                window.gd_EditBox_isEditing || (null != this.checkScrollInterval && (clearInterval(this.checkScrollInterval), this.checkScrollInterval = null), null != this.scrollToResetTimeOut && (clearTimeout(this.scrollToResetTimeOut), this.scrollToResetTimeOut = null), this.scrollToResetTimeOut = setTimeout(this.scrollToReset.bind(this), 500))
            }
            scrollToReset() {
                window.gd_EditBox_isEditing || window.scrollTo(0, 0)
            }
            isWebview() {
                var e = navigator.userAgent,
                    t = new RegExp(`(${["WebView","(iPhone|iPod|iPad)(?!.*Safari/)","Android.*Version/[0-9].[0-9]","Android.*wv"].join("|")})`, "ig");
                return Boolean(e.match(t)).valueOf()
            }
            static isChrome() {
                return /CriOS/.test(navigator.userAgent)
            }
            static isSafari() {
                return /Safari/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/CriOS/.test(navigator.userAgent) && !/FxiOS/.test(navigator.userAgent)
            }
            static isIOS() {
                return cc.sys.os === cc.sys.OS_IOS
            }
            static isIOS14Up() {
                return Boolean(navigator.userAgent.match(/OS 1[4-9](_\d)* like Mac OS X/i))
            }
            static isAndroid() {
                return cc.sys.os === cc.sys.OS_ANDROID
            }
            static isAndroid11Up() {
                const e = window.navigator.userAgent.toLowerCase();
                cc.log(e);
                var t = e.match(/android\s([0-9\.]*)/i);
                return cc.log(t), null != t && null != t[1] && null != parseInt(t[1]) && (cc.log(parseInt(t[1])), parseInt(t[1]) >= 11)
            }
            static isWindows() {
                return cc.sys.os === cc.sys.OS_WINDOWS
            }
            static isIpad() {
                const e = window.navigator.userAgent;
                return e.indexOf("iPad") > -1 || e.indexOf("Macintosh") > -1
            }
        };
        c.Instance = null, i([r(cc.Node)], c.prototype, "mask", void 0), c = n = i([s], c), o.Device = c, cc._RF.pop()
    }, {}],
    Dictionary: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "f4356ll8StA/5HXKaFrtQNE", "Dictionary"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.Dictionary = void 0, o.Dictionary = class {
            constructor() {
                this._keys = [], this._values = [], this.undefinedKeyErrorMessage = "Key is either undefined, null or an empty string."
            }
            isEitherUndefinedNullOrStringEmpty(e) {
                return null == e || "" === e.toString()
            }
            checkKeyAndPerformAction(e, t, o) {
                if (this.isEitherUndefinedNullOrStringEmpty(t)) throw new Error(this.undefinedKeyErrorMessage);
                return e(t, o)
            }
            add(e, t) {
                this.checkKeyAndPerformAction((e, t) => {
                    if (this.containsKey(e)) throw new Error("An element with the same key already exists in the dictionary.");
                    this._keys.push(e), this._values.push(t)
                }, e, t)
            }
            remove(e) {
                return this.checkKeyAndPerformAction(e => {
                    if (!this.containsKey(e)) return !1;
                    var t = this._keys.indexOf(e);
                    return this._keys.splice(t, 1), this._values.splice(t, 1), !0
                }, e)
            }
            getValue(e) {
                return this.checkKeyAndPerformAction(e => {
                    if (!this.containsKey(e)) return null;
                    var t = this._keys.indexOf(e);
                    return this._values[t]
                }, e)
            }
            containsKey(e) {
                return this.checkKeyAndPerformAction(e => -1 !== this._keys.indexOf(e), e)
            }
            popValue(e) {
                return this.checkKeyAndPerformAction(e => {
                    if (!this.containsKey(e)) return null;
                    let t = this._keys.indexOf(e),
                        o = this._values[t];
                    return this._keys.splice(t, 1), this._values.splice(t, 1), o
                }, e)
            }
            changeValueForKey(e, t) {
                this.checkKeyAndPerformAction((e, t) => {
                    if (!this.containsKey(e)) throw new Error("In the dictionary there is no element with the given key.");
                    var o = this._keys.indexOf(e);
                    this._values[o] = t
                }, e, t)
            }
            keys() {
                return this._keys
            }
            values() {
                return this._values
            }
            count() {
                return this._values.length
            }
            clear() {
                this._keys = [], this._values = []
            }
        }, cc._RF.pop()
    }, {}],
    DisableMultiTapHandler: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "4d708FkigpFHYRYrht/N2q0", "DisableMultiTapHandler");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.DisableMultiTapHandler = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this._touchCount = 0, this._onTouchStart = null, this._onTouchEnd = null, this._onTouchCancel = null, this._resetCount = null, this._unlock = null, this._IsWebview = !1
            }
            onLoad() {
                cc.macro.ENABLE_MULTI_TOUCH = !1, this.RegisterDisableMultiTouchHandler(), this._touchCount = 0, this._IsWebview = window !== window.parent
            }
            onDestroy() {
                this.UnregisterDisableMultiTouchHandler()
            }
            RegisterDisableMultiTouchHandler() {
                this._onTouchStart = this.OnTouchStart.bind(this), this._onTouchEnd = this.OnTouchEnd.bind(this), this._onTouchCancel = this.OnTouchCancel.bind(this), this._resetCount = this.Reset.bind(this), this._unlock = this.Unlock.bind(this);
                let e = window.document.getElementById("GameCanvas");
                e.addEventListener("touchstart", this._onTouchStart, !1), e.addEventListener("touchend", this._onTouchEnd, !1), e.addEventListener("touchcancel", this._onTouchCancel, !1), this._IsWebview ? (window.parent.addEventListener("resize", this._resetCount, !1), window.addEventListener("orientationchange", this._resetCount, !1), window.releaseLockWebView = this._resetCount) : (window.addEventListener("resize", this._resetCount, !1), window.addEventListener("orientationchange", this._resetCount, !1), window.releaseLock = this._resetCount)
            }
            UnregisterDisableMultiTouchHandler() {
                let e = window.document.getElementById("GameCanvas");
                e.removeEventListener("touchstart", this._onTouchStart, !1), e.removeEventListener("touchend", this._onTouchEnd, !1), e.addEventListener("touchcancel", this._onTouchCancel, !1), this._IsWebview ? (window.parent.removeEventListener("resize", this._resetCount, !1), window.removeEventListener("orientationchange", this._resetCount, !1), window.releaseLockWebView = null) : (window.removeEventListener("resize", this._resetCount, !1), window.removeEventListener("orientationchange", this._resetCount, !1), window.releaseLock = null), this._onTouchStart = null, this._onTouchEnd = null, this._onTouchCancel = null, this._resetCount = null, this._unlock = null
            }
            OnTouchStart(e) {
                this._touchCount += e.changedTouches.length, this.log("Touch Start"), this.log("Count : " + this._touchCount), this.log("Change Touch Lenth : " + e.changedTouches.length)
            }
            OnTouchEnd(e) {
                this._touchCount -= e.changedTouches.length, this.log("Touch End"), this.log("Count : " + this._touchCount), this.log("Change Touch Lenth : " + e.changedTouches.length), this._touchCount > 0 || this.scheduleOnce(this._unlock, .001)
            }
            OnTouchCancel(e) {
                this.log("Touch Cancel"), this.log("Change Touch Lenth : " + e.changedTouches.length), this._touchCount -= e.changedTouches.length, cc.eventManager._clearCurTouch(), this._touchCount = 0
            }
            Reset() {
                this.log("Reset"), cc.eventManager._clearCurTouch(), this._touchCount = 0
            }
            Unlock() {
                this.log("Unlock"), cc.eventManager._clearCurTouch(), this._touchCount = 0
            }
            log(e) {
                this._IsWebview ? console.log("[MulTap-] " + e + " in Webview") : console.log("[MulTap-] " + e + " in Lobby")
            }
        };
        r = n([i], r), o.DisableMultiTapHandler = r, cc._RF.pop()
    }, {}],
    DownBarMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "fdc9czWSOhLs7SMYo57ri3d", "DownBarMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.DownBarMgr = void 0;
        const i = e("../../../LobbyCommon/Helper/EventSystem"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.bannerRoot = null, this.userNicknameText = null, this.userNameText = null, this.versionText = null, this.entriesNum = null, this.winningNum = null, this.creaditNum = null, this.scoreBoxBG = null, this.noScoreBoxBG = null, this.scoreBoxText = null, this.noScoreBoxText = null
            }
            onLoad() {
                this.m_DelClickNews = new SS.Common.Delegate, this.m_DelClickProfile = new SS.Common.Delegate, i.EventSystem.Event(i.DownBar.SetPlayerInfo).Insert(this.SetUserBalance, this), i.EventSystem.Event(i.DownBar.ToggleScorebox).Insert(this.ToggleScoreBox, this)
            }
            onDestroy() {
                this.m_DelClickNews.Length > 0 && this.m_DelClickNews.Clear(), this.m_DelClickProfile.Length > 0 && this.m_DelClickNews.Clear(), i.EventSystem.Event(i.DownBar.SetPlayerInfo).Remove(this.SetUserBalance, this), i.EventSystem.Event(i.DownBar.ToggleScorebox).Remove(this.ToggleScoreBox, this)
            }
            SetUserBalance(e, t, o = null) {
                SS.Common.GameEnvironment.IsUseScoreBox ? (console.log("SetUserBalance(ScoreBox), entries = ", e, ", winning = ", t, ", credit = ", o), this.entriesNum.string = SS.Common.BaseFunction.addCommas(e, 0, !1), this.winningNum.string = SS.Common.BaseFunction.addCommas(t, 0, !1)) : this.creaditNum.string = SS.Common.BaseFunction.addCommas(e, 0, !1)
            }
            ToggleScoreBox() {
                SS.Common.GameEnvironment.IsUseScoreBox ? (this.scoreBoxBG.active = !0, this.scoreBoxText.active = !0, this.noScoreBoxBG.active = !1, this.noScoreBoxText.active = !1) : (this.scoreBoxBG.active = !1, this.scoreBoxText.active = !1, this.noScoreBoxBG.active = !0, this.noScoreBoxText.active = !0)
            }
            SetVersion(e) {
                this.versionText.string = e
            }
            SetUserInfo(e, t = "") {
                this.userNameText.string = "" == t ? e : e + "(" + t + ")"
            }
            OnClickNewButton() {
                null != this.m_DelClickNews && this.m_DelClickNews.Notify(!0)
            }
            OnClickProfileButton() {
                null != this.m_DelClickProfile && this.m_DelClickProfile.Notify(!0)
            }
            OnClickMailButton() {
                i.EventSystem.Event(i.Mail.ShowMailBox).Notify()
            }
        };
        n([r({
            displayName: "Banner\u8981\u9032\u4f86\u7684\u4f4d\u7f6e",
            type: cc.Node
        })], a.prototype, "bannerRoot", void 0), n([r(cc.Label)], a.prototype, "userNicknameText", void 0), n([r(cc.Label)], a.prototype, "userNameText", void 0), n([r(cc.Label)], a.prototype, "versionText", void 0), n([r(cc.Label)], a.prototype, "entriesNum", void 0), n([r(cc.Label)], a.prototype, "winningNum", void 0), n([r(cc.Label)], a.prototype, "creaditNum", void 0), n([r(cc.Node)], a.prototype, "scoreBoxBG", void 0), n([r(cc.Node)], a.prototype, "noScoreBoxBG", void 0), n([r(cc.Node)], a.prototype, "scoreBoxText", void 0), n([r(cc.Node)], a.prototype, "noScoreBoxText", void 0), a = n([s], a), o.DownBarMgr = a, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Helper/EventSystem": "EventSystem"
    }],
    Download: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "f7dec2L5EdP/q/FiNWKWGEe", "Download");
        var n = this && this.__awaiter || function(e, t, o, n) {
            return new(o || (o = Promise))(function(i, s) {
                function r(e) {
                    try {
                        l(n.next(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function a(e) {
                    try {
                        l(n.throw(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                        e(t)
                    })).then(r, a)
                }
                l((n = n.apply(e, t || [])).next())
            })
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.Download = void 0;
        const i = e("../Net/Downloader/ImageDownloader"),
            s = e("../Net/Downloader/JSONDownloder"),
            r = e("../Net/Downloader/VersionDownloader");
        class a {
            constructor() {
                this._config = null
            }
            static get _instance() {
                return null == this._inst && (this._inst = new a), this._inst
            }
            static Version(e) {
                return n(this, void 0, void 0, function*() {
                    return new Promise(t => {
                        (new r.VersionDownloader).Start(SS.Common.GameEnvironment.S3URL + "/" + e + "/", e => {
                            let o = e.Version;
                            SS.Common.GameEnvironment.IgnoreVersionCtrl && t(e.VersionDEV), t(o)
                        }, e => {
                            console.error("Version Download Failed\n", e), t("Error")
                        })
                    })
                })
            }
            static JSON(e) {
                return n(this, void 0, void 0, function*() {
                    let t = "";
                    return -1 === e.indexOf("http") && (t += SS.Common.GameEnvironment.S3URL + "/"), t += e, -1 === e.indexOf(".json") && (t += ".json"), new Promise(e => {
                        (new s.JSONDownloader).Start(t, t => {
                            e(t)
                        }, t => {
                            console.error("JSON File Download Failed\n", t), e(JSON.parse("{}"))
                        })
                    })
                })
            }
            static Image(e) {
                return n(this, void 0, void 0, function*() {
                    let t = "";
                    return -1 === e.indexOf("http") && (t += this._instance.DownloadPath + "/"), t += e, new Promise(e => {
                        (new i.ImageDownloader).Start(t, t => {
                            e(t)
                        }, t => {
                            console.error("Image Download Failed\n", t), e(null)
                        })
                    })
                })
            }
            static Prefab(e, t = "", o = "", i = "") {
                return n(this, void 0, void 0, function*() {
                    return null === this._instance._config && (yield this._instance.DownloadBundleConfig()), new Promise(n => {
                        a.Bundle(e, o, i).then(o => {
                            let i = "";
                            this._instance._config.hasOwnProperty(e) && this._instance._config[e].hasOwnProperty("path") && (i = this._instance._config[e].path, "" === t && (t = this._instance._config[e].MainPrefab)), o.load(i + t, cc.Prefab, (e, o) => {
                                e && (console.error("Prefab(" + t + ") can't Load " + e), n(null)), n(o)
                            })
                        }).catch(t => {
                            console.error("Bundle(" + e + ")  Download Failed\n", t), n(null)
                        })
                    })
                })
            }
            static VerticalPrefab(e) {
                return n(this, void 0, void 0, function*() {
                    return null === this._instance._config && (yield this._instance.DownloadBundleConfig()), new Promise(t => {
                        let o = "";
                        this._instance._config[e].VerticalPrefab && (o = this._instance._config[e].path + this._instance._config[e].VerticalPrefab), a.Prefab(e, o).then(e => {
                            t(e)
                        }).catch(o => {
                            console.error("Bundle(" + e + ")  Download Vertical Prefab Failed\n", o), t(null)
                        })
                    })
                })
            }
            static Bundle(e, t = "", o = "") {
                return n(this, void 0, void 0, function*() {
                    null === this._instance._config && (yield this._instance.DownloadBundleConfig());
                    let n = yield this._instance.CheckDependencies(e);
                    return new Promise(i => {
                        n || (console.warn("[Download] Check Dependency Failed"), i(null));
                        let s = cc.assetManager.getBundle(e);
                        if (s) console.log("[Download] getBundle ", e, " from local.", s), i(s);
                        else {
                            let n = "";
                            n = "" === t ? this._instance.GetBundleDownloadPath(e, o) : t + e, console.log("[Download] Bundle Path: " + n + "  bundleName =  " + e + " CurrentGameNow = " + SS.Common.GameEnvironment.CurrentGameNow), cc.assetManager.loadBundle(n, (o, n) => {
                                o ? (console.error("[Download] Error Occur When Download Bundle (" + e + ")!!\nDownload Path: " + t + "\n", o), i(null)) : i(n)
                            })
                        }
                    })
                })
            }
            static Preload(e, t = "", o = "") {
                return n(this, void 0, void 0, function*() {
                    return null === this._instance._config && (yield this._instance.DownloadBundleConfig()), new Promise(n => {
                        a.Bundle(e, t, o).then(i => {
                            let s = "";
                            s = "" === t ? this._instance.GetBundleDownloadPath(e, o) : t + e, i.preloadDir(t, cc.Prefab, (t, o) => {
                                t ? console.error("Preload Bundle(" + e + ") Failed!\n", t) : (console.log("Preload Bundle(" + e + ") Succeeded!\n", o), n(null))
                            })
                        }).catch(t => {
                            console.error("Bundle(" + e + ")  Preload Failed\n", t), n(null)
                        })
                    })
                })
            }
            GetBundleDownloadPath(e, t) {
                let o = ""; {
                    let n = "";
                    o = this.DownloadPath + "/Bundle/" + e, "" !== t ? n = t : this._config.hasOwnProperty(e) && (n = this._config[e].Version, SS.Common.GameEnvironment.IgnoreVersionCtrl && this._config[e].VersionDEV && (n = this._config[e].VersionDEV)), "" !== n && (o += "/" + n)
                }
                return o
            }
            get DownloadPath() {
                return SS.Common.GameEnvironment.ProjectSetting.CDN_HOST ? window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.CDN_HOST : window.location.origin
            }
            static ReleaseBundles(e) {
                for (let t of e) a.ReleaseBundle(t)
            }
            static ReleaseBundle(e) {
                console.log("[Download] Release Bundle(" + e + ") ");
                let t = cc.assetManager.getBundle(e);
                t ? (t.releaseAll(), cc.assetManager.removeBundle(t)) : console.log("[Download] No Bundle named " + e + " Loaded")
            }
            DownloadBundleConfig() {
                return n(this, void 0, void 0, function*() {
                    yield new Promise((e, t) => {
                        (new r.VersionDownloader).Start(SS.Common.GameEnvironment.S3URL + "/Bundle/", o => {
                            try {
                                this._config = o, e(o)
                            } catch (n) {
                                t(n)
                            }
                        }, e => {
                            console.error("Download Bundle Config Failed!"), t(e)
                        })
                    })
                })
            }
            CheckDependencies(e) {
                return n(this, void 0, void 0, function*() {
                    if (!1 === a._instance._config.hasOwnProperty(e)) return !0;
                    let t = a._instance._config[e].Dependency,
                        o = !0;
                    if (t) {
                        console.log("[Download] Check dependency of " + e);
                        for (let n = 0; n < t.length; n++) null === (yield a.Bundle(t[n])) && (console.warn("[Download] Dependency of " + e + ": " + t[n] + " Download Failed"), o = !1)
                    }
                    return new Promise(e => {
                        e(o)
                    })
                })
            }
            static CheckConfig(e) {
                return a._instance._config.hasOwnProperty(e)
            }
            static CheckVersion(e) {
                let t = a._instance._config[e].Version;
                return SS.Common.GameEnvironment.IgnoreVersionCtrl && a._instance._config[e].VersionDEV, t
            }
            static SpriteFrame(e, t) {
                return n(this, void 0, void 0, function*() {
                    const o = yield a.Bundle(e);
                    return new Promise(n => {
                        o.load(t, cc.SpriteFrame, (o, i) => {
                            o ? (console.error("[Download] Cannot Download " + t + " from " + e + "!\n", o), n(null)) : n(i)
                        })
                    })
                })
            }
        }
        o.Download = a, a._inst = null, cc._RF.pop()
    }, {
        "../Net/Downloader/ImageDownloader": "ImageDownloader",
        "../Net/Downloader/JSONDownloder": "JSONDownloder",
        "../Net/Downloader/VersionDownloader": "VersionDownloader"
    }],
    DraggableItem: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "3a970VPcK5BupWLEtpTypZp", "DraggableItem");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("../../../../GameCommon/CommonRoot/Script/CommonRoot"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.boundary = cc.rect(0, 0, 1280, 720), this.bubbleCallMe = null, this.bubbleCanMove = null, this.buttonCache = null, this.canTriggerEvent = !1, this.moveDistance = 0, this.enabledMoving = !1
            }
            onLoad() {
                this.buttonCache = this.node.getComponent(cc.Button), null != this.buttonCache && (this.buttonCache.interactable = !1);
                var e = this;
                this.node.on(cc.Node.EventType.TOUCH_MOVE, function(t) {
                    if (0 == e.enabledMoving) return;
                    let o = cc.Vec2.ZERO,
                        n = cc.Vec2.ZERO;
                    o.x = t.getDeltaX(), o.y = t.getDeltaY();
                    let i = t.getLocationX();
                    if (1 == e.canTriggerEvent) {
                        e.moveDistance = e.moveDistance + o.len();
                        let t = .5 * e.node.width;
                        e.moveDistance > t && (e.canTriggerEvent = !1, console.log("[DraggableItem] can trigger: false , moveDistance > halfWidth: " + t))
                    }
                    n.x = e.node.getPosition().x + o.x, n.y = e.node.getPosition().y + o.y;
                    let s = e.node.parent.convertToWorldSpaceAR(n);
                    if (i > e.boundary.xMax + .5 * e.node.width) return e.enabledMoving = !1, void(e.node.scale = 1);
                    s.y = Math.min(s.y, e.boundary.yMax), s.y = Math.max(s.y, e.boundary.yMin), s.x = Math.min(s.x, e.boundary.xMax), s.x = Math.max(s.x, e.boundary.xMin);
                    let r = e.node.parent.convertToNodeSpaceAR(s);
                    e.node.setPosition(r), e.node.scale = 1.1, e.bubbleCanMove.active = !1
                }), this.node.on(cc.Node.EventType.TOUCH_START, function() {
                    e.node.scale = 1.1, e.moveDistance = 0, console.log("[DraggableItem] can trigger: true"), e.canTriggerEvent = !0, e.scheduleOnce(() => {
                        e.canTriggerEvent = !1, console.log("[DraggableItem] can trigger: false")
                    }, .5), e.enabledMoving = !0, i.CommonRoot.Instance && i.CommonRoot.Instance.GetInfoMgr && i.CommonRoot.Instance.GetInfoMgr.isActive() && i.CommonRoot.Instance.GetInfoMgr.CloseInfoPage()
                }), this.node.on(cc.Node.EventType.TOUCH_END, function() {
                    e.node.scale = 1, null != e.buttonCache && null != e.buttonCache.clickEvents[0] && 1 == e.canTriggerEvent && e.buttonCache.clickEvents[0].emit(null), e.enabledMoving = !1
                }), this.bubbleCallMe.active = !1, this.bubbleCanMove.active = !1
            }
            hideAllBubble() {
                this.bubbleCallMe.active = !1, this.bubbleCanMove.active = !1
            }
            showBubbleCallMe() {
                this.hideAllBubble(), this.bubbleBaseIn(), this.bubbleCallMe.active = !0, this.scheduleOnce(() => {
                    this.bubbleCallMe.active = !1
                }, 3)
            }
            showBubbleCanMove() {
                this.hideAllBubble(), this.bubbleBaseIn(), this.bubbleCanMove.active = !0, this.scheduleOnce(() => {
                    this.bubbleCanMove.active = !1
                }, 3)
            }
            bubbleBaseIn() {
                this.bubbleCanMove.parent.setPosition(-100, 0), cc.tween(this.bubbleCanMove.parent).to(.5, {
                    position: cc.v3(0, 0)
                }, {
                    easing: "sineInOut"
                }).start()
            }
        };
        n([r(cc.Rect)], a.prototype, "boundary", void 0), n([r(cc.Node)], a.prototype, "bubbleCallMe", void 0), n([r(cc.Node)], a.prototype, "bubbleCanMove", void 0), a = n([s], a), o.default = a, cc._RF.pop()
    }, {
        "../../../../GameCommon/CommonRoot/Script/CommonRoot": "CommonRoot"
    }],
    EditMobileIDMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "a0361IjxthB/6Qa2Novk73q", "EditMobileIDMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.EditMobileIDMgr = void 0;
        const i = e("../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            s = e("../../../LobbyCommon/Connect/Script/ConnectPanelMgr"),
            r = e("../../../LobbyCommon/Net/LobbyClient"),
            a = e("../../../LobbyCommon/SwipeMgr/Scripts/Device"),
            l = e("../../Helper/EventSystem"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        let m = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_LabelID = null, this.m_EBNewID = null, this.m_EBnewIDAgain = null, this.m_LBPromptNewID = null, this.m_LBPromptIDAgain = null, this.m_LBErrorNewID = null, this.m_LBErrorIDAgain = null, this.m_BtnOK = null, this.m_BtnClose = null, this.root = null
            }
            _onLoad() {
                this.m_DelClickOK = new SS.Common.Delegate, this.m_DelClickClose = new SS.Common.Delegate
            }
            _onDestroy() {
                null != this.m_DelClickOK && (this.m_DelClickOK.Clear(), this.m_DelClickOK = null), null != this.m_DelClickClose && (this.m_DelClickClose.Clear(), this.m_DelClickClose = null), this.OnChnageIDdSuccess = null
            }
            EditBoxAdjustWindowScroll(e) {
                e && e._impl && (cc.sys.os === cc.sys.OS_ANDROID ? (this.schedule(function() {
                    cc.screen.fullScreen() && (e && e._impl && e._impl._adjustWindowScroll(), this.unscheduleAllCallbacks())
                }, 0), this.scheduleOnce(function() {
                    e && e._impl && e._impl._adjustWindowScroll(), this.unscheduleAllCallbacks()
                }, 10)) : this.scheduleOnce(function() {
                    e && e._impl && e._impl._adjustWindowScroll(), this.unscheduleAllCallbacks()
                }, .5))
            }
            EditBoxCancelAdjustWindowScroll() {
                this.unscheduleAllCallbacks()
            }
            IgnoreTextEnterSpace(e) {
                let t = e.string.replace("\n", "");
                e._impl._elem.value = t, e.string = t
            }
            ShowEditID(e, t) {
                this.OnChnageIDdSuccess = e, this.m_BtnClose.node.active = !0, this.m_LabelID.string = t, this.m_EBNewID.string = "", this.m_EBnewIDAgain.string = "", (cc.sys.isMobile || a.Device.isIpad) && cc.sys.browserType == cc.sys.BROWSER_TYPE_SAFARI || this.m_EBNewID.focus(), this.root.active = !0
            }
            OnNewIDDidBegan() {
                window.hasOwnProperty("isForcusEditbox") && (isForcusEditbox = !0), this.m_LBPromptNewID.enabled = !1, this.m_LBErrorNewID.enabled = !1, l.EventSystem.Event(l.Keyboard.Show).Notify(this.m_EBNewID, this.OnNewIDTextChanged.bind(this), () => {
                    this.m_EBNewID.scheduleOnce(this.OnNewIDReturn.bind(this), .01)
                }, this.node, !1), this.EditBoxAdjustWindowScroll(this.m_EBNewID)
            }
            OnNewIDDidEnd() {
                window.hasOwnProperty("isForcusEditbox") && (isForcusEditbox = !1), 0 == this.m_EBNewID.string.length && (this.m_LBPromptNewID.enabled = !0), this.EditBoxCancelAdjustWindowScroll()
            }
            OnNewIDTextChanged() {
                this.SetBtnOKInteractable(), this.IgnoreTextEnterSpace(this.m_EBNewID)
            }
            SetBtnOKInteractable() {
                this.checkCanClickOK() ? this.m_BtnOK.interactable = !0 : this.m_BtnOK.interactable = !1
            }
            OnNewIDReturn() {
                this.m_EBNewID.string.length > 0 ? cc.sys.isMobile && cc.sys.browserType == cc.sys.BROWSER_TYPE_SAFARI || this.m_EBnewIDAgain.focus() : 0 == this.m_EBNewID.string.length && (this.m_LBPromptNewID.enabled = !0)
            }
            OnNewIDAgainDidBegan() {
                window.hasOwnProperty("isForcusEditbox") && (isForcusEditbox = !0), this.m_LBPromptIDAgain.enabled = !1, this.m_LBErrorIDAgain.enabled = !1, this.EditBoxAdjustWindowScroll(this.m_EBnewIDAgain), l.EventSystem.Event(l.Keyboard.Show).Notify(this.m_EBnewIDAgain, this.OnNewIDAgainTextChanged.bind(this), this.OnNewIDAgainRetrun.bind(this), this.node)
            }
            OnNewIDAgaingDidEnd() {
                window.hasOwnProperty("isForcusEditbox") && (isForcusEditbox = !1), 0 == this.m_EBnewIDAgain.string.length && (this.m_LBPromptIDAgain.enabled = !0), this.EditBoxCancelAdjustWindowScroll()
            }
            OnNewIDAgainTextChanged() {
                this.SetBtnOKInteractable(), this.IgnoreTextEnterSpace(this.m_EBnewIDAgain)
            }
            OnNewIDAgainRetrun() {
                this.m_BtnOK.interactable && this.OnClickOK()
            }
            OnClickClose() {
                l.EventSystem.Event(l.Keyboard.Hide).Notify(), null != this.m_DelClickClose && this.m_DelClickClose.Notify(), this.m_BtnOK.interactable = !1, this.m_LBErrorIDAgain.enabled = !1, this.m_LBErrorNewID.enabled = !1, this.root.active = !1, a.Device.Instance.ChangeShowSwipeStatus(!0)
            }
            OnClickOK() {
                l.EventSystem.Event(l.Keyboard.Hide).Notify(), null != this.m_DelClickOK && this.m_DelClickOK.Notify(), s.ConnectPanelMgr.Instance.ShowConnectPanel(), this.m_BtnOK.interactable = !1, this.m_LBErrorIDAgain.enabled = !1, this.m_LBErrorNewID.enabled = !1, this.checkIsLegalCharcaterByNewID() ? (this.m_EBNewID.string = this.m_EBNewID.string.toLowerCase(), this.m_EBnewIDAgain.string = this.m_EBnewIDAgain.string.toLowerCase(), r.LobbyClient.Instance.GetUserClient.SendChangeID(this.m_EBNewID.string, (e, t) => {
                    if (console.log("SendChangeID result : ", t), e === ArkSDK.HttpResult.OK && t.hasOwnProperty("cmd_data") && t.cmd_data.hasOwnProperty("result"))
                        if (0 === t.cmd_data.result) this.OnChnageIDdSuccess && (this.OnChnageIDdSuccess(this.m_EBNewID.string), this.OnChnageIDdSuccess = null);
                        else {
                            let e = t.cmd_data.result; - 4 == e ? this.ErrorHandler("S282", "The Mobile ID you entered is incorrect.") : -17 == e ? this.ErrorHandler("S283", "The Mobile ID you entered is incorrect.") : -18 == e ? this.ErrorHandler("S284", "This Mobile ID is already in use.") : this.ErrorHandler("S285", "The Internet was lost! Please login again!")
                        }
                    else {
                        let e;
                        e = e == ArkSDK.HttpResult.Abort ? "S286" : e == ArkSDK.HttpResult.Timeout ? "S287" : e == ArkSDK.HttpResult.Error ? "S288" : e == ArkSDK.HttpResult.Status ? "S289" : e == ArkSDK.HttpResult.NotReset ? "S290" : e == ArkSDK.HttpResult.Condition ? "S291" : "S292", this.ErrorHandler(e, "The Internet was lost! Please login again!")
                    }
                })) : (this.SetBtnOKInteractable(), s.ConnectPanelMgr.Instance.DisableConnectPanel())
            }
            ErrorHandler(e, t) {
                s.ConnectPanelMgr.Instance.DisableConnectPanel(), i.PopupMsgMgr.Instance.ShowPopMsg(i.PopupPriority.Info, e, cc.director.getScene().name, t, () => {
                    this.m_EBNewID.string = "", this.m_EBnewIDAgain.string = "", this.m_LBPromptNewID.enabled = !0
                })
            }
            checkCanClickOK() {
                return this.m_LabelID.string.length > 0 && this.m_EBNewID.string.length > 0 && this.m_EBnewIDAgain.string.length > 0
            }
            checkIsLegalCharcaterByNewID() {
                let e = "";
                (this.m_EBNewID.string.length < 4 || this.m_EBNewID.string.length > 20) && (console.warn("[EditID.checkIsLegalCharcaterByNewID] New Mobile ID IllegalLength", this.m_EBNewID.string.length), e += "4-20 characters! ");
                let t = this.m_EBNewID.string.match("[^a-zA-Z0-9]");
                return null != t && (console.warn("[EditID.checkIsLegalCharcaterByNewID] New Mobile ID IllegalCharacter", t), e += "Can only use alphabet and number only."), e ? (this.m_LBErrorNewID.string = e, this.m_LBErrorNewID.enabled = !0, !1) : this.m_EBnewIDAgain.string != this.m_EBNewID.string ? (console.warn("[EditID.checkIsLegalCharcaterByNewID] Input againg error", this.m_EBnewIDAgain.string), this.m_LBErrorIDAgain.string = "Must enter the same Mobile ID twice in order to confirm it.", this.m_LBErrorIDAgain.enabled = !0, !1) : !(!e && this.m_EBNewID.string === this.m_LabelID.string && (e = "ID must differ from old Mobile ID.", this.m_LBErrorNewID.string = e, this.m_LBErrorNewID.enabled = !0, 1))
            }
        };
        n([h(cc.Label)], m.prototype, "m_LabelID", void 0), n([h(cc.EditBox)], m.prototype, "m_EBNewID", void 0), n([h(cc.EditBox)], m.prototype, "m_EBnewIDAgain", void 0), n([h(cc.Label)], m.prototype, "m_LBPromptNewID", void 0), n([h(cc.Label)], m.prototype, "m_LBPromptIDAgain", void 0), n([h(cc.Label)], m.prototype, "m_LBErrorNewID", void 0), n([h(cc.Label)], m.prototype, "m_LBErrorIDAgain", void 0), n([h(cc.Button)], m.prototype, "m_BtnOK", void 0), n([h(cc.Button)], m.prototype, "m_BtnClose", void 0), n([h(cc.Node)], m.prototype, "root", void 0), m = n([c], m), o.EditMobileIDMgr = m, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../../../LobbyCommon/SwipeMgr/Scripts/Device": "Device",
        "../../Helper/EventSystem": "EventSystem"
    }],
    EditMobileLanguageMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "502a4m5AwJNjKUhkaQhIjz+", "EditMobileLanguageMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.oldId = null, this.newId = null, this.newIdAgain = null, this.title = null, this.hint = null
            }
            onLoad() {
                const e = "en" === SS.Common.GameEnvironment.Language ? 0 : 1;
                this.oldId.string = ["Old Mobile ID :", "Cuenta de M\xf3vil actual :"][e], this.newId.string = ["New Mobile ID :", "Cuenta de M\xf3vil Nueva :"][e], this.newIdAgain.string = ["New Mobile ID Again :", "Confirma Cuenta de M\xf3vil :"][e], this.title.string = ["Set Your Mobile ID", "Cambia su Cuenta de M\xf3vil"][e], this.hint.string = ["The Mobile ID cannot be changed again after saving.Please double confirm before saving.", "La Cuenta de M\xf3vil solo la puede cambiar por una vez. Confirme de nuevo antes de guardarlo."][e]
            }
        };
        n([s(cc.Label)], r.prototype, "oldId", void 0), n([s(cc.Label)], r.prototype, "newId", void 0), n([s(cc.Label)], r.prototype, "newIdAgain", void 0), n([s(cc.Label)], r.prototype, "title", void 0), n([s(cc.Label)], r.prototype, "hint", void 0), r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    EditPWLanguageMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "223f0UQ10RONKwAICi4scxS", "EditPWLanguageMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.oldPw = null, this.newPw = null, this.newPwAgain = null, this.title = null
            }
            onLoad() {
                const e = "en" === SS.Common.GameEnvironment.Language ? 0 : 1;
                this.oldPw.string = ["Old Password :", "Contrase\xf1a actual :"][e], this.newPw.string = ["New Password :", "Contrase\xf1a nueva :"][e], this.newPwAgain.string = ["New Password Again :", "Confirmar contrase\xf1a :"][e], this.title.string = ["Set Your Password", "Cambiar contrase\xf1a"][e]
            }
        };
        n([s(cc.Label)], r.prototype, "oldPw", void 0), n([s(cc.Label)], r.prototype, "newPw", void 0), n([s(cc.Label)], r.prototype, "newPwAgain", void 0), n([s(cc.Label)], r.prototype, "title", void 0), r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    EditPassword: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "8d92aBCcn5BAqYwC85YmsgD", "EditPassword");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.EditPassword = void 0;
        const i = e("../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            s = e("../../../LobbyCommon/Connect/Script/ConnectPanelMgr"),
            r = e("../../../LobbyCommon/Net/LobbyClient"),
            a = e("../../../LobbyCommon/SwipeMgr/Scripts/Device"),
            l = e("../../Helper/EventSystem"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        let m = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_EBoldPw = null, this.m_EBNewPw = null, this.m_EBnewPwAgain = null, this.m_LBPromptOldPw = null, this.m_LBPromptNewPw = null, this.m_LBPromptPwAgain = null, this.m_LBErrorNewPw = null, this.m_LBErrorPwAgain = null, this.m_BtnOK = null, this.m_BtnClose = null, this.root = null
            }
            _onLoad() {
                this.m_DelClickOK = new SS.Common.Delegate, this.m_DelClickClose = new SS.Common.Delegate
            }
            _onDestroy() {
                null != this.m_DelClickOK && (this.m_DelClickOK.Clear(), this.m_DelClickOK = null), null != this.m_DelClickClose && (this.m_DelClickClose.Clear(), this.m_DelClickClose = null), this.OnChnagePwdSuccess = null
            }
            EditBoxAdjustWindowScroll(e) {
                e && e._impl && (cc.sys.os === cc.sys.OS_ANDROID ? (this.schedule(function() {
                    cc.screen.fullScreen() && (e && e._impl && e._impl._adjustWindowScroll(), this.unscheduleAllCallbacks())
                }, 0), this.scheduleOnce(function() {
                    e && e._impl && e._impl._adjustWindowScroll(), this.unscheduleAllCallbacks()
                }, 10)) : this.scheduleOnce(function() {
                    e && e._impl && e._impl._adjustWindowScroll(), this.unscheduleAllCallbacks()
                }, .5))
            }
            EditBoxCancelAdjustWindowScroll() {
                this.unscheduleAllCallbacks()
            }
            OnOldPwDidBegan() {
                window.hasOwnProperty("isForcusEditbox") && (isForcusEditbox = !0), this.m_LBPromptOldPw.enabled = !1, this.EditBoxAdjustWindowScroll(this.m_EBoldPw), l.EventSystem.Event(l.Keyboard.Show).Notify(this.m_EBoldPw, this.OnOldPwTextChanged.bind(this), () => {
                    this.m_EBoldPw.scheduleOnce(this.OnOldPwReturn.bind(this), .01)
                }, this.node, !1)
            }
            ShowEditPasaword(e, t = !0, o = "") {
                this.OnChnagePwdSuccess = e, this.m_BtnClose.node.active = t, this.m_EBoldPw.string = o, this.m_EBoldPw.string.length > 0 && (this.m_LBPromptOldPw.enabled = !1, 0 == this.m_EBNewPw.string.length && (cc.sys.isMobile && cc.sys.browserType == cc.sys.BROWSER_TYPE_SAFARI || this.m_EBNewPw.focus())), this.m_EBNewPw.string = "", this.m_EBnewPwAgain.string = "", this.root.active = !0
            }
            OnOldPwDidEnd() {
                window.hasOwnProperty("isForcusEditbox") && (isForcusEditbox = !1), 0 == this.m_EBoldPw.string.length && (this.m_LBPromptOldPw.enabled = !0), this.EditBoxCancelAdjustWindowScroll()
            }
            IgnoreTextEnterSpace(e) {
                let t = e.string.replace("\n", "");
                e._impl._elem.value = t, e.string = t
            }
            OnOldPwTextChanged() {
                this.SetBtnOKInteractable(), this.IgnoreTextEnterSpace(this.m_EBoldPw)
            }
            OnOldPwReturn() {
                this.m_EBoldPw.string.length > 0 ? cc.sys.isMobile && cc.sys.browserType == cc.sys.BROWSER_TYPE_SAFARI || this.m_EBNewPw.focus() : 0 == this.m_EBoldPw.string.length && (this.m_LBPromptOldPw.enabled = !0)
            }
            OnNewPwDidBegan() {
                window.hasOwnProperty("isForcusEditbox") && (isForcusEditbox = !0), this.m_LBPromptNewPw.enabled = !1, this.m_LBErrorNewPw.enabled = !1, this.EditBoxAdjustWindowScroll(this.m_EBNewPw), l.EventSystem.Event(l.Keyboard.Show).Notify(this.m_EBNewPw, this.OnNewPwTextChanged.bind(this), () => {
                    this.m_EBNewPw.scheduleOnce(this.OnNewPwReturn.bind(this), .01)
                }, this.node, !1)
            }
            OnNewPwDidEnd() {
                window.hasOwnProperty("isForcusEditbox") && (isForcusEditbox = !1), 0 == this.m_EBNewPw.string.length && (this.m_LBPromptNewPw.enabled = !0), this.EditBoxCancelAdjustWindowScroll()
            }
            OnNewPwTextChanged() {
                this.SetBtnOKInteractable(), this.IgnoreTextEnterSpace(this.m_EBNewPw)
            }
            SetBtnOKInteractable() {
                this.checkCanClickOK() ? this.m_BtnOK.interactable = !0 : this.m_BtnOK.interactable = !1
            }
            OnNewPwReturn() {
                this.m_EBNewPw.string.length > 0 ? cc.sys.isMobile && cc.sys.browserType == cc.sys.BROWSER_TYPE_SAFARI || this.m_EBnewPwAgain.focus() : 0 == this.m_EBNewPw.string.length && (this.m_LBPromptNewPw.enabled = !0)
            }
            OnNewPwAgainDidBegan() {
                window.hasOwnProperty("isForcusEditbox") && (isForcusEditbox = !0), this.m_LBPromptPwAgain.enabled = !1, this.m_LBErrorPwAgain.enabled = !1, this.EditBoxAdjustWindowScroll(this.m_EBnewPwAgain), l.EventSystem.Event(l.Keyboard.Show).Notify(this.m_EBnewPwAgain, this.OnNewPwAgainTextChanged.bind(this), this.OnNewPwAgainReturn.bind(this), this.node)
            }
            OnNewPwAgaingDidEnd() {
                window.hasOwnProperty("isForcusEditbox") && (isForcusEditbox = !1), 0 == this.m_EBnewPwAgain.string.length && (this.m_LBPromptPwAgain.enabled = !0), this.EditBoxCancelAdjustWindowScroll()
            }
            OnNewPwAgainTextChanged() {
                this.SetBtnOKInteractable(), this.IgnoreTextEnterSpace(this.m_EBnewPwAgain)
            }
            OnNewPwAgainReturn() {
                this.m_BtnOK.interactable && this.OnClickOK()
            }
            OnClickClose() {
                l.EventSystem.Event(l.Keyboard.Hide).Notify(), null != this.m_DelClickClose && this.m_DelClickClose.Notify(), this.m_BtnOK.interactable = !1, this.m_LBErrorPwAgain.enabled = !1, this.m_LBErrorNewPw.enabled = !1, a.Device.Instance.ChangeShowSwipeStatus(!0), this.root.active = !1
            }
            ForceClose() {
                l.EventSystem.Event(l.Keyboard.Hide).Notify(), this.m_BtnOK.interactable = !1, this.m_LBErrorPwAgain.enabled = !1, this.m_LBErrorNewPw.enabled = !1, a.Device.Instance.ChangeShowSwipeStatus(!0), this.root.active = !1
            }
            OnClickOK() {
                l.EventSystem.Event(l.Keyboard.Hide).Notify(), null != this.m_DelClickOK && this.m_DelClickOK.Notify(), s.ConnectPanelMgr.Instance.ShowConnectPanel(), this.m_BtnOK.interactable = !1, this.m_LBErrorPwAgain.enabled = !1, this.m_LBErrorNewPw.enabled = !1, this.m_EBoldPw.blur(), this.m_EBNewPw.blur(), this.m_EBnewPwAgain.blur(), this.checkIsLegalCharcaterByOldPw() ? this.checkIsLegalCharcaterByNewPw() ? r.LobbyClient.Instance.GetUserClient.SendChangePassword(this.m_EBoldPw.string, this.m_EBNewPw.string, (e, t) => {
                    if (e === ArkSDK.HttpResult.OK && t.hasOwnProperty("cmd_data") && t.cmd_data.hasOwnProperty("result"))
                        if (0 === t.cmd_data.result) this.OnChnagePwdSuccess && (this.OnChnagePwdSuccess(this.m_EBNewPw.string), this.OnChnagePwdSuccess = null);
                        else {
                            console.log(t);
                            let e = t.cmd_data.result; - 13 == e ? this.ErrorHandler("S157", "The password you entered is incorrect.") : -12 == e ? this.ErrorHandler("S158", "The password you entered is incorrect.") : this.ErrorHandler("S159", "The Internet was lost! Please try again!")
                        }
                    else {
                        let e;
                        e == ArkSDK.HttpResult.Abort ? e = "S137" : e == ArkSDK.HttpResult.Timeout ? e = "S138" : e == ArkSDK.HttpResult.Error ? e = "S139" : e == ArkSDK.HttpResult.Status ? e = "S140" : e == ArkSDK.HttpResult.NotReset ? e = "S141" : e == ArkSDK.HttpResult.Condition && (e = "S142"), this.ErrorHandler(e, "The Internet was lost! Please try again!")
                    }
                }) : (this.SetBtnOKInteractable(), s.ConnectPanelMgr.Instance.DisableConnectPanel()) : this.ErrorHandler("C05", "The password you entered is incorrect.")
            }
            ErrorHandler(e, t) {
                s.ConnectPanelMgr.Instance.DisableConnectPanel(), i.PopupMsgMgr.Instance.ShowPopMsg(i.PopupPriority.Info, e, cc.director.getScene().name, t, () => {
                    this.m_EBoldPw.string = "", this.m_LBPromptOldPw.enabled = !0
                })
            }
            checkCanClickOK() {
                return this.m_EBoldPw.string.length > 0 && this.m_EBNewPw.string.length > 0 && this.m_EBnewPwAgain.string.length > 0
            }
            checkIsLegalCharcaterByNewPw() {
                let e = "";
                (this.m_EBNewPw.string.length < 4 || this.m_EBNewPw.string.length > 20) && (console.warn("[EditPassword.checkIsLegalCharcaterByNewPw] New PW IllegalLength", this.m_EBNewPw.string.length), e += "4-20 characters! ");
                let t = this.m_EBNewPw.string.match("[^a-zA-Z0-9]");
                return null != t && (console.warn("[EditPassword.checkIsLegalCharcaterByNewPw] New PW IllegalCharacter", t), e += "Can only use alphabet and number only."), e ? (this.m_LBErrorNewPw.string = e, this.m_LBErrorNewPw.enabled = !0, !1) : this.m_EBnewPwAgain.string != this.m_EBNewPw.string ? (console.warn("[EditPassword.checkIsLegalCharcaterByNewPw] Input againg error", this.m_EBnewPwAgain.string), this.m_LBErrorPwAgain.string = "Must enter the same password twice in order to confirm it.", this.m_LBErrorPwAgain.enabled = !0, !1) : !(!e && this.m_EBNewPw.string === this.m_EBoldPw.string && (e = "Password must differ from old password.", this.m_LBErrorNewPw.string = e, this.m_LBErrorNewPw.enabled = !0, 1))
            }
            checkIsLegalCharcaterByOldPw() {
                let e = this.m_EBoldPw.string.match("[^a-zA-Z0-9]");
                return null != e ? (console.warn("[EditPassword.checkIsLegalCharcaterByOldPw] OldPw IllegalCharacter", e), !1) : !(this.m_EBoldPw.string.length < 4 || this.m_EBoldPw.string.length > 20) || (console.warn("[EditPassword.checkIsLegalCharcaterByOldPw] ID IllegalLength", this.m_EBoldPw.string.length), !1)
            }
        };
        n([h(cc.EditBox)], m.prototype, "m_EBoldPw", void 0), n([h(cc.EditBox)], m.prototype, "m_EBNewPw", void 0), n([h(cc.EditBox)], m.prototype, "m_EBnewPwAgain", void 0), n([h(cc.Label)], m.prototype, "m_LBPromptOldPw", void 0), n([h(cc.Label)], m.prototype, "m_LBPromptNewPw", void 0), n([h(cc.Label)], m.prototype, "m_LBPromptPwAgain", void 0), n([h(cc.Label)], m.prototype, "m_LBErrorNewPw", void 0), n([h(cc.Label)], m.prototype, "m_LBErrorPwAgain", void 0), n([h(cc.Button)], m.prototype, "m_BtnOK", void 0), n([h(cc.Button)], m.prototype, "m_BtnClose", void 0), n([h(cc.Node)], m.prototype, "root", void 0), m = n([c], m), o.EditPassword = m, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../../../LobbyCommon/SwipeMgr/Scripts/Device": "Device",
        "../../Helper/EventSystem": "EventSystem"
    }],
    EnableToPlayAnimation: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "aef4aOY0a5E04Q8NdB7JQMS", "EnableToPlayAnimation");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.EnableToPlayAnimation = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.animation = null
            }
            onEnable() {
                this.animation.play()
            }
            PlayAnimation(e) {
                this.animation.play(e)
            }
        };
        n([s(cc.Animation)], r.prototype, "animation", void 0), r = n([i], r), o.EnableToPlayAnimation = r, cc._RF.pop()
    }, {}],
    EnableToPlayParticle: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "161f7PbaZhGOq9T3OhZuJom", "EnableToPlayParticle");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.EnableToPlayParticle = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.particleSystem = null
            }
            onLoad() {
                this.particleSystem = this.getComponent(cc.ParticleSystem)
            }
            onEnable() {
                this.particleSystem.resetSystem()
            }
        };
        r = n([i], r), o.EnableToPlayParticle = r, cc._RF.pop()
    }, {}],
    ErrorCodes: [function(e, t, o) {
        "use strict";
        var n, i, s, r, a, l, c, h;
        cc._RF.push(t, "d96fcOUtBVBSo/baTAQmQSP", "ErrorCodes"), Object.defineProperty(o, "__esModule", {
                value: !0
            }), o.QuestError = void 0,
            function(e) {
                e[e.OK = 0] = "OK", e[e.OFF = -10] = "OFF"
            }(n || (n = {})),
            function(e) {
                e[e.OK = 0] = "OK", e[e.OFF = -10] = "OFF", e[e.ArkErr = -100] = "ArkErr", e[e.RoundId = -101] = "RoundId", e[e.MissionNotFound = -300] = "MissionNotFound", e[e.PlayerErr = -301] = "PlayerErr"
            }(i || (i = {})),
            function(e) {
                e[e.OK = 0] = "OK", e[e.OFF = -10] = "OFF", e[e.ArkErr = -100] = "ArkErr", e[e.RoundId = -101] = "RoundId", e[e.TabErr = -102] = "TabErr"
            }(s || (s = {})),
            function(e) {
                e[e.OK = 0] = "OK", e[e.OFF = -10] = "OFF", e[e.ArkErr = -100] = "ArkErr", e[e.RoundId = -101] = "RoundId", e[e.SessionId = -102] = "SessionId", e[e.Rewarded = -201] = "Rewarded", e[e.TakeErr = -202] = "TakeErr"
            }(r || (r = {})),
            function(e) {
                e[e.OK = 0] = "OK", e[e.OFF = -10] = "OFF", e[e.ArkErr = -100] = "ArkErr", e[e.RoundId = -101] = "RoundId", e[e.TabErr = -102] = "TabErr", e[e.MissionNotFound = -205] = "MissionNotFound", e[e.RoundIdMissionErorr = -300] = "RoundIdMissionErorr", e[e.PlayerErr = -301] = "PlayerErr"
            }(a || (a = {})),
            function(e) {
                e[e.OK = 0] = "OK", e[e.OFF = -10] = "OFF", e[e.ArkErr = -100] = "ArkErr", e[e.RoundId = -101] = "RoundId", e[e.CostType = -102] = "CostType", e[e.MissionNotFound = -205] = "MissionNotFound", e[e.RoundIdMissionErr = -300] = "RoundIdMissionErr", e[e.PlayerErr = -301] = "PlayerErr", e[e.CostTypeDBErr = -400] = "CostTypeDBErr", e[e.CostTypeSchemaErr = -401] = "CostTypeSchemaErr", e[e.AssetErr = -402] = "AssetErr", e[e.PlayCountErr = -403] = "PlayCountErr", e[e.ProbabilityErr = -404] = "ProbabilityErr"
            }(l || (l = {})),
            function(e) {
                e[e.OK = 0] = "OK"
            }(c || (c = {})),
            function(e) {
                e[e.OK = 0] = "OK"
            }(h || (h = {}));
        const m = {
            GetQuest: n,
            AchieveInfo: i,
            AchieveTask: s,
            AchieveTake: r,
            GetMachine: a,
            Roll: l,
            GetHistory: c,
            GetAwardHistory: h
        };
        o.QuestError = m, cc._RF.pop()
    }, {}],
    ErrorMsgDownloader: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "f6a6antrVlPoLVWP9qTdOIo", "ErrorMsgDownloader"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ErrorMsgDownloader = void 0;
        const n = e("./SSDownloader");
        o.ErrorMsgDownloader = class extends n.default {
            constructor() {
                super(...arguments), this.OnLoad = null, this.OnError = null
            }
            Start(e, t, o) {
                this.OnLoad = t, this.OnError = o, this.GetJSON(e + "ErrorMsg" + SS.Common.GameEnvironment.ProjectSetting.ErrorMsgVersion + ".json", this.OnLoadComplete.bind(this), this.OnError.bind(this))
            }
            OnLoadComplete(e) {
                let t = this;
                try {
                    let n;
                    n = JSON.parse(e), console.log("ErrorMsgDownloader : ", n), null != t.OnLoad && t.OnLoad(n)
                } catch (o) {
                    console.error("[ErrorMsgDownloader] Load failed.\n", o), null != t.OnError && t.OnError(o)
                }
            }
        }, cc._RF.pop()
    }, {
        "./SSDownloader": "SSDownloader"
    }],
    EventBannerData: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "53a08u5Ue9BB4ENSI+O0oZk", "EventBannerData"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.EventBannerData = void 0;
        const {
            ccclass: n,
            property: i
        } = cc._decorator;
        o.EventBannerData = class {
            constructor(e, t, o, n = null, i = null) {
                this.m_sBannerID = "", this.m_iEventTitleTiype = null, this.m_fucClickEvent = null, this.m_funShowPopupEvent = null, this.m_funTimerEvent = null, this.m_bValid = !1, this.m_sBannerID = e, this.m_iEventTitleTiype = t, this.m_fucClickEvent = o, this.m_funShowPopupEvent = n, this.m_funTimerEvent = i
            }
        }, cc._RF.pop()
    }, {}],
    EventCaller: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "d8232/E0DVGApc6BcbYIDZu", "EventCaller");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.EventCaller = o.EventFormat = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class {
            constructor() {
                this.key = "", this.target = null, this.className = "", this.functionName = ""
            }
        };
        n([s()], r.prototype, "key", void 0), n([s(cc.Node)], r.prototype, "target", void 0), n([s()], r.prototype, "className", void 0), n([s()], r.prototype, "functionName", void 0), r = n([i("EventFormat")], r), o.EventFormat = r;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.event = []
            }
            onDestroy() {
                this.event = null
            }
            CallEevent(e) {
                for (let t = 0; t < this.event.length; t++)
                    if (this.event[t].key == e) {
                        let e = this.event[t].target.getComponent(this.event[t].className);
                        return void(e ? e[this.event[t].functionName] ? e[this.event[t].functionName]() : console.warn("EventCaller Not Found Target : " + this.event[t].className) : console.warn("EventCaller Not Found Function : " + this.event[t].functionName))
                    }
            }
        };
        n([s([r])], a.prototype, "event", void 0), a = n([i], a), o.EventCaller = a, cc._RF.pop()
    }, {}],
    EventModule: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "2e6650310tHVq53qniQloza", "EventModule");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.EventModule = void 0;
        const i = e("../Skin/Skin"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_strEventID = "", this.m_fucCBInitDone = null, this.m_LobbyMgr = null, this.m_bVertical = !1, this.m_numOriginSiblingIndex = 0
            }
            init(e, t) {
                this.m_fucCBInitDone = t, this.m_LobbyMgr = e, null != SS.Common.GameEnvironment.CurrentGameNow && 1 == SS.Common.GameEnvironment.ProjectSetting.Modules[SS.Common.GameEnvironment.CurrentGameNow].Vertical && (this.m_bVertical = !0)
            }
            initDone() {
                null != this.m_fucCBInitDone && (this.m_fucCBInitDone(), this.m_fucCBInitDone = null)
            }
            reloadLobby() {
                console.error("reloadLobby()"), this.m_LobbyMgr && this.m_LobbyMgr.ReloadLobby()
            }
            ShowMainPanel() {}
            isVertical() {
                return this.m_bVertical
            }
            setOnTop() {
                if (this.m_LobbyMgr) this.node.parent = i.default.Instance.GetLayer("EventPanel");
                else {
                    if ("RankingBonus" == this.m_strEventID) return;
                    this.m_numOriginSiblingIndex = this.node.getSiblingIndex();
                    let e = this.node.parent.children,
                        t = -1;
                    for (let o = 0; o < e.length; o++) t = t > e[o].getSiblingIndex() ? t : e[o].getSiblingIndex();
                    t++, this.node.setSiblingIndex(t)
                }
            }
            ResetSiblingIndex() {
                this.m_LobbyMgr ? (this.node.parent = i.default.Instance.GetLayer("LoadRes"), this.node.setSiblingIndex(1)) : this.node.setSiblingIndex(this.m_numOriginSiblingIndex)
            }
            checkNewEvent(e) {
                cc.log("EventModule.checkNewEvent");
                let t = "",
                    o = "",
                    n = "";
                if ((n = this.getCookie("GDC_USER_ID")) == (o = this.getCookie("SHOW_ID_QUEST_USER_ID"))) {
                    let o = (t = this.getCookie("SHOW_ID_QUEST_ID_LIST")).split("&");
                    for (let t = 0; t < o.length; t++)
                        if (o[t] == e) return cc.log("match!"), !1;
                    return cc.log("new event!"), this.setCookie("SHOW_ID_QUEST_ID_LIST", "" == t ? e : t + "&" + e), !0
                }
                return cc.log("new user!"), this.setCookie("SHOW_ID_QUEST_USER_ID", n), this.setCookie("SHOW_ID_QUEST_ID_LIST", e), !0
            }
            getCookie(e) {
                return JSUtility.IsSupportLocalStorage() ? localStorage.getItem(e) : JSUtility.IsSupportCookie() ? JSUtility.GetCookie(e) : void 0
            }
            setCookie(e, t) {
                JSUtility.IsSupportLocalStorage() ? localStorage.setItem(e, t) : JSUtility.IsSupportCookie() && (document.cookie = e + "=" + t + ";")
            }
            SetEventActive() {
                SS.Common.GameEnvironment.GameSetting.hasOwnProperty("active_event") && (SS.Common.GameEnvironment.GameSetting.active_event[this.m_strEventID] = !0)
            }
            CloseEvent() {
                SS.Common.GameEnvironment.GameSetting.hasOwnProperty("active_event") && (SS.Common.GameEnvironment.GameSetting.active_event[this.m_strEventID] = !1)
            }
        };
        a = n([s], a), o.EventModule = a, cc._RF.pop()
    }, {
        "../Skin/Skin": "Skin"
    }],
    EventSystemObjectCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "e38839TxK1DIIM8X7ttWKl/", "EventSystemObjectCtrl"), Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const n = e("./EventSystem");
        class i {
            constructor(e, t, o) {
                this.registerName = e, this.func = t, this.target = o
            }
            Register() {
                n.EventSystem.Event(this.registerName).Insert(this.func, this.target)
            }
            Unregister() {
                n.EventSystem.Event(this.registerName).Remove(this.func, this.target)
            }
            Destroy() {
                this.registerName = null, this.func = null, this.target = null
            }
        }
        class s {
            static Insert(e, t, o, n) {
                if (null == e) return void console.warn("EventSystemObjectCtrl_Insert: groupName Not Provieded.");
                const s = new i(t, o, n);
                null == this.m_listObj[e] && (this.m_listObj[e] = {}), this.m_listObj[e][t] = s, s.Register()
            }
            static Remove(e) {
                null != this.m_listObj[e] ? (Object.keys(this.m_listObj[e]).forEach(t => {
                    this.m_listObj[e][t].Unregister(), this.m_listObj[e][t].Destroy()
                }), delete this.m_listObj[e]) : console.warn("EventSystemObjectCtrl_Remove: groupName Not D.N.E.")
            }
        }
        o.default = s, s.m_listObj = {}, cc._RF.pop()
    }, {
        "./EventSystem": "EventSystem"
    }],
    EventSystem: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "c477brrDUJA9roGvK2DPp7/", "EventSystem"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.Mail = o.PopupMsgMgrEvent = o.EmailBonusEvent = o.GameTypeMgrEvent = o.WheelOfFunControll = o.InGameEvent = o.DailyFreeEvent = o.BuyBonus = o.MessageMgrEvent = o.BeginnersGuide = o.SessionEvent = o.FavoriteGame = o.OceanHeart = o.CommunityBonus = o.NoticedArrived = o.Avatar = o.SquareGameIcon = o.Profile = o.OceanKingPlus = o.FishHunter = o.PurchaseEvent = o.GameBarEvent = o.Keyboard = o.DownBar = o.SystemMsg = o.ScreenOrientationState = o.LobbyState = o.ModuleState = o.LuckyScratch = o.AccountPageMgrEvent = o.CheckNextPopup = o.RegistPopupEvent = o.RegistPopupBanner = o.UpdateSafeArea = o.IsGameAppReady = o.IsLoginProcess = o.RegisterLayer = o.GameTipCloseAnGoOnTheGame = o.BackToLobby = o.OpenSwitchGameWindow = o.SwitchGame = o.DoLogOut = o.EventSystem = void 0;
        class n {
            static Event(e) {
                return this.m_listDelegate[e] ? this.m_listDelegate[e] : (this.m_listDelegate[e] = new SS.Common.Delegate, this.m_listDelegate[e])
            }
            static Function(e) {
                return this.m_listFunction[e] ? this.m_listFunction[e] : () => {
                    console.warn("There is no Function registered named '" + e + "'")
                }
            }
            static RegisterFunction(e, t) {
                this.m_listFunction[e] ? console.warn("There is already a Function registered named '" + e + "'\n System will cancell the registration!") : (this.m_listFunction[e] = new Function, this.m_listFunction[e] = t)
            }
            static UnregisterFunction(e) {
                this.m_listFunction[e] ? this.m_listFunction[e] = null : console.warn("There is no Function registered named '" + e + "'\n System will do Nothing!")
            }
            static Destroy() {
                for (let e of n.m_listDelegate) e = null;
                n.m_listDelegate = null;
                for (let e of n.m_listFunction) e = null;
                n.m_listFunction = null
            }
        }
        var i, s, r, a, l, c, h, m, u, d, p, g, _, S, y, C, f, v, P, b, w, I, E, L, D, M, T, R, k, B;
        o.EventSystem = n, n.m_listDelegate = [], n.m_listFunction = [],
            function(e) {
                e.OnLoad = "[lobby_state]_on_load", e.Start = "[lobby_state]_start", e.OnDestroy = "[lobby_state]_on_destroy"
            }(i || (i = {})), o.ModuleState = i,
            function(e) {
                e.CheckVersion = "[lobby_state]_check_version", e.DownloadSetting = "[lobby_state]_download_setting", e.WaitPacket = "[lobby_state]_wait_packet", e.RecvAllPacket = "[lobby_state]_recv_all_packet", e.DownloadResources = "[lobby_state]_download_resources", e.EnterLobby = "[lobby_state]_enter_lobby", e.Logout = "[lobby_state]_logout"
            }(s || (s = {})), o.LobbyState = s,
            function(e) {
                e.ChangeOrientation = "[Screen_Orientation_State]_change_orientation", e.GetOrientation = "[Screen_Orientation_State]_get_orientation", e.SetOrientation = "[Screen_Orientation_State]_set_orientation", e.CheckOrientation = "[Screen_Orientation_State]_check_orientation", e.GetOrientationSetting = "[Screen_Orientation_State]_get_orientation_setting"
            }(r || (r = {})), o.ScreenOrientationState = r, o.RegisterLayer = "register_layer",
            function(e) {
                e.Open = "[system_background]_open", e.Close = "[system_background]_close", e.ClearQueue = "[system_background]_clear_queue"
            }(a || (a = {})), o.SystemMsg = a,
            function(e) {
                e.SetPlayerInfo = "[down_bar]_set_player_info", e.ToggleScorebox = "[down_bar]_toggle_score_box", e.GetPlayerEntries = "[down_bar]_get_player_entries", e.GetPlayerWinnings = "[down_bar]_get_player_winnings"
            }(l || (l = {})), o.DownBar = l,
            function(e) {
                e.Show = "[Keyboard]_show", e.Click = "[Keyboard]_click", e.Hide = "[Keyboard]_hide"
            }(c || (c = {})), o.Keyboard = c, o.DoLogOut = "[DoLogOut]", o.SwitchGame = "[SwitchGame]", o.OpenSwitchGameWindow = "[OpenSwitchGameWindow]", o.BackToLobby = "[BackToLobby]", o.GameTipCloseAnGoOnTheGame = "[GameTipCloseAnGoOnTheGame]", o.IsLoginProcess = "[IsLoginProcess]", o.IsGameAppReady = "[IsGameAppReady]", o.UpdateSafeArea = "update_safe_area", o.RegistPopupBanner = "regist_popup_banner", o.RegistPopupEvent = "regist_popup_event", o.CheckNextPopup = "check_next_popup",
            function(e) {
                e.CanSpin = "[game_bar]_can_spin", e.Spin = "[game_bar]_spin", e.CanStop = "[game_bar]_can_stop", e.Stop = "[game_bar]_stop", e.CanStart = "[game_bar]_can_start", e.Start = "[game_bar]_start", e.CanTake = "[game_bar]_can_take", e.Take = "[game_bar]_take"
            }(h || (h = {})), o.GameBarEvent = h,
            function(e) {
                e.DownloadBundleFinished = "[FishHunter]_DownloadBundleFinished", e.OnShipOccupiedShow = "[FishHunter]_OnShipOccupiedShow", e.SetShipOccupieUICloseEvent = "[FishHunter]_SetShipOccupieUICloseEvent", e.OpenProfile = "[FishHunter]_OpenProfile", e.OpenAvatarEditor = "[FishHunter]_OpenAvatarEditor", e.CloseBattleShipStory = "[FishHunter]_CloseBattleShipStory", e.UpdatePlayerSetting = "[FishHunter]_UpdatePlayerSetting", e.UpdateBuddhaPalm = "[FishHunter]_UpdateBuddhaPalm", e.UseBuddhaPalm = "[FishHunter]_UseBuddhaPalm", e.GetMenuIcon = "[FishHunter]_GetMenuIcon", e.SwitchAuto = "[FishHunter]_SwitchAuto", e.RegisterMouseObjs = "[FishHunter]_RegisterMouseObjs", e.RotateBackGround = "[FishHunter]_RotateBackGround", e.ReachMaxBet = "[FishHunter]_ReachMaxBet", e.UpdateBet = "[FishHunter]_UpdateBet", e.PlayerShoot = "[FishHunter]_PlayerShoot", e.SetMainPlayerSeat = "[FishHunter]_SetMainPlayerSeat"
            }(m || (m = {})), o.FishHunter = m,
            function(e) {
                e.OnClickPurchase = "[OceanKingPlus]_OnClickPurchase", e.OnClickMainProfile = "[OceanKingPlus]_OnClickMainProfile", e.OnClickOtherProfile = "[OceanKingPlus]_OnClickOtherProfile", e.OnClickMainAvatar = "[OceanKingPlus]_OnClickMainAvatar", e.OpenMainProfile = "[OceanKingPlus]_OpenMainProfile", e.OpenMainAvatar = "[OceanKingPlus]_OpenMainAvatar", e.OnPlayerEnter = "[OceanKingPlus]_OnPlayerEnter", e.SynchronizProperty = "[OceanKingPlus]_SynchronizProperty", e.ForceFlushPlayerCache = "[OceanKingPlus]_ForceFlushPlayerCache"
            }(u || (u = {})), o.OceanKingPlus = u,
            function(e) {
                e.OnClickPurchaseBtn = "[Purchase]_OnClickPurchaseBtn", e.OnPurchaseSuccess = "[Purchase]_OnPurchaseSuccess", e.OnPurchasePanelDisable = "[Purchase]_OnPurchasePanelDisable", e.ShowPanel = "[Purchase]_ShowPanel", e.DisablePanel = "[Purchase]_DisablePanel"
            }(d || (d = {})), o.PurchaseEvent = d,
            function(e) {
                e.OpenProfile = "[Profile]_OpenProfile", e.OpenAvatarEditor = "[Profile]_OpenAvatarEditor", e.UpdatePlayerAsset = "[Profile]_UpdatePlayerAsset", e.NotifyUpdatePlayerSetting = "[Profile]_UpdatePlayerSetting", e.ClearSelfUpdateCDTime = "[Profile]_ClearSelfUpdateCDTime", e.SetLoadingNodeDisplay = "[Profile]_SetLoadingNodeDisplay", e.SetBarButtonInteractive = "[Profile]_SetBarButtonInteractive"
            }(p || (p = {})), o.Profile = p,
            function(e) {
                e.ShowAccountPage = "[AccountPageMgr]_ShowAccountPage"
            }(g || (g = {})), o.AccountPageMgrEvent = g,
            function(e) {
                e.GetGameIcon = "[ProfileIcon]_GetGameIcon"
            }(_ || (_ = {})), o.SquareGameIcon = _,
            function(e) {
                e.SetFaceIcon = "[Avatar]_SetFaceIcon", e.SetFaceFrameIcon = "[Avatar]_SetFaceFrameIcon", e.SetNickname = "[Avatar]_SetNickname", e.RequestUpdate = "[Avatar]_RequestUpdate", e.CheckExpireTime = "[Avatar]_CheckExpireTime"
            }(S || (S = {})), o.Avatar = S,
            function(e) {
                e.OnReceiveReward = "[NoticedArrived]_OnReceiveReward", e.ShowRewardNotice = "[NoticedArrived]_ShowRewardNotice", e.OnReceiveAvatar = "[NoticedArrived]_OnReceiveAvatar", e.ShowAvatarNotice = "[NoticedArrived]_ShowAvatarNotice", e.OnReceiveBroadcast = "[NoticedArrived]_OnReceiveBroadcast", e.ShowBroadcast = "[NoticedArrived]_ShowBroadcast", e.SetNoticeInteractive = "[NoticedArrived]_SetNoticeInteractive", e.SetNewsRedPoint = "[NoticedArrived]_SetNewsRedPoint", e.OnRewardShowIn = "[NoticedArrived]_OnRewardShowIn", e.OnRewardShowOut = "[NoticedArrived]_OnRewardShowOut", e.OnRewardShowFinished = "[NoticedArrived]_OnRewardShowFinished", e.OnAvatarShowIn = "[NoticedArrived]_OnAvatarShowIn", e.OnAvatarShowOut = "[NoticedArrived]_OnAvatarShowOut", e.OnAvatarShowFinished = "[NoticedArrived]_OnAvatarShowFinished", e.OnBroadcastShowIn = "[NoticedArrived]_OnBroadcastShowIn", e.OnBroadcastShowOut = "[NoticedArrived]_OnBroadcastShowOut", e.OnBroadcastShowFinished = "[NoticedArrived]_OnBroadcastShowFinished"
            }(y || (y = {})), o.NoticedArrived = y,
            function(e) {
                e.ClickGetAwardCollect = "[CommunityBonus]_ClickGetAwardCollect", e.SetCollected = "[CommunityBonus]_SetCollected", e.TimesUp = "[CommunityBonus]_TimesUp"
            }(C || (C = {})), o.CommunityBonus = C,
            function(e) {
                e.OnRecvCoin = "[OceanHeart]_OnRecvCoin"
            }(f || (f = {})), o.OceanHeart = f,
            function(e) {
                e.ClickHeart = "[FavoriteGame]_ClickHeart", e.ClickHeartSendOK = "[FavoriteGame]_ClickHeartSendOK", e.RefreshFavorite = "[FavoriteGame]_RefreshFavorite"
            }(v || (v = {})), o.FavoriteGame = v,
            function(e) {
                e.ClickSessionIcon = "[SessionEvent]_ClickSessionIcon", e.OpenSessionBonus = "[SessionEvent]_OpenSessionBonus", e.CloseSessionBonus = "[SessionEvent]_CloseSessionBonus", e.CloseCurrentSession = "[SessionEvent]_CloseCurrentSession", e.OnSendTakeReward = "[SessionEvent]_OnSendTakeReward", e.OnRecvTakeReward = "[SessionEvent]_OnRecvTakeReward", e.OnCloseReward = "[SessionEvent]_OnCloseReward", e.OnClickRewardItem = "[SessionEvent]_OnClickRewardItem", e.UpdateAssets = "[SessionEvent]_UpdateAssets", e.OnTimesUp = "[SessionEvent]_TimesUp"
            }(P || (P = {})), o.SessionEvent = P,
            function(e) {
                e.Show = "[BeginnersGuilde]_show", e.Hide = "[BeginnersGuilde]_hide", e.OnExit = "[BeginnersGuilde]_onExit"
            }(b || (b = {})), o.BeginnersGuide = b,
            function(e) {
                e.OnContentShowed = "[MessageMgr]_ShowContent"
            }(w || (w = {})), o.MessageMgrEvent = w,
            function(e) {
                e.GetLobbyFlagData = "[BuyBonus]_getLobbyFlagData", e.SpawnLobbyIconFlag = "[BuyBonus]_spawnLobbyIconFlag", e.GetIsSupportBuyBonus = "[BuyBonus]_getIsSupportBuyBonus", e.CmdGetInfo = "[BuyBonus]_cmdGetInfo", e.GetIconPos = "[BuyBonus]_getIconPos", e.GetPlayerEntries = "[BuyBonus]_getPlayerEntries", e.GetCurTotalBet = "[BuyBonus]_getCurTotalBet", e.GetIsExtraBetOn = "[BuyBonus]_getIsExtraBetOn", e.SetIconInteractable = "[BuyBonus]_setIconInteract", e.SetIconActive = "[BuyBonus]_setIconActive", e.CallAutoShow = "[BuyBonus]_callAutoShow", e.Buy = "[BuyBonus]_buy", e.SetInGameJpUI = "[BuyBonus]_getInGameJpUI", e.ChangeBet = "[BuyBonus]_changeBet", e.Close = "[BuyBonus]_close"
            }(I || (I = {})), o.BuyBonus = I,
            function(e) {
                e.Show = "[daily_free]_show", e.Hide = "[daily_free]_hide", e.OnClick = "[daily_free]on_click", e.GetDailyFree = "[daily_free]_get_daily_free"
            }(E || (E = {})), o.DailyFreeEvent = E,
            function(e) {
                e.Show = "[LuckyScratch]_show"
            }(L || (L = {})), o.LuckyScratch = L,
            function(e) {
                e.SetContent = "[WheelOfFun]_set_content", e.Spin = "[WheelOfFun]_spin", e.Stop = "[WheelOfFun]_stop", e.Finish = "[WheelOfFun]_finish"
            }(D || (D = {})), o.WheelOfFunControll = D,
            function(e) {
                e.SetIconInteractable = "[InGameEvent]_setIconInteract"
            }(M || (M = {})), o.InGameEvent = M,
            function(e) {
                e.GetContainer = "[GameTypeMgr]_getContainerLayout", e.ClickSwitchBtn = "[GameTypeMgr]_clickSwitchBtn"
            }(T || (T = {})), o.GameTypeMgrEvent = T,
            function(e) {
                e.OnBtnClicked = "[EmailBonus]_onBtnClicked", e.CheckEventOpen = "[EmailBonus]_checkEventOpen"
            }(R || (R = {})), o.EmailBonusEvent = R,
            function(e) {
                e.OnWarningReload = "[PopupMsgMgr]_onWarningReload"
            }(k || (k = {})), o.PopupMsgMgrEvent = k,
            function(e) {
                e.ShowMailBox = "[Mail]_ShowMail"
            }(B || (B = {})), o.Mail = B, cc._RF.pop()
    }, {}],
    EventTipsMask: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7747eq2D2hCP6H/cdxuEy2I", "EventTipsMask");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.EventTipsMask = void 0;
        const {
            ccclass: s,
            property: r
        } = cc._decorator;
        let a = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeMask = null, this.m_delHideCb = null, this.m_bClickAnyEvent = !1
            }
            start() {
                n.Instance = this, this.m_delHideCb = new SS.Common.Delegate
            }
            onDestroy() {
                n.Instance = null
            }
            show() {
                this.m_bClickAnyEvent || (this.m_nodeMask.active = !0, this.m_nodeMask.opacity = 185, setTimeout(() => {
                    this.hide()
                }, 6e4))
            }
            hide() {
                this.m_bClickAnyEvent || (this.m_bClickAnyEvent = !0, null != this.m_nodeMask && this.m_nodeMask.active && cc.tween(this.m_nodeMask).to(.5, {
                    opacity: 0
                }).call(() => this.m_nodeMask.active = !1).start(), this.m_delHideCb.Length > 0 && this.m_delHideCb.Notify())
            }
            onClick() {
                this.hide()
            }
            checkNewEvent(e) {
                cc.log("EventTipsMask.checkNewEvent");
                let t = "",
                    o = "",
                    n = "";
                if ((n = this.getCookie("GDC_USER_ID")) == (o = this.getCookie("QUEST_USER_ID"))) {
                    let o = (t = this.getCookie("QUEST_ID_LIST")).split("&"),
                        n = !1;
                    for (let t = 0; t < o.length; t++)
                        if (o[t] == e) {
                            n = !0;
                            break
                        }
                    n || (cc.log("new event!"), this.show(), this.setCookie("QUEST_ID_LIST", "" == t ? e : t + "&" + e))
                } else cc.log("new user!"), this.show(), this.setCookie("QUEST_USER_ID", n), this.setCookie("QUEST_ID_LIST", e)
            }
            getCookie(e) {
                return JSUtility.IsSupportLocalStorage() ? localStorage.getItem(e) : JSUtility.IsSupportCookie() ? JSUtility.GetCookie(e) : void 0
            }
            setCookie(e, t) {
                JSUtility.IsSupportLocalStorage() ? localStorage.setItem(e, t) : JSUtility.IsSupportCookie() && (document.cookie = e + "=" + t + ";")
            }
        };
        a.Instance = null, i([r(cc.Node)], a.prototype, "m_nodeMask", void 0), a = n = i([s], a), o.EventTipsMask = a, cc._RF.pop()
    }, {}],
    FakeScoreBoxCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "bb533ygmlVFj4OWtqIu2HK3", "FakeScoreBoxCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FakeScoreBoxCtrl = o.ShowType = void 0;
        const s = e("../../Helper/EventSystem"),
            r = e("./../../Component/NumberCountUp"),
            a = e("./GetBonusShow"),
            {
                ccclass: l,
                property: c
            } = cc._decorator;
        var h;
        (function(e) {
            e[e.NONE = -1] = "NONE", e[e.ENTRIES = 0] = "ENTRIES", e[e.WINNING = 1] = "WINNING", e[e.CREDIT = 2] = "CREDIT"
        })(h = o.ShowType || (o.ShowType = {}));
        let m = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeRoot = null, this.mask = null, this.m_nodeBGEntries = null, this.m_nodeIconEntries = null, this.m_nodeLabelEntries = null, this.m_CountUpEntries = null, this.m_nodeBGWinning = null, this.m_nodeIconWinning = null, this.m_nodeLabelWinning = null, this.m_CountUpWinning = null, this.m_nodeBGCredit = null, this.m_nodeIconCredit = null, this.m_nodeLabelCredit = null, this.m_CountUpCredit = null, this.m_getBonusShow = null, this.m_nodeBGTarget = null, this.m_nodeIconTarget = null, this.m_nodeLabelTarget = null, this.m_CountUpTarget = null
            }
            onLoad() {
                this.hide(), s.EventSystem.Event(s.PurchaseEvent.OnPurchaseSuccess).Insert(this.OnPurchaseSuccess, this)
            }
            onDestroy() {
                s.EventSystem.Event(s.PurchaseEvent.OnPurchaseSuccess) && s.EventSystem.Event(s.PurchaseEvent.OnPurchaseSuccess).Remove(this.OnPurchaseSuccess, this), this.callUnregisterAllFinishCallback()
            }
            setType(e) {
                switch (e) {
                    case h.ENTRIES:
                        this.m_nodeBGTarget = this.m_nodeBGEntries, this.m_nodeIconTarget = this.m_nodeIconEntries, this.m_nodeLabelTarget = this.m_nodeLabelEntries, this.m_CountUpTarget = this.m_CountUpEntries;
                        break;
                    case h.WINNING:
                        this.m_nodeBGTarget = this.m_nodeBGWinning, this.m_nodeIconTarget = this.m_nodeIconWinning, this.m_nodeLabelTarget = this.m_nodeLabelWinning, this.m_CountUpTarget = this.m_CountUpWinning;
                        break;
                    case h.CREDIT:
                        this.m_nodeBGTarget = this.m_nodeBGCredit, this.m_nodeIconTarget = this.m_nodeIconCredit, this.m_nodeLabelTarget = this.m_nodeLabelCredit, this.m_CountUpTarget = this.m_CountUpCredit
                }
            }
            hide() {
                this.mask.active = !1, this.m_nodeBGEntries.active = !1, this.m_nodeIconEntries.active = !1, this.m_nodeLabelEntries.active = !1, this.m_CountUpEntries.node.active = !1, this.m_nodeBGWinning.active = !1, this.m_nodeIconWinning.active = !1, this.m_nodeLabelWinning.active = !1, this.m_CountUpWinning.node.active = !1, this.m_nodeBGCredit.active = !1, this.m_nodeIconCredit.active = !1, this.m_nodeLabelCredit.active = !1, this.m_CountUpCredit.node.active = !1
            }
            show(e, t) {
                this.mask.active = !0, this.setType(e), this.hide(), this.m_nodeBGTarget.active = !0, this.m_nodeIconTarget.active = !0, this.m_nodeLabelTarget.active = !0, this.m_CountUpTarget.node.active = !0, this.m_CountUpTarget.SetNumberNow(t)
            }
            SetCoinEffect(e, t, o, n) {
                this.m_getBonusShow.Set(e, t, o, n)
            }
            countUpShowJumpMoney(e, t, o, n = null) {
                this.m_getBonusShow.ShowAndJump(o, () => {
                    this.m_CountUpTarget.RegisterFinishCallback(n), this.m_CountUpTarget.CountUp(e, t)
                })
            }
            countUpShowMoney(e, t, o = cc.Vec2.ZERO, n = null) {
                this.m_getBonusShow.Show(o, this.m_nodeBGTarget.convertToWorldSpaceAR(new cc.Vec2(0, 0)), () => {
                    this.m_CountUpTarget.RegisterFinishCallback(n), this.m_CountUpTarget.CountUp(e, t)
                })
            }
            countUpShowJumpMoneyCustom(e, t, o, n, s = null) {
                return i(this, void 0, void 0, function*() {
                    yield SS.Common.WaitForSeconds(0), this.m_getBonusShow.ShowAndJumpCustom(e, this.m_CountUpTarget.node.convertToWorldSpaceAR(cc.Vec3.ZERO), n, () => {
                        this.callUnregisterAllFinishCallback(), this.m_CountUpTarget.RegisterFinishCallback(s), this.m_CountUpTarget.CountUp(t, o)
                    })
                })
            }
            FlyThenCountUpMoney(e, t, o, n, s = null) {
                return i(this, void 0, void 0, function*() {
                    null === s && (s = this.m_CountUpTarget.node.convertToWorldSpaceAR(cc.Vec3.ZERO)), yield this.m_getBonusShow.Fly(o, n, s), this.m_CountUpTarget.CountUp(e, t), yield SS.Common.WaitForSeconds(t)
                })
            }
            callUnregisterAllFinishCallback() {
                this.m_CountUpTarget && this.m_CountUpTarget.UnregisterAllFinishCallback()
            }
            OnPurchaseSuccess(e, t) {
                if (this.m_CountUpTarget) {
                    let o = e;
                    0 == SS.Common.GameEnvironment.IsUseScoreBox && (o = t), this.m_CountUpTarget.SetNumberNow(o)
                }
            }
        };
        n([c(cc.Node)], m.prototype, "m_nodeRoot", void 0), n([c(cc.Node)], m.prototype, "mask", void 0), n([c(cc.Node)], m.prototype, "m_nodeBGEntries", void 0), n([c(cc.Node)], m.prototype, "m_nodeIconEntries", void 0), n([c(cc.Node)], m.prototype, "m_nodeLabelEntries", void 0), n([c(r.NumberCountUp)], m.prototype, "m_CountUpEntries", void 0), n([c(cc.Node)], m.prototype, "m_nodeBGWinning", void 0), n([c(cc.Node)], m.prototype, "m_nodeIconWinning", void 0), n([c(cc.Node)], m.prototype, "m_nodeLabelWinning", void 0), n([c(r.NumberCountUp)], m.prototype, "m_CountUpWinning", void 0), n([c(cc.Node)], m.prototype, "m_nodeBGCredit", void 0), n([c(cc.Node)], m.prototype, "m_nodeIconCredit", void 0), n([c(cc.Node)], m.prototype, "m_nodeLabelCredit", void 0), n([c(r.NumberCountUp)], m.prototype, "m_CountUpCredit", void 0), n([c(a.GetBonusShow)], m.prototype, "m_getBonusShow", void 0), m = n([l], m), o.FakeScoreBoxCtrl = m, cc._RF.pop()
    }, {
        "../../Helper/EventSystem": "EventSystem",
        "./../../Component/NumberCountUp": "NumberCountUp",
        "./GetBonusShow": "GetBonusShow"
    }],
    FavoriteMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7bbd1XoAANBR6LEUOjv4GRA", "FavoriteMgr");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FavoriteMgr = void 0;
        const s = e("../../../LobbyCommon/Component/AudioMgr"),
            r = e("../../../LobbyCommon/Helper/EventSystem"),
            a = e("../../../LobbyCommon/Net/LobbyClient"),
            {
                ccclass: l,
                property: c
            } = cc._decorator;
        let h = n = class {
            constructor() {
                this.m_strFavoriteList = [], this.m_isRecvFavoriteList = !1, this.m_isSending = !1, this.m_tmpActive = !1, this.m_tmpGameID = "", this.m_tmpTimeoutID = void 0
            }
            static get Instance() {
                return this.instance ? this.instance : (this.instance = new n, this.instance)
            }
            Init() {
                this.m_isRecvFavoriteList = !1, this.m_isSending = !1, this.m_tmpActive = !1, this.m_tmpGameID = ""
            }
            RegisterEvent() {
                r.EventSystem.Event(r.FavoriteGame.ClickHeart).Insert(this.OnClickHeart, this)
            }
            Release() {
                r.EventSystem.Event(r.FavoriteGame.ClickHeart).Remove(this.OnClickHeart, this), void 0 !== this.m_tmpTimeoutID && (this.SendFavoriteGameList(), clearTimeout(this.m_tmpTimeoutID), this.m_tmpTimeoutID = void 0)
            }
            GetFavoriteGameList() {
                a.LobbyClient.Instance.GetUserClient.getFavoriteGameList(this.onGetFavoriteGameList.bind(this))
            }
            onGetFavoriteGameList(e, t) {
                this.m_strFavoriteList = [], 0 == e ? (t.hasOwnProperty("cmd_data") && t.cmd_data.hasOwnProperty("data") && t.cmd_data.data.hasOwnProperty("FavList") && (this.m_strFavoriteList = t.cmd_data.data.FavList), this.m_isRecvFavoriteList = !0) : cc.error("[onGetFavoriteGameList] error, state = ", e, ", result = ", t), cc.log("[FavoriteMgr] onRecvFavoriteList ", JSON.stringify(t), this.m_strFavoriteList)
            }
            IsRecvDone() {
                return this.m_isRecvFavoriteList
            }
            SendFavoriteGameList() {
                cc.log("[FavoriteMgr] SendFavoriteGameList ", this.m_strFavoriteList), this.m_isSending = !0, this.m_tmpTimeoutID = void 0;
                try {
                    a.LobbyClient.Instance.GetUserClient.sendFavoriteGameList(this.m_strFavoriteList, this.onSendFavoriteGameList.bind(this))
                } catch (e) {
                    console.error("[FavoriteMgr]", e)
                }
            }
            onSendFavoriteGameList(e, t) {
                cc.log("[FavoriteMgr] onSendFavoriteGameList ", e), 0 == e || cc.error("[FavoriteMgr] onSendFavoriteList error ", e, JSON.stringify(t))
            }
            IsFavorite(e) {
                let t = !1;
                return n.Instance.m_strFavoriteList.findIndex(t => t === e) > -1 && (t = !0), t
            }
            OnClickHeart(e, t) {
                if (this.m_tmpActive = e, this.m_tmpGameID = t, this.m_tmpActive) this.m_strFavoriteList.push(this.m_tmpGameID);
                else {
                    let e = this.m_strFavoriteList.indexOf(this.m_tmpGameID);
                    e > -1 && this.m_strFavoriteList.splice(e, 1)
                }
                this.SetTimeout(), r.EventSystem.Event(r.FavoriteGame.RefreshFavorite).Length > 0 && r.EventSystem.Event(r.FavoriteGame.RefreshFavorite).Notify(this.m_tmpActive, this.m_tmpGameID), this.m_tmpActive && s.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.m_isSending = !1
            }
            SetTimeout() {
                void 0 === this.m_tmpTimeoutID && (this.m_tmpTimeoutID = setTimeout(this.SendFavoriteGameList.bind(this), 1e4))
            }
        };
        h.instance = null, h = n = i([l], h), o.FavoriteMgr = h, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Component/AudioMgr": "AudioMgr",
        "../../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../../../LobbyCommon/Net/LobbyClient": "LobbyClient"
    }],
    FinishPageTimer: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "dd49fdjSoNClpxrgO23gnUY", "FinishPageTimer");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FinishPageTimer = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_sprCircle = null, this.m_labTimer = null, this.m_fTimerMax = 10, this.m_fTimerTmp = 0, this.m_cb = null
            }
            update(e) {
                this.m_fTimerTmp > 0 ? (this.m_fTimerTmp -= e, this.setTimer()) : this.m_cb && this.m_cb()
            }
            setTimer() {
                this.m_sprCircle.fillRange = this.m_fTimerTmp / this.m_fTimerMax, this.m_labTimer.string = Math.ceil(this.m_fTimerTmp).toString()
            }
            show(e) {
                this.node.active = e, e && (this.m_fTimerTmp = this.m_fTimerMax, this.setTimer())
            }
        };
        n([s(cc.Sprite)], r.prototype, "m_sprCircle", void 0), n([s(cc.Label)], r.prototype, "m_labTimer", void 0), n([s(cc.Float)], r.prototype, "m_fTimerMax", void 0), r = n([i], r), o.FinishPageTimer = r, cc._RF.pop()
    }, {}],
    FishBundleManager: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "3c16agqit5Jiqx/0IzDQmUl", "FishBundleManager");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const s = e("../../LobbyCommon/Component/BundleCtrl"),
            r = e("../../LobbyCommon/EventModule/EventModule"),
            a = e("../../LobbyCommon/FullScreenHandler"),
            l = e("../../LobbyCommon/Helper/EventSystem"),
            c = e("../../LobbyCommon/Helper/LayerSystem"),
            h = e("../../LobbyCommon/Helper/Setting"),
            m = e("../../LobbyCommon/Skin/Skin"),
            {
                ccclass: u,
                property: d
            } = cc._decorator;
        let p = class extends cc.Component {
            constructor() {
                super(...arguments), this.PopupWindow = null
            }
            start() {
                return i(this, void 0, void 0, function*() {
                    yield this.BundleAsync(), l.EventSystem.Event(l.FishHunter.DownloadBundleFinished).Notify()
                })
            }
            BundleAsync() {
                return i(this, void 0, void 0, function*() {
                    let e = !0;
                    yield s.default.Instance.DownloadConfig().catch(() => {
                        e = !1
                    }), e && (yield s.default.Instance.DownloadCommonBundles(), yield this.DownloadGameFeature()), yield m.default.Instance.Init();
                    let t = m.default.Instance.GetLoadList("Game"),
                        o = {};
                    o.Purchase = e => {
                        e.parent = this.PopupWindow, e.setSiblingIndex(0)
                    }, o.JPReward = e => {
                        e.parent = this.PopupWindow, e.setSiblingIndex(1)
                    }, o.QuestSystem = e => {
                        e.parent = this.PopupWindow, e.setSiblingIndex(2)
                    }, o.Profile = e => {
                        e.parent = this.PopupWindow, e.active = !1
                    }, o.SystemBackground = e => {
                        e.parent = this.PopupWindow, e.setSiblingIndex(999)
                    }, yield m.default.Instance.Download(o, t, SS.Common.GameEnvironment.GetCurGameIsVertical()), yield this.DoModuleBaseOnloadEvent(), yield this.DoModuleBaseStartEvent(), yield this.DoModuleBaseWaitPacket(), yield this.DoModuleBaseDownloadResource(), c.default.Init(), l.EventSystem.Event(l.ScreenOrientationState.ChangeOrientation).Notify(a.Orientation.Landscape)
                })
            }
            DownloadGameFeature() {
                return i(this, void 0, void 0, function*() {
                    yield h.default.CheckInit();
                    let e = h.default.GetSetting("FeatureUIGame"),
                        t = [];
                    if (e) {
                        let o = SS.Common.GameEnvironment.GameSetting.kioskOpenGameList;
                        if (o)
                            for (let n = 0; n < e.length; n++) {
                                let i = e[n];
                                o.indexOf(i) >= 0 && t.push(i)
                            } else t = e
                    }
                    if (t) {
                        yield s.default.Instance.DownloadGameFeatureBundles(!1, t);
                        for (let e = 0; e < t.length; e++) {
                            let o = s.default.Instance.GetGameFeatureBundlesName(t[e]),
                                n = yield s.default.Instance.GetMainPrefab(o);
                            if (n) {
                                let e = cc.instantiate(n);
                                e.getComponent(r.EventModule).init(null, null), e.parent = this.PopupWindow
                            }
                        }
                    }
                })
            }
            DoModuleBaseOnloadEvent() {
                return i(this, void 0, void 0, function*() {
                    let e = l.EventSystem.Event(l.ModuleState.OnLoad).Length;
                    for (l.EventSystem.Event(l.ModuleState.OnLoad).Notify(() => {
                            e--
                        }); 0 !== e;) yield SS.Common.WaitForSeconds(.25)
                })
            }
            DoModuleBaseStartEvent() {
                return i(this, void 0, void 0, function*() {
                    let e = l.EventSystem.Event(l.ModuleState.Start).Length;
                    for (l.EventSystem.Event(l.ModuleState.Start).Notify(() => {
                            e--
                        }); 0 !== e;) yield SS.Common.WaitForSeconds(.25)
                })
            }
            DoModuleBaseWaitPacket() {
                return i(this, void 0, void 0, function*() {
                    let e = l.EventSystem.Event(l.LobbyState.WaitPacket).Length;
                    for (l.EventSystem.Event(l.LobbyState.WaitPacket).Notify(() => {
                            e--
                        }); 0 !== e;) yield SS.Common.WaitForSeconds(.25)
                })
            }
            DoModuleBaseDownloadResource() {
                return i(this, void 0, void 0, function*() {
                    let e = l.EventSystem.Event(l.LobbyState.DownloadResources).Length;
                    for (l.EventSystem.Event(l.LobbyState.DownloadResources).Notify(() => {
                            e--
                        }); 0 !== e;) yield SS.Common.WaitForSeconds(.25)
                })
            }
        };
        n([d(cc.Node)], p.prototype, "PopupWindow", void 0), p = n([u], p), o.default = p, cc._RF.pop()
    }, {
        "../../LobbyCommon/Component/BundleCtrl": "BundleCtrl",
        "../../LobbyCommon/EventModule/EventModule": "EventModule",
        "../../LobbyCommon/FullScreenHandler": "FullScreenHandler",
        "../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../../LobbyCommon/Helper/LayerSystem": "LayerSystem",
        "../../LobbyCommon/Helper/Setting": "Setting",
        "../../LobbyCommon/Skin/Skin": "Skin"
    }],
    FishCommonRoot: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "b1e067Gq+RGF5omAaBqeS10", "FishCommonRoot");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("../../GameCommon/CommonRoot/Script/CommonRoot"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends i.CommonRoot {
            constructor() {
                super(...arguments), this.EventIconRoot = null
            }
        };
        n([r(cc.Node)], a.prototype, "EventIconRoot", void 0), a = n([s], a), o.default = a, cc._RF.pop()
    }, {
        "../../GameCommon/CommonRoot/Script/CommonRoot": "CommonRoot"
    }],
    FishFakeScoreBoxCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "b3a38dORcNMuIg0TeIhjMva", "FishFakeScoreBoxCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("../../../Component/NumberCountUp"),
            s = e("../../../FakeScoreBox/Script/FakeScoreBoxCtrl"),
            r = e("../../../FakeScoreBox/Script/GetBonusShow"),
            a = e("../../../Helper/EventSystem"),
            {
                ccclass: l,
                property: c
            } = cc._decorator;
        let h = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeRoot = null, this.mask = null, this.m_nodeEntriesL = null, this.m_nodeWinningL = null, this.m_nodeScoreBoxBGL = null, this.m_nodeCreditL = null, this.m_nodeNoScoreBoxBGL = null, this.m_CountUpEntriesL = null, this.m_CountUpWinningL = null, this.m_CountUpCreditL = null, this.m_nodeEntriesR = null, this.m_nodeWinningR = null, this.m_nodeScoreBoxBGR = null, this.m_nodeCreditR = null, this.m_nodeNoScoreBoxBGR = null, this.m_CountUpEntriesR = null, this.m_CountUpWinningR = null, this.m_CountUpCreditR = null, this.m_nodeCoinStarPos = null, this.m_getBonusShow = null, this.m_nodeTitleTarget = null, this.m_nodeBGTarget = null, this.m_CountUpTarget = null, this.m_curSeat = 0
            }
            get Seat() {
                return this.m_curSeat
            }
            onLoad() {
                a.EventSystem.Event(a.PurchaseEvent.OnPurchaseSuccess).Insert(this.OnPurchaseSuccess, this)
            }
            onDestroy() {
                a.EventSystem.Event(a.PurchaseEvent.OnPurchaseSuccess) && a.EventSystem.Event(a.PurchaseEvent.OnPurchaseSuccess).Remove(this.OnPurchaseSuccess, this), this.callUnregisterAllFinishCallback()
            }
            setType(e, t) {
                switch (t) {
                    case s.ShowType.ENTRIES:
                        0 == e || 2 == e ? (this.m_nodeTitleTarget = this.m_nodeEntriesL, this.m_nodeBGTarget = this.m_nodeScoreBoxBGL, this.m_CountUpTarget = this.m_CountUpEntriesL) : (this.m_nodeTitleTarget = this.m_nodeEntriesR, this.m_nodeBGTarget = this.m_nodeScoreBoxBGR, this.m_CountUpTarget = this.m_CountUpEntriesR);
                        break;
                    case s.ShowType.WINNING:
                        0 == e || 2 == e ? (this.m_nodeTitleTarget = this.m_nodeWinningL, this.m_nodeBGTarget = this.m_nodeScoreBoxBGL, this.m_CountUpTarget = this.m_CountUpWinningL) : (this.m_nodeTitleTarget = this.m_nodeWinningR, this.m_nodeBGTarget = this.m_nodeScoreBoxBGR, this.m_CountUpTarget = this.m_CountUpWinningR);
                        break;
                    case s.ShowType.CREDIT:
                        0 == e || 2 == e ? (this.m_nodeTitleTarget = this.m_nodeCreditL, this.m_nodeBGTarget = this.m_nodeNoScoreBoxBGL, this.m_CountUpTarget = this.m_CountUpCreditL) : (this.m_nodeTitleTarget = this.m_nodeCreditR, this.m_nodeBGTarget = this.m_nodeNoScoreBoxBGR, this.m_CountUpTarget = this.m_CountUpCreditR)
                }
            }
            hide() {
                this.mask.active = !1, this.m_nodeEntriesR.active = !1, this.m_nodeEntriesL.active = !1, this.m_nodeWinningR.active = !1, this.m_nodeWinningL.active = !1, this.m_nodeCreditR.active = !1, this.m_nodeCreditL.active = !1, this.m_nodeScoreBoxBGR.active = !1, this.m_nodeScoreBoxBGL.active = !1, this.m_nodeNoScoreBoxBGR.active = !1, this.m_nodeNoScoreBoxBGL.active = !1, this.m_CountUpEntriesR.node.active = !1, this.m_CountUpEntriesL.node.active = !1, this.m_CountUpWinningR.node.active = !1, this.m_CountUpWinningL.node.active = !1, this.m_CountUpCreditL.node.active = !1, this.m_CountUpCreditR.node.active = !1
            }
            show(e, t, o) {
                this.mask.active = !0, this.m_curSeat = e, this.hide(), this.setType(e, t), this.m_nodeTitleTarget.active = !0, this.m_nodeBGTarget.active = !0, this.m_CountUpTarget.node.active = !0, console.error("show Fake score, this.m_nodeBGTarget = " + this.m_nodeTitleTarget.name + ", this.m_CountUpTarget.node = " + this.m_CountUpTarget.node), this.m_CountUpTarget.SetNumberNow(o)
            }
            countUp(e, t, o = null) {
                this.m_CountUpTarget.RegisterFinishCallback(o), this.m_CountUpTarget.CountUp(e, t)
            }
            countUpShowMoney(e, t, o = null) {
                this.m_getBonusShow.Show(this.m_nodeCoinStarPos.convertToWorldSpaceAR(cc.Vec2.ZERO), this.m_nodeTitleTarget.convertToWorldSpaceAR(cc.Vec2.ZERO), () => {
                    this.m_CountUpTarget.RegisterFinishCallback(o), this.m_CountUpTarget.CountUp(e, t)
                })
            }
            callUnregisterAllFinishCallback() {
                this.m_CountUpTarget && this.m_CountUpTarget.UnregisterAllFinishCallback()
            }
            OnPurchaseSuccess(e, t) {
                if (this.m_CountUpTarget) {
                    let o = e;
                    0 == SS.Common.GameEnvironment.IsUseScoreBox && (o = t), this.m_CountUpTarget.SetNumberNow(o)
                }
            }
        };
        n([c(cc.Node)], h.prototype, "m_nodeRoot", void 0), n([c(cc.Node)], h.prototype, "mask", void 0), n([c(cc.Node)], h.prototype, "m_nodeEntriesL", void 0), n([c(cc.Node)], h.prototype, "m_nodeWinningL", void 0), n([c(cc.Node)], h.prototype, "m_nodeScoreBoxBGL", void 0), n([c(cc.Node)], h.prototype, "m_nodeCreditL", void 0), n([c(cc.Node)], h.prototype, "m_nodeNoScoreBoxBGL", void 0), n([c(i.NumberCountUp)], h.prototype, "m_CountUpEntriesL", void 0), n([c(i.NumberCountUp)], h.prototype, "m_CountUpWinningL", void 0), n([c(i.NumberCountUp)], h.prototype, "m_CountUpCreditL", void 0), n([c(cc.Node)], h.prototype, "m_nodeEntriesR", void 0), n([c(cc.Node)], h.prototype, "m_nodeWinningR", void 0), n([c(cc.Node)], h.prototype, "m_nodeScoreBoxBGR", void 0), n([c(cc.Node)], h.prototype, "m_nodeCreditR", void 0), n([c(cc.Node)], h.prototype, "m_nodeNoScoreBoxBGR", void 0), n([c(i.NumberCountUp)], h.prototype, "m_CountUpEntriesR", void 0), n([c(i.NumberCountUp)], h.prototype, "m_CountUpWinningR", void 0), n([c(i.NumberCountUp)], h.prototype, "m_CountUpCreditR", void 0), n([c(cc.Node)], h.prototype, "m_nodeCoinStarPos", void 0), n([c(r.GetBonusShow)], h.prototype, "m_getBonusShow", void 0), h = n([l], h), o.default = h, cc._RF.pop()
    }, {
        "../../../Component/NumberCountUp": "NumberCountUp",
        "../../../FakeScoreBox/Script/FakeScoreBoxCtrl": "FakeScoreBoxCtrl",
        "../../../FakeScoreBox/Script/GetBonusShow": "GetBonusShow",
        "../../../Helper/EventSystem": "EventSystem"
    }],
    FishOceanHeartBtnCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "2d827EiuV1FqaQV3xuZw6hy", "FishOceanHeartBtnCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishOceanHeartBtnCtrl = o.SaveTempShowData = void 0;
        const i = e("../../../Component/NodeDrag"),
            s = e("../../CommunityBonus/Script/CommBonusData"),
            r = e("./FishOceanHeartShellCtrl"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        class c {}
        o.SaveTempShowData = c;
        let h = class extends cc.Component {
            constructor() {
                super(...arguments), this.root = null, this.m_nodeRedTag = null, this.m_labRedTag = null, this.m_nodeBlueTag = null, this.m_labBlueTag = null, this.m_nodeProgress = null, this.m_sprProgressBar = null, this.m_nodeBtn = null, this.m_nodeFingerPtr = null, this.m_nodePrompt = null, this.m_labPrompt = null, this.m_nodeTimer = null, this.m_nodeDragFloatBtn = null, this.m_btn = null, this.m_nodeInGameBg = null, this.m_nodeLobbyBg = null, this.m_nodeRankUpGroup = null, this.m_nodeRankUpWord = null, this.m_nodeArrowUp = null, this.m_nodeArrowDown = null, this.m_labRankUp = null, this.m_FishOceanHeartShellCtrl = null, this.m_FishOceanHeartMgr = null, this.autoClosePromptID = null, this.m_colorYellow = new cc.Color(255, 240, 30, 255), this.m_colorGreen = new cc.Color(95, 255, 40, 255), this.m_colorOrange = new cc.Color(255, 110, 30, 255), this.m_colorPurple = new cc.Color(200, 190, 255, 255), this.m_colorBlue = new cc.Color(150, 250, 255, 255), this.m_colorSalmon = new cc.Color(255, 106, 106, 255), this.m_colorRed = new cc.Color(255, 0, 0, 255), this.m_colorLightGreen = new cc.Color(176, 239, 168, 255), this.m_colorSkyBlue = new cc.Color(0, 100, 255, 255), this.m_colorMagenta = new cc.Color(255, 0, 146, 255), this.m_colorPeach = new cc.Color(255, 229, 180, 255), this.m_aryTempShowData = [], this.m_isShowing = !1, this.m_iTempDataID = 0
            }
            GetShellCtrlAnimationState() {
                return this.m_FishOceanHeartShellCtrl.m_currentAnim ? this.m_FishOceanHeartShellCtrl.m_currentAnim : null
            }
            GetDropItemShowTime() {
                return this.m_FishOceanHeartShellCtrl.DELAY_TIME + this.m_FishOceanHeartShellCtrl.MOVE_TIME
            }
            init(e) {
                this.m_FishOceanHeartMgr = e, this.m_btn = this.m_nodeDragFloatBtn.getComponent(cc.Button), this.m_nodeDragFloatBtn.Event_DragEnd = e.OnDragEnd.bind(e), this.m_nodeDragFloatBtn.Event_ClickItem = e.OnClickFloatBtn.bind(e), this.Clear()
            }
            update() {
                if (!this.m_isShowing && this.m_aryTempShowData.length > 0 && this.m_nodeBtn.activeInHierarchy) {
                    this.m_isShowing = !0;
                    let e = this.m_aryTempShowData.shift();
                    this.m_FishOceanHeartShellCtrl.OpenShell(e, t => {
                        e.data.Status = s.UserQuestDataStatus.AWARD_CLAIMED, 1 == this.m_sprProgressBar.fillRange && (this.m_sprProgressBar.fillRange = 0), null != e.callback && e.callback(t, this.m_aryTempShowData.length), this.m_isShowing = !1
                    }, null, this.m_FishOceanHeartMgr.GetOpenShellSpeed.bind(this.m_FishOceanHeartMgr))
                }
            }
            GetTempShowAryCount() {
                return this.m_aryTempShowData.length
            }
            CheckIsShowing() {
                return this.m_aryTempShowData.length > 0 || this.m_isShowing
            }
            setRedTag(e = 0) {
                let t = 0 != e;
                this.m_nodeRedTag.active = t, this.m_labRedTag.node.active = t, t && (this.m_labRedTag.string = "" + e)
            }
            setNumDot(e = 0, t = 0) {
                let o = 0 != e && t + e < 9;
                this.m_nodeRedTag.active = o, this.m_labRedTag.node.active = o;
                let n = t + e >= 9;
                this.m_nodeBlueTag.active = n, this.m_labBlueTag.node.active = n, this.m_labRedTag.string = e.toString();
                let i = t + e;
                this.m_labBlueTag.string = i.toString(), this.m_nodeBlueTag.width = i < 10 ? 72 : i < 100 ? 85 : i < 1e3 ? 100 : i < 1e4 ? 130 : 150
            }
            setPrompt(e = "") {
                if (null == this.m_nodePrompt) return;
                let t = "" != e;
                this.m_nodePrompt.active = t, t && (this.m_labPrompt.string = e, this.autoClosePromptID = setTimeout(() => {
                    this.setPrompt(), this.showFingerPtr(!1)
                }, 6e4))
            }
            showFingerPtr(e) {
                null != this.m_nodeFingerPtr && (this.m_nodeFingerPtr.active = e)
            }
            show(e) {
                null != this.m_nodeBtn && (this.m_nodeBtn.active = e, e || (this.setPrompt(), this.showFingerPtr(!1), clearTimeout(this.autoClosePromptID)))
            }
            setInteract(e) {
                null != this.m_btn && (this.m_btn.interactable = e)
            }
            setLocked(e) {
                this.m_nodeDragFloatBtn.setLocked(e)
            }
            SetIconShellInfo(e, t) {
                switch (e) {
                    case "FishHunterKingKong":
                        this.m_sprProgressBar.node.color = this.m_colorYellow;
                        break;
                    case "FishHunterBuffalo":
                    case "FishHunterLuckyShamrock":
                        this.m_sprProgressBar.node.color = this.m_colorOrange;
                        break;
                    case "MonstersFrenzy":
                        this.m_sprProgressBar.node.color = this.m_colorGreen;
                        break;
                    case "FishHunterGhost":
                        this.m_sprProgressBar.node.color = this.m_colorPurple;
                        break;
                    case "FishHunterAladdin":
                        this.m_sprProgressBar.node.color = this.m_colorBlue;
                        break;
                    case "FishFortuneKings":
                        this.m_sprProgressBar.node.color = this.m_colorSalmon;
                        break;
                    case "FishHunterThunderDragon":
                        this.m_sprProgressBar.node.color = this.m_colorLightGreen;
                        break;
                    case "FishBattleShip":
                        this.m_sprProgressBar.node.color = this.m_colorSkyBlue;
                        break;
                    case "FishKingOfCrab":
                        this.m_sprProgressBar.node.color = this.m_colorMagenta;
                        break;
                    case "FishCircus":
                        this.m_sprProgressBar.node.color = this.m_colorRed;
                        break;
                    case "FishGolden":
                        this.m_sprProgressBar.node.color = this.m_colorPeach
                }
                this.m_FishOceanHeartShellCtrl.SetWeaponPos(t)
            }
            setProgress(e, t, o) {
                if (this.m_sprProgressBar.fillRange = e, e >= 1) {
                    let e = new c;
                    e.data = new s.CommBonusData, e.data = t, e.award = new s.Award;
                    let n = t.AwardAry.shift();
                    Object.assign(e.award, n), n.AwardItem && Object.assign(e.award.AwardItem, n.AwardItem), e.callback = o, e.dataID = this.m_iTempDataID, this.m_aryTempShowData.push(e), this.m_iTempDataID++
                }
            }
            ShowRankingChange(e, t) {
                this.m_nodeArrowUp.active = t, this.m_nodeArrowDown.active = !t, this.m_labRankUp.string = e.toString(), this.m_nodeRankUpGroup.runAction(cc.fadeIn(.25)), this.m_nodeRankUpWord.runAction(cc.fadeIn(.25));
                let o = cc.fadeIn(.25),
                    n = cc.delayTime(3),
                    i = cc.callFunc(() => {
                        this.m_nodeRankUpGroup.runAction(cc.fadeOut(.25)), this.m_nodeRankUpWord.runAction(cc.fadeOut(.25)), this.m_labRankUp.node.runAction(cc.fadeOut(.25))
                    }),
                    s = cc.sequence(o, n, i);
                this.m_labRankUp.node.runAction(s)
            }
            Clear() {
                this.setNumDot(), this.setPrompt(), this.show(!1), this.showFingerPtr(!1), this.m_FishOceanHeartMgr.m_LobbyMgr ? (this.m_nodeLobbyBg.active = !0, this.m_nodeInGameBg.active = !1, this.m_nodeProgress.active = !1, this.m_nodeRankUpGroup.active = !1, this.m_nodeRankUpWord.active = !1, this.m_labRankUp.node.active = !1) : (this.m_nodeLobbyBg.active = !1, this.m_nodeInGameBg.active = !0, this.m_nodeProgress.active = !0, this.m_nodeRankUpGroup.opacity = 0, this.m_nodeRankUpWord.opacity = 0, this.m_labRankUp.node.opacity = 0, this.m_sprProgressBar.fillRange = 0, this.m_nodeDragFloatBtn.setLocked(!0)), this.m_iTempDataID = 0, this.m_aryTempShowData = [], this.m_FishOceanHeartShellCtrl.Clear()
            }
            move(e, t) {
                this.m_nodeDragFloatBtn.move(e, t)
            }
            lobbyResize() {
                this.moveNode(this.m_nodeRedTag, 0, -37), this.moveNode(this.m_labRedTag.node, 0, -37), this.moveNode(this.m_nodeBlueTag, 0, -37), this.moveNode(this.m_labBlueTag.node, 0, -37);
                let e = this.root.getChildByName("RankIcon");
                e && this.moveNode(e, 0, -20), this.moveNode(this.m_nodeTimer, 0, 20);
                let t = cc.find("AllLabel/LabIconTimer", this.root);
                t && this.moveNode(t, 0, 20);
                let o = cc.find("PrizeBg", this.root);
                o && this.moveNode(o, 0, 20);
                let n = cc.find("AllLabel/LabIconPrize", this.root);
                n && this.moveNode(n, 0, 20)
            }
            moveNode(e, t, o) {
                e.setPosition(e.position.x + t, e.position.y + o)
            }
        };
        n([l(cc.Node)], h.prototype, "root", void 0), n([l(cc.Node)], h.prototype, "m_nodeRedTag", void 0), n([l(cc.Label)], h.prototype, "m_labRedTag", void 0), n([l(cc.Node)], h.prototype, "m_nodeBlueTag", void 0), n([l(cc.Label)], h.prototype, "m_labBlueTag", void 0), n([l(cc.Node)], h.prototype, "m_nodeProgress", void 0), n([l(cc.Sprite)], h.prototype, "m_sprProgressBar", void 0), n([l(cc.Node)], h.prototype, "m_nodeBtn", void 0), n([l(cc.Node)], h.prototype, "m_nodeFingerPtr", void 0), n([l(cc.Node)], h.prototype, "m_nodePrompt", void 0), n([l(cc.Label)], h.prototype, "m_labPrompt", void 0), n([l(cc.Node)], h.prototype, "m_nodeTimer", void 0), n([l(i.NodeDrag)], h.prototype, "m_nodeDragFloatBtn", void 0), n([l(cc.Node)], h.prototype, "m_nodeInGameBg", void 0), n([l(cc.Node)], h.prototype, "m_nodeLobbyBg", void 0), n([l(cc.Node)], h.prototype, "m_nodeRankUpGroup", void 0), n([l(cc.Node)], h.prototype, "m_nodeRankUpWord", void 0), n([l(cc.Node)], h.prototype, "m_nodeArrowUp", void 0), n([l(cc.Node)], h.prototype, "m_nodeArrowDown", void 0), n([l(cc.Label)], h.prototype, "m_labRankUp", void 0), n([l(r.default)], h.prototype, "m_FishOceanHeartShellCtrl", void 0), h = n([a], h), o.FishOceanHeartBtnCtrl = h, cc._RF.pop()
    }, {
        "../../../Component/NodeDrag": "NodeDrag",
        "../../CommunityBonus/Script/CommBonusData": "CommBonusData",
        "./FishOceanHeartShellCtrl": "FishOceanHeartShellCtrl"
    }],
    FishOceanHeartData: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "bfd30lhaYxLOo3IdTjR9OLz", "FishOceanHeartData");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
                value: !0
            }), o.FishOHQustObjectiveType = o.FishOHUserQuestDataStatus = o.FishOHRankingPlayerData = o.FishOHRankAwardData = o.FishOHBonusData = o.FishOHAward = o.FishOceanHeartData = void 0, o.FishOceanHeartData = class {
                constructor() {
                    this.CustomInfoMsg = "", this.Status = -1, this.bonusData = null, this.m_arrRankAwardData = [], this.RankSize = 0, this.CanShow = !1, this.QuestType = n.NONE, this.needRebuff = !1, this.newProgress = 0, this.m_fProgressRate = 0
                }
            }, o.FishOHAward = class {}, o.FishOHBonusData = class {}, o.FishOHRankAwardData = class {}, o.FishOHRankingPlayerData = class {},
            function(e) {
                e[e.NONE = -1] = "NONE", e[e.QUEST_NOT_DONE = 0] = "QUEST_NOT_DONE", e[e.AWARD_AVAILABLE = 1] = "AWARD_AVAILABLE", e[e.AWARD_CLAIMED = 2] = "AWARD_CLAIMED"
            }(o.FishOHUserQuestDataStatus || (o.FishOHUserQuestDataStatus = {})),
            function(e) {
                e[e.NONE = -1] = "NONE", e[e.SPIN_TIME = 0] = "SPIN_TIME", e[e.SPIN_AMOUNT = 1] = "SPIN_AMOUNT", e[e.WIN_AMOUNT = 2] = "WIN_AMOUNT", e[e.CUSTOM = 3] = "CUSTOM"
            }(n = o.FishOHQustObjectiveType || (o.FishOHQustObjectiveType = {}));
        const {
            ccclass: s,
            property: r
        } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.label = null, this.text = "hello"
            }
            start() {}
        };
        i([r(cc.Label)], a.prototype, "label", void 0), i([r], a.prototype, "text", void 0), a = i([s], a), o.default = a, cc._RF.pop()
    }, {}],
    FishOceanHeartDropItem: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "8ad71sLMpJA9r7CeYW0K6WJ", "FishOceanHeartDropItem");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FOH_AWARD = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        var r;
        (function(e) {
            e[e.NONE = -1] = "NONE", e[e.COIN = 0] = "COIN", e[e.EVENT_TOKEN = 1] = "EVENT_TOKEN", e[e.ITEM_FREEZE = 2] = "ITEM_FREEZE", e[e.ITEM_SUMMON = 3] = "ITEM_SUMMON"
        })(r = o.FOH_AWARD || (o.FOH_AWARD = {}));
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.itemAnim = null, this.bubbleNode = null, this.itemIcon = null, this.content = null, this.itemFrams = [], this.contentText = null
            }
            ShowIcon(e) {
                this.bubbleNode.active = e, this.itemIcon.node.active = e
            }
            Init(e, t, o, n, i, s) {
                let a = "",
                    l = "";
                switch (e) {
                    case r.COIN:
                        l = t.toString();
                        break;
                    case r.EVENT_TOKEN:
                        l = "x " + t.toString();
                        break;
                    case r.ITEM_FREEZE:
                        l = "<outline color=#000000width=3>" + (a = SS.Common.GameEnvironment.GameMsg.M104) + " x" + t + "<outline>";
                        break;
                    case r.ITEM_SUMMON:
                        l = "<outline color=#000000width=3>" + (a = SS.Common.GameEnvironment.GameMsg.M105) + " x" + t + "<outline>"
                }
                this.itemIcon.spriteFrame = this.itemFrams[e], this.contentText.string = l, this.content.width = this.contentText.node.width + 56, this.node.runAction(cc.sequence(cc.callFunc(() => {
                    this.itemAnim.play()
                }), cc.delayTime(i), cc.moveTo(s, o), cc.callFunc(() => {
                    this.node.active = !1, n(this)
                })))
            }
        };
        n([s(cc.Animation)], a.prototype, "itemAnim", void 0), n([s(cc.Node)], a.prototype, "bubbleNode", void 0), n([s(cc.Sprite)], a.prototype, "itemIcon", void 0), n([s(cc.Node)], a.prototype, "content", void 0), n([s([cc.SpriteFrame])], a.prototype, "itemFrams", void 0), n([s(cc.RichText)], a.prototype, "contentText", void 0), a = n([i], a), o.default = a, cc._RF.pop()
    }, {}],
    FishOceanHeartInfoCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "8617b6L8JFFy7kOQczH9A7R", "FishOceanHeartInfoCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishOceanHeartInfoCtrl = void 0;
        const i = e("../../CommunityBonus/Script/CommBonusMsgCtrl"),
            s = e("./FishOceanHeartShellCtrl"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_strThemeID = "", this.isFinishClaim = !1, this.m_nodeRoot = null, this.m_sprGameIcon = null, this.m_labGameName = null, this.m_sprProgressBar = null, this.m_labProgress = null, this.m_nodeToken = null, this.m_nodeRedDot = null, this.m_labRedDot = null, this.m_btnPlay = null, this.m_CommBonusMsgCtrl = null, this.m_FishOceanHeartShellCtrl = null, this.m_iRedDotNum = 0, this.errorCode = "", this.m_colorYellow = new cc.Color(255, 240, 30, 255), this.m_colorGreen = new cc.Color(95, 255, 40, 255), this.m_colorOrange = new cc.Color(255, 110, 30, 255), this.m_colorPurple = new cc.Color(200, 190, 255, 255), this.m_colorBlue = new cc.Color(150, 250, 255, 255), this.m_colorSalmon = new cc.Color(255, 106, 106, 255), this.m_colorRed = new cc.Color(255, 0, 0, 255), this.m_colorLightGreen = new cc.Color(176, 239, 168, 255), this.m_colorSkyBlue = new cc.Color(0, 100, 255, 255), this.m_colorMagenta = new cc.Color(255, 0, 146, 255), this.m_colorPeach = new cc.Color(255, 229, 180, 255), this.m_aryV2PearlPos = null, this.m_v2UIPearlPos = null, this.m_aryTempShowData = [], this.m_isShowing = !1
            }
            SetPearlPosAry(e) {
                this.m_aryV2PearlPos = e
            }
            SetUIPearlPos(e) {
                this.m_v2UIPearlPos = e
            }
            setGame(e, t, o, n, i, s, r) {
                switch (this.m_nodeMissionMgr = e, this.m_strThemeID = t, this.m_sGameName = o, this.m_sThemeTitle = n, this.m_FishOceanHeartShellCtrl.SetWeaponPos(i), this.m_aryV2PearlPos = r, this.m_v2UIPearlPos = s, o) {
                    case "FishHunterKingKong":
                        this.m_sprProgressBar.node.color = this.m_colorYellow;
                        break;
                    case "FishHunterBuffalo":
                    case "FishHunterLuckyShamrock":
                        this.m_sprProgressBar.node.color = this.m_colorOrange;
                        break;
                    case "MonstersFrenzy":
                        this.m_sprProgressBar.node.color = this.m_colorGreen;
                        break;
                    case "FishHunterGhost":
                        this.m_sprProgressBar.node.color = this.m_colorPurple;
                        break;
                    case "FishHunterAladdin":
                        this.m_sprProgressBar.node.color = this.m_colorBlue;
                        break;
                    case "FishFortuneKings":
                        this.m_sprProgressBar.node.color = this.m_colorSalmon;
                        break;
                    case "FishHunterThunderDragon":
                        this.m_sprProgressBar.node.color = this.m_colorLightGreen;
                        break;
                    case "FishBattleShip":
                        this.m_sprProgressBar.node.color = this.m_colorSkyBlue;
                        break;
                    case "FishKingOfCrab":
                        this.m_sprProgressBar.node.color = this.m_colorMagenta;
                        break;
                    case "FishCircus":
                        this.m_sprProgressBar.node.color = this.m_colorRed;
                        break;
                    case "FishGolden":
                        this.m_sprProgressBar.node.color = this.m_colorPeach
                }
            }
            SetMissionToProcessingStatus(e = "", t = "FishOceanHeartMgr") {
                this.isFinishClaim = !1, this.m_sprProgressBar.node.active = !0, this.m_labProgress.node.active = !1, this.m_CommBonusMsgCtrl.setMsg(e), this.m_labGameName.string = this.m_sThemeTitle, this.m_btnPlay.clickEvents[0] = new cc.Component.EventHandler, this.m_btnPlay.clickEvents[0].target = this.m_nodeMissionMgr, this.m_btnPlay.clickEvents[0].component = t, this.m_btnPlay.clickEvents[0].handler = "OpenSelectOptionPage", this.m_btnPlay.clickEvents[0].customEventData = this.m_sGameName
            }
            setInteract(e) {
                this.m_btnPlay.interactable = e
            }
            SetProcessBar(e = 0, t = 0, o = 0, n = null, i = !1, s = null) {
                this.m_sprProgressBar.fillRange = o, this.m_labProgress.string = (100 * o).toFixed(2) + "%"
            }
            CallShellOpenAndShowPearl(e) {
                this.m_FishOceanHeartShellCtrl.OpenShellAndShowPearl(e)
            }
            setRedDot(e) {
                this.m_iRedDotNum = e;
                let t = e > 0;
                this.m_nodeRedDot.active = t, this.m_labRedDot.enabled = t, this.m_labRedDot.string = e.toString(), this.m_nodeRedDot.width = e < 10 ? 32 : e < 100 ? 40 : e < 1e3 ? 50 : 60
            }
            decrRedDot() {
                this.m_iRedDotNum--, this.setRedDot(this.m_iRedDotNum)
            }
            Clear() {
                this.setRedDot(0), this.SetProcessBar(0), this.m_nodeMissionMgr = null, this.m_strThemeID = "", this.m_sGameName = "", this.m_sThemeTitle = "", this.m_btnPlay.clickEvents[0] = null
            }
        };
        n([a(cc.Node)], l.prototype, "m_nodeRoot", void 0), n([a(cc.Sprite)], l.prototype, "m_sprGameIcon", void 0), n([a(cc.Label)], l.prototype, "m_labGameName", void 0), n([a(cc.Sprite)], l.prototype, "m_sprProgressBar", void 0), n([a(cc.Label)], l.prototype, "m_labProgress", void 0), n([a(cc.Node)], l.prototype, "m_nodeToken", void 0), n([a(cc.Node)], l.prototype, "m_nodeRedDot", void 0), n([a(cc.Label)], l.prototype, "m_labRedDot", void 0), n([a(cc.Button)], l.prototype, "m_btnPlay", void 0), n([a(i.CommBonusMsgCtrl)], l.prototype, "m_CommBonusMsgCtrl", void 0), n([a(s.default)], l.prototype, "m_FishOceanHeartShellCtrl", void 0), l = n([r], l), o.FishOceanHeartInfoCtrl = l, cc._RF.pop()
    }, {
        "../../CommunityBonus/Script/CommBonusMsgCtrl": "CommBonusMsgCtrl",
        "./FishOceanHeartShellCtrl": "FishOceanHeartShellCtrl"
    }],
    FishOceanHeartListCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "c23e8XToXhPrbiqUa46NwbC", "FishOceanHeartListCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishOceanHeartListCtrl = void 0;
        const s = e("./FishOceanHeartMgr"),
            r = e("./FishOceanHeartInfoCtrl"),
            a = e("../../CommunityBonus/Script/CommBonusData"),
            l = e("../../../Helper/Download"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        let m = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeMissionList = null, this.m_nodeContent = null, this.m_scroll = null, this.m_prefabMisionInfo = null, this.m_sprAtlasGameIcon = null, this.m_aryInfoCtrlList = [], this.m_nodePoolMissions = null, this.m_dateLastTimeOpenPanel = 0, this.m_Mgr = null, this.m_iDLPicCtr = 0, this.m_iDLPicTryCtr = 0, this.m_dictDLPic = null, this.errorCode = "", this.m_fucSprDLEndSetIdle = null, this.m_strCollectQuestID = "", this.m_v2WeaponPos = null, this.m_aryV2PearlPos = null, this.m_v2UIPearlPos = null
            }
            SetWeaponPos(e) {
                this.m_v2WeaponPos = e
            }
            SetPearlPosAry(e) {
                this.m_aryV2PearlPos = e
            }
            SetUIPearlPos(e) {
                this.m_v2UIPearlPos = e
            }
            ClearRes() {
                if (this.m_dictDLPic) {
                    let e = this.m_dictDLPic.keys;
                    for (let t = 0; t < this.m_dictDLPic.keys.length; t++) this.m_dictDLPic[e[t]] = null;
                    this.m_dictDLPic.clear(), this.m_dictDLPic = null
                }
                this.m_nodePoolMissions && this.m_nodePoolMissions.clear()
            }
            init(e) {
                this.m_Mgr = e, this.show(!1), this.m_nodePoolMissions = new cc.NodePool;
                for (let t = 0; t < 4; ++t) {
                    let e = cc.instantiate(this.m_prefabMisionInfo);
                    this.m_nodePoolMissions.put(e)
                }
                this.m_dictDLPic = new SS.Common.Dictionary
            }
            setScrollTop() {}
            show(e) {
                this.m_nodeMissionList.active = e
            }
            setInteract(e) {
                for (let t = 0; t < this.m_aryInfoCtrlList.length; t++) this.m_aryInfoCtrlList[t].setInteract(e)
            }
            getMissionInfoCtrlByThemeID(e) {
                for (let t = 0; t < this.m_aryInfoCtrlList.length; t++)
                    if (this.m_aryInfoCtrlList[t].m_strThemeID == e) return this.m_aryInfoCtrlList[t];
                return null
            }
            updateMisInfo(e) {
                let t = [],
                    o = e.length > 0;
                if (this.show(o), o) {
                    this.m_aryInfoCtrlList.forEach(e => {
                        this.m_nodePoolMissions.put(e.node)
                    }), this.m_aryInfoCtrlList = [], e.sort(this.cmpPriority), this.m_iDLPicCtr = e.length;
                    for (let o = 0; o < e.length; o++) {
                        let n = e[o],
                            i = this.m_nodePoolMissions.get();
                        null == i && (i = cc.instantiate(this.m_prefabMisionInfo)), i.parent = this.m_nodeContent;
                        let s = i.getComponent(r.FishOceanHeartInfoCtrl);
                        this.m_aryInfoCtrlList.push(s);
                        let l = 0,
                            c = 0;
                        if (n.SpinTimesGate > 0) n.QuestType = a.QustObjectiveType.SPIN_TIME, l = n.SpinTimesGate, c = n.SpinTimes, n.CustomInfoMsg = "Complete " + l + " spin times";
                        else if (n.SpinAmountGate > 0) n.QuestType = a.QustObjectiveType.SPIN_AMOUNT, l = n.SpinAmountGate, c = n.SpinAmount, n.CustomInfoMsg = "Complete total entries " + l;
                        else if (n.WinAmountGate > 0) n.QuestType = a.QustObjectiveType.WIN_AMOUNT, l = n.WinAmountGate, c = n.WinAmount, n.CustomInfoMsg = "Accumulate winning above " + l;
                        else {
                            if (0 == n.CustomType) return void console.error("QuestType error");
                            n.QuestType = a.QustObjectiveType.CUSTOM, l = n.CustomGate, c = n.CustomAmount
                        }
                        let h = this.getGameNameByThemeID(n.ThemeID),
                            m = this.getThemeTitleByThemeID(n.ThemeID);
                        t.push(h), this.setSprFrameWithAtlas(h, s.m_sprGameIcon), s.setGame(this.m_Mgr.node, n.ThemeID, h, m, this.m_v2WeaponPos, this.m_v2UIPearlPos, this.m_aryV2PearlPos), s.SetMissionToProcessingStatus(n.CustomInfoMsg, "FishOceanHeartMgr"), c >= l && (c = l);
                        let u = c / l;
                        u = u > 1 ? 1 : u < 0 ? 0 : u, n.Status != a.UserQuestDataStatus.AWARD_CLAIMED ? s.SetProcessBar(this.m_Mgr.GetTotalProgressCur(), this.m_Mgr.GetTotalProgressMax(), u, n, !0, null) : (1 == u && (u = 0), s.SetProcessBar(this.m_Mgr.GetTotalProgressCur(), this.m_Mgr.GetTotalProgressMax(), u, n, !1, null)), s.setRedDot(n.newProgress)
                    }
                    t = null
                }
            }
            SetProgress(e, t) {
                let o = this.getMissionInfoCtrlByThemeID(e);
                null != o && o.SetProcessBar(this.m_Mgr.GetTotalProgressCur(), this.m_Mgr.GetTotalProgressMax(), t)
            }
            GetInfoTokenNode(e) {
                let t = this.getMissionInfoCtrlByThemeID(e);
                return null != t ? t.m_nodeToken : null
            }
            OpenShellAndGetPearl(e, t) {
                let o = this.getMissionInfoCtrlByThemeID(e);
                null != o && o.CallShellOpenAndShowPearl(t)
            }
            cmpPriority(e, t) {
                return e.Priority - t.Priority
            }
            getFilteredMisInfo(e) {
                try {
                    let o = e.QuestList,
                        n = [],
                        i = SS.Common.GameEnvironment.GameSetting.DisableGame,
                        s = SS.Common.GameEnvironment.GameSetting.Type.ALL;
                    for (let e = 0; e < o.length; e++) {
                        let t = o[e].ThemeID,
                            r = i.indexOf(t),
                            a = this.getGameNameByThemeID(t),
                            l = s.indexOf(a),
                            c = s.indexOf("BIGICON_" + a); - 1 == r && (l > -1 || c > -1) && n.push(o[e])
                    }
                    return n
                } catch (t) {
                    return []
                }
            }
            getThemeTitleByThemeID(e) {
                let t = null;
                try {
                    t = SS.Common.GameEnvironment.GameSetting.Icon[e].ThemeTitle
                } catch (o) {}
                return t || ""
            }
            getGameNameByThemeID(e) {
                let t = "";
                try {
                    t = SS.Common.GameEnvironment.GameSetting.Icon[e].GameName
                } catch (o) {}
                return t
            }
            getThemeIDByGameName(e) {
                try {
                    let o = SS.Common.GameEnvironment.GameSetting.Icon;
                    for (let t in o)
                        if (o[t].GameName = e) return +t
                } catch (t) {}
                return 0
            }
            setSprFrameWithAtlas(e, t) {
                return i(this, void 0, void 0, function*() {
                    console.log("[setSprFrameWithAtlas] GameName  = ", e);
                    let o = "Icons/OceanHeart/" + e + ".png";
                    t.spriteFrame = yield l.Download.Image(o), t.enabled = !0, this.m_iDLPicCtr--, 0 == this.m_iDLPicCtr && (this.m_Mgr.m_status = s.MisMgrStatus.TOKEN_ENLARGE)
                })
            }
            Clear() {
                this.m_aryInfoCtrlList.forEach(e => {
                    e.Clear(), this.m_nodePoolMissions.put(e.node)
                }), this.m_aryInfoCtrlList = []
            }
        };
        n([h(cc.Node)], m.prototype, "m_nodeMissionList", void 0), n([h(cc.Node)], m.prototype, "m_nodeContent", void 0), n([h(cc.ScrollView)], m.prototype, "m_scroll", void 0), n([h(cc.Prefab)], m.prototype, "m_prefabMisionInfo", void 0), n([h(cc.SpriteAtlas)], m.prototype, "m_sprAtlasGameIcon", void 0), m = n([c()], m), o.FishOceanHeartListCtrl = m, cc._RF.pop()
    }, {
        "../../../Helper/Download": "Download",
        "../../CommunityBonus/Script/CommBonusData": "CommBonusData",
        "./FishOceanHeartInfoCtrl": "FishOceanHeartInfoCtrl",
        "./FishOceanHeartMgr": "FishOceanHeartMgr"
    }],
    FishOceanHeartMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "c9e20KNaUJCpLKqZP2s4jq/", "FishOceanHeartMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.MisMgrStatus = void 0;
        const s = e("../../../../GameCommon/CommonRoot/Script/CommonRoot"),
            r = e("../../../Component/AudioMgr"),
            a = e("../../../Component/DateTimeCountDown"),
            l = e("../../../Connect/Script/ConnectPanelMgr"),
            c = e("../../../FakeScoreBox/Script/FakeScoreBoxCtrl"),
            h = e("../../../Net/LobbyClient"),
            m = e("../../../PopupMessage/Script/PopupMsgMgr"),
            u = e("../../CommunityBonus/Script/CommBonusData"),
            d = e("../../CommunityBonus/Script/CommBonusMoneyMgr"),
            p = e("../../CommunityBonus/Script/Rank/RankAwardPanelCtrl"),
            g = e("../../CommunityBonus/Script/Rank/RankBonusTotalProgress"),
            _ = e("../../CommunityBonus/Script/Rank/RankingBonusListCtrl"),
            S = e("../../EventBannerData"),
            y = e("../../EventModule"),
            C = e("../../MissionMgr/Script/MissionData"),
            f = e("./FishOceanHeartBtnCtrl"),
            v = e("./FishOceanHeartListCtrl"),
            P = e("./FishOceanHeartTotalProgress"),
            b = e("./FishOceanHeartPlayerRankingMgr"),
            w = e("./FishFakeScoreBoxCtrl"),
            I = e("../../../PopUpMgr/Scripts/PriorityCustomEvent"),
            E = e("../../EventTipsMask"),
            L = e("../../../Helper/EventSystem"),
            D = e("../../CommunityBonus/Script/CommonBonusTakeAvatar"),
            M = e("../../../Net/ClickLog"),
            T = e("../../../Net/ClickLogEnum");
        var R;
        (function(e) {
            e[e.NONE = -1] = "NONE", e[e.IDLE = 0] = "IDLE", e[e.INIT = 1] = "INIT", e[e.UPDATE_CMD = 2] = "UPDATE_CMD", e[e.PARAE_CMD = 3] = "PARAE_CMD", e[e.COLLECT = 4] = "COLLECT", e[e.COLLECT_RCV = 5] = "COLLECT_RCV", e[e.COLLECT_SHOW = 6] = "COLLECT_SHOW", e[e.TOKEN_ENLARGE = 7] = "TOKEN_ENLARGE", e[e.TOKEN_FLY_TOP = 8] = "TOKEN_FLY_TOP", e[e.GET_BUBBLE = 9] = "GET_BUBBLE", e[e.REACH_GATE_POPUP = 10] = "REACH_GATE_POPUP", e[e.RANK_TOKEN_ENLARGE = 11] = "RANK_TOKEN_ENLARGE", e[e.RANK_TOKEN_FLY_TOP = 12] = "RANK_TOKEN_FLY_TOP", e[e.DISABLE = 13] = "DISABLE", e[e.TIME_UP = 14] = "TIME_UP", e[e.FADE_TO_RANK_PAGE = 15] = "FADE_TO_RANK_PAGE"
        })(R = o.MisMgrStatus || (o.MisMgrStatus = {}));
        const {
            ccclass: k,
            property: B
        } = cc._decorator;
        let A = class extends y.EventModule {
            constructor() {
                super(...arguments), this.EVENT_OPEN_UI = null, this.EVENT_GET_MISSION_REWARD = null, this.EVENT_REFLASH_UI_BALANCE = null, this.EVENT_SEND_COLLECT_CMD = null, this.EVENT_GAME_CLOSE = null, this.EVENT_COLLECT_CLOSE = null, this.EVENT_ERROR = null, this.EVENT_GET_COST_PER_SECOND = null, this.m_Root = null, this.m_nodeTipsPage = null, this.m_nodeMainPageBg = null, this.m_nodeRankPageBg = null, this.m_nodeMainPage = null, this.m_nodeRankPage = null, this.m_MissionBtnCtrl = null, this.m_FinishMission = null, this.m_nodeMissionListCtrl = null, this.m_MissionListCtrl = null, this.m_PlayerRankingMgr = null, this.m_CommBonusTotalProgress = null, this.m_RankBonusTotalProgress = null, this.m_CommBonusMoneyMgr = null, this.m_CommBonusTakeAvatar = null, this.gameMenuTimeReci = null, this.gameMenuTimeCountdown = null, this.floatBtnTimeReci = null, this.floatBtnTimeCountDown = null, this.m_RankAwardPanelCtrl = null, this.m_nodeLoginGetAward = null, this.m_nodeLoginGetAwardOKBtn = null, this.m_nodeLoginGetAwardXBtn = null, this.m_nodeLoginGetAwardCollectBtn = null, this.m_labLoginGetAwardMsg = null, this.m_labLoginGetAwardWinning = null, this.m_arrAnimateLoginGetAward = [], this.m_nodeObjList = null, this.m_nodeRankingPage = null, this.m_nodeReadMePage = null, this.m_nodeReadMePage_Rank = null, this.m_nodeRankIDPopup = null, this.m_labRankID = null, this.m_nodeDarkerBG = null, this.m_FakeScoreBoxPfb = null, this.m_FakeScoreBoxNode = null, this.m_FakeScoreBoxCtrl = null, this.m_FishFakeScoreBoxPfb = null, this.m_FishFakeScoreBoxNode = null, this.m_FishFakeScoreBoxCtrl = null, this.m_nodeHint = null, this.m_nodeHintRank = null, this.m_nodeBlocker = null, this.m_iBlockerCtr = 0, this.m_RankingBonusListCtrl = null, this.SoundClip = [], this.m_arrMissionData = [], this.m_curMapData = null, this.m_curAwardAvaiMapData = null, this.m_arrAwardAvaiMapData = [], this.m_iAwardNum = 0, this.m_iBeginTime = -1, this.m_iEndTime = -1, this.m_iNowTime = -1, this.errorCode = "", this.reason = "", this.errorMsg = "", this.m_bBtnInterActable = !0, this.isRequestInfoNow = !1, this.intervalID = -1, this._countDownTime = 0, this.tapMissionIconContent = "HEART OF THE OCEAN\nfish game event is online. ", this.newMissionContent = "Come to check it out New Missions event!", this.collectAwardContent = "Collect your winning {0} !!! Tap on the icon to explore.", this.dragFloatBtn = null, this.curMisData = null, this.maxGameLineBet = 0, this.maxGameLines = 0, this.m_sCurGameName = "", this.SetUserBalance = null, this.SetGoToLobby = null, this.ClickClaimBtnEvent = null, this.SetFinshSingleMission = null, this.GetMissionCmdCallBack = null, this.Del_ForceToGameEvent = null, this.m_status = R.NONE, this.m_lastStatus = R.NONE, this.m_jsonPlayerInfo = null, this.m_strChangeToGameName = "", this.m_iTotalProgressMax = 0, this.m_iTotalProgressCur = 0, this.m_iTotalProgressAddAll = 0, this.m_bShowFinish = !1, this.m_iFinalBalance = 0, this.m_bNoobGuideRanking = !0, this.m_bInRankingPage = !1, this.m_bSlotLock = !0, this.m_bTokenLock = !0, this.m_bIsInLobby = !1, this.m_bIsOpenRankBoard = !0, this.m_bIsShowMermaidAct = !0, this.m_strOceanHeartQuestID = "", this.m_iSeat = 0, this.m_bIsTimeUP = !1, this.m_iSoundNinePearlPopupID = -1, this.m_bIsCollectingAward = !1, this.m_iTempTotalPearl = 0, this.m_bSlotEventRun = !1, this.m_bHaveShow = !1, this.m_RankingRefreshTimestamp = 0, this.m_RankingListHash = 0, this.m_iMySaveRank = -999, this.m_isRecvPlayerProfileList = !1, this.m_PlayerProfileList = null
            }
            GetTotalProgressMax() {
                return this.m_iTotalProgressMax
            }
            GetTotalProgressCur() {
                return this.m_iTotalProgressCur
            }
            GetTimestamp() {
                return Math.floor(Date.now() / 1e3)
            }
            onLoad() {
                this.m_strEventID = "OceanHeart", this.m_Root.active = !1, this.m_nodeTipsPage.active = !1, this.floatBtnTimeCountDown.node.active = !1, this.gameMenuTimeCountdown.node.active = !1, this.m_nodeBlocker.active = !1, this.m_nodeRankPage.active = !1, this.m_RankingRefreshTimestamp = this.GetTimestamp(), this.m_RankingListHash = 0
            }
            start() {
                if (this.m_MissionListCtrl.init(this), this.m_MissionBtnCtrl.init(this), this.m_MissionBtnCtrl.show(!0), this.m_LobbyMgr) {
                    this.m_bIsInLobby = !0, this.SetUserBalance = this.lobbySetUserBalance.bind(this);
                    let e = new I.PriorityCustomEvent(I.PopEventPriority.FishOceanHeart, this.loginGetAward.bind(this));
                    this.m_LobbyMgr.popUpMgr.priorityShowEvents.push(e);
                    let t = new S.EventBannerData("OceanHeart", 302, this.onClickBnnerCB.bind(this));
                    t.m_bValid = !0, this.m_LobbyMgr.m_arrEventBannerData.push(t), this.SetEventActive(), this.popUpClosed()
                } else "" == this.m_sCurGameName && (this.m_sCurGameName = SS.Common.GameEnvironment.CurrentGameNow);
                let e = this.checkThemeIsOpen(this.getThemeIDByGameName(this.m_sCurGameName));
                if (!this.m_bIsInLobby && !e) return this.EVENT_GAME_CLOSE && this.EVENT_GAME_CLOSE(), this.node.active = !1, void this.disableBannerPopUp();
                this.parseMisInfo(h.LobbyClient.Instance.m_CommonEventInfo_900004) && (this.m_curMapData && (this.m_RankingBonusListCtrl.init(this.m_curMapData.m_arrRankAwardData, this.m_curMapData.bonusData.exchange_rate, 3), this.getAllNewProgress(!0)), 0 == this.m_arrAwardAvaiMapData.length || this.m_bIsInLobby || this.loginGetAward(), this.recMisInfoSetProgressCtr(), this.InitTimer(), this.m_nodeMainPageBg.color = cc.Color.WHITE, this.m_nodeRankPageBg.color = cc.Color.GRAY, this.m_bIsInLobby && (this.m_MissionBtnCtrl.lobbyResize(), this.m_bSlotEventRun && this.m_MissionBtnCtrl.move(200, 0))), this.m_CommBonusTotalProgress.setTokenShowStartCB(this.decrCurGameTokenRedDot.bind(this)), this.m_CommBonusTotalProgress.setAllTokenShowEndCB(this.allTokenShowEnd.bind(this)), this.m_CommBonusTotalProgress.setEachTokenShowEndCB(this.eachTokenShowEnd.bind(this)), this.m_CommBonusTotalProgress.m_fucTokenEnlargeStartCB = this.decrOtherToken.bind(this), this.m_CommBonusTotalProgress.m_fucAllTokenEnlargeEndCB = this.setStatusFly.bind(this);
                let t = [];
                for (let o = 0; o < this.SoundClip.length; o++) t.push(this.SoundClip[o].name);
                r.AudioMgr.Instance.setAudioClip(this.SoundClip, t), L.EventSystem.Event(L.CommunityBonus.ClickGetAwardCollect).Insert(this.onClickGetAwardCollect, this), L.EventSystem.Event(L.SwitchGame).Insert(this.onProfileSwitchGame, this), this.initDone()
            }
            update() {
                let e = this.m_status != this.m_lastStatus;
                switch (this.m_lastStatus = this.m_status, this.m_status) {
                    case R.IDLE:
                        if (e) {
                            if (this.m_bIsTimeUP) return void(this.m_MissionBtnCtrl.GetTempShowAryCount() > 0 && this.m_Root.activeInHierarchy ? this.setActivityRoot(!1) : 0 == this.m_MissionBtnCtrl.GetTempShowAryCount() && (this.m_status = R.TIME_UP));
                            l.ConnectPanelMgr.Instance.DisableConnectPanel(0), this.m_nodeBlocker.active = !1, this.node.active = !0, this.SetAllBtnInteract(!0), this.showRankingPage(!0), this.RefreshRank()
                        }
                        break;
                    case R.FADE_TO_RANK_PAGE:
                        this.m_bHaveShow ? (this.m_bHaveShow = !1, this.fadeToRankingPage()) : this.m_status = R.IDLE;
                        break;
                    case R.INIT:
                        break;
                    case R.UPDATE_CMD:
                        e && this.SendMissionBonusInfoCmd();
                        break;
                    case R.PARAE_CMD:
                        break;
                    case R.TOKEN_ENLARGE:
                        e && (this.m_nodeBlocker.active = !0, l.ConnectPanelMgr.Instance.DisableConnectPanel(0), 0 == this.m_iTotalProgressCur ? this.m_status = R.IDLE : this.m_CommBonusTotalProgress.hasGotAllToken() ? this.m_status = R.RANK_TOKEN_FLY_TOP : this.m_iTotalProgressAddAll - this.getCurGameNewProgress() > 0 ? (this.showRankingPage(!1), this.m_CommBonusTotalProgress.enLargeOneByOne(this.m_iTotalProgressCur - this.m_iTotalProgressAddAll, this.m_iTotalProgressAddAll - this.getCurGameNewProgress()), this.m_bHaveShow = !0) : this.m_status = R.TOKEN_FLY_TOP);
                        break;
                    case R.TOKEN_FLY_TOP:
                        if (e) {
                            if (this.m_CommBonusTotalProgress.hasGotAllToken() || 0 == this.getCurGameNewProgress()) this.m_status = R.REACH_GATE_POPUP;
                            else {
                                this.showRankingPage(!1), this.SetAllBtnInteract(!1), this.m_RankBonusTotalProgress.setProgressNoX(this.m_iTotalProgressCur - this.getCurGameNewProgress());
                                let e = this.getThemeIDByGameName(this.m_sCurGameName);
                                "" != e ? this.m_MissionListCtrl.OpenShellAndGetPearl(e, () => {
                                    r.AudioMgr.Instance.Play("Pearl", !1, 1);
                                    let t = this.m_MissionListCtrl.GetInfoTokenNode(e);
                                    this.m_CommBonusTotalProgress.showOneByOne(this.m_iTotalProgressCur - this.getCurGameNewProgress(), this.getCurGameNewProgress(), t), this.m_bHaveShow = !0
                                }) : console.warn("themeID = null")
                            }
                            break
                        }
                    case R.REACH_GATE_POPUP:
                        e && (this.m_CommBonusTotalProgress.hasGotAllToken() && this.m_iTotalProgressMax > this.m_iTotalProgressCur - this.m_iTotalProgressAddAll ? this.m_CommBonusTotalProgress.ShowNecklackComplete(() => {
                            this.ToggleFinishMissionPage(!0)
                        }) : (this.clearAllNewProgress(), this.m_status = R.FADE_TO_RANK_PAGE));
                        break;
                    case R.RANK_TOKEN_FLY_TOP:
                        if (e) {
                            let e = Math.max(this.m_iTotalProgressMax, this.m_iTotalProgressCur - this.m_iTotalProgressAddAll),
                                t = Math.min(this.m_iTotalProgressCur - this.m_iTotalProgressMax, this.m_iTotalProgressAddAll);
                            if (t > 0) {
                                this.showRankingPage(!1), this.m_nodeBlocker.active = !0, this.m_RankBonusTotalProgress.setAllTokenShowEndCB(this.setRankRrogressAndIdle.bind(this, t)), this.m_RankBonusTotalProgress.setProgressNoX(e);
                                let o = !1;
                                for (let e = this.m_MissionListCtrl.m_aryInfoCtrlList.length - 1; e >= 0; e--) this.m_MissionListCtrl.m_aryInfoCtrlList[e].m_nodeRedDot.active && this.m_MissionListCtrl.m_aryInfoCtrlList[e].CallShellOpenAndShowPearl(() => {
                                    o || (o = !0, r.AudioMgr.Instance.Play("Pearl", !1, 1));
                                    let t = this.getThemeIDByGameName(this.m_sCurGameName),
                                        n = this.m_MissionListCtrl.GetInfoTokenNode(t);
                                    this.m_RankBonusTotalProgress.showFlyToken(n), this.m_MissionListCtrl.m_aryInfoCtrlList[e].setRedDot(0)
                                });
                                this.m_bHaveShow = !0
                            } else this.m_status = R.IDLE;
                            this.clearAllNewProgress()
                        }
                        break;
                    case R.DISABLE:
                        e && (this.m_bIsCollectingAward || l.ConnectPanelMgr.Instance.DisableConnectPanel(0), this.disableBannerPopUp(), this.m_MissionBtnCtrl.show(!1), this.node.active = !1);
                        break;
                    case R.TIME_UP:
                        e && (this.m_bIsTimeUP = !1, this.setActivityRoot(!1), this.m_MissionBtnCtrl.show(!1), this.clearAllNewProgress(), this.m_MissionListCtrl.Clear(), this.m_MissionBtnCtrl.Clear(), this.m_PlayerRankingMgr.Clear(), this.m_RankBonusTotalProgress.setProgressNoX(0), this.m_CommBonusMoneyMgr.Clear(), this.m_CommBonusTotalProgress.Init(), this.m_RankingBonusListCtrl.Clear(), this.m_curMapData = null, this.m_arrMissionData = [], this.m_curAwardAvaiMapData = null, this.m_arrAwardAvaiMapData = [], this.m_iTotalProgressAddAll = 0, this.m_iTotalProgressCur = 0, this.m_iAwardNum = 0, this.m_iBeginTime = -1, this.m_iEndTime = -1, this.m_iNowTime = -1, this.m_iTempTotalPearl = 0, this.m_bNoobGuideRanking = !0, this.m_bInRankingPage = !1, this.m_bSlotLock = !0, this.m_bTokenLock = !0, this.m_bIsShowMermaidAct = !0, this.m_bIsCollectingAward = !1, this.m_status = R.UPDATE_CMD)
                }
            }
            Show() {
                this.m_status != R.DISABLE && (this.node.active = !0)
            }
            setBlocker(e) {
                this.m_iBlockerCtr += e ? 1 : -1, this.m_nodeBlocker.active = 0 == this.m_iBlockerCtr
            }
            ShowMainPanel() {
                this.onClickBnnerCB()
            }
            onClickBnnerCB() {
                this.m_status != R.DISABLE && this.OnClickFloatBtn()
            }
            disableBannerPopUp() {
                if (this.m_bIsInLobby)
                    for (let e = 0; e < this.m_LobbyMgr.m_arrEventBannerData.length; e++)
                        if ("OceanHeart" == this.m_LobbyMgr.m_arrEventBannerData[e].m_sBannerID) {
                            this.m_LobbyMgr.m_arrEventBannerData[e].m_bValid = !1;
                            break
                        }
                this.CloseEvent()
            }
            hideLoginGetAward() {
                this.showLoginGetAward(!1)
            }
            showLoginGetAward(e, t = "", o = "", n = "", i = "", s = "", r = 0, a = 0, l = 0, c = []) {
                if (this.m_nodeLoginGetAward.active = e, e) {
                    let e = this.m_curAwardAvaiMapData.QuestID.substr(10, 2) + "/" + this.m_curAwardAvaiMapData.QuestID.substr(12, 2),
                        h = this.m_curAwardAvaiMapData.bonusData.people;
                    this.m_labLoginGetAwardMsg.string = "Event Time : " + e + "\ncommunity jackpot shared by " + h + " people", this.m_RankAwardPanelCtrl.setDetail(t, o, n, i, s, l, r, a, c, this.m_curAwardAvaiMapData.m_arrRankAwardData, this.m_curAwardAvaiMapData.CustomAmount), this.m_nodeLoginGetAwardCollectBtn.active = !0, this.m_nodeLoginGetAwardOKBtn.active = !1, this.m_nodeLoginGetAwardXBtn.active = !1
                }
            }
            tsToDate(e) {
                let t = new Date(1e3 * e).toLocaleDateString("en-US", {
                    timeZone: "EDT",
                    month: "long",
                    day: "numeric"
                });
                return t.substr(0, t.length - 5)
            }
            tsToDateTime(e) {
                let t = new Date(1e3 * (e += 3600)).toLocaleTimeString("en-US", {
                    timeZone: "EST",
                    month: "long",
                    day: "numeric",
                    hour12: !1
                });
                return t.substr(0, t.length - 3)
            }
            loginGetAward() {
                return i(this, void 0, void 0, function*() {
                    this.m_curAwardAvaiMapData = this.m_arrAwardAvaiMapData.pop(), this.m_curAwardAvaiMapData ? (l.ConnectPanelMgr.Instance.ShowConnectPanel(0), this.m_bIsInLobby ? (null == this.m_FakeScoreBoxCtrl && this.InstantiateFakeScoreBox(), h.LobbyClient.Instance.GetUserClient.collectQuest(this.m_curAwardAvaiMapData.QuestID, this.m_curAwardAvaiMapData.QuestLevel, this.rcvCollectQuestAck.bind(this))) : (null == this.m_FishFakeScoreBoxCtrl && this.InstantiateFishFakeScoreBox(), this.EVENT_SEND_COLLECT_CMD && !this.m_bIsCollectingAward && (console.warn("\u9001\u51fa colect cmd"), this.m_bIsCollectingAward = !0, this.EVENT_SEND_COLLECT_CMD(this.m_curAwardAvaiMapData.QuestID, this.m_curAwardAvaiMapData.QuestLevel)))) : this.m_bIsInLobby && this.m_LobbyMgr.popUpMgr.checkAndShowPopup()
                })
            }
            onClickGetAwardCollect() {
                if (0 == this.m_nodeLoginGetAward.active) return;
                console.warn("onClickGetAwardCollect, this.m_iFinalBalance = " + this.m_iFinalBalance), h.LobbyClient.Instance.GetUserClient.recordClickLog("OceanHeart", u.OceanHeartClickLogID.AWARD_COLLECT_BTN), this.m_nodeLoginGetAwardCollectBtn.active = !1;
                let e = () => {
                    this.m_nodeLoginGetAwardOKBtn.active = !0, this.m_nodeLoginGetAwardXBtn.active = !0, this.EVENT_REFLASH_UI_BALANCE && this.EVENT_REFLASH_UI_BALANCE()
                };
                this.m_bIsInLobby ? this.m_FakeScoreBoxCtrl ? (this.m_FakeScoreBoxCtrl.countUpShowJumpMoney(this.m_iFinalBalance, 1, .5, e.bind(this)), this.m_CommBonusTakeAvatar.Show()) : console.error("FakeScoreBoxCtrl is null") : this.m_FishFakeScoreBoxCtrl ? (this.m_FishFakeScoreBoxCtrl.countUpShowMoney(this.m_iFinalBalance, 1, e.bind(this)), this.m_CommBonusTakeAvatar.Show(!1, this.m_FishFakeScoreBoxCtrl.Seat % 2 == 0)) : console.error("FishFakeScoreBoxCtrl is null"), L.EventSystem.Event(L.CommunityBonus.SetCollected).Length > 0 && L.EventSystem.Event(L.CommunityBonus.SetCollected).Notify("OceanHeart")
            }
            onClickGetAwardX() {
                this.hideLoginGetAward(), this.m_RankAwardPanelCtrl.Reset(), this.m_arrAwardAvaiMapData.length > 0 ? this.loginGetAward() : (this.m_bIsInLobby && this.m_LobbyMgr.popUpMgr.checkAndShowPopup(), this.EVENT_COLLECT_CLOSE && this.EVENT_COLLECT_CLOSE(), this.m_bIsCollectingAward = !1, 0 != this.m_arrMissionData.length && this._countDownTime > 0 && null != this.m_curMapData ? (this.node.active = !0, this.setActivityRoot(!1), this.m_MissionBtnCtrl.show(!0), this.m_status = R.IDLE) : this.m_status = R.UPDATE_CMD), h.LobbyClient.Instance.GetUserClient.recordClickLog("OceanHeart", u.OceanHeartClickLogID.AWARD_X_BTN)
            }
            onProfileSwitchGame() {
                this.EVENT_COLLECT_CLOSE && this.EVENT_COLLECT_CLOSE(), this.m_bIsCollectingAward = !1, 0 != this.m_arrMissionData.length && this._countDownTime > 0 && null != this.m_curMapData ? (this.node.active = !0, this.setActivityRoot(!1), this.m_MissionBtnCtrl.show(!0), this.m_status = R.IDLE) : this.m_status = R.UPDATE_CMD
            }
            CheckQuestIsActive() {
                return this.node.activeInHierarchy && this.m_status != R.DISABLE || this.m_bIsCollectingAward
            }
            CallSendCmd() {
                this.m_status != R.DISABLE || this.m_bIsCollectingAward || (this.node.active = !0, this.setActivityRoot(!1), this.m_MissionBtnCtrl.show(!1), this.m_status = R.UPDATE_CMD)
            }
            popUpClosed() {
                if (null != this.m_arrMissionData && null != E.EventTipsMask.Instance && !E.EventTipsMask.Instance.m_bClickAnyEvent) {
                    if (this.m_bSlotEventRun) {
                        let e = "Treasure Map & Heart Of Ocean\nBOTH available!";
                        this.m_MissionBtnCtrl.setPrompt(e)
                    } else this.m_MissionBtnCtrl.setPrompt(this.tapMissionIconContent);
                    null != E.EventTipsMask.Instance && null != this.m_curMapData && (E.EventTipsMask.Instance.m_delHideCb.Insert(this.m_MissionBtnCtrl.setPrompt, this.m_MissionBtnCtrl), E.EventTipsMask.Instance.checkNewEvent(this.m_curMapData.QuestID))
                }
            }
            decrOtherToken() {
                for (let e = this.m_MissionListCtrl.m_aryInfoCtrlList.length - 1; e >= 0; e--)
                    if (null == this.getCurGameMisData() || this.m_MissionListCtrl.m_aryInfoCtrlList[e].m_strThemeID != this.getCurGameMisData().ThemeID) {
                        let t = this.getMisDataByThemeID(this.m_MissionListCtrl.m_aryInfoCtrlList[e].m_strThemeID);
                        if (t.newProgress > 0) {
                            t.newProgress--, this.decrTokenRedDot(e);
                            break
                        }
                    }
            }
            decrTokenRedDot(e) {
                this.m_MissionListCtrl.m_aryInfoCtrlList[e].decrRedDot()
            }
            decrCurGameTokenRedDot() {
                let e = -1;
                for (let t = 0; t < this.m_MissionListCtrl.m_aryInfoCtrlList.length; t++)
                    if (this.m_MissionListCtrl.m_aryInfoCtrlList[t].m_strThemeID == this.getCurGameMisData().ThemeID) {
                        e = t;
                        break
                    }
                if (-1 != e) {
                    let t = this.getMisDataByThemeID(this.getCurGameMisData().ThemeID);
                    t.newProgress > 0 && (t.newProgress--, this.decrTokenRedDot(e))
                }
            }
            setStatusIdle() {
                this.m_status != R.DISABLE && (this.m_status = R.IDLE)
            }
            setRankRrogressAndIdle(e) {
                this.m_RankBonusTotalProgress.setProgressNoX(this.m_iTotalProgressCur), this.m_RankBonusTotalProgress.setProgressAdd(e), this.clearAllNewProgress();
                for (let t = 0; t < this.m_MissionListCtrl.m_aryInfoCtrlList.length; t++) {
                    let e = this.getMisDataByThemeID(this.m_MissionListCtrl.m_aryInfoCtrlList[t].m_strThemeID);
                    e.newProgress > 0 && (e.newProgress = 0)
                }
                this.m_status != R.DISABLE && (this.m_status = R.FADE_TO_RANK_PAGE)
            }
            allTokenShowEnd() {
                this.m_status != R.DISABLE && (this.m_status = R.REACH_GATE_POPUP)
            }
            eachTokenShowEnd() {
                if (this.m_status != R.DISABLE) {
                    let e = this.m_RankBonusTotalProgress.getProgress() + 1;
                    this.m_RankBonusTotalProgress.setProgressNoX(e)
                }
            }
            setStatusFly() {
                this.m_status != R.DISABLE && (this.m_status = R.TOKEN_FLY_TOP)
            }
            checkAwardAvailible() {
                let e = 0,
                    t = 0;
                if (null != this.m_arrMissionData) {
                    for (let o = 0; o < this.m_arrMissionData.length; o++) {
                        let n = this.m_arrMissionData[o];
                        n.Status == C.UserQuestDataStatus.AWARD_AVAILABLE && (e += n.Award.AwardWinnings, t += n.Award.AwardEntries)
                    }
                    return e + t > 0 && (this.m_MissionBtnCtrl.setPrompt(this.collectAwardContent.replace("{0}", (e + t).toString())), !0)
                }
            }
            lobbySetUserBalance(e) {
                let t = e.entries,
                    o = e.winnings;
                this.m_bIsInLobby && (L.EventSystem.Event(L.DownBar.SetPlayerInfo).Notify(t, o), this.m_LobbyMgr.UserEntries = t, this.m_LobbyMgr.UserWinnings = o)
            }
            onDestroy() {
                this.SetUserBalance = null, -1 != this.intervalID && clearInterval(this.intervalID), L.EventSystem.Event(L.CommunityBonus.ClickGetAwardCollect) && L.EventSystem.Event(L.CommunityBonus.ClickGetAwardCollect).Length > 0 && L.EventSystem.Event(L.CommunityBonus.ClickGetAwardCollect).Remove(this.onClickGetAwardCollect, this), L.EventSystem.Event(L.SwitchGame) && L.EventSystem.Event(L.SwitchGame).Length > 0 && L.EventSystem.Event(L.SwitchGame).Remove(this.onProfileSwitchGame, this), h.LobbyClient.Instance.GetJPSystem && (h.LobbyClient.Instance.GetJPSystem.getOceanHeartCB = null)
            }
            ClearTimer() {
                -1 != this.intervalID && clearInterval(this.intervalID)
            }
            SetAllBtnInteract(e) {
                this.m_bBtnInterActable = e, this.m_MissionBtnCtrl.setInteract(e), this.m_MissionListCtrl.setInteract(e)
            }
            SetAllBtnInteractTrue() {
                this.m_bSlotLock = !0, this.SetAllBtnInteract(this.m_bSlotLock && this.m_bTokenLock)
            }
            SetAllBtnInteractFalse() {
                this.m_bSlotLock = !1, this.SetAllBtnInteract(this.m_bSlotLock && this.m_bTokenLock)
            }
            getMisDataByGameName(e) {
                let t = this.getThemeIDByGameName(e);
                return this.getMisDataByThemeID(t)
            }
            getMisDataByThemeID(e) {
                for (let t = 0; t < this.m_arrMissionData.length; t++)
                    if (this.m_arrMissionData[t].ThemeID == e) return this.m_arrMissionData[t];
                return this.m_arrMissionData.length > 0 ? console.error("\u53d6\u4efb\u52d9\u8cc7\u6599\u932f\u8aa4 getMisDataByThemeID m_sCurGameName " + this.m_sCurGameName + ", themeID = " + e) : console.error("\u53d6\u4efb\u52d9\u8cc7\u6599\u932f\u8aa4 m_arrMissionData.length = 0"), null
            }
            getCurGameMisData() {
                return this.getMisDataByGameName(this.m_sCurGameName)
            }
            getCurGameNewProgress() {
                let e;
                return null == (e = "" == this.m_sCurGameName ? 0 : SS.Common.GameEnvironment.ProjectSetting.Modules[this.m_sCurGameName][this.m_curMapData.QuestID]) && (e = 0), e
            }
            gotNewToken() {
                this.m_status != R.DISABLE && (this.m_bTokenLock = !0, this.SetAllBtnInteract(this.m_bSlotLock && this.m_bTokenLock), this.setNewProgress(this.getCurGameNewProgress() + 1))
            }
            setNewProgress(e) {
                SS.Common.GameEnvironment.ProjectSetting.Modules[this.m_sCurGameName][this.m_curMapData.QuestID] = e, this.getAllNewProgress()
            }
            setCurGameName(e, t, o) {
                this.m_iSeat = e, this.m_sCurGameName = t, this.m_MissionListCtrl.SetWeaponPos(o), this.m_MissionListCtrl.SetUIPearlPos(this.m_RankBonusTotalProgress.getTokenPos()), this.m_MissionListCtrl.SetPearlPosAry(this.m_CommBonusTotalProgress.GetTokenNode()), this.m_MissionBtnCtrl.SetIconShellInfo(this.m_sCurGameName, o), this.getAllNewProgress(!0)
            }
            getAllNewProgress(e = !1) {
                let t = SS.Common.GameEnvironment.ProjectSetting.Modules;
                if (t) {
                    let o = 0;
                    for (let e = 0; e < this.m_arrMissionData.length; e++) {
                        let n = t[this.getGameNameByThemeID(this.m_arrMissionData[e].ThemeID)][this.m_curMapData.QuestID];
                        ((n = n || 0) > 0 || this.m_arrMissionData[e].m_fProgressRate > 0) && (o += n, this.m_arrMissionData[e].newProgress = n)
                    }
                    this.m_iTotalProgressAddAll = o, e && this.m_RankBonusTotalProgress.setProgressNoX(this.m_iTotalProgressCur - this.m_iTotalProgressAddAll);
                    let n = this.m_bIsInLobby ? this.m_iTotalProgressCur - this.m_iTotalProgressAddAll : this.m_RankBonusTotalProgress.getProgress();
                    this.m_MissionBtnCtrl.setNumDot(this.m_iTotalProgressAddAll, n)
                }
            }
            clearAllNewProgress() {
                let e = SS.Common.GameEnvironment.ProjectSetting.Modules;
                if (e) {
                    for (let t = 0; t < this.m_arrMissionData.length; t++) {
                        let o = e[this.getGameNameByThemeID(this.m_arrMissionData[t].ThemeID)];
                        null == o ? cc.error("[ClearAllNewProgress]\u6c92\u6709element!(ThemeID:" + this.m_arrMissionData[t].ThemeID + " QuestID:" + this.m_curMapData.QuestID + ")") : o[this.m_curMapData.QuestID] && (o[this.m_curMapData.QuestID] = 0)
                    }
                    this.m_iTotalProgressAddAll = 0, this.m_MissionBtnCtrl.setNumDot(this.m_iTotalProgressAddAll, this.m_RankBonusTotalProgress.getProgress())
                }
            }
            parsetFishQuestUpdateData(e) {
                let t = this.getCurGameMisData();
                if (null != t) try {
                    if (e.hasOwnProperty("UserQuestData")) {
                        let o = e.UserQuestData;
                        for (let e = 0; e < o.length; e++) {
                            let n = o[e];
                            if (t.ThemeID == n.GameThemeID && t.QuestID == n.QuestID && t.QuestLevel == n.QuestLevel) {
                                if (t.Status = n.Status, t.Status == C.UserQuestDataStatus.AWARD_CLAIMED) return;
                                if (t.QuestType == u.QustObjectiveType.SPIN_TIME) t.SpinTimes = n.SpinTimes;
                                else if (t.QuestType == u.QustObjectiveType.SPIN_AMOUNT) t.SpinAmount = n.SpinAmount;
                                else if (t.QuestType == u.QustObjectiveType.WIN_AMOUNT) t.WinAmount = n.WinAmount;
                                else {
                                    if (t.QuestType != u.QustObjectiveType.CUSTOM) return void console.warn("parseSpinData else");
                                    t.CustomAmount = n.CustomAmount
                                }
                                break
                            }
                        }
                        this.recMisInfoSetProgressCtr()
                    }
                } catch (o) {
                    console.error("parsetFishQuestUpdateData error")
                }
            }
            parseFishQuestInfoData(e) {
                let t = this.getCurGameMisData();
                if (null != t) try {
                    if (e.hasOwnProperty("900004") && e[900004].hasOwnProperty("UserAwardData")) {
                        let o = e[900004].UserQuestData;
                        this.m_iNowTime = e[900004].NowTimeUTC, this.RefleshTimer(), this.parseUserDataList(o);
                        for (let n = 0; n < o.length; n++) {
                            let i = o[n];
                            if (t.ThemeID == i.GameThemeID && t.QuestID == i.QuestID && t.QuestLevel == i.QuestLevel) {
                                if (t.Status = i.Status, t.Status != C.UserQuestDataStatus.AWARD_AVAILABLE) break;
                                let o = e[900004].UserAwardData;
                                for (let e = 0; e < o.length; e++) {
                                    let n = o[e];
                                    if (n.hasOwnProperty("QuestID") && n.hasOwnProperty("AwardEntries") && n.hasOwnProperty("AwardWinnings") && n.hasOwnProperty("PearlAmount") && n.hasOwnProperty("AwardItem") && t.QuestID == n.QuestID) {
                                        let e = n.PearlAmount;
                                        this.m_iTempTotalPearl = this.m_iTotalProgressCur + e, t.Award.PearlAmount = n.PearlAmount;
                                        let o = new u.Award;
                                        o.AwardEntries = n.AwardEntries, o.AwardWinnings = n.AwardWinnings, o.PearlAmount = n.PearlAmount, o.AwardItem = n.AwardItem, o.AwardItem ? (o.ItemID = n.AwardItem.ItemID, o.ItemAmount = n.AwardItem.Amount) : (o.ItemID = "", o.ItemAmount = 0), 0 == o.AwardEntries && 0 == o.AwardWinnings || L.EventSystem.Event(L.OceanHeart.OnRecvCoin).Length > 0 && L.EventSystem.Event(L.OceanHeart.OnRecvCoin).Notify(), t.AwardAry.push(o);
                                        break
                                    }
                                }
                                this.parsetFishQuestUpdateData(e[900004]);
                                break
                            }
                        }
                    }
                } catch (o) {
                    console.error("parseSpinData error")
                } else console.error("curGameMisData==null")
            }
            getTokenShow() {
                this.m_bTokenLock = !1, this.SetAllBtnInteract(this.m_bSlotLock && this.m_bTokenLock)
            }
            parseMisInfo(e) {
                if (this.m_status = R.PARAE_CMD, null == e) return !1;
                try {
                    let o = JSON.parse(e);
                    if (o.hasOwnProperty("Enable") && o.Enable && o.hasOwnProperty("QuestList") && o.QuestList.length > 0 && o.hasOwnProperty("UserQuestData")) {
                        let e = o.QuestList,
                            t = o.UserQuestData;
                        if (this.m_arrMissionData = [], 0 == e.length) return !1;
                        this.m_iBeginTime = o.BeginTimeUTC, this.m_iEndTime = o.EndTimeUTC, this.m_iNowTime = o.NowTimeUTC;
                        for (let o = 0; o < e.length; o++) {
                            let n = new u.CommBonusData,
                                i = e[o];
                            if (302 == i.TitleType && (this.m_bIsOpenRankBoard = !0), 300 == i.TitleType || 301 == i.TitleType || 302 == i.TitleType) {
                                n.QuestID = i.QuestID, n.QuestLevel = i.QuestLevel, n.ThemeID = i.GameThemeID, n.SpinTimesGate = i.SpinTimesGate, n.SpinAmountGate = i.SpinAmountGate, n.WinAmountGate = i.WinAmountGate, n.CustomGate = i.CustomGate, n.CustomType = i.CustomType, n.CustomInfo = i.CustomInfo, n.Award = i.Award, n.Priority = i.Priority, n.CycleSeconds = i.CycleSeconds, n.ExpireTimeUTC = i.ExpireTimeUTC, null != i.CustomInfo && i.CustomInfo.hasOwnProperty("Msg") && (n.CustomInfoMsg = i.CustomInfo.Msg);
                                for (let e = 0; e < t.length; e++) {
                                    let o = t[e];
                                    if (n.QuestID == o.QuestID && n.QuestLevel == o.QuestLevel && n.ThemeID == o.GameThemeID) {
                                        n.SpinTimes = o.SpinTimes, n.SpinAmount = o.SpinAmount, n.WinAmount = o.WinAmount, n.CustomAmount = o.CustomAmount, n.Status = o.Status;
                                        break
                                    }
                                }
                                if (300 == i.TitleType && this.checkThemeIsOpen(i.GameThemeID)) this.setGateAndAmount(n), this.m_arrMissionData.push(n);
                                else if (302 == i.TitleType) {
                                    if (n.RankSize = i.CustomInfo.RankNum, i.CustomInfo && i.CustomInfo.RankAward)
                                        for (let e = 0; e < i.CustomInfo.RankAward.length; e++) {
                                            let t = i.CustomInfo.RankAward[e],
                                                o = new u.RankAwardData;
                                            o.Begin = t.Begin, o.End = t.End, o.Award = t.Award, t.hasOwnProperty("Item") && (o.ItemID = t.Item[0].ItemId, o.ItemAmount = t.Item[0].Amount), n.m_arrRankAwardData.push(o)
                                        }
                                    if (n.bonusData = this.parseBonusData(i.ExtraInfo), Date.now(), n.bonusData.jp_begin_time <= this.m_iNowTime && n.bonusData.jp_end_time > this.m_iNowTime && (this.m_strOceanHeartQuestID = n.QuestID, this.m_curMapData = n, this.updateBonusPrize(), this.m_PlayerRankingMgr.showRanking(this.m_curMapData), this.m_iTotalProgressMax = i.CustomGate, this.parseUserDataList(t), h.LobbyClient.Instance.GetJPSystem.getOceanHeartCB = this.parseAndUpdateBonusData.bind(this)), n.Status == C.UserQuestDataStatus.AWARD_AVAILABLE) this.m_arrAwardAvaiMapData.push(n);
                                    else if (n.Status == C.UserQuestDataStatus.QUEST_NOT_DONE && n.bonusData.jp_end_time <= this.m_iNowTime) {
                                        let e = n.bonusData.ranking_list;
                                        for (let t = 0; t < e.length; t++)
                                            if (e[t].ranking_id == n.bonusData.ranking_id) {
                                                this.m_arrAwardAvaiMapData.push(n);
                                                break
                                            }
                                    }
                                }
                            } else 100 == i.TitleType && (this.m_bSlotEventRun = !0)
                        }
                        return !0
                    }
                    return !1
                } catch (t) {
                    return console.error("parseMisInfo"), !1
                }
            }
            parseUserDataList(e) {
                for (let t = 0; t < e.length; t++) {
                    let o = e[t];
                    if (o.QuestID == this.m_curMapData.QuestID) {
                        this.m_iTotalProgressCur = o.CustomAmount;
                        break
                    }
                }
            }
            parseBonusData(e) {
                let t = new u.BonusData;
                try {
                    if (t.exchange_rate = e.exchange_rate, t.extra_jp_value = e.extra_jp_value, t.jp_value = e.jp_value, t.people = e.people, t.quest_id = e.quest_id, t.state_id = e.state_id, t.jp_begin_time = e.jp_begin_time, t.jp_end_time = e.jp_end_time, t.ranking_id = this.m_curMapData && this.m_curMapData.bonusData && this.m_curMapData.bonusData.ranking_id ? this.m_curMapData.bonusData.ranking_id : e.ranking_id ? e.ranking_id : "", t.AvatarID = this.m_curMapData && this.m_curMapData.bonusData && this.m_curMapData.bonusData.AvatarID ? this.m_curMapData.bonusData.AvatarID : e.equip_avatar ? e.equip_avatar : "", t.AvatarFrameID = this.m_curMapData && this.m_curMapData.bonusData && this.m_curMapData.bonusData.AvatarFrameID ? this.m_curMapData.bonusData.AvatarFrameID : e.equip_avatar_frame ? e.equip_avatar_frame : "", t.Nickname = this.m_curMapData && this.m_curMapData.bonusData && this.m_curMapData.bonusData.Nickname ? this.m_curMapData.bonusData.Nickname : e.nick_name ? e.nick_name : "", t.pin_ark_id = this.m_curMapData && this.m_curMapData.bonusData && this.m_curMapData.bonusData.pin_ark_id ? this.m_curMapData.bonusData.pin_ark_id : e.ark_id ? e.ark_id : "", t.ranking_list, t.ranking_list = [], e.hasOwnProperty("ranking_list")) {
                        let o = e.ranking_list;
                        if (o && o[0])
                            for (let e = 0; e < o.length; e++) {
                                let n = o[e],
                                    i = new u.RankingPlayerData;
                                i.amount = n.amount, i.ark_id = n.ark_id, i.ranking_id = n.ranking_id, i.time = n.time, i.AvatarID = n.equip_avatar, i.AvatarFrameID = n.equip_avatar_frame, i.Nickname = n.nick_name, t.ranking_list.push(i)
                            }
                    }
                } catch (o) {
                    console.error(o), t = null
                }
                return t
            }
            parseAndUpdateBonusData(e) {
                if (this.m_status == R.TIME_UP) return;
                let t = this.parseBonusData(e);
                if (this.m_curMapData && t && t.quest_id == this.m_strOceanHeartQuestID) {
                    this.m_curMapData.bonusData = t, this.updateBonusPrize(), this.RefreshRank();
                    let e = this.m_PlayerRankingMgr.GetPlayerSlefRank(); - 999 == this.m_iMySaveRank && (this.m_iMySaveRank = e), console.warn("\u6536\u5230\u6392\u884c\u699c\u8cc7\u6599, \u5f69\u91d1\u4eba\u6578 = " + this.m_curMapData.bonusData.people + ", myNewRank = " + e + " m_iMySaveRan " + this.m_iMySaveRank + ", \u5269\u9918\u6642\u9593 = " + this._countDownTime), e != this.m_iMySaveRank && (-1 != e && !this.m_Root.activeInHierarchy && this._countDownTime <= 86400 && ((e < this.m_iMySaveRank || -1 == this.m_iMySaveRank) && (r.AudioMgr.Instance.Play("RankingMoveUp", !1, 1), this.m_MissionBtnCtrl.ShowRankingChange(e, !0)), e > this.m_iMySaveRank && -1 != this.m_iMySaveRank && (r.AudioMgr.Instance.Play("RankingMoveDown", !1, 1), this.m_MissionBtnCtrl.ShowRankingChange(e, !1))), this.m_iMySaveRank = e)
                }
            }
            RefreshRank() {
                this.m_bInRankingPage && this.IsNeedToRefreshRankPage() && (this.m_PlayerRankingMgr.showRanking(this.m_curMapData), this.m_RankingRefreshTimestamp = this.GetTimestamp())
            }
            IsNeedToRefreshRankPage() {
                let e = !1,
                    t = JSON.stringify(this.m_curMapData.bonusData.ranking_list),
                    o = this.sampleHashCode(t);
                return (1 == this.m_Root.activeInHierarchy && this.m_RankingListHash != o || this.GetTimestamp() > this.m_RankingRefreshTimestamp + 600) && (this.m_RankingRefreshTimestamp = this.GetTimestamp(), this.m_RankingListHash = o, e = !0), t = null, e
            }
            sampleHashCode(e) {
                let t = 0;
                for (let o = 0, n = e.length; o < n; o++) t = (t << 5) - t + e.charCodeAt(o), t |= 0;
                return t
            }
            setGateAndAmount(e) {
                let t, o;
                e.SpinTimesGate > 0 ? (e.QuestType = u.QustObjectiveType.SPIN_TIME, t = e.SpinTimesGate, o = e.SpinTimes, e.CustomInfoMsg = "Complete " + e.SpinTimesGate + " spin times") : e.SpinAmountGate > 0 ? (e.QuestType = u.QustObjectiveType.SPIN_AMOUNT, t = e.SpinAmountGate, o = e.SpinAmount, e.CustomInfoMsg = "Complete total entries " + e.SpinAmountGate) : e.WinAmountGate > 0 ? (e.QuestType = u.QustObjectiveType.WIN_AMOUNT, t = e.WinAmountGate, o = e.WinAmount, e.CustomInfoMsg = "Accumulate winning above " + e.WinAmountGate) : 0 != e.CustomType ? (e.QuestType = u.QustObjectiveType.CUSTOM, t = e.CustomGate, o = e.CustomAmount) : console.error("setGateAndAmount error"), e.m_fProgressRate = o / t
            }
            TimeCountDownCallBack() {
                r.AudioMgr.Instance.Play("Missions_Call", !1, 1), this.setActivityRoot(!1), L.EventSystem.Event(L.CommunityBonus.TimesUp).Length > 0 && L.EventSystem.Event(L.CommunityBonus.TimesUp).Notify(), this.m_status = R.IDLE
            }
            InitTimer() {
                let e = this.m_iEndTime - this.m_iNowTime;
                if (e < 0) this.m_status = R.DISABLE;
                else if (0 != this.m_arrMissionData.length) {
                    for (let t = 0; t < this.m_arrMissionData.length; t++) {
                        let o = this.m_arrMissionData[t].ExpireTimeUTC - this.m_iNowTime;
                        o >= 0 && o < e && (e = o)
                    }
                    e > 0 && !this.m_bIsInLobby && (this.m_bIsTimeUP = !1, this.setActivityRoot(!1), this.m_status = R.IDLE), this.ForceSetTime(e)
                } else 0 == this.m_arrAwardAvaiMapData.length ? this.m_status = R.DISABLE : (this.setActivityRoot(!1), this.m_MissionBtnCtrl.show(!1))
            }
            RefleshTimer() {
                let e = this.m_iEndTime - this.m_iNowTime;
                if (0 == this.m_arrMissionData.length) return this.setActivityRoot(!1), this.m_MissionBtnCtrl.show(!1), void(this.m_status = R.UPDATE_CMD);
                for (let t = 0; t < this.m_arrMissionData.length; t++) {
                    let o = this.m_arrMissionData[t].ExpireTimeUTC - this.m_iNowTime;
                    o >= 0 && o < e && (e = o)
                }
                this.ForceSetTime(e)
            }
            ForceSetTime(e) {
                this.PauseTimer(), this._countDownTime = e, this.UpdateUI(this._countDownTime), this.StartConutDownTimer()
            }
            UpdateUI(e) {
                let t = e >= 86400 ? "{day} Days {hr}:{min}:{sec}" : "{hr}:{min}:{sec}";
                null != this.gameMenuTimeCountdown && (this.gameMenuTimeCountdown.UpdateUIWithFormate(e, t), this.gameMenuTimeCountdown.node.active = !0), null != this.floatBtnTimeCountDown && (this.floatBtnTimeCountDown.UpdateUIWithDay(e), this.floatBtnTimeCountDown.node.active = !0)
            }
            PauseTimer() {
                clearInterval(this.intervalID)
            }
            Timer(e) {
                --e._countDownTime, e._countDownTime <= 0 && (this.m_bIsInLobby && (this.clearAllNewProgress(), this.reloadLobby()), e._countDownTime = 0, e.PauseTimer(), e.GetMissionCmdCallBack = e.TimeCountDownCallBack, this.m_bIsTimeUP = !0, this.m_status != R.IDLE && this.m_status != R.NONE || (this.m_status = R.TIME_UP)), e.UpdateUI(e._countDownTime)
            }
            StartConutDownTimer() {
                -1 != this.intervalID && clearInterval(this.intervalID), this.intervalID = setInterval(() => this.Timer(this), 1e3)
            }
            getGameNameByThemeID(e) {
                let t = "";
                try {
                    t = SS.Common.GameEnvironment.GameSetting.Icon[e].GameName
                } catch (o) {}
                return t
            }
            getThemeIDByGameName(e) {
                try {
                    let o = SS.Common.GameEnvironment.GameSetting.Icon;
                    for (let t in o)
                        if (o[t].GameName == e) return t
                } catch (t) {}
                return ""
            }
            checkThemeIsOpen(e) {
                let t = SS.Common.GameEnvironment.GameSetting.DisableGame,
                    o = SS.Common.GameEnvironment.GameSetting.Type.ALL,
                    n = t.indexOf(e),
                    i = this.getGameNameByThemeID(e),
                    s = !1;
                for (let r = 0; r < o.length; r++)
                    if (o[r].includes(i)) {
                        s = !0;
                        break
                    }
                return -1 == n && s
            }
            ToggleMissionTimeCountDown(e) {
                e ? (this.gameMenuTimeReci.active = !0, this.floatBtnTimeReci.active = !0) : (this.gameMenuTimeReci.active = !1, this.floatBtnTimeReci.active = !1)
            }
            OnDragEnd() {}
            ToggleFinishMissionPage(e) {
                this.m_FinishMission.active = e, this.m_nodeHint.active = !e && this.m_iTotalProgressCur < this.m_iTotalProgressMax, this.m_nodeHintRank.active = !e && this.m_iTotalProgressCur >= this.m_iTotalProgressMax, this.m_bShowFinish = e, e ? this.m_iSoundNinePearlPopupID = r.AudioMgr.Instance.Play("NinePearlPopup", !0, 1) : r.AudioMgr.Instance.Stop(this.m_iSoundNinePearlPopupID)
            }
            closeTipPage() {
                this.m_nodeTipsPage.active = !1, this.closeReadMePage(), 0 == this.m_iTotalProgressCur && this.m_bIsShowMermaidAct && (this.m_CommBonusTotalProgress.ShowStartMermaid(), this.m_bIsShowMermaidAct = !1)
            }
            closeFinishPage() {
                this.ToggleFinishMissionPage(!1), this.m_CommBonusTotalProgress.ShowChangeToFullMermaid(), this.m_status = R.RANK_TOKEN_FLY_TOP
            }
            openReadMePage() {
                this.setReadMePage(!0)
            }
            closeReadMePage() {
                this.setReadMePage(!1)
            }
            closeRankIDPopup() {
                this.m_nodeRankIDPopup.active = !1, h.LobbyClient.Instance.GetUserClient.recordClickLog("OceanHeart", u.OceanHeartClickLogID.RANKING_ID_X_BTN)
            }
            ShowMainPage(e = !0) {
                this.m_bBtnInterActable && (e && (r.AudioMgr.Instance.Play("Click", !1, 1), h.LobbyClient.Instance.GetUserClient.recordClickLog("OceanHeart", u.OceanHeartClickLogID.SWITCH_TO_GAME_PAGE)), this.showRankingPage(!1))
            }
            ShowRankPage() {
                this.m_bBtnInterActable && this.m_bIsOpenRankBoard && (h.LobbyClient.Instance.GetUserClient.recordClickLog("OceanHeart", u.OceanHeartClickLogID.SWITCH_TO_RANK_PAGE), r.AudioMgr.Instance.Play("Click", !1, 1), this.showRankingPage(!0), this.RefreshRank())
            }
            fadeToRankingPage() {
                this.m_bInRankingPage = !0, this.m_nodeRankPage.active = !0, this.m_nodeMainPage.active = !1, this.m_nodeRankPage.opacity = 0, cc.tween(this.m_nodeRankPage).to(1, {
                    opacity: 255
                }).call(() => {
                    this.m_status = R.IDLE
                }).start()
            }
            showRankingPage(e) {
                e && !this.m_bIsOpenRankBoard || (this.m_nodeRankPage.opacity = 255, this.m_nodeMainPage.opacity = 255, this.m_bInRankingPage = e, this.m_nodeMainPage.active = !e, this.m_nodeRankPage.active = e, this.m_nodeMainPageBg.color = e ? cc.Color.GRAY : cc.Color.WHITE, this.m_nodeRankPageBg.color = e ? cc.Color.WHITE : cc.Color.GRAY, this.showReadMePage(!1, this.m_nodeReadMePage_Rank), this.showReadMePage(!1, this.m_nodeReadMePage))
            }
            hideBothPage() {
                this.m_nodeRankPage.active = !0, this.m_nodeRankPage.opacity = 0, this.m_nodeMainPage.active = !0, this.m_nodeMainPage.opacity = 0
            }
            showRankingID(e) {
                this.m_bNoobGuideRanking = !1, this.m_nodeRankIDPopup.active = !1
            }
            setReadMePage(e) {
                this.m_bInRankingPage ? this.showReadMePage(e, this.m_nodeReadMePage_Rank) && (this.m_nodeRankingPage.active = !e) : this.showReadMePage(e, this.m_nodeReadMePage) && (this.m_nodeObjList.active = !e)
            }
            showReadMePage(e, t) {
                if (t.getNumberOfRunningActions() > 0) return !1;
                if (r.AudioMgr.Instance.Play("Click", !1, 1), t.stopAllActions(), t.scale = 1, t.opacity = 255, e) t.active = !0, t == this.m_nodeReadMePage_Rank ? h.LobbyClient.Instance.GetUserClient.recordClickLog("OceanHeart", u.OceanHeartClickLogID.INFO_BTN_OPEN_RANK) : t == this.m_nodeReadMePage && h.LobbyClient.Instance.GetUserClient.recordClickLog("OceanHeart", u.OceanHeartClickLogID.INFO_BTN_OPEN_MAIN);
                else {
                    t == this.m_nodeReadMePage_Rank ? h.LobbyClient.Instance.GetUserClient.recordClickLog("OceanHeart", u.OceanHeartClickLogID.INFO_BTN_X_RANK) : t == this.m_nodeReadMePage && h.LobbyClient.Instance.GetUserClient.recordClickLog("OceanHeart", u.OceanHeartClickLogID.INFO_BTN_X_MAIN);
                    let e = cc.fadeOut(.25),
                        o = cc.scaleTo(.5, 0),
                        n = cc.callFunc(() => t.active = !1),
                        i = cc.sequence(cc.spawn(e, o), n);
                    t.runAction(i)
                }
                return !0
            }
            setActivityRoot(e) {
                if (this.m_Root.active = e, this.m_MissionBtnCtrl.setNumDot(this.m_iTotalProgressAddAll, this.m_RankBonusTotalProgress.getProgress()), this.m_MissionBtnCtrl.show(!e), this.hideBothPage(), r.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), e)
                    if (r.AudioMgr.Instance.Play("Ocean", !1, 1), this.m_CommBonusTotalProgress.setTokens(this.m_iTotalProgressCur - this.m_iTotalProgressAddAll), this.m_nodeHint.active = this.m_iTotalProgressCur < this.m_iTotalProgressMax, this.m_nodeHintRank.active = this.m_iTotalProgressCur >= this.m_iTotalProgressMax, 0 == this.m_iTotalProgressCur && 0 == this.m_iTempTotalPearl && this.m_bIsShowMermaidAct) this.m_CommBonusTotalProgress.Init();
                    else {
                        let e = this.m_iTotalProgressCur - this.getCurGameNewProgress();
                        e >= this.m_iTotalProgressMax ? this.m_CommBonusTotalProgress.ShowFullMermaid() : e >= 0 && this.m_CommBonusTotalProgress.ShowNearMermaid(0 == this.m_iTotalProgressCur && 0 == this.getCurGameNewProgress())
                    }
                else this.ResetSiblingIndex()
            }
            OpenSelectOptionPage(e, t) {
                if (this.m_bBtnInterActable) {
                    if (r.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.m_strChangeToGameName = String(t), this.m_sCurGameName == this.m_strChangeToGameName) return console.warn("\u5728\u6b64\u904a\u6232\u4e2d\u4e0d\u8df3\u8f49!!"), void this.OnClickReturnBtn();
                    this.setActivityRoot(!1), M.ClickLog.EntryPoint = T.LogEvent_EntryPoint.Event, this.m_bIsInLobby ? this.m_LobbyMgr.switchGame.OnSwitchGameIgnoreWindow(this.m_strChangeToGameName) : (this.m_MissionBtnCtrl.show(!1), s.CommonRoot.Instance.m_switchGameGroup.OpenSwitchGameWindow(this.m_strChangeToGameName, this.m_sCurGameName, null, () => {
                        this.m_MissionBtnCtrl.show(!0)
                    }))
                }
            }
            OnClickReturnBtn() {
                this.m_bBtnInterActable && this.m_status != R.COLLECT && (this.setActivityRoot(!1), h.LobbyClient.Instance.GetUserClient.recordClickLog("OceanHeart", u.OceanHeartClickLogID.MAIN_X_BTN))
            }
            OnClickLeaveGameBtn() {
                this.m_bBtnInterActable && (r.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.OnClickReturnBtn(), this.SetReadyChangeGame())
            }
            OnClickFloatBtn() {
                this.m_bBtnInterActable && !this.m_bIsTimeUP && (this.m_MissionBtnCtrl.CheckIsShowing() ? cc.error(" \u8c9d\u6bbc\u6b63\u5728\u958b\u555f\u4e2d!!!  \u7121\u6cd5\u958b\u555f\u4ecb\u9762  ") : (this.setOnTop(), E.EventTipsMask.Instance && E.EventTipsMask.Instance.hide(), h.LobbyClient.Instance.GetUserClient.recordClickLog("OceanHeart", u.OceanHeartClickLogID.FLOAT_BTN), this.m_bIsInLobby ? (this.m_MissionBtnCtrl.showFingerPtr(!1), this.GetMissionCmdCallBack = this.ClickFloatBtnCallEvent, this.m_status = R.UPDATE_CMD) : this.ClickFloatBtnCallEvent()))
            }
            ClickFloatBtnCallEvent() {
                this.m_arrMissionData.length <= 0 || (null != this.EVENT_OPEN_UI && this.EVENT_OPEN_UI(), this.setActivityRoot(!0), this.getAllNewProgress(), this.m_MissionListCtrl.updateMisInfo(this.m_arrMissionData), this.recMisInfoSetProgressCtr(), this.showRankingID(!0))
            }
            SendMissionBonusInfoCmd(e = !0) {
                this.GetMissionCmdCallBack, this.TimeCountDownCallBack, 1 != this.isRequestInfoNow && (this.isRequestInfoNow = !0, l.ConnectPanelMgr.Instance.ShowConnectPanel(0), h.LobbyClient.Instance.GetUserClient.getNoRetryCommonEventInfo(this.recMissionInfo.bind(this)))
            }
            rcvCollectQuestAck(e, t) {
                if (e == ArkSDK.HttpResult.OK && t && t.cmd_data && t.cmd_data.data)
                    if (0 == t.cmd_data.result) this.OnCollectQuest(t.cmd_data);
                    else switch (t.cmd_data.result) {
                        case 1:
                            m.PopupMsgMgr.Instance.ShowPopMsg(m.PopupPriority.Info, "S174", null, null, null), this.lobbySetUserBalance(t.cmd_data.playerInfo), l.ConnectPanelMgr.Instance.DisableConnectPanel(0);
                            break;
                        case -999:
                            m.PopupMsgMgr.Instance.ShowPopMsg(m.PopupPriority.Info, "S175", null, null, null);
                            break;
                        default:
                            m.PopupMsgMgr.Instance.ShowPopMsg(m.PopupPriority.Critical, "S189", null, null, null)
                    } else {
                        let t = "";
                        t = e == ArkSDK.HttpResult.Abort ? "S183" : e == ArkSDK.HttpResult.Condition ? "S184" : e == ArkSDK.HttpResult.Error ? "S187" : e == ArkSDK.HttpResult.NotReset ? "S185" : e == ArkSDK.HttpResult.Status ? "S186" : e == ArkSDK.HttpResult.Timeout ? "S188" : "S189", this.m_bIsInLobby ? m.PopupMsgMgr.Instance.ShowPopMsg(m.PopupPriority.Critical, t, null, null, null) : this.EVENT_ERROR && this.EVENT_ERROR(t)
                    }
            }
            recvPlayerProfileList(e, t) {
                null == t || null == t ? cc.error("!!! recvPlayerProfileList is null !!! ", e, t) : t.hasOwnProperty("cmd_data") && t.cmd_data.hasOwnProperty("player_profile_list") && (this.m_PlayerProfileList = t.cmd_data.player_profile_list), this.m_isRecvPlayerProfileList = !0
            }
            waitPlayerProfileList() {
                return i(this, void 0, void 0, function*() {
                    let e = 0;
                    for (; 0 == this.m_isRecvPlayerProfileList && e < 15;) e += .2, yield SS.Common.WaitForSeconds(.2)
                })
            }
            CheckPlayerProfileList(e) {
                return i(this, void 0, void 0, function*() {
                    let t = e.ranking_list,
                        o = [];
                    for (let e = 0; e < t.length; e++) t[e].ark_id && "" != t[e].ark_id && o.push(t[e].ark_id);
                    if (null != o) {
                        this.m_PlayerProfileList = null, this.m_isRecvPlayerProfileList = !1, h.LobbyClient.Instance.GetUserClient.getPlayerProfileList(o, this.recvPlayerProfileList.bind(this)), yield this.waitPlayerProfileList();
                        for (let o = 0; o < e.ranking_list.length; o++)
                            if (null != this.m_PlayerProfileList)
                                for (let n = 0; n < this.m_PlayerProfileList.length; n++)
                                    if (this.m_PlayerProfileList[n].hasOwnProperty("ark_id") && this.m_PlayerProfileList[n].ark_id == t[o].ark_id && this.m_PlayerProfileList[n].hasOwnProperty("equip_avatar") && this.m_PlayerProfileList[n].hasOwnProperty("equip_avatar_frame") && this.m_PlayerProfileList[n].hasOwnProperty("nick_name")) {
                                        e.ranking_list[o].AvatarID = this.m_PlayerProfileList[n].equip_avatar, e.ranking_list[o].AvatarFrameID = this.m_PlayerProfileList[n].equip_avatar_frame, e.ranking_list[o].Nickname = this.m_PlayerProfileList[n].nick_name;
                                        break
                                    }
                        t = null, o = null
                    } else cc.log("CheckPlayerProfileList no data. ", e)
                })
            }
            OnCollectQuest(e) {
                return i(this, void 0, void 0, function*() {
                    let t;
                    this.node.active = !0, this.node.opacity = 255, this.m_Root.active = !1, this.m_MissionBtnCtrl.show(!1), SS.Common.GameEnvironment.IsUseScoreBox ? (this.m_iAwardNum = e.data.AwardWinnings, this.m_iFinalBalance = e.playerInfo.winnings, t = c.ShowType.WINNING) : (this.m_iFinalBalance = e.playerInfo.winnings + e.playerInfo.entries, this.m_iAwardNum = e.data.AwardWinnings + e.data.AwardEntries, t = c.ShowType.CREDIT), this.node.setSiblingIndex(100);
                    let o = e.data.ExtraInfo;
                    if (null == o) return void l.ConnectPanelMgr.Instance.DisableConnectPanel(0);
                    o.hasOwnProperty("equip_avatar") || (o.equip_avatar = SS.Network.UserClient.UserInfo.avatar_id), o.hasOwnProperty("equip_avatar_frame") || (o.equip_avatar_frame = SS.Network.UserClient.UserInfo.avatar_frame_id), o.hasOwnProperty("nick_name") || (o.nick_name = SS.Network.UserClient.UserInfo.nickname), o.hasOwnProperty("ark_id") || (o.ark_id = SS.Network.LoginModel.LoginInfo.pin_ark_id), yield this.CheckPlayerProfileList(o), this.showLoginGetAward(!0, o.ranking_id, o.equip_avatar, o.equip_avatar_frame, o.nick_name, o.ark_id, this.m_iAwardNum, o.ranking_award, o.exchange_rate, o.ranking_list), this.lobbySetUserBalance(e.playerInfo);
                    let n = this.m_iFinalBalance - this.m_iAwardNum - o.ranking_award;
                    this.m_FishFakeScoreBoxNode.active = !1, this.m_FakeScoreBoxNode.active = !1, this.m_bIsInLobby ? (null == this.m_FakeScoreBoxCtrl && this.InstantiateFakeScoreBox(), this.m_FakeScoreBoxNode.active = !0, this.m_FakeScoreBoxCtrl.show(t, n)) : (null == this.m_FishFakeScoreBoxCtrl && this.InstantiateFishFakeScoreBox(), this.m_FishFakeScoreBoxNode.active = !0, this.m_FishFakeScoreBoxCtrl.show(this.m_iSeat, t, n)), l.ConnectPanelMgr.Instance.DisableConnectPanel(0)
                })
            }
            SetReadyChangeGame() {
                r.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.m_bIsInLobby ? (this.Del_ForceToGameEvent.Length > 0 && (this.Del_ForceToGameEvent.Notify(this.m_strChangeToGameName), this.Del_ForceToGameEvent.Clear()), this.m_strChangeToGameName = "") : s.CommonRoot.Instance.GetTopBarMgr.m_DelClickBackToLobby.Length > 0 && s.CommonRoot.Instance.GetTopBarMgr.m_DelClickBackToLobby.Notify()
            }
            updateBonusPrize() {
                let e = this.m_curMapData.bonusData;
                this.m_CommBonusMoneyMgr && e && (this.m_CommBonusMoneyMgr.setExtra(e.extra_jp_value * e.exchange_rate), this.m_CommBonusMoneyMgr.setInfo(e.jp_value * e.exchange_rate, e.people))
            }
            updateMisInfo() {
                if (0 == this.m_arrAwardAvaiMapData.length && (0 == this.m_arrMissionData.length || null == this.m_curMapData)) return this.m_status = R.DISABLE, void console.warn("updateMisInfo, MisMgrStatus.DISABLE");
                this.m_iEndTime < this.m_iNowTime ? setTimeout(() => {
                    console.error("updateMisInfo, if (this.m_iEndTime < this.m_iNowTime) setTimeout"), this.SendMissionBonusInfoCmd()
                }, 3e3) : null != this.GetMissionCmdCallBack ? (this.GetMissionCmdCallBack(), this.GetMissionCmdCallBack = null) : this.m_status = R.IDLE
            }
            recMissionInfo(e, t) {
                if (this.isRequestInfoNow = !1, l.ConnectPanelMgr.Instance.DisableConnectPanel(0), e == ArkSDK.HttpResult.OK && t && t.cmd_data) {
                    let e = t.cmd_data[900004];
                    if (console.error("\u6536\u5230\u6d77\u6d0b\u4e4b\u5fc3  CommBonusMgr.recMissionInfo:"), console.error(e), e && 0 == e.result) {
                        let t = JSON.stringify(e.data);
                        this.parseMisInfo(t) && (h.LobbyClient.Instance.m_CommonEventInfo_900004 = t, this.m_curMapData && this.m_RankingBonusListCtrl.init(this.m_curMapData.m_arrRankAwardData, this.m_curMapData.bonusData.exchange_rate, 3), 0 == this.m_arrAwardAvaiMapData.length || this.m_bIsInLobby || this.loginGetAward(), this.updateMisInfo(), this.recMisInfoSetProgressCtr(), this.InitTimer())
                    }
                    e && e.result < 0 && (-999 == e.result ? (this.m_status = R.DISABLE, console.error("e900004.result == -999, MisMgrStatus.DISABLE")) : (this.errorCode = "S182", this.m_bIsInLobby ? m.PopupMsgMgr.Instance.ShowPopMsg(m.PopupPriority.Warning, this.errorCode, "Lobby", this.reason) : this.EVENT_ERROR && this.EVENT_ERROR(this.errorCode)))
                } else e == ArkSDK.HttpResult.Abort ? this.errorCode = "S176" : e == ArkSDK.HttpResult.Condition ? this.errorCode = "S177" : e == ArkSDK.HttpResult.Error ? this.errorCode = "S180" : e == ArkSDK.HttpResult.NotReset ? this.errorCode = "S178" : e == ArkSDK.HttpResult.Status ? this.errorCode = "S179" : e == ArkSDK.HttpResult.Timeout ? this.errorCode = "S181" : this.errorCode = "S182", this.errorMsg = "The Internet was lost! Please login again!", this.reason = t, this.m_bIsInLobby ? m.PopupMsgMgr.Instance.ShowPopMsg(m.PopupPriority.Warning, this.errorCode, "Lobby", this.reason) : this.EVENT_ERROR && this.EVENT_ERROR(this.errorCode, this.reason)
            }
            recMisInfoSetProgressCtr() {
                return i(this, void 0, void 0, function*() {
                    let e = this.getCurGameMisData();
                    if (e) {
                        if (e.Status == C.UserQuestDataStatus.AWARD_CLAIMED) return;
                        let t;
                        switch (e.QuestType) {
                            case u.QustObjectiveType.WIN_AMOUNT:
                                t = e.WinAmount / e.WinAmountGate;
                                break;
                            case u.QustObjectiveType.SPIN_AMOUNT:
                                t = e.SpinAmount / e.SpinAmountGate;
                                break;
                            case u.QustObjectiveType.SPIN_TIME:
                                t = e.SpinTimes / e.SpinTimesGate;
                                break;
                            case u.QustObjectiveType.CUSTOM:
                                t = e.CustomAmount / e.CustomGate;
                                break;
                            default:
                                console.error("FishOceanHeartMgr.recMisInfoSetProgressCtr()")
                        }
                        1 != (t = t > 1 ? 1 : t < 0 ? 0 : t) || this.m_Root.activeInHierarchy || (this.SetAllBtnInteract(!1), this.m_status = R.GET_BUBBLE);
                        let o = null != e.Award ? this.GetAwardCallback.bind(this) : null;
                        if (1 == t && this.m_Root.activeInHierarchy && 0 != e.Award.PearlAmount) {
                            if (this.m_iTempTotalPearl > this.m_iTotalProgressCur) {
                                for (this.m_MissionBtnCtrl.setProgress(0, e, null); this.m_status != R.IDLE;) yield SS.Common.WaitForSeconds(1);
                                this.m_iTotalProgressCur = this.m_iTempTotalPearl, this.m_curMapData.CustomAmount = this.m_iTotalProgressCur, this.m_MissionListCtrl.SetProgress(this.getThemeIDByGameName(this.m_sCurGameName), 0), this.m_RankBonusTotalProgress.setProgressNoX(this.m_iTotalProgressCur), this.m_iTotalProgressCur <= this.m_iTotalProgressMax && (this.m_CommBonusTotalProgress.ShowNearMermaid(!1), this.m_CommBonusTotalProgress.setTokens(this.m_iTotalProgressCur), this.m_iTotalProgressCur == this.m_iTotalProgressMax && this.m_CommBonusTotalProgress.ShowNecklackComplete(() => {
                                    this.ToggleFinishMissionPage(!0)
                                })), e.Status = C.UserQuestDataStatus.AWARD_CLAIMED
                            }
                        } else this.m_MissionBtnCtrl.setProgress(t, e, o)
                    }
                })
            }
            GetAwardCallback(e, t) {
                null != e && (0 != e.PearlAmount ? (this.m_iTotalProgressCur = this.m_iTempTotalPearl, this.m_curMapData.CustomAmount = this.m_iTotalProgressCur, this.m_Root.activeInHierarchy || this.gotNewToken()) : null != this.EVENT_GET_MISSION_REWARD && this.EVENT_GET_MISSION_REWARD(e)), this.SetAllBtnInteract(!0), 0 == t && this.m_status != R.DISABLE && this.m_bIsTimeUP ? this.m_status = R.TIME_UP : this.m_status = R.IDLE
            }
            CheckOpenShellSpeed(e) {
                if (!this.m_MissionBtnCtrl.m_isShowing) return;
                let t = this.getCurGameMisData();
                if (!t) return;
                if (t.QuestType != u.QustObjectiveType.SPIN_AMOUNT) return;
                let o = this.m_MissionBtnCtrl.GetShellCtrlAnimationState(),
                    n = this.GetOpenShellSpeed(e);
                o.speed = n >= 1 ? n : 1
            }
            GetOpenShellSpeed(e) {
                let t = 0;
                if (e ? t = e : null != this.EVENT_GET_COST_PER_SECOND && (t = this.EVENT_GET_COST_PER_SECOND()), t > 0) {
                    let e = this.getCurGameMisData(),
                        o = this.m_MissionBtnCtrl.GetShellCtrlAnimationState();
                    if (o) {
                        let n = e.SpinAmountGate / t * .9;
                        if ((n -= this.m_MissionBtnCtrl.GetDropItemShowTime()) <= 0) return 10;
                        if (n < o.duration / o.speed) {
                            let e = o.duration / n;
                            return e = e > 10 ? 10 : e
                        }
                    }
                }
                return 1
            }
            InstantiateFakeScoreBox() {
                if (null == this.m_FakeScoreBoxCtrl) {
                    let e = cc.instantiate(this.m_FakeScoreBoxPfb);
                    e.parent = this.m_FakeScoreBoxNode, this.m_FakeScoreBoxCtrl = e.getComponent(c.FakeScoreBoxCtrl)
                }
            }
            InstantiateFishFakeScoreBox() {
                if (null == this.m_FishFakeScoreBoxCtrl) {
                    let e = cc.instantiate(this.m_FishFakeScoreBoxPfb);
                    e.parent = this.m_FishFakeScoreBoxNode, this.m_FishFakeScoreBoxCtrl = e.getComponent(w.default)
                }
            }
        };
        n([B(cc.Node)], A.prototype, "m_Root", void 0), n([B(cc.Node)], A.prototype, "m_nodeTipsPage", void 0), n([B(cc.Node)], A.prototype, "m_nodeMainPageBg", void 0), n([B(cc.Node)], A.prototype, "m_nodeRankPageBg", void 0), n([B(cc.Node)], A.prototype, "m_nodeMainPage", void 0), n([B(cc.Node)], A.prototype, "m_nodeRankPage", void 0), n([B(f.FishOceanHeartBtnCtrl)], A.prototype, "m_MissionBtnCtrl", void 0), n([B(cc.Node)], A.prototype, "m_FinishMission", void 0), n([B(cc.Node)], A.prototype, "m_nodeMissionListCtrl", void 0), n([B(v.FishOceanHeartListCtrl)], A.prototype, "m_MissionListCtrl", void 0), n([B(b.default)], A.prototype, "m_PlayerRankingMgr", void 0), n([B(P.default)], A.prototype, "m_CommBonusTotalProgress", void 0), n([B(g.RankBonusTotalProgress)], A.prototype, "m_RankBonusTotalProgress", void 0), n([B(d.CommBonusMoneyMgr)], A.prototype, "m_CommBonusMoneyMgr", void 0), n([B(D.CommonBonusTakeAvatar)], A.prototype, "m_CommBonusTakeAvatar", void 0), n([B(cc.Node)], A.prototype, "gameMenuTimeReci", void 0), n([B(a.DateTimeCountDown)], A.prototype, "gameMenuTimeCountdown", void 0), n([B(cc.Node)], A.prototype, "floatBtnTimeReci", void 0), n([B(a.DateTimeCountDown)], A.prototype, "floatBtnTimeCountDown", void 0), n([B(p.RankAwardPanelCtrl)], A.prototype, "m_RankAwardPanelCtrl", void 0), n([B(cc.Node)], A.prototype, "m_nodeLoginGetAward", void 0), n([B(cc.Node)], A.prototype, "m_nodeLoginGetAwardOKBtn", void 0), n([B(cc.Node)], A.prototype, "m_nodeLoginGetAwardXBtn", void 0), n([B(cc.Node)], A.prototype, "m_nodeLoginGetAwardCollectBtn", void 0), n([B(cc.Label)], A.prototype, "m_labLoginGetAwardMsg", void 0), n([B(cc.Label)], A.prototype, "m_labLoginGetAwardWinning", void 0), n([B([cc.Animation])], A.prototype, "m_arrAnimateLoginGetAward", void 0), n([B(cc.Node)], A.prototype, "m_nodeObjList", void 0), n([B(cc.Node)], A.prototype, "m_nodeRankingPage", void 0), n([B(cc.Node)], A.prototype, "m_nodeReadMePage", void 0), n([B(cc.Node)], A.prototype, "m_nodeReadMePage_Rank", void 0), n([B(cc.Node)], A.prototype, "m_nodeRankIDPopup", void 0), n([B(cc.Label)], A.prototype, "m_labRankID", void 0), n([B(cc.Node)], A.prototype, "m_nodeDarkerBG", void 0), n([B(cc.Prefab)], A.prototype, "m_FakeScoreBoxPfb", void 0), n([B(cc.Node)], A.prototype, "m_FakeScoreBoxNode", void 0), n([B(cc.Prefab)], A.prototype, "m_FishFakeScoreBoxPfb", void 0), n([B(cc.Node)], A.prototype, "m_FishFakeScoreBoxNode", void 0), n([B(cc.Node)], A.prototype, "m_nodeHint", void 0), n([B(cc.Node)], A.prototype, "m_nodeHintRank", void 0), n([B(cc.Node)], A.prototype, "m_nodeBlocker", void 0), n([B(_.RankingBonusListCtrl)], A.prototype, "m_RankingBonusListCtrl", void 0), n([B({
            type: [cc.AudioClip]
        })], A.prototype, "SoundClip", void 0), A = n([k], A), o.default = A, cc._RF.pop()
    }, {
        "../../../../GameCommon/CommonRoot/Script/CommonRoot": "CommonRoot",
        "../../../Component/AudioMgr": "AudioMgr",
        "../../../Component/DateTimeCountDown": "DateTimeCountDown",
        "../../../Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../../../FakeScoreBox/Script/FakeScoreBoxCtrl": "FakeScoreBoxCtrl",
        "../../../Helper/EventSystem": "EventSystem",
        "../../../Net/ClickLog": "ClickLog",
        "../../../Net/ClickLogEnum": "ClickLogEnum",
        "../../../Net/LobbyClient": "LobbyClient",
        "../../../PopUpMgr/Scripts/PriorityCustomEvent": "PriorityCustomEvent",
        "../../../PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../../CommunityBonus/Script/CommBonusData": "CommBonusData",
        "../../CommunityBonus/Script/CommBonusMoneyMgr": "CommBonusMoneyMgr",
        "../../CommunityBonus/Script/CommonBonusTakeAvatar": "CommonBonusTakeAvatar",
        "../../CommunityBonus/Script/Rank/RankAwardPanelCtrl": "RankAwardPanelCtrl",
        "../../CommunityBonus/Script/Rank/RankBonusTotalProgress": "RankBonusTotalProgress",
        "../../CommunityBonus/Script/Rank/RankingBonusListCtrl": "RankingBonusListCtrl",
        "../../EventBannerData": "EventBannerData",
        "../../EventModule": "EventModule",
        "../../EventTipsMask": "EventTipsMask",
        "../../MissionMgr/Script/MissionData": "MissionData",
        "./FishFakeScoreBoxCtrl": "FishFakeScoreBoxCtrl",
        "./FishOceanHeartBtnCtrl": "FishOceanHeartBtnCtrl",
        "./FishOceanHeartListCtrl": "FishOceanHeartListCtrl",
        "./FishOceanHeartPlayerRankingMgr": "FishOceanHeartPlayerRankingMgr",
        "./FishOceanHeartTotalProgress": "FishOceanHeartTotalProgress"
    }],
    FishOceanHeartPlayerRankingMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "44408VwB6VFPrBtJbbthXSS", "FishOceanHeartPlayerRankingMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const s = e("../../CommunityBonus/Script/Rank/PlayerRankingMgr"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends s.PlayerRankingMgr {
            constructor() {
                super(...arguments), this.m_iMyRank = -1
            }
            showRanking(e) {
                const t = Object.create(null, {
                    showRanking: {
                        get: () => super.showRanking
                    }
                });
                return i(this, void 0, void 0, function*() {
                    console.warn("FishOceanHeartPlayerRankingMgr showRanking = ", e), t.showRanking.call(this, e)
                })
            }
            Clear() {
                console.warn("FishOceanHeartPlayerRankingMgr Clear \u6e05\u6389\u5217\u8868 = "), this.m_arrPlayerRankingCtrl.forEach(e => {
                    this.m_nodePool.put(e.node)
                }), this.m_arrPlayerRankingCtrl = []
            }
            setRankingPlayer(e, t, o, n = 0, i = "") {
                super.setRankingPlayer(e, t, o, n, i), o && -1 != e && (this.m_iMyRank = e + 1)
            }
            GetPlayerSlefRank() {
                return this.m_iMyRank
            }
        };
        l = n([r], l), o.default = l, cc._RF.pop()
    }, {
        "../../CommunityBonus/Script/Rank/PlayerRankingMgr": "PlayerRankingMgr"
    }],
    FishOceanHeartRankAwardPanelCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "931f6gticdP3rGp0eGu/A8h", "FishOceanHeartRankAwardPanelCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const s = e("../../../Helper/EventSystem"),
            r = e("../../../Net/LobbyClient"),
            a = e("../../CommunityBonus/Script/CommBonusData"),
            l = e("../../CommunityBonus/Script/Rank/RankAwardPanelCtrl"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        let m = class extends l.RankAwardPanelCtrl {
            onClickRank() {
                return i(this, void 0, void 0, function*() {
                    0 != this.m_isProfileCanShow && (this.m_isProfileCanShow = !1, 0 == this.m_isCollected && (s.EventSystem.Event(s.CommunityBonus.ClickGetAwardCollect) && s.EventSystem.Event(s.CommunityBonus.ClickGetAwardCollect).Length > 0 && s.EventSystem.Event(s.CommunityBonus.ClickGetAwardCollect).Notify(), yield SS.Common.WaitForSeconds(2.5)), this.m_isProfileCanShow = !0, this.m_nodeRankPanel.active = !0, this.m_scroll.stopAutoScroll(), this.m_scroll.scrollToPercentVertical(this.m_fScrollToPercent), r.LobbyClient.Instance.GetUserClient.recordClickLog("OceanHeart", a.OceanHeartClickLogID.AWARD_RANK_BTN), this.m_isCollected = !0)
                })
            }
            onClickRankX() {
                this.m_nodeRankPanel.active = !1, r.LobbyClient.Instance.GetUserClient.recordClickLog("OceanHeart", a.OceanHeartClickLogID.AWARD_RANK_X_BTN)
            }
        };
        m = n([c], m), o.default = m, cc._RF.pop()
    }, {
        "../../../Helper/EventSystem": "EventSystem",
        "../../../Net/LobbyClient": "LobbyClient",
        "../../CommunityBonus/Script/CommBonusData": "CommBonusData",
        "../../CommunityBonus/Script/Rank/RankAwardPanelCtrl": "RankAwardPanelCtrl"
    }],
    FishOceanHeartShellCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "f395c1jp3pB+L3BaOp7LRz5", "FishOceanHeartShellCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ShellAnimName = void 0;
        const i = e("../../../Component/AudioMgr"),
            s = e("./FishOceanHeartDropItem"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        var l;
        (function(e) {
            e.Idle = "ShellIdle", e.Open = "ShellOpen", e.OpenNormal = "ShellOpenShowNormal", e.OpenPearl = "ShellOpenShowPearl", e.OpenLoopLight = "ShellOpenLoopLight"
        })(l = o.ShellAnimName || (o.ShellAnimName = {}));
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_Root = null, this.m_pfDropAward = null, this.m_animShell = null, this.m_nodePoolAward = null, this.m_AwardData = null, this.m_iShowDatID = -1, this.m_v2WeaponPos = null, this.m_nodeScene = null, this.m_cbShellOpen = null, this.m_bIsIdle = !0, this.m_v2TargetPos = null, this.m_nodeTempDrop = null, this.m_currentAnim = null, this.DELAY_TIME = 2, this.MOVE_TIME = .3
            }
            SetWeaponPos(e) {
                this.m_v2WeaponPos = e
            }
            GetShellIsIdle() {
                return this.m_bIsIdle
            }
            onLoad() {
                this.m_nodePoolAward = new cc.NodePool;
                for (let e = 0; e < 2; e++) {
                    let e = cc.instantiate(this.m_pfDropAward);
                    this.m_nodePoolAward.put(e)
                }
                this.m_animShell.play(l.Idle)
            }
            OpenShellAndShowPearl(e) {
                this.m_animShell.once(cc.Animation.EventType.FINISHED, () => {
                    null != e && e();
                    let t = cc.delayTime(.5),
                        o = cc.callFunc(() => {
                            this.m_animShell.play(l.Idle), this.m_bIsIdle = !0
                        }),
                        n = cc.sequence(t, o);
                    this.node.runAction(n)
                }), this.m_animShell.play(l.Open), this.m_bIsIdle = !1
            }
            OpenShell(e, t, o = null, n = null) {
                this.m_cbShellOpen = t, this.m_v2TargetPos = null == o ? this.m_v2WeaponPos : o, this.m_AwardData = null, this.m_AwardData = e.award, this.m_iShowDatID = e.dataID;
                let s = !1,
                    r = null,
                    a = "";
                null != this.m_AwardData && (0 != this.m_AwardData.AwardEntries || 0 != this.m_AwardData.AwardWinnings || null != this.m_AwardData.AwardItem ? (r = l.OpenNormal, a = 0 != this.m_AwardData.AwardEntries || 0 != this.m_AwardData.AwardWinnings ? "SheelOpenMoney" : "SheelOpenCard") : 0 != this.m_AwardData.PearlAmount && (r = l.OpenPearl, a = "SheelOpenPearl")), this.m_animShell.once(cc.Animation.EventType.FINISHED, () => {
                    this.m_currentAnim.speed = 1, this.DropAward()
                }), i.AudioMgr.Instance.Play(a, !1, 1), this.m_currentAnim = this.m_animShell.play(r), this.m_currentAnim.speed = n(), this.m_bIsIdle = !1
            }
            DropAward() {
                0 == this.m_nodePoolAward.size() ? this.m_nodeTempDrop = cc.instantiate(this.m_pfDropAward) : this.m_nodeTempDrop = this.m_nodePoolAward.get();
                let e = this.node.convertToWorldSpaceAR(cc.Vec2.ZERO);
                null == this.m_nodeScene && (this.m_nodeScene = cc.director.getScene()), this.m_nodeTempDrop.active = !0, this.m_nodeTempDrop.parent = this.m_nodeScene, this.m_nodeTempDrop.setPosition(e);
                let t = -1,
                    o = 0;
                if (null != this.m_AwardData)
                    if (0 != this.m_AwardData.AwardEntries || 0 != this.m_AwardData.AwardWinnings) t = s.FOH_AWARD.COIN, o = this.m_AwardData.AwardEntries + this.m_AwardData.AwardWinnings;
                    else if (0 != this.m_AwardData.PearlAmount) t = s.FOH_AWARD.EVENT_TOKEN, o = this.m_AwardData.PearlAmount;
                else if (null != this.m_AwardData.AwardItem) {
                    let e = this.m_AwardData.ItemID;
                    "MF100001" == e ? t = s.FOH_AWARD.ITEM_FREEZE : "MF100002" == e && (t = s.FOH_AWARD.ITEM_SUMMON), o = this.m_AwardData.ItemAmount
                }
                t != s.FOH_AWARD.EVENT_TOKEN && (this.m_v2TargetPos = this.m_v2WeaponPos), -1 != t && (this.m_animShell.play(l.OpenLoopLight), this.m_nodeTempDrop.getComponent(s.default).Init(t, o, this.m_v2TargetPos, () => {
                    this.m_animShell.play("ShellIdle"), this.m_bIsIdle = !0, this.m_cbShellOpen && this.m_cbShellOpen(this.m_AwardData, this.m_iShowDatID), this.m_nodePoolAward.put(this.m_nodeTempDrop)
                }, this.DELAY_TIME, this.MOVE_TIME))
            }
            Clear() {
                this.m_animShell.stop(), this.m_animShell.play(l.Idle), this.m_cbShellOpen = null, this.m_AwardData = null, this.m_currentAnim = null, this.m_iShowDatID = -1, null != this.m_nodeTempDrop && this.m_nodePoolAward.put(this.m_nodeTempDrop)
            }
        };
        n([a(cc.Node)], c.prototype, "m_Root", void 0), n([a(cc.Prefab)], c.prototype, "m_pfDropAward", void 0), n([a(cc.Animation)], c.prototype, "m_animShell", void 0), c = n([r], c), o.default = c, cc._RF.pop()
    }, {
        "../../../Component/AudioMgr": "AudioMgr",
        "./FishOceanHeartDropItem": "FishOceanHeartDropItem"
    }],
    FishOceanHeartTotalProgress: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7cb92EHOPlA0KTYUkFPrZEW", "FishOceanHeartTotalProgress");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("../../CommunityBonus/Script/CommBonusTotalProgress"),
            s = e("../../../Component/AudioMgr"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends i.CommBonusTotalProgress {
            constructor() {
                super(...arguments), this.m_nodeMermaidFull = null, this.m_nodeMermaidNear = null, this.m_nodeProgressRoot = null, this.m_nodeNecklace = null, this.m_nodeFullNecklace = null, this.m_aniNecklaceAppear = null, this.m_aniNecklaceComplete = null, this.m_fucEachTokenShowEndCB = null
            }
            Init() {
                console.warn("\u521d\u59cb\uff0c\u5927\u7f8e\u4eba\u9b5a\u6c92\u6234\u9805\u934a"), this.m_nodeProgressRoot.opacity = 255, this.m_nodeMermaidFull.opacity = 255, this.m_nodeFullNecklace.opacity = 0, this.m_nodeMermaidNear.opacity = 0, this.m_aniNecklaceAppear.node.opacity = 0, this.m_aniNecklaceComplete.node.opacity = 0, this.m_nodeNecklace.opacity = 0, this.setTokens(0)
            }
            checkAllTokenShowEnd() {
                super.checkAllTokenShowEnd(), this.m_fucEachTokenShowEndCB && this.m_fucEachTokenShowEndCB()
            }
            setEachTokenShowEndCB(e) {
                this.m_fucEachTokenShowEndCB = e
            }
            GetTokenNode() {
                let e = [];
                for (let t = 0; t < this.m_arrTokenCtrlList.length; t++) {
                    let o = this.m_arrTokenCtrlList[t].node.parent.convertToWorldSpaceAR(this.m_arrTokenCtrlList[t].node.getPosition());
                    e.push(o)
                }
                return e
            }
            ShowStartMermaid() {
                s.AudioMgr.Instance.Play("Mermaid", !1, 1), console.warn("\u672a\u6eff9\u500b\uff0c\u7f8e\u4eba\u9b5a\u986f\u793a\u534a\u8eab"), this.m_nodeFullNecklace.opacity = 0, this.m_nodeMermaidFull.opacity = 255, this.m_nodeMermaidFull.scale = 1;
                let e = cc.scaleTo(1.5, .8).easing(cc.easeBackInOut()),
                    t = cc.fadeOut(1.5),
                    o = cc.spawn(e, t);
                this.m_nodeMermaidFull.runAction(o), this.m_nodeMermaidNear.opacity = 0;
                let n = cc.delayTime(1),
                    i = cc.fadeIn(1),
                    r = cc.callFunc(this.ShowNecklaceAppear.bind(this)),
                    a = cc.sequence(n, i, r);
                this.m_nodeMermaidNear.runAction(a)
            }
            ShowNecklaceAppear() {
                s.AudioMgr.Instance.Play("PearlPlacement", !1, 1), this.m_nodeNecklace.opacity = 0, this.m_aniNecklaceAppear.node.opacity = 255, this.m_aniNecklaceAppear.once(cc.Animation.EventType.FINISHED, () => {
                    this.m_aniNecklaceAppear.node.opacity = 0, this.m_nodeNecklace.opacity = 255
                }), this.m_aniNecklaceAppear.play()
            }
            ShowNecklackComplete(e) {
                console.warn("\u9805\u934a\u96c6\u6eff\u52d5\u756b"), s.AudioMgr.Instance.Play("NinePearl", !1, 1), this.m_aniNecklaceComplete.once(cc.Animation.EventType.FINISHED, () => {
                    this.m_aniNecklaceComplete.node.opacity = 0
                }), this.m_aniNecklaceComplete.node.opacity = 255, this.m_aniNecklaceComplete.play();
                let t = cc.delayTime(2),
                    o = cc.callFunc(() => {
                        e && e()
                    });
                this.node.runAction(cc.sequence(t, o))
            }
            ShowChangeToFullMermaid() {
                s.AudioMgr.Instance.Play("Mermaid", !1, 1), console.warn("\u96c6\u6eff9\u500b\uff0c\u7f8e\u4eba\u9b5a\u986f\u793a\u5168\u8eab"), this.m_nodeMermaidNear.opacity = 255;
                let e = cc.fadeOut(.5);
                this.m_nodeMermaidNear.runAction(e), this.m_nodeProgressRoot.opacity = 255, this.m_nodeProgressRoot.runAction(cc.fadeOut(.5)), this.m_nodeNecklace.opacity = 255, this.m_nodeNecklace.runAction(cc.fadeOut(.5)), this.m_nodeFullNecklace.opacity = 255, this.m_nodeMermaidFull.opacity = 0, this.m_nodeMermaidFull.scale = .8;
                let t = cc.fadeIn(.5),
                    o = cc.scaleTo(.5, 1),
                    n = cc.spawn(t, o);
                this.m_nodeMermaidFull.runAction(n)
            }
            ShowNearMermaid(e) {
                this.m_nodeProgressRoot.opacity = 255, this.m_aniNecklaceComplete.node.opacity = 0, this.m_aniNecklaceAppear.node.opacity = 0, this.m_nodeMermaidFull.opacity = 0, this.m_nodeFullNecklace.opacity = 0, this.m_nodeMermaidNear.opacity = 255, this.m_nodeNecklace.opacity = 255, e && this.ShowNecklaceAppear()
            }
            ShowFullMermaid() {
                console.warn("\u5927\u7f8e\u4eba\u9b5a\u51fa\u73fe"), this.m_nodeFullNecklace.opacity = 255, this.m_nodeMermaidFull.opacity = 255, this.m_nodeMermaidNear.opacity = 0, this.m_nodeNecklace.opacity = 0, this.m_nodeProgressRoot.opacity = 0, this.m_aniNecklaceAppear.node.opacity = 0, this.m_aniNecklaceComplete.node.opacity = 0
            }
            showOneByOne(e, t, o) {
                console.warn("\u98db\u5df2\u7372\u5f97\u73cd\u73e0, index =" + e + ", \u6578\u91cf = " + t);
                for (let n = 0; n < t; n++) {
                    let t = e + n;
                    if (!this.m_arrTokenCtrlList[t]) return; {
                        this.m_iFlyTokenCtr++;
                        let e = this.m_arrTokenCtrlList[t];
                        e.m_fucShowStartCB = this.m_fucTokenShowStartCB, e.showFlyToken(n, o)
                    }
                }
            }
        };
        n([a(cc.Node)], l.prototype, "m_nodeMermaidFull", void 0), n([a(cc.Node)], l.prototype, "m_nodeMermaidNear", void 0), n([a(cc.Node)], l.prototype, "m_nodeProgressRoot", void 0), n([a(cc.Node)], l.prototype, "m_nodeNecklace", void 0), n([a(cc.Node)], l.prototype, "m_nodeFullNecklace", void 0), n([a(cc.Animation)], l.prototype, "m_aniNecklaceAppear", void 0), n([a(cc.Animation)], l.prototype, "m_aniNecklaceComplete", void 0), l = n([r], l), o.default = l, cc._RF.pop()
    }, {
        "../../../Component/AudioMgr": "AudioMgr",
        "../../CommunityBonus/Script/CommBonusTotalProgress": "CommBonusTotalProgress"
    }],
    FishPuzzleEggAwardMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "5cc31QETBtKzKv4YQuYqGcO", "FishPuzzleEggAwardMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishPuzzleEggAwardMgr = o.PUZZLE_GET_AWARD_STATE = void 0;
        const s = e("../../../Component/AudioMgr"),
            r = e("../../../Connect/Script/ConnectPanelMgr"),
            a = e("../../../FakeScoreBox/Script/FakeScoreBoxCtrl"),
            l = e("../../../FakeScoreBox/Script/GetBonusShow"),
            c = e("./FishPuzzleEggData"),
            h = e("./FishPuzzleEggPuzzlePage"),
            m = e("./FishPuzzleEggPuzzlePageMgr"),
            {
                ccclass: u,
                property: d
            } = cc._decorator;
        var p;
        (function(e) {
            e[e.Init = 1] = "Init", e[e.ShowCompleteEffect = 2] = "ShowCompleteEffect", e[e.WaitClick = 3] = "WaitClick", e[e.SendAndWaitRecv = 4] = "SendAndWaitRecv", e[e.ShowAwardEffect = 5] = "ShowAwardEffect", e[e.End = 6] = "End"
        })(p = o.PUZZLE_GET_AWARD_STATE || (o.PUZZLE_GET_AWARD_STATE = {}));
        let g = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_funCollectAward = null, this.m_funAwardComplete = null, this.m_nodeRoot = null, this.m_nodeBlack = null, this.m_nodePuzzleRoot = null, this.m_nodeCompleteRoot = null, this.m_nodeAwardRoot = null, this.m_nodeFakeScoreRoot = null, this.m_FakeScoreBoxPfb = null, this.m_FakeScoreBoxNode = null, this.m_FakeScoreBoxCtrl = null, this.m_labAward = null, this.m_aryAwardTitleFrame = [], this.m_spAwardTitle = null, this.m_aryPieceSpriteFrame = [], this.m_spPuzzleIcon = null, this.m_nodeTouchClose = null, this.m_nodeTouchCollectBtn = null, this.m_animCompleteEffect = null, this.m_aryCompleteParticle = [], this.m_animAwardEffect = null, this.m_aryAwardParticle = [], this.m_getBonusShow = null, this.m_nodeSeatL = null, this.m_nodeSeatR = null, this.m_nodeInGameCoinStartPos = null, this.m_nodeCloseBtn = null, this.m_labFinalGetAward = null, this.m_nodeTitleAward = null, this.m_aryPuzzlePageMember = [], this.m_iState = -1, this.m_awardData = null, this.m_iSeat = 0, this.m_aryTmpWinData = [], this.intervalID = -1, this.m_bIsInLobby = !1
            }
            _onLoad() {
                this.m_nodeRoot.active = !1
            }
            _start(e) {
                this.m_bIsInLobby = e, this.m_bIsInLobby && (this.m_nodeRoot.position = cc.v3(0, 0, 0), this.m_nodeRoot.scale = 1, this.m_nodeBlack.active = !0, this.m_nodeTitleAward.active = !0, this.m_nodeInGameCoinStartPos.setPosition(cc.v3(640, 260, 0)))
            }
            _onDestroy() {
                this.m_nodePuzzleRoot && this.m_nodePuzzleRoot.destroyAllChildren(), this.m_aryPuzzlePageMember = [], -1 != this.intervalID && clearInterval(this.intervalID)
            }
            Init(e) {
                console.log("FishPuzzleEggAwardMgr INIT, memberAry.len = " + e.length);
                for (let t = 0; t < e.length; t++) {
                    let o = new m.FishPuzzlePageMember;
                    o.strPuzzleType = e[t].strPuzzleType, o.nodeRoot = cc.instantiate(e[t].nodeRoot), o.nodeRoot.setParent(this.m_nodePuzzleRoot), o.nodeRoot.setScale(cc.Vec2.ONE), o.nodeRoot.setPosition(cc.Vec2.ZERO), o.ctrl = o.nodeRoot.getComponent(h.default), o.ctrl.ShowAllPieces(), o.nodeRoot.active = !1, this.m_aryPuzzlePageMember.push(o)
                }
                this.ChangeState(p.Init)
            }
            Clear() {
                this.m_nodeRoot.active = !1;
                for (let e = 0; e < this.m_aryPuzzlePageMember.length; e++) this.m_aryPuzzlePageMember[e] && (this.m_aryPuzzlePageMember[e].nodeRoot.active = !1)
            }
            ChangeState(e) {
                if (console.log("FishPuzzleEggAwardMgr ChangeState, state = " + e.toString()), this.m_iState != e) switch (this.m_iState = e, e) {
                    case p.Init:
                        this.OnSateInit();
                        break;
                    case p.ShowCompleteEffect:
                        this.OnSateShowComplete();
                        break;
                    case p.WaitClick:
                        this.OnStateWaitClick();
                        break;
                    case p.SendAndWaitRecv:
                        this.OnStateSendAndWaitRecv();
                        break;
                    case p.ShowAwardEffect:
                        this.OnStateShowAward();
                        break;
                    case p.End:
                        this.OnStateEnd()
                }
            }
            ShowAward(e, t, o, n, i, s) {
                this.m_iState == p.Init && (this.m_ShowType = e, this.m_bIsInLobby = t, this.m_iStartBalance = o, this.m_awardData = n, this.m_funCollectAward = i, this.m_funAwardComplete = s, this.ChangeState(p.ShowCompleteEffect))
            }
            OnRecvIngameCollectData(e, t) {
                let o = t.data.AwardInfo[0].Amount;
                this.m_aryTmpWinData.push(o)
            }
            OnRecvCollectQuest(e, t, o, n, i) {
                this.m_iSeat = e, this.m_bIsInLobby = n, this.m_ShowType = o, this.m_iFinalBalance = i, this.m_iThisWin = t * this.m_awardData.ExchangeRate, this.m_labFinalGetAward.string = "$" + this.m_iThisWin.toLocaleString("en-US", {
                    minimumFractionDigits: 2
                }), r.ConnectPanelMgr.Instance.DisableConnectPanel(0), this.m_iState == p.SendAndWaitRecv && this.ChangeState(p.ShowAwardEffect)
            }
            OnSateInit() {
                this.m_awardData = null, this.m_bIsInLobby && (this.m_nodeBlack.active = !0, this.m_nodeTitleAward.active = !0, this.m_nodeInGameCoinStartPos.setPosition(cc.v3(640, 260, 0))), this.m_FakeScoreBoxNode.active = !1, this.m_animAwardEffect.node.scale = 0, this.m_nodeCompleteRoot.active = !1, this.m_nodeAwardRoot.active = !1, this.m_nodeFakeScoreRoot.active = !1, this.m_nodeTouchClose.active = !1, this.m_nodeTouchCollectBtn.active = !1, this.Clear()
            }
            OnSateShowComplete() {
                this.m_nodeRoot.active = !0, this.m_nodeCompleteRoot.active = !0;
                let e = this.m_awardData.PuzzleType,
                    t = this.FindPuzzleNode(e);
                if (!t) return console.error("ShowAward, type = " + e + "not find"), void this.OnClosePage();
                t.active = !0, this.SetTitle(this.m_awardData), this.m_bIsInLobby && (null == this.m_FakeScoreBoxCtrl && this.InstantiateFakeScoreBox(), this.m_FakeScoreBoxNode.active = !0, this.m_FakeScoreBoxCtrl.show(this.m_ShowType, this.m_iStartBalance)), this.m_aryCompleteParticle.forEach(e => {
                    e.resetSystem()
                }), this.m_animCompleteEffect.node.active = !0, this.m_animCompleteEffect.play(), s.AudioMgr.Instance.Play(c.PUZZLE_SOUND.PUZZLE_COMPLETE, !1, 1), this.scheduleOnce(() => {
                    this.m_animCompleteEffect.node.active = !1, this.m_bIsInLobby && (this.m_nodeTouchClose.active = !0), this.m_nodeTouchCollectBtn.active = !0, this.ChangeState(p.WaitClick)
                }, 3.5)
            }
            OnStateWaitClick() {
                this.m_bIsInLobby ? this.scheduleOnce(() => {
                    this.m_iState == p.WaitClick && (console.log("\u8a08\u6642\u4e94\u79d2\u81ea\u52d5\u9818\u53d6"), this.OnCollectAward())
                }, 5) : this.OnCollectAward()
            }
            OnStateSendAndWaitRecv() {
                return i(this, void 0, void 0, function*() {
                    if (this.m_bIsInLobby) r.ConnectPanelMgr.Instance.ShowConnectPanel(0);
                    else {
                        if (0 == this.m_aryTmpWinData.length) return -1 != this.intervalID && clearInterval(this.intervalID), void(this.intervalID = setInterval(() => this.CheckRecvData(), 200));
                        this.ChangeState(p.ShowAwardEffect)
                    }
                    this.m_nodeTouchCollectBtn.active = !1, null != this.m_funCollectAward && this.m_funCollectAward()
                })
            }
            CheckRecvData() {
                0 != this.m_aryTmpWinData.length && (-1 != this.intervalID && (clearInterval(this.intervalID), this.intervalID = -1), this.ChangeState(p.ShowAwardEffect), this.m_nodeTouchCollectBtn.active = !1, null != this.m_funCollectAward && this.m_funCollectAward())
            }
            OnStateShowAward() {
                this.m_nodeCloseBtn.active = !1, this.m_nodeCompleteRoot.active = !1, this.m_nodeAwardRoot.active = !0;
                let e = "Reward_" + this.m_awardData.PuzzleType;
                if (console.error("OnStateShowAward, animName = " + e + ", PuzzleType = " + this.m_awardData.PuzzleType), !this.m_bIsInLobby) {
                    let e = this.m_aryTmpWinData.shift();
                    this.m_iThisWin = e * this.m_awardData.ExchangeRate, this.m_labFinalGetAward.string = "$" + this.m_iThisWin.toLocaleString("en-US", {
                        minimumFractionDigits: 2
                    })
                }
                this.m_aryAwardParticle.forEach(e => {
                    e.resetSystem()
                }), this.m_animAwardEffect.play(e), s.AudioMgr.Instance.Play(c.PUZZLE_SOUND.PUZZLE_GET_AWARD, !1, 1), this.scheduleOnce(() => {
                    if (this.m_bIsInLobby) {
                        let e = () => {
                            this.m_nodeCloseBtn.active = !0
                        };
                        this.m_FakeScoreBoxCtrl.countUpShowJumpMoney(this.m_iFinalBalance, 1, .25, e.bind(this))
                    } else this.m_nodeBlack.active = !1, this.m_nodeAwardRoot.active = !1, this.OnClosePage()
                }, 3)
            }
            InGameGetCoinEffect() {
                let e = null;
                e = 0 == this.m_iSeat || 2 == this.m_iSeat ? this.m_nodeSeatL : this.m_nodeSeatR, this.m_getBonusShow.Show(this.m_nodeInGameCoinStartPos.getPosition(), e.convertToWorldSpaceAR(cc.Vec2.ZERO), () => {
                    this.OnClosePage()
                })
            }
            OnStateEnd() {
                this.ChangeState(p.Init), this.m_funAwardComplete && this.m_funAwardComplete()
            }
            FindPuzzleNode(e) {
                for (let t = 0; t < this.m_aryPuzzlePageMember.length; t++)
                    if (this.m_aryPuzzlePageMember[t].strPuzzleType == e) return this.m_aryPuzzlePageMember[t].nodeRoot;
                return null
            }
            SetTitle(e) {
                let t = c.PUZZLE_ITEM[e.PuzzleType].index;
                this.m_spAwardTitle.spriteFrame = this.m_aryAwardTitleFrame[t], this.m_spPuzzleIcon.spriteFrame = this.m_aryPieceSpriteFrame[t], 4 == e.Award.AwardType ? this.m_labAward.string = "$" + (e.Award.AwardEntries * e.ExchangeRate).toLocaleString("en-US", {
                    minimumFractionDigits: 2
                }) : 5 == e.Award.AwardType && (this.m_labAward.string = "$" + (e.Award.AwardWinnings * e.ExchangeRate).toLocaleString("en-US", {
                    minimumFractionDigits: 2
                }))
            }
            OnClosePage() {
                this.ChangeState(p.End)
            }
            OnCollectAward() {
                console.log("\u9ede\u64caOnCollectAward"), this.ChangeState(p.SendAndWaitRecv)
            }
            InstantiateFakeScoreBox() {
                if (null == this.m_FakeScoreBoxCtrl) {
                    let e = cc.instantiate(this.m_FakeScoreBoxPfb);
                    e.parent = this.m_FakeScoreBoxNode, this.m_FakeScoreBoxCtrl = e.getComponent(a.FakeScoreBoxCtrl)
                }
            }
        };
        n([d(cc.Node)], g.prototype, "m_nodeRoot", void 0), n([d(cc.Node)], g.prototype, "m_nodeBlack", void 0), n([d(cc.Node)], g.prototype, "m_nodePuzzleRoot", void 0), n([d(cc.Node)], g.prototype, "m_nodeCompleteRoot", void 0), n([d(cc.Node)], g.prototype, "m_nodeAwardRoot", void 0), n([d(cc.Node)], g.prototype, "m_nodeFakeScoreRoot", void 0), n([d(cc.Prefab)], g.prototype, "m_FakeScoreBoxPfb", void 0), n([d(cc.Node)], g.prototype, "m_FakeScoreBoxNode", void 0), n([d(cc.Label)], g.prototype, "m_labAward", void 0), n([d([cc.SpriteFrame])], g.prototype, "m_aryAwardTitleFrame", void 0), n([d(cc.Sprite)], g.prototype, "m_spAwardTitle", void 0), n([d([cc.SpriteFrame])], g.prototype, "m_aryPieceSpriteFrame", void 0), n([d(cc.Sprite)], g.prototype, "m_spPuzzleIcon", void 0), n([d(cc.Node)], g.prototype, "m_nodeTouchClose", void 0), n([d(cc.Node)], g.prototype, "m_nodeTouchCollectBtn", void 0), n([d(cc.Animation)], g.prototype, "m_animCompleteEffect", void 0), n([d([cc.ParticleSystem])], g.prototype, "m_aryCompleteParticle", void 0), n([d(cc.Animation)], g.prototype, "m_animAwardEffect", void 0), n([d([cc.ParticleSystem])], g.prototype, "m_aryAwardParticle", void 0), n([d(l.GetBonusShow)], g.prototype, "m_getBonusShow", void 0), n([d(cc.Node)], g.prototype, "m_nodeSeatL", void 0), n([d(cc.Node)], g.prototype, "m_nodeSeatR", void 0), n([d(cc.Node)], g.prototype, "m_nodeInGameCoinStartPos", void 0), n([d(cc.Node)], g.prototype, "m_nodeCloseBtn", void 0), n([d(cc.Label)], g.prototype, "m_labFinalGetAward", void 0), n([d(cc.Node)], g.prototype, "m_nodeTitleAward", void 0), g = n([u], g), o.FishPuzzleEggAwardMgr = g, cc._RF.pop()
    }, {
        "../../../Component/AudioMgr": "AudioMgr",
        "../../../Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../../../FakeScoreBox/Script/FakeScoreBoxCtrl": "FakeScoreBoxCtrl",
        "../../../FakeScoreBox/Script/GetBonusShow": "GetBonusShow",
        "./FishPuzzleEggData": "FishPuzzleEggData",
        "./FishPuzzleEggPuzzlePage": "FishPuzzleEggPuzzlePage",
        "./FishPuzzleEggPuzzlePageMgr": "FishPuzzleEggPuzzlePageMgr"
    }],
    FishPuzzleEggAwardPanelMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7fabb/debFG6pQ0Uf80NHlF", "FishPuzzleEggAwardPanelMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishPuzzleEggAwardPanelMgr = void 0;
        const s = e("../../../Component/AudioMgr"),
            r = e("./FishPuzzleEggAwardPanelRowCtrl"),
            a = e("./FishPuzzleEggData"),
            l = e("./FishPuzzleEggPopupMgr"),
            c = e("../../../Component/BundleCtrl"),
            h = e("../../../Helper/EventSystem"),
            m = e("../../../Net/ClickLog"),
            u = e("../../../Net/ClickLogEnum"),
            {
                ccclass: d,
                property: p
            } = cc._decorator;
        let g = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_funOnClickClose = null, this.m_nodeRoot = null, this.m_pfAwardRow = null, this.m_nodeContent = null, this.m_nodeLoading = null, this.m_nodeNoHistory = null, this.m_animNo1Update = null, this.m_aryFishPuzzleEggPlayerRank = [], this.m_labMyID = null, this.m_labMyCount = null, this.m_labMyBonus = null, this.m_spMyAvatarFace = null, this.m_spMyAvatarFaceFrame = null, this.m_labMyNickName = null, this.m_labMyMobileID = null, this.m_arrPlayerAwardCtrl = [], this.m_strTmpNo1ID = "", this.m_nodePool = null, this.m_strArkID = "", this.m_numOriginSiblingIndex = 0
            }
            get CheckPanelOpen() {
                return this.m_nodeRoot.active
            }
            _init() {
                this.ShowLoading(!0), this.m_nodeNoHistory.active = !1, this.m_nodeRoot.active = !1, this.m_nodePool = new cc.NodePool;
                for (let e = 0; e < 10; ++e) {
                    let e = cc.instantiate(this.m_pfAwardRow);
                    this.m_nodePool.put(e)
                }
                this.m_labMyID.string = "-", this.m_labMyCount.string = "-", this.m_labMyBonus.string = "-", this.m_labMyNickName.string = "-", this.m_spMyAvatarFace.spriteFrame = null, this.m_spMyAvatarFaceFrame.spriteFrame = null, this.m_strArkID = "", this.m_labMyMobileID.string = "Mobile ID : " + SS.Network.UserClient.UserInfo.mobile_id
            }
            _onDestroy() {}
            onLoad() {
                h.EventSystem.Event(h.Avatar.SetFaceIcon).Insert(this.SetFaceSprite, this), h.EventSystem.Event(h.Avatar.SetFaceFrameIcon).Insert(this.SetFrameSprite, this), h.EventSystem.Event(h.Avatar.SetNickname).Insert(this.SetNickname, this), h.EventSystem.Event(h.Profile.NotifyUpdatePlayerSetting).Insert(this.SetByPlayerData, this), h.EventSystem.Event(h.Avatar.SetFaceIcon).Insert(this.SetFaceSpriteTop3, this), h.EventSystem.Event(h.Avatar.SetFaceFrameIcon).Insert(this.SetFrameSpriteTop3, this), h.EventSystem.Event(h.Avatar.SetNickname).Insert(this.SetNicknameTop3, this), h.EventSystem.Event(h.Profile.NotifyUpdatePlayerSetting).Insert(this.SetByPlayerDataTop3, this)
            }
            onDestroy() {
                h.EventSystem.Event(h.Avatar.SetFaceIcon).Remove(this.SetFaceSprite, this), h.EventSystem.Event(h.Avatar.SetFaceFrameIcon).Remove(this.SetFrameSprite, this), h.EventSystem.Event(h.Avatar.SetNickname).Remove(this.SetNickname, this), h.EventSystem.Event(h.Profile.NotifyUpdatePlayerSetting).Remove(this.SetByPlayerData, this), h.EventSystem.Event(h.Avatar.SetFaceIcon).Remove(this.SetFaceSpriteTop3, this), h.EventSystem.Event(h.Avatar.SetFaceFrameIcon).Remove(this.SetFrameSpriteTop3, this), h.EventSystem.Event(h.Avatar.SetNickname).Remove(this.SetNicknameTop3, this), h.EventSystem.Event(h.Profile.NotifyUpdatePlayerSetting).Remove(this.SetByPlayerDataTop3, this)
            }
            Show(e, t, o) {
                if (e) {
                    if (this.m_nodeRoot.active = !0, this.setOnTop(), this.UpdateRankingList(e), null != t)
                        for (let e = 0; e < t.length; e++) t[e].pin_ark_id == SS.Network.LoginModel.LoginInfo.pin_ark_id && (t[e].AvatarID = SS.Network.UserClient.UserInfo.avatar_id, t[e].AvatarFrameID = SS.Network.UserClient.UserInfo.avatar_frame_id, t[e].Nickname = SS.Network.UserClient.UserInfo.nickname);
                    null != t && this.UpdateHistoryList(t, o)
                }
            }
            UpdateRankingList(e) {
                let t = e.RankList;
                this.SetRankingBoard(t);
                let o = e.PlayerData;
                o && (o.Nickname = SS.Network.UserClient.UserInfo.nickname, o.AvatarID = SS.Network.UserClient.UserInfo.avatar_id, o.AvatarFrameID = SS.Network.UserClient.UserInfo.avatar_frame_id, o.pin_ark_id = SS.Network.LoginModel.LoginInfo.pin_ark_id, this.SetPlayerData(o.RankingID, o.FinishAmount, o.WinAmount, o.AvatarID, o.AvatarFrameID, o.Nickname, o.pin_ark_id))
            }
            UpdateHistoryList(e, t) {
                if (this.ShowLoading(!1), 0 == e.length) this.m_nodeNoHistory.active = !0;
                else {
                    this.m_nodeNoHistory.activeInHierarchy && (this.m_nodeNoHistory.active = !1);
                    for (let o = 0; o < e.length; o++) this.SetAwardList(o, e[o], e[o].RankingID == t)
                }
            }
            ShowLoading(e) {
                this.m_nodeLoading.active = e
            }
            Clear() {
                this.ShowLoading(!1), this.m_nodeNoHistory.active = !1;
                for (let e = 0; e < this.m_aryFishPuzzleEggPlayerRank.length; e++) this.m_aryFishPuzzleEggPlayerRank[e] && this.m_aryFishPuzzleEggPlayerRank[e].Clear();
                this.m_arrPlayerAwardCtrl.forEach(e => {
                    this.m_nodePool.put(e.node)
                }), this.m_arrPlayerAwardCtrl = [], this.SetPlayerData("-", 0, 0, "", "", "-", "", !0)
            }
            SetPlayerData(e, t, o, n, s, r, a, l = !1) {
                return i(this, void 0, void 0, function*() {
                    l || (this.m_labMyID.string = "No." + e), this.m_labMyCount.string = t > 0 ? t.toString() : "-", this.m_labMyBonus.string = o > 0 ? o.toLocaleString("en-US", {
                        maximumFractionDigits: 2
                    }) : "-", this.m_strArkID = a, this.m_labMyNickName.string = r, n && "" != n || (n = "FAC000");
                    let i = yield c.default.Instance.GetSpirte("Avatar", n);
                    if (this.m_spMyAvatarFace.spriteFrame = i || null, s && "" != s) {
                        let e = yield c.default.Instance.GetSpirte("Avatar", s);
                        e && (this.m_spMyAvatarFaceFrame.spriteFrame = e)
                    } else this.m_spMyAvatarFaceFrame.spriteFrame = null
                })
            }
            SetRankingBoard(e) {
                if (!e) return;
                let t = this.m_aryFishPuzzleEggPlayerRank.length,
                    o = 0;
                null != e[0] && (o = this.CheckNo1(e[0].RankingID)), o > 0 && s.AudioMgr.Instance.Play(a.PUZZLE_SOUND.RANK_UPDATE, !1, 1), this.scheduleOnce(() => {
                    for (let e = 0; e < t; e++) this.m_aryFishPuzzleEggPlayerRank[e].Clear();
                    for (let o = 0; o < e.length && o < t; o++) this.m_aryFishPuzzleEggPlayerRank[o].Show(e[o].RankingID, e[o].WinAmount, e[o].AvatarID, e[o].AvatarFrameID, e[o].Nickname, e[o].pin_ark_id)
                }, o)
            }
            CheckNo1(e) {
                let t = 0;
                return "" != this.m_strTmpNo1ID && this.m_strTmpNo1ID != e && (t = .25, this.m_animNo1Update.play()), this.m_strTmpNo1ID = e, t
            }
            SetAwardList(e, t, o) {
                if (null != t) {
                    let n = this.m_arrPlayerAwardCtrl[e];
                    if (null == n) {
                        let e = cc.instantiate(this.m_pfAwardRow);
                        e.parent = this.m_nodeContent, n = e.getComponent(r.default), this.m_arrPlayerAwardCtrl.push(n)
                    }
                    n.init(t.Time, t.RankingID, t.FinishAmount, t.WinAmount, o, t.AvatarID, t.AvatarFrameID, t.Nickname, t.pin_ark_id)
                }
            }
            OnClose() {
                this.m_funOnClickClose && this.m_funOnClickClose(), this.m_nodeRoot.active = !1, this.ResetSiblingIndex()
            }
            onClickProfileBtn(e, t) {
                let o = Number(t);
                if (o >= this.m_aryFishPuzzleEggPlayerRank.length || o < 0) return;
                let n = this.m_aryFishPuzzleEggPlayerRank[o].GetArkID(),
                    i = n == SS.Network.LoginModel.LoginInfo.pin_ark_id;
                if (h.EventSystem.Event(h.Profile.OpenProfile).Length > 0 && "" != n && null != n)
                    if (h.EventSystem.Event(h.Profile.OpenProfile).Notify(i, n), i) switch (o) {
                        case 0:
                            m.ClickLog.recordClickLog(u.LogName.Profile, -1, u.LogType_Profile.OpenPanel, u.LogEvent_OpenPanel.InPuzzleEgg_1stPlace);
                            break;
                        case 1:
                            m.ClickLog.recordClickLog(u.LogName.Profile, -1, u.LogType_Profile.OpenPanel, u.LogEvent_OpenPanel.InPuzzleEgg_2ndPlace);
                            break;
                        case 2:
                            m.ClickLog.recordClickLog(u.LogName.Profile, -1, u.LogType_Profile.OpenPanel, u.LogEvent_OpenPanel.InPuzzleEgg_3rdPlace)
                    } else switch (o) {
                        case 0:
                            m.ClickLog.recordClickLog(u.LogName.Profile, -1, u.LogType_Profile.OpenOthersPanel, u.LogEvent_OpenOthersPanel.InPuzzleEgg_1stPlace);
                            break;
                        case 1:
                            m.ClickLog.recordClickLog(u.LogName.Profile, -1, u.LogType_Profile.OpenOthersPanel, u.LogEvent_OpenOthersPanel.InPuzzleEgg_2ndPlace);
                            break;
                        case 2:
                            m.ClickLog.recordClickLog(u.LogName.Profile, -1, u.LogType_Profile.OpenOthersPanel, u.LogEvent_OpenOthersPanel.InPuzzleEgg_3rdPlace)
                    }
            }
            onClickSelfProfileBtn() {
                h.EventSystem.Event(h.Profile.OpenProfile).Length > 0 && (h.EventSystem.Event(h.Profile.OpenProfile).Notify(!0, this.m_strArkID), m.ClickLog.recordClickLog(u.LogName.Profile, -1, u.LogType_Profile.OpenPanel, u.LogEvent_OpenPanel.InPuzzleEgg))
            }
            setOnTop() {
                this.m_numOriginSiblingIndex = this.node.getSiblingIndex();
                let e = this.node.parent.children,
                    t = -1;
                for (let o = 0; o < e.length; o++) t = t > e[o].getSiblingIndex() ? t : e[o].getSiblingIndex();
                t++, this.node.setSiblingIndex(t)
            }
            ResetSiblingIndex() {
                this.node.setSiblingIndex(this.m_numOriginSiblingIndex)
            }
            SetByPlayerData(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && (this.SetFaceByID(e.FaceID), this.SetFrameByID(e.FaceFrameID), this.SetNickname(e.NickName))
            }
            SetNickname(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_labMyNickName && (this.m_labMyNickName.string = e)
            }
            SetFaceSprite(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_spMyAvatarFace && (this.m_spMyAvatarFace.spriteFrame = e)
            }
            SetFrameSprite(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_spMyAvatarFaceFrame && (this.m_spMyAvatarFaceFrame.spriteFrame = e)
            }
            SetFaceByID(e) {
                return i(this, void 0, void 0, function*() {
                    if (this.m_strArkID != SS.Network.LoginModel.LoginInfo.pin_ark_id) return;
                    e && "" != e || (e = "FAC000");
                    let t = yield c.default.Instance.GetSpirte("Avatar", e);
                    this.m_spMyAvatarFace.spriteFrame = t || null
                })
            }
            SetFrameByID(e) {
                return i(this, void 0, void 0, function*() {
                    if (this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id)
                        if (e && "" != e) {
                            let t = yield c.default.Instance.GetSpirte("Avatar", e);
                            t && (this.m_spMyAvatarFaceFrame.spriteFrame = t)
                        } else this.m_spMyAvatarFaceFrame.spriteFrame = null
                })
            }
            SetByPlayerDataTop3(e) {
                for (let t = 0; t < this.m_aryFishPuzzleEggPlayerRank.length; t++) this.m_aryFishPuzzleEggPlayerRank[t] && this.m_aryFishPuzzleEggPlayerRank[t].SetByPlayerData(e)
            }
            SetNicknameTop3(e) {
                for (let t = 0; t < this.m_aryFishPuzzleEggPlayerRank.length; t++) this.m_aryFishPuzzleEggPlayerRank[t] && this.m_aryFishPuzzleEggPlayerRank[t].SetNickname(e)
            }
            SetFaceSpriteTop3(e) {
                for (let t = 0; t < this.m_aryFishPuzzleEggPlayerRank.length; t++) this.m_aryFishPuzzleEggPlayerRank[t] && this.m_aryFishPuzzleEggPlayerRank[t].SetFaceSprite(e)
            }
            SetFrameSpriteTop3(e) {
                for (let t = 0; t < this.m_aryFishPuzzleEggPlayerRank.length; t++) this.m_aryFishPuzzleEggPlayerRank[t] && this.m_aryFishPuzzleEggPlayerRank[t].SetFrameSprite(e)
            }
        };
        n([p(cc.Node)], g.prototype, "m_nodeRoot", void 0), n([p(cc.Prefab)], g.prototype, "m_pfAwardRow", void 0), n([p(cc.Node)], g.prototype, "m_nodeContent", void 0), n([p(cc.Node)], g.prototype, "m_nodeLoading", void 0), n([p(cc.Node)], g.prototype, "m_nodeNoHistory", void 0), n([p(cc.Animation)], g.prototype, "m_animNo1Update", void 0), n([p([l.FishPuzzleEggPlayerRank])], g.prototype, "m_aryFishPuzzleEggPlayerRank", void 0), n([p(cc.Label)], g.prototype, "m_labMyID", void 0), n([p(cc.Label)], g.prototype, "m_labMyCount", void 0), n([p(cc.Label)], g.prototype, "m_labMyBonus", void 0), n([p(cc.Sprite)], g.prototype, "m_spMyAvatarFace", void 0), n([p(cc.Sprite)], g.prototype, "m_spMyAvatarFaceFrame", void 0), n([p(cc.Label)], g.prototype, "m_labMyNickName", void 0), n([p(cc.Label)], g.prototype, "m_labMyMobileID", void 0), g = n([d], g), o.FishPuzzleEggAwardPanelMgr = g, cc._RF.pop()
    }, {
        "../../../Component/AudioMgr": "AudioMgr",
        "../../../Component/BundleCtrl": "BundleCtrl",
        "../../../Helper/EventSystem": "EventSystem",
        "../../../Net/ClickLog": "ClickLog",
        "../../../Net/ClickLogEnum": "ClickLogEnum",
        "./FishPuzzleEggAwardPanelRowCtrl": "FishPuzzleEggAwardPanelRowCtrl",
        "./FishPuzzleEggData": "FishPuzzleEggData",
        "./FishPuzzleEggPopupMgr": "FishPuzzleEggPopupMgr"
    }],
    FishPuzzleEggAwardPanelRowCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "b36dcIKpxZGoamgfNUIHlp6", "FishPuzzleEggAwardPanelRowCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const s = e("../../../Component/BundleCtrl"),
            r = e("../../../Helper/EventSystem"),
            a = e("../../../Net/ClickLog"),
            l = e("../../../Net/ClickLogEnum"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        let m = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_labTime = null, this.m_labID = null, this.m_labCount = null, this.m_labBonus = null, this.m_spBG = null, this.m_sfAryBG = [], this.m_spAvatarFace = null, this.m_spAvatarFaceFrame = null, this.m_labNickName = null, this.m_strArkID = ""
            }
            onLoad() {
                r.EventSystem.Event(r.Avatar.SetFaceIcon).Insert(this.SetFaceSprite, this), r.EventSystem.Event(r.Avatar.SetFaceFrameIcon).Insert(this.SetFrameSprite, this), r.EventSystem.Event(r.Avatar.SetNickname).Insert(this.SetNickname, this), r.EventSystem.Event(r.Profile.NotifyUpdatePlayerSetting).Insert(this.SetByPlayerData, this)
            }
            onDestroy() {
                r.EventSystem.Event(r.Avatar.SetFaceIcon).Remove(this.SetFaceSprite, this), r.EventSystem.Event(r.Avatar.SetFaceFrameIcon).Remove(this.SetFrameSprite, this), r.EventSystem.Event(r.Avatar.SetNickname).Remove(this.SetNickname, this), r.EventSystem.Event(r.Profile.NotifyUpdatePlayerSetting).Remove(this.SetByPlayerData, this)
            }
            init(e, t, o, n, r, a, l, c, h) {
                return i(this, void 0, void 0, function*() {
                    this.m_labTime.string = e, this.m_labID.string = "No." + t, this.m_labCount.string = "" + o.toString(), this.m_labBonus.string = n.toLocaleString("en-US", {
                        maximumFractionDigits: 2
                    }), this.m_spBG.spriteFrame = r ? this.m_sfAryBG[1] : this.m_sfAryBG[0], this.m_strArkID = h, this.m_labNickName.string = c, a && "" != a || (a = "FAC000");
                    let i = yield s.default.Instance.GetSpirte("Avatar", a);
                    if (this.m_spAvatarFace.spriteFrame = i || null, l && "" != l) {
                        let e = yield s.default.Instance.GetSpirte("Avatar", l);
                        e && (this.m_spAvatarFaceFrame.spriteFrame = e)
                    } else this.m_spAvatarFaceFrame.spriteFrame = null
                })
            }
            Clear() {
                this.m_labTime.string = "", this.m_labID.string = "", this.m_labCount.string = "", this.m_labBonus.string = "", this.m_strArkID = ""
            }
            onClickProfileBtn() {
                return i(this, void 0, void 0, function*() {
                    let e = this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id;
                    r.EventSystem.Event(r.Profile.OpenProfile).Length > 0 && "" != this.m_strArkID && null != this.m_strArkID && (r.EventSystem.Event(r.Profile.OpenProfile).Notify(e, this.m_strArkID), e ? a.ClickLog.recordClickLog(l.LogName.Profile, -1, l.LogType_Profile.OpenPanel, l.LogEvent_OpenPanel.InPuzzleEgg_OutsideTop3) : a.ClickLog.recordClickLog(l.LogName.Profile, -1, l.LogType_Profile.OpenOthersPanel, l.LogEvent_OpenOthersPanel.InPuzzleEgg_OutsideTop3))
                })
            }
            SetByPlayerData(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && (this.SetFaceByID(e.FaceID), this.SetFrameByID(e.FaceFrameID), this.SetNickname(e.NickName))
            }
            SetNickname(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_labNickName && (this.m_labNickName.string = e)
            }
            SetFaceSprite(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_spAvatarFace && (this.m_spAvatarFace.spriteFrame = e)
            }
            SetFrameSprite(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_spAvatarFaceFrame && (this.m_spAvatarFaceFrame.spriteFrame = e)
            }
            SetFaceByID(e) {
                return i(this, void 0, void 0, function*() {
                    if (this.m_strArkID != SS.Network.LoginModel.LoginInfo.pin_ark_id) return;
                    e && "" != e || (e = "FAC000");
                    let t = yield s.default.Instance.GetSpirte("Avatar", e);
                    this.m_spAvatarFace.spriteFrame = t || null
                })
            }
            SetFrameByID(e) {
                return i(this, void 0, void 0, function*() {
                    if (this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id)
                        if (e && "" != e) {
                            let t = yield s.default.Instance.GetSpirte("Avatar", e);
                            t && (this.m_spAvatarFaceFrame.spriteFrame = t)
                        } else this.m_spAvatarFaceFrame.spriteFrame = null
                })
            }
        };
        n([h(cc.Label)], m.prototype, "m_labTime", void 0), n([h(cc.Label)], m.prototype, "m_labID", void 0), n([h(cc.Label)], m.prototype, "m_labCount", void 0), n([h(cc.Label)], m.prototype, "m_labBonus", void 0), n([h(cc.Sprite)], m.prototype, "m_spBG", void 0), n([h([cc.SpriteFrame])], m.prototype, "m_sfAryBG", void 0), n([h(cc.Sprite)], m.prototype, "m_spAvatarFace", void 0), n([h(cc.Sprite)], m.prototype, "m_spAvatarFaceFrame", void 0), n([h(cc.Label)], m.prototype, "m_labNickName", void 0), m = n([c], m), o.default = m, cc._RF.pop()
    }, {
        "../../../Component/BundleCtrl": "BundleCtrl",
        "../../../Helper/EventSystem": "EventSystem",
        "../../../Net/ClickLog": "ClickLog",
        "../../../Net/ClickLogEnum": "ClickLogEnum"
    }],
    FishPuzzleEggData: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "079dbtln7FA1KlLjwOAQCR5", "FishPuzzleEggData"), Object.defineProperty(o, "__esModule", {
                value: !0
            }), o.PUZZLE_SOUND = o.PuzzleClickLogID = o.PUZZLE_ITEM_DEFINE = o.PUZZLE_ITEM = o.PUZZLE_TYPE = o.FishPEHistoryPlayerData = o.FishPERankingPlayerData = o.FishPERankingListData = o.FishPEUserQuestDataStatus = o.FishPEAward = o.FishPuzzleEventData = void 0, o.FishPuzzleEventData = class {
                constructor() {
                    this.CurPuzzleProgress = {}, this.PuzzleProgressInit = {}, this.PuzzleProgressTarget = {}, this.Status = -1, this.CurGetNewPuzzleProgress = {}, this.TmpPieceAmount = 0, this.TmpCompleteTimes = 0
                }
            }, o.FishPEAward = class {},
            function(e) {
                e[e.NONE = -1] = "NONE", e[e.QUEST_NOT_DONE = 0] = "QUEST_NOT_DONE", e[e.AWARD_AVAILABLE = 1] = "AWARD_AVAILABLE", e[e.AWARD_CLAIMED = 2] = "AWARD_CLAIMED"
            }(o.FishPEUserQuestDataStatus || (o.FishPEUserQuestDataStatus = {})), o.FishPERankingListData = class {
                constructor() {
                    this.PlayerData = null, this.RankList = []
                }
                Clear() {
                    this.PlayerData && this.PlayerData.Clear(), this.RankList = []
                }
            }, o.FishPERankingPlayerData = class {
                Clear() {
                    this.Rank = -1, this.WinAmount = 0, this.FinishAmount = 0, this.RankingID = "-", this.pin_ark_id = "", this.AvatarID = "", this.AvatarFrameID = "", this.Nickname = "-"
                }
            }, o.FishPEHistoryPlayerData = class {}, o.PUZZLE_TYPE = {
                Copper: "Copper",
                Sliver: "Sliver",
                Gold: "Gold",
                Coin: "Coin"
            }, o.PUZZLE_ITEM = {
                Copper: {
                    index: 0,
                    dropID: 1
                },
                Sliver: {
                    index: 1,
                    dropID: 2
                },
                Gold: {
                    index: 2,
                    dropID: 3
                },
                Coin: {
                    index: 3,
                    dropID: 5
                }
            },
            function(e) {
                e[e.CopperPuzzle = 1] = "CopperPuzzle", e[e.SliverPuzzle = 2] = "SliverPuzzle", e[e.GoldPuzzle = 3] = "GoldPuzzle", e[e.Entry = 4] = "Entry", e[e.Winning = 5] = "Winning"
            }(o.PUZZLE_ITEM_DEFINE || (o.PUZZLE_ITEM_DEFINE = {})),
            function(e) {
                e[e.FLOAT_BTN = 0] = "FLOAT_BTN", e[e.POPUP_MORE = 1] = "POPUP_MORE", e[e.MAIN_INFO_PAGE = 2] = "MAIN_INFO_PAGE", e[e.MAIN_RANK_PAGE = 3] = "MAIN_RANK_PAGE"
            }(o.PuzzleClickLogID || (o.PuzzleClickLogID = {})),
            function(e) {
                e.TIPS_SHOW = "RabbitSound", e.BTN_CLICK = "ButtonTouch", e.RANK_UPDATE = "NewNo1", e.PUZZLE_SCROLL_START = "PuzzleChoose", e.PUZZLE_SCROLL_STOP = "PuzzleStop", e.PUZZLE_PIECE_COLLECT_START = "RedMove", e.PUZZLE_PIECE_COLLECT_DONE = "PuzzleShow", e.EGG_DROP = "EggDrop", e.EGG_OPEN = "EggOpen", e.EGG_OPEN_COIN = "EggMoney", e.GET_PIECE_FLY = "PuzzleFly", e.GET_PIECE_COPPER = "Copper", e.GET_PIECE_SILVER = "Silver", e.GET_PIECE_GOLD = "Golden", e.GET_PIECE_REPEAT = "Repeat", e.GET_PIECE_FULL = "PuzzleNine", e.PUZZLE_COMPLETE = "PuzzleDone", e.PUZZLE_GET_AWARD = "PuzzleBoom"
            }(o.PUZZLE_SOUND || (o.PUZZLE_SOUND = {})), cc._RF.pop()
    }, {}],
    FishPuzzleEggDropEgg: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "59da1HR171NI4vyJlKHpF2Y", "FishPuzzleEggDropEgg");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishPuzzleEggDropEgg = void 0;
        const i = e("../../../Component/AudioMgr"),
            s = e("./FishPuzzleEggData"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_animEgg = null, this.m_spItemIcon = null, this.m_labCoin = null, this.m_aryParticle = []
            }
            Init(e, t, o, n, r, a, l, c, h) {
                let m = !1;
                e ? n <= s.PUZZLE_ITEM_DEFINE.GoldPuzzle ? (this.m_labCoin.node.active = !1, this.m_spItemIcon.node.active = !0) : (m = !0, this.m_labCoin.node.active = !0, this.m_spItemIcon.node.active = !1, this.m_labCoin.string = r.toString()) : (this.m_labCoin.node.active = !1, this.m_spItemIcon.node.active = !1), this.node.opacity = 255, this.node.setPosition(a);
                let u = l.sub(this.node.getPosition()).mag(),
                    d = Math.max(.5, .001 * u);
                if (console.warn("\u9053\u5177\u6389\u843d \u8ddd\u96e2 = " + u + ", \u6642\u9593 = " + d + ", start_pos = (" + a.x + ", " + a.y + "), move_to = (" + l.x + ", " + l.y + ")"), e)
                    if (m) {
                        let e = cc.sequence(cc.callFunc(() => {
                            i.AudioMgr.Instance.Play(s.PUZZLE_SOUND.EGG_DROP, !1, 1), this.m_animEgg.play()
                        }), cc.delayTime(1), cc.callFunc(() => {
                            i.AudioMgr.Instance.Play(s.PUZZLE_SOUND.EGG_OPEN, !1, 1)
                        }), cc.delayTime(1.5), cc.callFunc(() => {
                            this.m_aryParticle.forEach(e => {
                                e.resetSystem()
                            }), h && (this.m_labCoin.node.active = !1, i.AudioMgr.Instance.Play(s.PUZZLE_SOUND.EGG_OPEN_COIN, !1, 1), h(o))
                        }));
                        this.node.runAction(e)
                    } else {
                        let e = [],
                            t = this.BezierMidPoint(a, l, .5);
                        e.push(a), e.push(t), e.push(l);
                        let n = cc.sequence(cc.callFunc(() => {
                            i.AudioMgr.Instance.Play(s.PUZZLE_SOUND.EGG_DROP, !1, 1), this.m_animEgg.play()
                        }), cc.delayTime(1), cc.callFunc(() => {
                            i.AudioMgr.Instance.Play(s.PUZZLE_SOUND.EGG_OPEN, !1, 1)
                        }), cc.delayTime(1.5), cc.callFunc(() => {
                            i.AudioMgr.Instance.Play(s.PUZZLE_SOUND.GET_PIECE_FLY, !1, 1), c && c()
                        }), cc.bezierTo(d, e), cc.delayTime(.01), cc.callFunc(() => {
                            this.m_aryParticle.forEach(e => {
                                e.resetSystem()
                            }), h && h(o)
                        }));
                        this.node.runAction(n)
                    }
                else {
                    let e = cc.sequence(cc.callFunc(() => {
                        i.AudioMgr.Instance.Play(s.PUZZLE_SOUND.EGG_DROP, !1, 1), this.m_animEgg.play("EggDrop")
                    }), cc.delayTime(1.5), cc.callFunc(() => {
                        this.node.opacity = 175, c && c()
                    }), cc.spawn(cc.moveTo(d, l), cc.fadeOut(d).easing(cc.easeQuarticActionIn())), cc.delayTime(.01), cc.callFunc(() => {
                        this.m_aryParticle.forEach(e => {
                            e.resetSystem()
                        }), h && h(o)
                    }));
                    this.node.runAction(e)
                }
            }
            BezierMidPoint(e, t, o) {
                let n = new cc.Vec2,
                    i = new cc.Vec2;
                return n.x = (t.y - e.y) * o, n.y = (e.x - t.x) * o, n.y / n.x > 0 ? (n.x < 0 && (n.x *= -1), n.y < 0 && (n.y *= -1)) : (n.x > 0 && (n.x *= -1), n.y < 0 && (n.y *= -1)), i.x = (e.x + t.x) / 2 + n.x, i.y = (e.y + t.y) / 2 + n.y, i
            }
        };
        n([a(cc.Animation)], l.prototype, "m_animEgg", void 0), n([a(cc.Sprite)], l.prototype, "m_spItemIcon", void 0), n([a(cc.Label)], l.prototype, "m_labCoin", void 0), n([a([cc.ParticleSystem])], l.prototype, "m_aryParticle", void 0), l = n([r], l), o.FishPuzzleEggDropEgg = l, cc._RF.pop()
    }, {
        "../../../Component/AudioMgr": "AudioMgr",
        "./FishPuzzleEggData": "FishPuzzleEggData"
    }],
    FishPuzzleEggGetAwardState: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "89f90p66A1KHIxcvOpMvGVW", "FishPuzzleEggGetAwardState"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishPuzzleEggGetAwardState = void 0;
        const n = e("../../../../FakeScoreBox/Script/FakeScoreBoxCtrl"),
            i = e("../../../../Helper/EventSystem"),
            s = e("../../../../Net/LobbyClient"),
            r = e("../../../../PopupMessage/Script/PopupMsgMgr"),
            a = e("../FishPuzzleEggData");
        o.FishPuzzleEggGetAwardState = class {
            constructor() {
                this.m_curAwardData = new a.FishPuzzleEventData, this.m_bAwardFinish = !1, this.m_iThisWin = 0, this.m_iFinalBalance = 0, this.m_icurAwardType = ""
            }
            get GetCurAwardingType() {
                return this.m_icurAwardType
            }
            PreUpdate() {
                this.target.m_IconMgr.ShowIcon(!1), this.CheckAward()
            }
            Update() {
                this.m_bAwardFinish && this.target.FishPuzzleEggFSM.SetCurrentState(this.target.IdleState)
            }
            PostUpdate() {
                this.target.GetAwardFinish(), this.m_iThisWin = 0, this.m_icurAwardType = "", this.m_curAwardData = null, this.target.m_AwardMgr.Clear()
            }
            CheckAward() {
                if (console.warn("[FishPuzzleEggGetAwardState] CheckAward"), this.target.m_aryTmpAwardData.length <= 0) return void(this.m_bAwardFinish = !0);
                this.m_bAwardFinish = !1, this.m_curAwardData = this.target.m_aryTmpAwardData.shift(), this.m_icurAwardType = this.m_curAwardData.PuzzleType;
                let e = 0;
                this.target.m_bIsInLobby && (SS.Common.GameEnvironment.IsUseScoreBox ? this.m_curAwardData.Award.AwardType == a.PUZZLE_ITEM_DEFINE.Entry ? (e = this.target.m_LobbyMgr.UserEntries, this.m_showType = n.ShowType.ENTRIES) : this.m_curAwardData.Award.AwardType == a.PUZZLE_ITEM_DEFINE.Winning && (e = this.target.m_LobbyMgr.UserWinnings, this.m_showType = n.ShowType.WINNING) : (e = this.target.m_LobbyMgr.UserEntries + this.target.m_LobbyMgr.UserWinnings, this.m_showType = n.ShowType.CREDIT)), this.target.m_AwardMgr.ShowAward(this.m_showType, this.target.m_bIsInLobby, e, this.m_curAwardData, this.CollectCallback.bind(this), this.AwardCompleteCallback.bind(this))
            }
            CollectCallback() {
                console.log("CollectCallback"), this.target.m_bIsInLobby && s.LobbyClient.Instance.GetUserClient.collectPuzzleQuest(this.m_curAwardData.QuestName, this.m_curAwardData.SerialNo, this.m_curAwardData.QuestLevel, this.rcvCollectPuzzleQuestAck.bind(this))
            }
            AwardCompleteCallback() {
                if (console.warn("[FishPuzzleEggGetAwardState] AwardCompleteCallback"), null == this.m_curAwardData) return console.error("[FishPuzzleEggGetAwardState] AwardCompleteCallback"), void this.target.EVENT_ERROR("C50");
                if (this.target.m_bIsInLobby) {
                    let e = this.target.m_aryEventData.find(e => e.PuzzleType == this.m_curAwardData.PuzzleType);
                    e && (e.Status = a.FishPEUserQuestDataStatus.QUEST_NOT_DONE, e.TmpCompleteTimes++, e.TmpPieceAmount = 0, e.CurPuzzleProgressCount = 0, Object.keys(e.CurPuzzleProgress).forEach(t => {
                        e.CurPuzzleProgress[t] = 0, e.CurGetNewPuzzleProgress[t] = 0
                    }), this.target.m_IconMgr.ResetIconNumber(this.target.m_aryEventData, this.m_icurAwardType))
                }
                this.CheckAward()
            }
            rcvCollectPuzzleQuestAck(e, t) {
                if (console.warn("\u5f69\u86cb\u62fc\u5716 \u5b8c\u6210\u62fc\u5716\u89e3\u6790, status = " + e + ", result = ", t), e == ArkSDK.HttpResult.OK && t && t.cmd_data && t.cmd_data.data)
                    if (0 == t.cmd_data.result) this.OnCollectQuest(0, t.cmd_data);
                    else switch (t.cmd_data.result) {
                        case 1:
                            r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Info, "S174", null, null, null), this.target.m_bIsInLobby && this.LobbySetUserBalance(t.cmd_data.playerInfo);
                            break;
                        case -999:
                            r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Info, "S175", null, null, null);
                            break;
                        default:
                            r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Critical, "S189", null, null, null)
                    } else this.target.ShowEventErrorMsg(e, t)
            }
            OnCollectQuest(e, t) {
                let o;
                console.warn("\u5f69\u86cb\u62fc\u5716 \u5b8c\u6210\u62fc\u5716\u89e3\u6790, OnCollectQuest = ", t), t.data.AwardInfo[0] && (o = t.data.AwardInfo[0].Item, this.m_iThisWin = t.data.AwardInfo[0].Amount), SS.Common.GameEnvironment.IsUseScoreBox ? o == a.PUZZLE_ITEM_DEFINE.Entry ? (this.m_iFinalBalance = t.playerInfo.entries, this.m_showType = n.ShowType.ENTRIES) : o == a.PUZZLE_ITEM_DEFINE.Winning && (this.m_iFinalBalance = t.playerInfo.winning, this.m_showType = n.ShowType.WINNING) : (this.m_iFinalBalance = t.playerInfo.winnings + t.playerInfo.entries, this.m_showType = n.ShowType.CREDIT), this.target.m_bIsInLobby && this.LobbySetUserBalance(t.playerInfo), this.target.m_AwardMgr.OnRecvCollectQuest(e, this.m_iThisWin, this.m_showType, this.target.m_bIsInLobby, this.m_iFinalBalance)
            }
            LobbySetUserBalance(e) {
                let t = e.entries,
                    o = e.winnings;
                console.log("lobbySetUserBalance~ entries = " + t + " winnings = " + o), this.target.m_bIsInLobby && (i.EventSystem.Event(i.DownBar.SetPlayerInfo).Notify(t, o), this.target.m_LobbyMgr.UserEntries = t, this.target.m_LobbyMgr.UserWinnings = o)
            }
        }, cc._RF.pop()
    }, {
        "../../../../FakeScoreBox/Script/FakeScoreBoxCtrl": "FakeScoreBoxCtrl",
        "../../../../Helper/EventSystem": "EventSystem",
        "../../../../Net/LobbyClient": "LobbyClient",
        "../../../../PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../FishPuzzleEggData": "FishPuzzleEggData"
    }],
    FishPuzzleEggIconCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "9c5af9WB3BH3rrHfaX1JfpT", "FishPuzzleEggIconCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishPuzzleEggIconCtrl = void 0;
        const i = e("../../../Component/AudioMgr"),
            s = e("./FishPuzzleEggData"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_labCount = null, this.m_nodePuzzleIcon = null, this.m_nodeRepaeatObj = null, this.m_animEffect = null, this.m_aryParticle = [], this.m_strPuzzleType = "", this.m_posRepeatObjOri = null, this.m_saveGotPiecesPosAry = [], this.m_iMaxPieceCount = 0, this.m_iGetPieceCount = 0
            }
            get PuzzleType() {
                return this.m_strPuzzleType
            }
            _onLoad() {
                this.m_nodeRepaeatObj.opacity = 0, this.m_animEffect.node.active = !1
            }
            _start() {
                this.m_posRepeatObjOri = this.m_nodeRepaeatObj.getPosition(), this.m_iGetPieceCount = 0, this.m_labCount.string = ""
            }
            _onDestroy() {}
            Clear() {
                this.m_saveGotPiecesPosAry = [], this.m_iGetPieceCount = 0, this.m_labCount.string = ""
            }
            GetRootPos() {
                return this.node.convertToWorldSpaceAR(cc.Vec2.ZERO)
            }
            SetPuzzleInitCount(e, t = null) {
                let o = 0,
                    n = 0;
                Object.keys(e.CurPuzzleProgress).forEach(t => {
                    o++, e.CurPuzzleProgress[t] >= 1 && (n++, -1 == this.m_saveGotPiecesPosAry.indexOf(Number(t)) && this.m_saveGotPiecesPosAry.push(Number(t)))
                }), console.log("[iconCtrl] SetPuzzleCount Type = " + e.PuzzleType + ", maxCount = " + o + ", curCount = " + n), e.CurPuzzleProgressCount = n, e.TmpPieceAmount = 0, this.m_strPuzzleType = e.PuzzleType, this.m_iGetPieceCount = n, this.m_labCount.string = this.m_iGetPieceCount > 0 ? this.m_iGetPieceCount.toString() : "", this.m_iMaxPieceCount = o
            }
            GetNewPuzzle(e, t, o) {
                return -1 == this.m_saveGotPiecesPosAry.indexOf(e) ? (this.m_saveGotPiecesPosAry.push(e), this.m_iGetPieceCount++, this.m_iGetPieceCount >= this.m_iMaxPieceCount && (this.m_iGetPieceCount = this.m_iMaxPieceCount), i.AudioMgr.Instance.Play(o, !1, 1), this.ShowNewGetEffect(), this.m_labCount.string = this.m_iGetPieceCount.toString(), this.m_iGetPieceCount == this.m_iMaxPieceCount && (t && (i.AudioMgr.Instance.Play(s.PUZZLE_SOUND.GET_PIECE_FULL, !1, 1), this.m_animEffect.node.active = !0, this.m_animEffect.play(), this.scheduleOnce(() => {
                    this.m_aryParticle.forEach(e => e.resetSystem()), this.m_animEffect.node.active = !1
                }, 1.5)), this.m_saveGotPiecesPosAry = []), !0) : (i.AudioMgr.Instance.Play(s.PUZZLE_SOUND.GET_PIECE_REPEAT, !1, 1), this.ShowRepeat(), !1)
            }
            ResetIconCount() {
                this.m_iGetPieceCount = 0, this.m_labCount.string = ""
            }
            ShowNewGetEffect() {
                cc.Tween.stopAllByTarget(this.m_nodePuzzleIcon), this.m_nodePuzzleIcon.scale = 1, cc.tween(this.m_nodePuzzleIcon).to(.1, {
                    scale: 1.2
                }).to(.1, {
                    scale: 1
                }).start()
            }
            ShowRepeat() {
                cc.Tween.stopAllByTarget(this.m_nodeRepaeatObj), this.m_nodeRepaeatObj.opacity = 255, this.m_nodeRepaeatObj.setPosition(this.m_posRepeatObjOri), cc.tween(this.m_nodeRepaeatObj).by(1, {
                    position: cc.v3(0, 50)
                }).call(() => {
                    this.m_nodeRepaeatObj.opacity = 0
                }).start()
            }
        };
        n([a(cc.Label)], l.prototype, "m_labCount", void 0), n([a(cc.Node)], l.prototype, "m_nodePuzzleIcon", void 0), n([a(cc.Node)], l.prototype, "m_nodeRepaeatObj", void 0), n([a(cc.Animation)], l.prototype, "m_animEffect", void 0), n([a([cc.ParticleSystem])], l.prototype, "m_aryParticle", void 0), n([a], l.prototype, "m_strPuzzleType", void 0), l = n([r], l), o.FishPuzzleEggIconCtrl = l, cc._RF.pop()
    }, {
        "../../../Component/AudioMgr": "AudioMgr",
        "./FishPuzzleEggData": "FishPuzzleEggData"
    }],
    FishPuzzleEggIconMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "287b7yYbmtMEbivrzz7v0yZ", "FishPuzzleEggIconMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishPuzzleEggIconMgr = void 0;
        const i = e("../../../Component/DateTimeCountDown"),
            s = e("../../../Component/NodeDrag"),
            r = e("./FishPuzzleEggData"),
            a = e("./FishPuzzleEggIconCtrl"),
            {
                ccclass: l,
                property: c
            } = cc._decorator;
        let h = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_funOnClickIcon = null, this.m_funOnPuzzleComplete = null, this.m_nodeRoot = null, this.m_nodeDragFloatBtn = null, this.m_nodePuzzleIconPanel = null, this.m_nodeRedPoint = null, this.m_nodePrompt = null, this.m_labPrompt = null, this.m_labPrize = null, this.m_labRedPoint = null, this.m_cdLabTimer = null, this.m_aryFishPuzzleEggIconCtrl = [], this.autoClosePromptID = null, this.m_strLogTitle = " [FishPuzzleEggIconMgr] "
            }
            _onLoad() {
                if (this.m_nodePuzzleIconPanel.opacity = 0, this.m_aryFishPuzzleEggIconCtrl)
                    for (let e = 0; e < this.m_aryFishPuzzleEggIconCtrl.length; e++) this.m_aryFishPuzzleEggIconCtrl[e]._onLoad();
                this.m_nodeRedPoint.active = !1, this.m_labRedPoint.node.active = !1, this.m_nodeDragFloatBtn.Event_DragEnd = null, this.m_nodeDragFloatBtn.Event_ClickItem = this.OnClickEventIcon.bind(this)
            }
            _start() {
                if (this.m_aryFishPuzzleEggIconCtrl)
                    for (let e = 0; e < this.m_aryFishPuzzleEggIconCtrl.length; e++) this.m_aryFishPuzzleEggIconCtrl[e]._start()
            }
            _onDestroy() {
                if (this.m_aryFishPuzzleEggIconCtrl)
                    for (let e = 0; e < this.m_aryFishPuzzleEggIconCtrl.length; e++) this.m_aryFishPuzzleEggIconCtrl[e]._onDestroy()
            }
            Init(e, t) {
                e && (t ? this.m_nodeDragFloatBtn.setLocked(!1) : this.m_nodeDragFloatBtn.setLocked(!0), this.SetPuzzleInitCount(e, this.OnPuzzleComplete), this.m_labPrize.string = "$" + (this.FindMaxPuzzlePrize(e) * e[0].ExchangeRate).toLocaleString("en-US", {
                    minimumFractionDigits: 2
                }))
            }
            UpdateTimer(e) {
                this.m_cdLabTimer && this.m_cdLabTimer.UpdateUIWithDay(e)
            }
            FindPuzzleCtrl(e) {
                for (let t = 0; t < this.m_aryFishPuzzleEggIconCtrl.length; t++)
                    if (this.m_aryFishPuzzleEggIconCtrl[t].PuzzleType == e) return this.m_aryFishPuzzleEggIconCtrl[t];
                return null
            }
            FindMaxPuzzlePrize(e) {
                if (!e) return;
                let t = 0;
                for (let o = 0; o < e.length; o++) e[o].Award && (e[o].Award.AwardType == r.PUZZLE_ITEM_DEFINE.Entry && e[o].Award.AwardEntries > t ? t = e[o].Award.AwardEntries : e[o].Award.AwardType == r.PUZZLE_ITEM_DEFINE.Winning && e[o].Award.AwardWinnings > t && (t = e[o].Award.AwardWinnings));
                return t
            }
            ShowIcon(e) {
                this.m_nodeRoot.active = e, e || (this.SetPrompt(), clearTimeout(this.autoClosePromptID), cc.Tween.stopAllByTarget(this.m_nodePuzzleIconPanel), this.m_nodePuzzleIconPanel.opacity = 0)
            }
            Clear() {
                this.ShowIcon(!1), this.SetRedPointShow(!1);
                for (let e = 0; e < this.m_aryFishPuzzleEggIconCtrl.length; e++) this.m_aryFishPuzzleEggIconCtrl[e].Clear()
            }
            GetSmallIconPos(e) {
                return this.m_aryFishPuzzleEggIconCtrl[e].GetRootPos()
            }
            SetPuzzleInitCount(e, t) {
                if (!e) return;
                let o = null;
                for (let n = 0; n < e.length; n++) {
                    o = e[n];
                    let i = r.PUZZLE_ITEM[o.PuzzleType].index;
                    this.m_aryFishPuzzleEggIconCtrl[i] && this.m_aryFishPuzzleEggIconCtrl[i].SetPuzzleInitCount(o, t)
                }
            }
            SetPrompt(e = "") {
                if (null == this.m_nodePrompt) return;
                let t = "" != e;
                this.m_nodePrompt.active = t, t && (this.m_labPrompt.string = e, this.autoClosePromptID = setTimeout(() => {
                    this.SetPrompt()
                }, 5e3))
            }
            GetNewPuzzle(e, t, o, n) {
                console.log(this.m_strLogTitle + "GetPuzzleItem puzzleType = " + e + ", puzzleIndex = " + t);
                let i = !1,
                    s = this.FindPuzzleCtrl(e);
                return s && (i = s.GetNewPuzzle(t, o, n)), i && this.SetRedPointShow(!0), i
            }
            ResetIconNumber(e, t) {
                if (!e) return;
                let o = this.FindPuzzleCtrl(t);
                o && o.ResetIconCount(), this.CheckRedPoint(e)
            }
            CheckRedPoint(e) {
                if (!e) return;
                let t = 0;
                for (let o = 0; o < e.length; o++) t += e[o].TmpPieceAmount, console.log(this.m_strLogTitle + "CheckRedPoint tmpCount = " + t + ",  type = " + e[o].PuzzleType);
                this.SetRedPointShow(t > 0)
            }
            SetRedPointShow(e) {
                this.m_nodeRedPoint.active = e
            }
            ShowPuzzleIconPanel() {
                cc.Tween.stopAllByTarget(this.m_nodePuzzleIconPanel), this.m_nodePuzzleIconPanel.opacity = 255, cc.tween(this.m_nodePuzzleIconPanel).delay(3).to(1, {
                    opacity: 0
                }).start()
            }
            OnPuzzleComplete(e) {
                this.m_funOnPuzzleComplete && this.m_funOnPuzzleComplete(e)
            }
            OnClickEventIcon() {
                console.log(this.m_strLogTitle + "OnClickEventIcon"), this.m_funOnClickIcon && this.m_funOnClickIcon()
            }
        };
        n([c(cc.Node)], h.prototype, "m_nodeRoot", void 0), n([c(s.NodeDrag)], h.prototype, "m_nodeDragFloatBtn", void 0), n([c(cc.Node)], h.prototype, "m_nodePuzzleIconPanel", void 0), n([c(cc.Node)], h.prototype, "m_nodeRedPoint", void 0), n([c(cc.Node)], h.prototype, "m_nodePrompt", void 0), n([c(cc.Label)], h.prototype, "m_labPrompt", void 0), n([c(cc.Label)], h.prototype, "m_labPrize", void 0), n([c(cc.Label)], h.prototype, "m_labRedPoint", void 0), n([c(i.DateTimeCountDown)], h.prototype, "m_cdLabTimer", void 0), n([c([a.FishPuzzleEggIconCtrl])], h.prototype, "m_aryFishPuzzleEggIconCtrl", void 0), h = n([l], h), o.FishPuzzleEggIconMgr = h, cc._RF.pop()
    }, {
        "../../../Component/DateTimeCountDown": "DateTimeCountDown",
        "../../../Component/NodeDrag": "NodeDrag",
        "./FishPuzzleEggData": "FishPuzzleEggData",
        "./FishPuzzleEggIconCtrl": "FishPuzzleEggIconCtrl"
    }],
    FishPuzzleEggIdleState: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "67a6dVo1bpM+rQ5rZRbJeY/", "FishPuzzleEggIdleState"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishPuzzleEggIdleState = void 0, o.FishPuzzleEggIdleState = class {
            PreUpdate() {
                this.target.m_bIsWaitForDelayClose || this.target.m_bIsNoFishGame || this.target.m_IconMgr.ShowIcon(!0)
            }
            Update() {}
            PostUpdate() {}
        }, cc._RF.pop()
    }, {}],
    FishPuzzleEggInfoMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "38bcftA+oxGQ5DQo2vZGrL4", "FishPuzzleEggInfoMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishGameNode = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class {
            constructor() {
                this.m_strGameName = "", this.m_strGameID = "", this.m_node = null
            }
        };
        n([s()], r.prototype, "m_strGameName", void 0), n([s()], r.prototype, "m_strGameID", void 0), n([s(cc.Node)], r.prototype, "m_node", void 0), r = n([i("FishGameNode")], r), o.FishGameNode = r;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeLobby = null, this.m_aryFishNode = [], this.m_aryHideObjWhenInfoShow = []
            }
            ShowInfo(e, t) {
                this.node.active = !0, this.m_nodeLobby.active = e;
                for (let o = 0; o < this.m_aryFishNode.length; o++) this.m_aryFishNode[o].m_node.active = !1;
                e || (this.m_aryFishNode.find(e => e.m_strGameName == t).m_node.active = !0);
                for (let o = 0; o < this.m_aryHideObjWhenInfoShow.length; o++) this.m_aryHideObjWhenInfoShow[o].active = !1
            }
            CloseInfo() {
                for (let e = 0; e < this.m_aryHideObjWhenInfoShow.length; e++) this.m_aryHideObjWhenInfoShow[e].active = !0;
                this.node.active = !1
            }
        };
        n([s(cc.Node)], a.prototype, "m_nodeLobby", void 0), n([s([r])], a.prototype, "m_aryFishNode", void 0), n([s([cc.Node])], a.prototype, "m_aryHideObjWhenInfoShow", void 0), a = n([i], a), o.default = a, cc._RF.pop()
    }, {}],
    FishPuzzleEggInitState: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "2a93d1/q6NNe70t5oL3f+vQ", "FishPuzzleEggInitState"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishPuzzleEggInitState = void 0;
        const n = e("../../../../Net/LobbyClient"),
            i = e("../FishPuzzleEggData");
        o.FishPuzzleEggInitState = class {
            constructor() {
                this.m_bIsInitFinish = !1
            }
            PreUpdate() {
                this.target.m_bIsNoFishGame = !this.CheckEventPuzzleGameID(n.LobbyClient.Instance.m_CommonEventInfo_900005), this.target.m_bIsNoFishGame ? this.target.CloseEvent() : this.ParseMisInfo(n.LobbyClient.Instance.m_CommonEventInfo_900005) && this.target.m_aryEventData && this.target.m_aryEventData.length > 0 ? (this.target.m_IconMgr.Init(this.target.m_aryEventData, null != this.target.m_LobbyMgr), this.target.m_PuzzlePageMgr.Init(this.target.m_strPlayerID, this.target.m_aryEventData, this.target.m_iExpireTime), this.target.InitTimer(), null != n.LobbyClient.Instance.m_CommonEventInfo_900005_Rank && this.target.ParseMisRankInfo(n.LobbyClient.Instance.m_CommonEventInfo_900005_Rank), this.m_bIsInitFinish = !0) : this.target.CloseEvent()
            }
            Update() {
                !this.target.m_bIsInLobby && this.m_bIsInitFinish && (this.m_bIsInitFinish = !1, this.target.FishPuzzleEggFSM.SetCurrentState(this.target.IdleState))
            }
            PostUpdate() {
                this.m_bIsInitFinish = !1
            }
            ParseMisInfo(e) {
                try {
                    if ((e = e.data).hasOwnProperty("Enable") && e.Enable && e.hasOwnProperty("QuestList") && e.QuestList.length > 0 && e.hasOwnProperty("UserQuestData")) {
                        let t = e.QuestList,
                            o = e.UserQuestData;
                        this.target.m_aryEventData = [], this.target.m_iEndTime = e.EndTimeUTC, this.target.m_iNowTime = e.NowTimeUTC, this.target.m_strPlayerID = e.PuzzlePlayerID;
                        let n = !1;
                        for (let e = 0; e < t.length; e++) {
                            let s = new i.FishPuzzleEventData,
                                r = t[e];
                            if ("Puzzle" == r.GameThemeID[0]) {
                                console.warn("\u5f69\u86cb\u62fc\u5716\u4efb\u52d9\u8cc7\u8a0a %s", JSON.stringify(r)), n = !0, s.QuestTitle = r.QuestTitle, s.QuestLevel = r.QuestLevel, s.SerialNo = r.SerialNo, s.ThemeID = r.GameThemeID, s.QuestName = r.Name, s.Priority = r.Priority, s.CycleSeconds = r.CycleSeconds, s.StartTimeUTC = r.BeginTimeUTC, s.ExpireTimeUTC = r.ExpireTimeUTC, s.RankListID = r.RankListID, s.ExchangeRate = r.CustomInfo.ExchangeRate, s.RankLimit = r.CustomInfo.RankLimit, s.PuzzleProgressInit = r.CustomInfo.ProgressPuzzleInit, s.PuzzleProgressTarget = r.CustomInfo.ProgressPuzzleTarget;
                                let e = Number(r.AwardType);
                                3 == e ? s.PuzzleType = i.PUZZLE_TYPE.Copper : 4 == e ? s.PuzzleType = i.PUZZLE_TYPE.Sliver : 5 == e && (s.PuzzleType = i.PUZZLE_TYPE.Gold);
                                let t = r.Award[0][0];
                                s.Award = new i.FishPEAward, s.Award.AwardType = t.Item, s.Award.AwardType == i.PUZZLE_ITEM_DEFINE.Entry ? s.Award.AwardEntries = t.Amount : s.Award.AwardType == i.PUZZLE_ITEM_DEFINE.Winning && (s.Award.AwardWinnings = t.Amount);
                                for (let n = 0; n < o.length; n++) {
                                    let e = o[n];
                                    if (s.QuestName == e.Name && s.QuestLevel == e.QuestLevel && s.ThemeID == e.GameThemeID[0]) {
                                        s.CurPuzzleProgress = e.ProgressPuzzle, s.Status = e.Status;
                                        break
                                    }
                                }
                                Object.keys(s.CurPuzzleProgress).forEach(e => {
                                    s.CurGetNewPuzzleProgress[e] = Object.assign(s.CurPuzzleProgress[e])
                                }), this.target.m_aryEventData.push(s)
                            } else {
                                let o = t[e];
                                this.target.m_iExpireTime = o.ExpireTimeUTC
                            }
                        }
                        return n
                    }
                    return !1
                } catch (t) {
                    return console.error("parseMisInfo"), !1
                }
            }
            CheckEventPuzzleGameID(e) {
                if (e) {
                    let t = [],
                        o = SS.Common.GameEnvironment.GameSetting.kioskOpenGameList;
                    if ((e = e.data).hasOwnProperty("Enable") && e.Enable && e.hasOwnProperty("QuestList") && e.QuestList.length > 0) {
                        let n = e.QuestList;
                        for (let e = 0; e < n.length; e++) {
                            let i = n[e].GameThemeID;
                            for (let e = 0; e < i.length; e++)
                                if ("Puzzle" != i[e] && -1 == t.indexOf(i[e])) {
                                    let n = this.GetThemeIdByGameName(i[e]);
                                    o.findIndex(e => e == n) > -1 && t.push(i[e])
                                }
                        }
                        return t.length > 0
                    }
                }
                return !1
            }
            GetThemeIdByGameName(e) {
                return SS.Common.GameEnvironment.GameSetting.hasOwnProperty("Icon") && SS.Common.GameEnvironment.GameSetting.Icon.hasOwnProperty(e) && SS.Common.GameEnvironment.GameSetting.Icon[e].hasOwnProperty("GameName") ? SS.Common.GameEnvironment.GameSetting.Icon[e].GameName : ""
            }
        }, cc._RF.pop()
    }, {
        "../../../../Net/LobbyClient": "LobbyClient",
        "../FishPuzzleEggData": "FishPuzzleEggData"
    }],
    FishPuzzleEggMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "9ecc17PG6FBg5QrTgBQfn2/", "FishPuzzleEggMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishPuzzleEggMgr = void 0;
        const s = e("../../../Component/StateMachine/SSStateMachine"),
            r = e("./FSM/FishPuzzleEggGetAwardState"),
            a = e("./FSM/FishPuzzleEggInitState"),
            l = e("./FSM/FishPuzzleEggIdleState"),
            c = e("./FSM/FishPuzzleEggPuzzlePageState"),
            h = e("./FSM/FishPuzzleEggWaitCmdState"),
            m = e("../../EventModule"),
            u = e("../../EventBannerData"),
            d = e("../../../PopUpMgr/Scripts/PriorityCustomEvent"),
            p = e("./FishPuzzleEggPopupMgr"),
            g = e("./FishPuzzleEggPuzzlePageMgr"),
            _ = e("./FishPuzzleEggAwardPanelMgr"),
            S = e("./FishPuzzleEggIconMgr"),
            y = e("./FishPuzzleEggAwardMgr"),
            C = e("./FishPuzzleEggData"),
            f = e("../../../Net/LobbyClient"),
            v = e("./FishPuzzleEggInfoMgr"),
            P = e("../../../PopupMessage/Script/PopupMsgMgr"),
            b = e("../../../Component/AudioMgr"),
            w = e("../../../Helper/EventSystem"),
            {
                ccclass: I,
                property: E
            } = cc._decorator;
        let L = class extends m.EventModule {
            constructor() {
                super(...arguments), this.m_strIconContent = "The EGGS SURPRISE\n fish event online!", this.m_funGetAward = null, this.EVENT_ERROR = null, this.EVENT_OPEN_UI = null, this.EVENT_CLOSE_UI = null, this.EVENT_SEND_COLLECT_CMD = null, this.EVENT_GET_AWARD_FIN = null, this.m_pfbPopupRank = null, this.m_pfbAwardListPanel = null, this.m_IconMgr = null, this.m_PuzzlePageMgr = null, this.m_AwardMgr = null, this.m_InfoMgr = null, this.SoundClip = [], this.m_AwardPanelMgr = null, this.m_PopupMgr = null, this.FishPuzzleEggFSM = new s.default(this), this.InitState = new a.FishPuzzleEggInitState, this.IdleState = new l.FishPuzzleEggIdleState, this.PuzzlePageState = new c.FishPuzzleEggPuzzlePageState, this.GetAwardState = new r.FishPuzzleEggGetAwardState, this.WaitCmdState = new h.FishPuzzleEggWaitCmdState, this.m_aryEventData = null, this.m_EventRankListData = new C.FishPERankingListData, this.m_aryEventHistoryData = null, this.m_aryTmpAwardData = [], this.m_bIsInLobby = !1, this.m_iEndTime = -1, this.m_iNowTime = -1, this.m_iExpireTime = -1, this.m_strPlayerID = "", this.m_iExchangeRate = 0, this.m_TimerIntervalID = -1, this.m_iEggQuestCountDownTime = 0, this.m_iPuzzleQuestCountDownTime = 0, this.m_strLogTitle = " [FishPuzzleEggMgr] ", this.TIME_SEND_UPDATE_RANK_CMD = 15, this.TIME_SEND_UPDATE_RECORD_CMD = 30, this.m_iRankCountDownTime = 0, this.m_iRecordCountDownTime = 0, this.m_bIsWaitForDelayClose = !1, this.m_bIsNoFishGame = !1, this.m_iCurPuzzleEggCount = 0
            }
            onLoad() {
                console.log(this.m_strLogTitle + "PuzzleEgg!!!!!!!!!!!!!!!!!!!!!!!! onLoad "), this.m_strEventID = "PuzzleEgg", this.m_IconMgr._onLoad(), this.m_PuzzlePageMgr._onLoad(), this.m_AwardMgr._onLoad(), this.m_bIsWaitForDelayClose = !1, this.m_bIsNoFishGame = !1, this.m_IconMgr.m_funOnClickIcon = this.OnClickEventIcon.bind(this), this.m_PuzzlePageMgr.m_funClosePage = this.OnClosePuzzlePage.bind(this), this.m_PuzzlePageMgr.m_funUnlockShoot = this.OnUnlockShoot.bind(this), this.m_PuzzlePageMgr.m_funOpenAwardListPage = this.ShowAwardListPanel.bind(this), this.m_PuzzlePageMgr.m_funOpenInfoPage = this.ShowInfoPage.bind(this), this.m_PuzzlePageMgr.m_funDownloadPageFinish = this.m_AwardMgr.Init.bind(this.m_AwardMgr)
            }
            start() {
                console.log(this.m_strLogTitle + "PuzzleEgg!!!!!!!!!!!!!!!!!!!!!!!! start"), this.m_IconMgr._start(), this.m_PuzzlePageMgr._start(), this.FishPuzzleEggFSM.SetCurrentState(this.InitState);
                let e = [];
                for (let t = 0; t < this.SoundClip.length; t++) e.push(this.SoundClip[t].name);
                if (b.AudioMgr.Instance.setAudioClip(this.SoundClip, e), this.m_LobbyMgr) {
                    if (this.m_aryEventData && this.m_aryEventData.length > 0 && this.m_iEggQuestCountDownTime > 0) {
                        if (this.m_bIsInLobby = !0, this.m_pfbPopupRank) {
                            let e = cc.instantiate(this.m_pfbPopupRank);
                            if (this.m_PopupMgr = e.getComponent(p.FishPuzzleEggPopupMgr), this.m_PopupMgr) {
                                this.m_PopupMgr._init(), this.m_PopupMgr.ShowRankBoard(this.m_EventRankListData.RankList), this.m_PopupMgr.m_funClickShowAwardPanel = this.ShowAwardListPanel.bind(this), console.warn("PuzzleEg!!!!!!!!!! start, this.m_iCountDownTime = " + this.m_iEggQuestCountDownTime);
                                let e = new u.EventBannerData("PuzzleEgg", -1, this.OnClickBnnerCB.bind(this), this.OnShowPopupRank.bind(this), () => this.m_iEggQuestCountDownTime);
                                e.m_bValid = !0, this.m_LobbyMgr.m_arrEventBannerData.push(e), this.SetEventActive()
                            }
                        }
                        let e = new d.PriorityCustomEvent(d.PopEventPriority.FishPuzzleEgg, this.LoginGetAward.bind(this));
                        this.m_LobbyMgr.popUpMgr.priorityShowEvents.push(e), this.m_LobbyMgr.popUpMgr.onCloseAllPopupEvent.push(this.PopUpClosed.bind(this))
                    } else this.PopUpClosed();
                    this.initDone()
                } else this.LoginGetAward() || this.PopUpClosed();
                this.m_AwardMgr._start(this.m_bIsInLobby), this.schedule(this.CheckAwardPanelUpdate, 1, cc.macro.REPEAT_FOREVER), w.EventSystem.Event(w.SwitchGame).Insert(this.onProfileSwitchGame, this)
            }
            update() {
                this.FishPuzzleEggFSM.SMUpdate()
            }
            onDestroy() {
                w.EventSystem.Event(w.SwitchGame) && w.EventSystem.Event(w.SwitchGame).Length > 0 && w.EventSystem.Event(w.SwitchGame).Remove(this.onProfileSwitchGame, this), this.unschedule(this.CheckAwardPanelUpdate), this.m_IconMgr._onDestroy(), this.m_PuzzlePageMgr._onDestroy(), this.m_AwardMgr._onDestroy(), this.m_PopupMgr && this.m_PopupMgr._onDestroy(), this.m_AwardPanelMgr && this.m_AwardPanelMgr._onDestroy()
            }
            CloseEvent() {
                const e = Object.create(null, {
                    CloseEvent: {
                        get: () => super.CloseEvent
                    }
                });
                return i(this, void 0, void 0, function*() {
                    if (!this.m_bIsWaitForDelayClose) {
                        for (this.m_bIsWaitForDelayClose = !0, console.log("[\u5f69\u86cb\u62fc\u5716]CloseEvent"); this.m_iCurPuzzleEggCount > 0 || this.FishPuzzleEggFSM.CurrentState() == this.GetAwardState;) console.log("[\u5f69\u86cb\u62fc\u5716]CloseEvent \u7b49\u5f85\u86cb\u98db\u5b8c \u6216 \u958b\u734e\u7d50\u675f"), yield SS.Common.WaitForSeconds(.5);
                        console.log("[\u5f69\u86cb\u62fc\u5716]CloseEvent & WaitForDelayClose"), this.FishPuzzleEggFSM.SetCurrentState(this.WaitCmdState), this.m_IconMgr.Clear(), this.m_PuzzlePageMgr.Clear(), this.m_AwardMgr.Clear(), this.m_AwardPanelMgr && this.m_AwardPanelMgr.Clear(), this.m_aryEventData = [], this.m_EventRankListData && this.m_EventRankListData.Clear(), this.m_aryEventHistoryData = [], this.m_aryTmpAwardData = [], this.m_iEndTime = -1, this.m_iNowTime = -1, this.m_iEggQuestCountDownTime = 0, this.m_iPuzzleQuestCountDownTime = 0, this.m_iRankCountDownTime = 0, this.m_iRecordCountDownTime = 0, this.m_iCurPuzzleEggCount = 0, this.m_bIsWaitForDelayClose = !1, e.CloseEvent.call(this)
                    }
                })
            }
            OnTimesUp() {
                this.CloseEvent()
            }
            CallInitState() {
                this.m_bIsWaitForDelayClose = !1, this.FishPuzzleEggFSM.CurrentState() == this.WaitCmdState && this.FishPuzzleEggFSM.SetCurrentState(this.InitState)
            }
            CheckQuestIsActive() {
                let e = this.m_iEggQuestCountDownTime > 0 || this.m_iPuzzleQuestCountDownTime > 0,
                    t = this.FishPuzzleEggFSM.CurrentState() != this.WaitCmdState;
                return e || t || this.m_bIsWaitForDelayClose
            }
            PopUpClosed() {
                this.FishPuzzleEggFSM.CurrentState() != this.PuzzlePageState && this.FishPuzzleEggFSM.SetCurrentState(this.IdleState), this.m_IconMgr.SetPrompt(this.m_strIconContent)
            }
            ShowMainPanel() {
                this.OnClickBnnerCB()
            }
            OnClickBnnerCB() {
                this.m_iEggQuestCountDownTime > 0 && this.OnClickEventIcon()
            }
            OnShowPopupRank() {
                return this.m_PopupMgr ? this.m_PopupMgr.node : null
            }
            DropPuzzleEgg() {
                this.m_iCurPuzzleEggCount++, console.warn(this.m_strLogTitle + "DropPuzzleEgg, \u76ee\u524d\u5834\u4e0a\u62da\u5716\u86cb\u6578 = " + this.m_iCurPuzzleEggCount)
            }
            ShowPuzzleIconPanel() {
                this.CheckDropEggEnable() && (console.log(this.m_strLogTitle + "ShowPuzzleIconPanel"), this.m_IconMgr.ShowPuzzleIconPanel())
            }
            CheckDropEggEnable() {
                return this.FishPuzzleEggFSM.CurrentState() == this.IdleState
            }
            GetPuzzleItemCB(e, t) {
                if (this.m_iCurPuzzleEggCount--, console.warn(this.m_strLogTitle + "GetPuzzleItem data id = " + e + ", puzzleIndex = " + t + ", \u5269\u9918\u6642\u9593 = " + this.m_iEggQuestCountDownTime + ", \u5834\u4e0a\u62fc\u5716\u86cb\u6578 = " + this.m_iCurPuzzleEggCount), 0 == this.m_aryEventData.length) return void console.error(this.m_strLogTitle + "GetPuzzleItemCB \u6642\u9593\u5df2\u904e");
                let o = C.PUZZLE_TYPE.Copper,
                    n = "";
                switch (e) {
                    case 1:
                        o = C.PUZZLE_TYPE.Copper, n = C.PUZZLE_SOUND.GET_PIECE_COPPER;
                        break;
                    case 2:
                        o = C.PUZZLE_TYPE.Sliver, n = C.PUZZLE_SOUND.GET_PIECE_SILVER;
                        break;
                    case 3:
                        o = C.PUZZLE_TYPE.Gold, n = C.PUZZLE_SOUND.GET_PIECE_GOLD
                }
                let i = this.CheckDropEggEnable(),
                    s = this.m_IconMgr.GetNewPuzzle(o, t, i, n),
                    r = this.m_aryEventData.find(e => e.PuzzleType == o);
                s && null != r && (r.CurGetNewPuzzleProgress[t] = 1, r.CurPuzzleProgressCount += 1, r.TmpPieceAmount += 1, console.warn(this.m_strLogTitle + "\u66f4\u65b0\u6d3b\u52d5\u8cc7\u6599 \u985e\u578b = " + o + ", \u66ab\u5b58\u672a\u8868\u6f14\u788e\u7247\u6578\u91cf = " + r.TmpPieceAmount + ", \u7e3d\u7d2f\u7a4d\u9032\u5ea6 = " + r.CurPuzzleProgressCount)), this.CheckComplete(o) && r.Status != C.FishPEUserQuestDataStatus.AWARD_AVAILABLE && (r.Status = C.FishPEUserQuestDataStatus.AWARD_AVAILABLE, console.warn(this.m_strLogTitle + " \u78ba\u8a8d\u5b8c\u6210, puzzleType = " + o), this.scheduleOnce(() => {
                    this.m_aryTmpAwardData.push(r), this.FishPuzzleEggFSM.CurrentState() != this.GetAwardState && this.FishPuzzleEggFSM.SetCurrentState(this.GetAwardState)
                }, 1.5), this.m_bIsInLobby || (this.EVENT_SEND_COLLECT_CMD && this.EVENT_SEND_COLLECT_CMD(r.QuestName, r.SerialNo, r.QuestLevel), r.Status = C.FishPEUserQuestDataStatus.QUEST_NOT_DONE, r.TmpCompleteTimes++, r.TmpPieceAmount = 0, r.CurPuzzleProgressCount = 0, Object.keys(r.CurPuzzleProgress).forEach(e => {
                    r.CurPuzzleProgress[e] = 0, r.CurGetNewPuzzleProgress[e] = 0
                }), this.m_IconMgr.ResetIconNumber(this.m_aryEventData, o)))
            }
            LoginGetAward() {
                for (let e = 0; e < this.m_aryEventData.length; e++) {
                    let t = this.m_aryEventData[e];
                    this.CheckComplete(t.PuzzleType) && (console.warn(" LoginGetAward \u78ba\u8a8d\u5b8c\u6210, puzzleType = " + t.PuzzleType), this.m_aryTmpAwardData.push(t))
                }
                return this.m_aryTmpAwardData.length > 0 ? (this.FishPuzzleEggFSM.SetCurrentState(this.GetAwardState), !0) : (this.m_bIsInLobby && this.m_LobbyMgr.popUpMgr.checkAndShowPopup(), !1)
            }
            CheckComplete(e) {
                let t = this.m_aryEventData.find(t => t.PuzzleType == e),
                    o = !0;
                return Object.keys(t.CurGetNewPuzzleProgress).forEach(e => {
                    t.CurGetNewPuzzleProgress[e] < t.PuzzleProgressTarget[e] && (o = !1)
                }), console.warn("!!!!!!!!! \u6aa2\u67e5\u5b8c\u6210, type = " + e + ", isComplete = " + o), o
            }
            GetAwardFinish() {
                this.m_bIsInLobby && this.m_LobbyMgr.popUpMgr.checkAndShowPopup()
            }
            onProfileSwitchGame() {
                this.m_AwardPanelMgr && this.m_AwardPanelMgr.OnClose(), this.m_PuzzlePageMgr && this.m_PuzzlePageMgr.OnClosePage()
            }
            InitTimer() {
                let e = this.m_iEndTime - this.m_iNowTime;
                if (e <= 0) console.error(this.m_strLogTitle + "nextExpireTime < 0");
                else {
                    if (console.warn(this.m_strLogTitle + "\u6642\u9593\u8a2d\u5b9a\uff0c\u904e\u671f\u6642\u9593 = " + e + ", \u4efb\u52d9\u6578\u91cf = " + this.m_aryEventData.length), 0 != this.m_aryEventData.length) {
                        for (let t = 0; t < this.m_aryEventData.length; t++) {
                            console.log(this.m_strLogTitle + "\u62fc\u5716\u4efb\u52d9\u904e\u671f\u6642\u9593 = " + this.m_aryEventData[t].ExpireTimeUTC + ", \u6389\u86cb\u4efb\u52d9\u904e\u671f\u6642\u9593 = " + this.m_iExpireTime);
                            let o = this.m_aryEventData[t].ExpireTimeUTC - this.m_iNowTime;
                            o >= 0 && o < e && (this.m_iPuzzleQuestCountDownTime = o)
                        }
                        this.schedule(this.PuzzleTimer, 1)
                    }
                    if (0 != this.m_iExpireTime) {
                        let t = this.m_iExpireTime - this.m_iNowTime;
                        t < e && (e = t)
                    }
                    e < 0 && (e = 0), console.warn(this.m_strLogTitle + "InitTimer \u86cb\u4efb\u52d9\u5269\u9918\u6642\u9593 = " + e + ", \u62fc\u5716\u4efb\u52d9\u5269\u9918\u6642\u9593 = " + this.m_iPuzzleQuestCountDownTime), this.ForceSetTime(e)
                }
            }
            PuzzleTimer() {
                this.m_iPuzzleQuestCountDownTime--, this.m_iPuzzleQuestCountDownTime <= 0 && (this.m_iPuzzleQuestCountDownTime = 0, this.unschedule(this.PuzzleTimer))
            }
            ForceSetTime(e) {
                console.warn("ForceSetTime" + e), this.PauseTimer(), this.m_iEggQuestCountDownTime = e, this.UpdateUI(this.m_iEggQuestCountDownTime), this.StartConutDownTimer()
            }
            UpdateUI(e) {
                let t = "Day";
                e >= 172800 && (t = "Days");
                let o = "ENDS IN: " + (e >= 86400 ? "{day} " + t + " {hr}:{min}:{sec}" : "{hr}:{min}:{sec}");
                this.m_IconMgr && this.m_IconMgr.UpdateTimer(e), this.m_PuzzlePageMgr && this.m_PuzzlePageMgr.UpdateTimer(e, o)
            }
            PauseTimer() {
                console.warn("PauseTimer this.intervalID = " + this.m_TimerIntervalID), clearInterval(this.m_TimerIntervalID)
            }
            Timer(e) {
                --e.m_iEggQuestCountDownTime, e.m_iEggQuestCountDownTime <= 0 && (console.warn("\u62fc\u5716\u6642\u9593\u5230!!!!!!!!!!!!!!!!!!!!, \u62fc\u5716\u4efb\u52d9\u5269\u9918\u6642\u9593 = " + this.m_iPuzzleQuestCountDownTime), e.m_iEggQuestCountDownTime = 0, e.PauseTimer(), this.m_bIsInLobby ? this.reloadLobby() : this.OnTimesUp()), e.UpdateUI(e.m_iEggQuestCountDownTime), SS.Common.GameEnvironment.ProjectSetting.hasOwnProperty("PopUp") ? SS.Common.GameEnvironment.ProjectSetting.PopUp.PuzzleEgg = e.m_iEggQuestCountDownTime : SS.Common.GameEnvironment.ProjectSetting.PopUp = {
                    PuzzleEgg: e.m_iEggQuestCountDownTime
                }
            }
            StartConutDownTimer() {
                -1 != this.m_TimerIntervalID && clearInterval(this.m_TimerIntervalID), this.m_TimerIntervalID = setInterval(() => this.Timer(this), 1e3), console.warn("StartConutDownTimer, intervalID = " + this.m_iEggQuestCountDownTime)
            }
            ShowAwardListPanel() {
                if (b.AudioMgr.Instance.Play(C.PUZZLE_SOUND.BTN_CLICK, !1, 1), !this.m_AwardPanelMgr && this.m_pfbAwardListPanel) {
                    let e = cc.instantiate(this.m_pfbAwardListPanel);
                    this.m_AwardPanelMgr = e.getComponent(_.FishPuzzleEggAwardPanelMgr), this.m_AwardPanelMgr._init(), this.m_AwardPanelMgr.m_funOnClickClose = this.OnCloseAwardPanel.bind(this), e.parent = this.node, e.setPosition(cc.Vec2.ZERO)
                }
                this.FishPuzzleEggFSM.CurrentState() == this.InitState ? f.LobbyClient.Instance.GetUserClient.recordClickLog("FishEventPuzzle", C.PuzzleClickLogID.POPUP_MORE) : this.FishPuzzleEggFSM.CurrentState() == this.PuzzlePageState && f.LobbyClient.Instance.GetUserClient.recordClickLog("FishEventPuzzle", C.PuzzleClickLogID.MAIN_RANK_PAGE), this.m_AwardPanelMgr.Show(this.m_EventRankListData, this.m_aryEventHistoryData, this.m_strPlayerID)
            }
            ShowInfoPage() {
                b.AudioMgr.Instance.Play(C.PUZZLE_SOUND.BTN_CLICK, !1, 1), f.LobbyClient.Instance.GetUserClient.recordClickLog("FishEventPuzzle", C.PuzzleClickLogID.MAIN_INFO_PAGE), this.m_InfoMgr.ShowInfo(this.m_bIsInLobby, SS.Common.GameEnvironment.CurrentGameNow)
            }
            OnClickEventIcon() {
                console.log(this.m_strLogTitle + "OnClickEventIcon"), this.setOnTop(), f.LobbyClient.Instance.GetUserClient.recordClickLog("FishEventPuzzle", C.PuzzleClickLogID.FLOAT_BTN), this.FishPuzzleEggFSM.SetCurrentState(this.PuzzlePageState)
            }
            OnClosePuzzlePage() {
                console.log(this.m_strLogTitle + "OnClosePuzzlePage"), this.ResetSiblingIndex(), this.FishPuzzleEggFSM.SetCurrentState(this.IdleState)
            }
            OnUnlockShoot() {
                console.log(this.m_strLogTitle + "OnUnlockShoot"), this.EVENT_CLOSE_UI && this.EVENT_CLOSE_UI()
            }
            OnCloseAwardPanel() {
                this.m_PopupMgr && this.m_PopupMgr.node.active && this.m_PopupMgr.ShowRankBoard(this.m_EventRankListData.RankList)
            }
            CheckAwardPanelUpdate() {
                if (this.m_AwardPanelMgr && (this.m_iRankCountDownTime--, this.m_iRecordCountDownTime--, this.m_iRankCountDownTime <= 0 && (this.m_iRankCountDownTime = 0), this.m_iRecordCountDownTime <= 0 && (this.m_iRecordCountDownTime = 0), this.m_AwardPanelMgr.CheckPanelOpen)) {
                    if (0 == this.m_iRankCountDownTime && (this.m_iRankCountDownTime = this.TIME_SEND_UPDATE_RANK_CMD, null != this.m_aryEventData)) {
                        let e = this.m_aryEventData[0],
                            t = e.RankListID,
                            o = e.RankLimit;
                        console.log(this.m_strLogTitle + " ----- 15\u79d2\u9001\u6392\u884c\u699c\u8981\u66f4\u65b0\u963f\u311a\u311a\u311a\u311a\u311a\u311a ------"), f.LobbyClient.Instance.GetUserClient.getPuzzleRank(t, o, this.RecvPuzzleRank.bind(this))
                    }
                    if (0 == this.m_iRecordCountDownTime && (this.m_iRecordCountDownTime = this.TIME_SEND_UPDATE_RECORD_CMD, null != this.m_aryEventData)) {
                        let e = this.m_aryEventData[0].RankListID;
                        console.log(this.m_strLogTitle + " ----- 30\u79d2\u9001\u7d00\u9304\u699c\u55ae\u8981\u66f4\u65b0\u963f\u311a\u311a\u311a\u311a\u311a\u311a ------"), this.m_AwardPanelMgr.ShowLoading(!0), f.LobbyClient.Instance.GetUserClient.getPuzzleHistory(e, this.RecvPuzzleHistory.bind(this))
                    }
                }
            }
            RecvPuzzleHistory(e, t) {
                console.warn("RecvPuzzleHistory ", t), e == ArkSDK.HttpResult.OK && t && t.cmd_data ? 0 == t.cmd_data.result && (console.warn(t.cmd_data), this.ParseMisAwardHistory(t.cmd_data) && this.m_AwardPanelMgr.CheckPanelOpen && (this.m_iRankCountDownTime = this.TIME_SEND_UPDATE_RANK_CMD, console.warn("\u66f4\u65b0\u62fc\u5716\u6392\u884c!!!!!!!!!!!!!!!"), this.m_AwardPanelMgr.UpdateHistoryList(this.m_aryEventHistoryData, this.m_strPlayerID))) : this.ShowEventErrorMsg(e, t)
            }
            RecvPuzzleRank(e, t) {
                console.warn("RecvPuzzleRank: ", t), e == ArkSDK.HttpResult.OK && t && t.cmd_data ? 0 == t.cmd_data.result && (console.warn(t.cmd_data), f.LobbyClient.Instance.m_CommonEventInfo_900005_Rank = t.cmd_data, this.ParseMisRankInfo(t.cmd_data) && this.m_AwardPanelMgr.CheckPanelOpen && (this.m_iRankCountDownTime = this.TIME_SEND_UPDATE_RANK_CMD, console.log("\u66f4\u65b0\u62fc\u5716\u6392\u884c!!!!!!!!!!!!!!!"), this.m_AwardPanelMgr.UpdateRankingList(this.m_EventRankListData))) : this.ShowEventErrorMsg(e, t)
            }
            ParseMisRankInfo(e) {
                try {
                    let o = e.data,
                        n = .01,
                        i = 0;
                    if (null != this.m_aryEventData && this.m_aryEventData.length > 0) {
                        let e = this.m_aryEventData[0];
                        n = e.ExchangeRate, i = e.RankLimit
                    }
                    this.m_EventRankListData.ExchangeRate = n, this.m_EventRankListData.People = i, this.m_EventRankListData.RankList = [], e.hasOwnProperty("player_self_data") && 0 != e.player_self_data.length && (this.m_EventRankListData.PlayerData = this.ParsePlayerData(n, -1, e.player_self_data), this.m_EventRankListData.PlayerData.RankingID = this.m_strPlayerID, this.m_EventRankListData.PlayerData.Nickname = SS.Network.UserClient.UserInfo.nickname, this.m_EventRankListData.PlayerData.AvatarID = SS.Network.UserClient.UserInfo.avatar_id, this.m_EventRankListData.PlayerData.AvatarFrameID = SS.Network.UserClient.UserInfo.avatar_frame_id, this.m_EventRankListData.PlayerData.pin_ark_id = SS.Network.LoginModel.LoginInfo.pin_ark_id);
                    for (let e = 0; e < o.length; e++) {
                        let t = this.ParsePlayerData(n, e + 1, o[e]);
                        this.m_EventRankListData.RankList.push(t)
                    }
                    return !0
                } catch (t) {
                    return console.error("ParseMisRankInfo ERROR = " + e), !1
                }
            }
            ParseMisAwardHistory(e) {
                try {
                    this.m_aryEventHistoryData = [];
                    let o = .01;
                    null != this.m_aryEventData && this.m_aryEventData.length > 0 && (o = this.m_aryEventData[0].ExchangeRate);
                    let n = e.ack_data;
                    for (let e = 0; e < n.length; e++) {
                        let t = new C.FishPEHistoryPlayerData,
                            i = n[e];
                        t.ExchangeRate = o, t.RankingID = i.A, t.FinishAmount = i.B, t.WinAmount = i.C;
                        let s = new Date(i.D),
                            r = (s.getMonth() + 1).toString(),
                            a = s.getDate().toString(),
                            l = s.getHours().toString(),
                            c = s.getMinutes().toString();
                        Number(a) < 10 && (a = "0" + a), Number(l) < 10 && (l = "0" + l), Number(c) < 10 && (c = "0" + c), t.Time = r + "/" + a + " " + l + ":" + c, t.pin_ark_id = "", i.hasOwnProperty("F") && (t.pin_ark_id = i.F), t.AvatarID = "", t.AvatarFrameID = "", t.Nickname = "", i.hasOwnProperty("G") && (t.AvatarID = i.G.equip_avatar, t.AvatarFrameID = i.G.equip_avatar_frame, t.Nickname = i.G.nick_name), this.m_aryEventHistoryData.push(t)
                    }
                    return !0
                } catch (t) {
                    return console.error("ParseMisHistory ERROR = " + e), !1
                }
            }
            ParsePlayerData(e, t, o) {
                let n = new C.FishPERankingPlayerData;
                return n.Rank = t, n.ExchangeRate = e, n.RankingID = o.hasOwnProperty("PuzzlePlayerID") ? o.PuzzlePlayerID : "-", n.FinishAmount = o.hasOwnProperty("PuzzleFinishAmount") ? o.PuzzleFinishAmount : "0", n.WinAmount = o.hasOwnProperty("WinAmount") ? o.WinAmount : "0", n.pin_ark_id = o.hasOwnProperty("ArkID") ? o.ArkID : "", n.Nickname = o.hasOwnProperty("nick_name") ? o.nick_name : "", n.AvatarID = o.hasOwnProperty("equip_avatar") ? o.equip_avatar : "", n.AvatarFrameID = o.hasOwnProperty("equip_avatar_frame") ? o.equip_avatar_frame : "", n
            }
            ShowEventErrorMsg(e, t) {
                let o = "";
                o = e == ArkSDK.HttpResult.Abort ? "S176" : e == ArkSDK.HttpResult.Condition ? "S177" : e == ArkSDK.HttpResult.Error ? "S180" : e == ArkSDK.HttpResult.NotReset ? "S178" : e == ArkSDK.HttpResult.Status ? "S179" : e == ArkSDK.HttpResult.Timeout ? "S181" : "S182", this.m_bIsInLobby ? P.PopupMsgMgr.Instance.ShowPopMsg(P.PopupPriority.Critical, o, null, null, null) : this.EVENT_ERROR && this.EVENT_ERROR(o)
            }
        };
        n([E(cc.Prefab)], L.prototype, "m_pfbPopupRank", void 0), n([E(cc.Prefab)], L.prototype, "m_pfbAwardListPanel", void 0), n([E(S.FishPuzzleEggIconMgr)], L.prototype, "m_IconMgr", void 0), n([E(g.FishPuzzleEggPuzzlePageMgr)], L.prototype, "m_PuzzlePageMgr", void 0), n([E(y.FishPuzzleEggAwardMgr)], L.prototype, "m_AwardMgr", void 0), n([E(v.default)], L.prototype, "m_InfoMgr", void 0), n([E({
            type: [cc.AudioClip]
        })], L.prototype, "SoundClip", void 0), L = n([I], L), o.FishPuzzleEggMgr = L, cc._RF.pop()
    }, {
        "../../../Component/AudioMgr": "AudioMgr",
        "../../../Component/StateMachine/SSStateMachine": "SSStateMachine",
        "../../../Helper/EventSystem": "EventSystem",
        "../../../Net/LobbyClient": "LobbyClient",
        "../../../PopUpMgr/Scripts/PriorityCustomEvent": "PriorityCustomEvent",
        "../../../PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../../EventBannerData": "EventBannerData",
        "../../EventModule": "EventModule",
        "./FSM/FishPuzzleEggGetAwardState": "FishPuzzleEggGetAwardState",
        "./FSM/FishPuzzleEggIdleState": "FishPuzzleEggIdleState",
        "./FSM/FishPuzzleEggInitState": "FishPuzzleEggInitState",
        "./FSM/FishPuzzleEggPuzzlePageState": "FishPuzzleEggPuzzlePageState",
        "./FSM/FishPuzzleEggWaitCmdState": "FishPuzzleEggWaitCmdState",
        "./FishPuzzleEggAwardMgr": "FishPuzzleEggAwardMgr",
        "./FishPuzzleEggAwardPanelMgr": "FishPuzzleEggAwardPanelMgr",
        "./FishPuzzleEggData": "FishPuzzleEggData",
        "./FishPuzzleEggIconMgr": "FishPuzzleEggIconMgr",
        "./FishPuzzleEggInfoMgr": "FishPuzzleEggInfoMgr",
        "./FishPuzzleEggPopupMgr": "FishPuzzleEggPopupMgr",
        "./FishPuzzleEggPuzzlePageMgr": "FishPuzzleEggPuzzlePageMgr"
    }],
    FishPuzzleEggPopupMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "d2cb4Ud1PBOyJIlINcqIKrm", "FishPuzzleEggPopupMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishPuzzleEggPopupMgr = o.FishPuzzleEggPlayerRank = void 0;
        const s = e("../../../Component/BundleCtrl"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class {
            constructor() {
                this.m_labPlayerNo = null, this.m_spAvatarFace = null, this.m_spAvatarFaceFrame = null, this.m_labNickName = null, this.m_labPlayerAward = null, this.m_strArkID = ""
            }
            Show(e, t, o, n, r, a) {
                return i(this, void 0, void 0, function*() {
                    this.m_labPlayerNo.string = "No." + e, this.m_labPlayerAward.string = t.toLocaleString("en-US", {
                        maximumFractionDigits: 2
                    }), this.m_strArkID = a, this.m_labNickName.string = r, o && "" != o || (o = "FAC000");
                    let i = yield s.default.Instance.GetSpirte("Avatar", o);
                    if (this.m_spAvatarFace.spriteFrame = i || null, n && "" != n) {
                        let e = yield s.default.Instance.GetSpirte("Avatar", n);
                        e && (this.m_spAvatarFaceFrame.spriteFrame = e)
                    } else this.m_spAvatarFaceFrame.spriteFrame = null
                })
            }
            Clear() {
                this.m_labPlayerNo.string = "-", this.m_labPlayerAward.string = "-", this.m_labNickName.string = "-", this.m_strArkID = ""
            }
            GetArkID() {
                return this.m_strArkID
            }
            SetByPlayerData(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && (this.SetFaceByID(e.FaceID), this.SetFrameByID(e.FaceFrameID), this.SetNickname(e.NickName))
            }
            SetNickname(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_labNickName && (this.m_labNickName.string = e)
            }
            SetFaceSprite(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_spAvatarFace && (this.m_spAvatarFace.spriteFrame = e)
            }
            SetFrameSprite(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_spAvatarFaceFrame && (this.m_spAvatarFaceFrame.spriteFrame = e)
            }
            SetFaceByID(e) {
                return i(this, void 0, void 0, function*() {
                    if (this.m_strArkID != SS.Network.LoginModel.LoginInfo.pin_ark_id) return;
                    e && "" != e || (e = "FAC000");
                    let t = yield s.default.Instance.GetSpirte("Avatar", e);
                    this.m_spAvatarFace.spriteFrame = t || null
                })
            }
            SetFrameByID(e) {
                return i(this, void 0, void 0, function*() {
                    if (this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id)
                        if (e && "" != e) {
                            let t = yield s.default.Instance.GetSpirte("Avatar", e);
                            t && (this.m_spAvatarFaceFrame.spriteFrame = t)
                        } else this.m_spAvatarFaceFrame.spriteFrame = null
                })
            }
        };
        n([a(cc.Label)], l.prototype, "m_labPlayerNo", void 0), n([a(cc.Sprite)], l.prototype, "m_spAvatarFace", void 0), n([a(cc.Sprite)], l.prototype, "m_spAvatarFaceFrame", void 0), n([a(cc.Label)], l.prototype, "m_labNickName", void 0), n([a(cc.Label)], l.prototype, "m_labPlayerAward", void 0), l = n([r("FishPuzzleEggPlayerRank")], l), o.FishPuzzleEggPlayerRank = l;
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeRoot = null, this.m_aryFishPuzzleEggPlayerRank = []
            }
            _init() {
                this.m_nodeRoot.active = !1
            }
            _onDestroy() {}
            ShowRankBoard(e) {
                this.m_nodeRoot.active = !0;
                for (let t = 0; t < this.m_aryFishPuzzleEggPlayerRank.length; t++) this.m_aryFishPuzzleEggPlayerRank[t].Clear();
                for (let t = 0; t < e.length; t++) this.m_aryFishPuzzleEggPlayerRank[t] && this.m_aryFishPuzzleEggPlayerRank[t].Show(e[t].RankingID, e[t].WinAmount, e[t].AvatarID, e[t].AvatarFrameID, e[t].Nickname, e[t].pin_ark_id)
            }
            OnClickShowAwardList() {
                this.m_funClickShowAwardPanel && this.m_funClickShowAwardPanel()
            }
        };
        n([a(cc.Node)], c.prototype, "m_nodeRoot", void 0), n([a([l])], c.prototype, "m_aryFishPuzzleEggPlayerRank", void 0), c = n([r], c), o.FishPuzzleEggPopupMgr = c, cc._RF.pop()
    }, {
        "../../../Component/BundleCtrl": "BundleCtrl"
    }],
    FishPuzzleEggPuzzlePageMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7e830vTPPlMxqVdsORfqpW6", "FishPuzzleEggPuzzlePageMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishPuzzleEggPuzzlePageMgr = o.FishPuzzlePageMember = void 0;
        const i = e("./FishPuzzleEggData"),
            s = e("./FishPuzzleEggPuzzlePage"),
            r = e("./FishPuzzleEggData"),
            a = e("../../../Component/DateTimeCountDown"),
            l = e("./FishPuzzleEggTipsMgr"),
            c = e("../../../Component/AudioMgr"),
            h = e("date-fns/format"),
            {
                ccclass: m,
                property: u
            } = cc._decorator;
        let d = class {
            constructor() {
                this.strPuzzleType = "", this.nodeRoot = null, this.ctrl = null, this.data = null
            }
        };
        d = n([m], d), o.FishPuzzlePageMember = d;
        let p = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_funClosePage = null, this.m_funUnlockShoot = null, this.m_funOpenAwardListPage = null, this.m_funOpenInfoPage = null, this.m_funDownloadPageFinish = null, this.m_nodeRoot = null, this.m_nodeTouchMask = null, this.m_nodeTitleAward = null, this.m_pvPuzzlePage = null, this.m_PuzzlePagePrefab = null, this.m_iPageCount = 3, this.m_iPageWeidth = 1280, this.m_nodeRadPoin = null, this.m_labPieceCount = null, this.m_labAward = null, this.m_aryAwardTitleFrame = [], this.m_spAwardTitle = null, this.m_aryPieceSpriteFrame = [], this.m_spPuzzleIcon = null, this.m_animPuzzleCollectEffect = null, this.m_aryPuzzleCollectParticle = [], this.m_aryPuzzlePfb = [], this.m_nodeHintL = null, this.m_nodeHintR = null, this.m_labEventTime = null, this.m_cdLabTimer = null, this.m_TipsMgr = null, this.m_aryPuzzlePageMember = [], this.m_questDataAry = [], this.m_bHasShowTips = !1, this.m_iCenterPageIndex = 2, this.m_iMaxPageNum = 5, this.m_iTmpLoopNum = 0, this.m_iShowPuzzleIndex = 1, this.m_iDownloadFinishNum = 0, this.m_iCenterType = 0, this.m_strPlayerID = ";", this.m_bIsDownloadFin = !1, this.OpenBannerWebviewEvent = null, this.tmpJSON = {}, this.m_iUIScrollTweenTime = .2
            }
            get IsDownloadFin() {
                return this.m_bIsDownloadFin
            }
            _onLoad() {
                this.m_nodeTouchMask.active = !1, this.m_nodeRoot.opacity = 0, this.m_nodeRoot.setPosition(new cc.Vec2(9999, 9999))
            }
            _start() {
                let e = null;
                for (let t = 0; t < this.m_iMaxPageNum; t++) e = cc.instantiate(this.m_PuzzlePagePrefab), this.m_iPageWeidth = e.width, this.m_pvPuzzlePage.addPage(e), e.setPosition(cc.Vec3.ZERO);
                this.CreatePuzzleObj(), this.m_pvPuzzlePage.node.on("scroll-ended", this.ScrollEndedCallBack.bind(this)), this.m_pvPuzzlePage.node.on("scroll-began", this.ScrollBeganCallBack.bind(this)), this.m_pvPuzzlePage.node.on("scrolling", this.ScrollTurningCallBack.bind(this))
            }
            _onDestroy() {
                this.m_pvPuzzlePage && (this.m_pvPuzzlePage.node.off("scroll-ended", this.ScrollEndedCallBack.bind(this)), this.m_pvPuzzlePage.node.off("scroll-began", this.ScrollBeganCallBack.bind(this)), this.m_pvPuzzlePage.node.off("scrolling", this.ScrollTurningCallBack.bind(this)))
            }
            CreatePuzzleObj() {
                for (let e = 0; e < this.m_iPageCount; e++) {
                    let t = cc.instantiate(this.m_aryPuzzlePfb[e].data);
                    t.name = "pageNode";
                    let o = t.getComponent(s.default),
                        n = new d;
                    n.strPuzzleType = o.PuzzleType, n.nodeRoot = t, n.ctrl = o, this.m_aryPuzzlePageMember.push(n)
                }
                this.m_pvPuzzlePage.scrollToPage(this.m_iCenterPageIndex, 0), this.m_pvPuzzlePage.scrollToOffset(new cc.Vec2(2 * this.m_iPageWeidth, 0)), this.SetPageContent(), this.ScrollEndedCallBack(), this.m_iTmpLoopNum = 1, this.InitPuzzle(), this.m_funDownloadPageFinish && this.m_funDownloadPageFinish(this.m_aryPuzzlePageMember)
            }
            DownloadPage(e) {
                let t = "Mission/900005/Puzzle/puzzleEggType" + e,
                    o = this;
                cc.resources.load(t, cc.Prefab, (t, n) => {
                    if (t) return o.m_iDownloadFinishNum++, console.error(t);
                    if (o.m_iDownloadFinishNum++, console.log("\u4e0b\u8f09\u5b8c\u6210~ " + n.name + ", self.imgDownloadFinishNum = " + o.m_iDownloadFinishNum), this.tmpJSON[e] = n, this.m_iDownloadFinishNum >= this.m_iPageCount) {
                        for (let e = 1; e <= this.m_iPageCount; e++)
                            if (this.tmpJSON[e]) {
                                let t = cc.instantiate(this.tmpJSON[e]);
                                t.name = "pageNode";
                                let o = t.getComponent(s.default),
                                    n = new d;
                                n.strPuzzleType = o.PuzzleType, n.nodeRoot = t, n.ctrl = o, this.m_aryPuzzlePageMember.push(n)
                            }
                        this.tmpJSON[e] = null, this.m_pvPuzzlePage.scrollToPage(this.m_iCenterPageIndex, 0), this.m_pvPuzzlePage.scrollToOffset(new cc.Vec2(2 * this.m_iPageWeidth, 0)), this.SetPageContent(), this.ScrollEndedCallBack(), this.m_iTmpLoopNum = 1, this.InitPuzzle(), this.m_funDownloadPageFinish && this.m_funDownloadPageFinish(this.m_aryPuzzlePageMember), this.m_bIsDownloadFin = !0
                    }
                })
            }
            ScrollBeganCallBack() {
                255 == this.node.opacity && 0 == this.m_TipsMgr.node.active && c.AudioMgr.Instance.Play(i.PUZZLE_SOUND.PUZZLE_SCROLL_START, !1, 1), this.unscheduleAllCallbacks(), cc.Tween.stopAllByTarget(this.m_nodeTitleAward), cc.tween(this.m_nodeTitleAward).to(this.m_iUIScrollTweenTime, {
                    position: cc.v3(0, 100),
                    opacity: 0
                }).start();
                for (let e = 0; e < this.m_aryPuzzlePageMember.length; e++) this.SetPuzzleScaleAndColor(this.m_aryPuzzlePageMember[e].nodeRoot, !1, !0);
                this.m_nodeHintR.active = !1, this.m_nodeHintL.active = !1
            }
            ScrollTurningCallBack() {
                let e = this.m_pvPuzzlePage.content.getPosition().x;
                if (this.m_pvPuzzlePage.getCurrentPageIndex(), e > -1200) {
                    let e = this.m_pvPuzzlePage.getPages()[3].getChildByName("pageNode");
                    e && e.setParent(this.m_pvPuzzlePage.getPages()[0])
                } else if (e < -2e3) {
                    let e = this.m_pvPuzzlePage.getPages()[1].getChildByName("pageNode");
                    e && e.setParent(this.m_pvPuzzlePage.getPages()[4])
                } else {
                    let e = this.m_pvPuzzlePage.getPages()[0].getChildByName("pageNode");
                    e && e.setParent(this.m_pvPuzzlePage.getPages()[3]), (e = this.m_pvPuzzlePage.getPages()[4].getChildByName("pageNode")) && e.setParent(this.m_pvPuzzlePage.getPages()[1])
                }
            }
            ScrollEndedCallBack() {
                cc.Tween.stopAllByTarget(this.m_nodeTitleAward), cc.tween(this.m_nodeTitleAward).to(this.m_iUIScrollTweenTime, {
                    position: cc.v3(0, 0),
                    opacity: 255
                }).start();
                let e = this.m_pvPuzzlePage.getCurrentPageIndex();
                if (e != this.m_iCenterPageIndex) {
                    let t = !1;
                    if (e >= 2)
                        for (; !t;) this.m_iTmpLoopNum += 1, this.m_iTmpLoopNum >= this.m_iPageCount && (this.m_iTmpLoopNum = 0), t = !0;
                    else
                        for (; !t;) this.m_iTmpLoopNum -= 1, this.m_iTmpLoopNum < 0 && (this.m_iTmpLoopNum = this.m_iPageCount - 1), t = !0;
                    this.m_iShowPuzzleIndex = this.m_iTmpLoopNum, this.SetPageContent(), this.m_pvPuzzlePage.scrollToOffset(new cc.Vec2(2 * this.m_iPageWeidth, 0)), this.m_pvPuzzlePage.scrollToPage(this.m_iCenterPageIndex, 0)
                } else this.SetPuzzleScaleAndColor(this.m_aryPuzzlePageMember[this.m_iCenterType].nodeRoot, !0);
                this.CheckHint(), this.ShowPageInfo()
            }
            SetPageContent() {
                if (!this.m_aryPuzzlePageMember) return;
                let e = 0;
                for (; e < this.m_iMaxPageNum;)
                    if (this.m_iShowPuzzleIndex < this.m_iPageCount) {
                        let t = this.m_pvPuzzlePage.getPages()[e];
                        if (null != t) {
                            if (this.m_aryPuzzlePageMember[this.m_iShowPuzzleIndex])
                                if (e >= 1 && e <= 3 && this.m_aryPuzzlePageMember[this.m_iShowPuzzleIndex].nodeRoot.setParent(t), 2 == e) {
                                    this.m_iCenterType = this.m_iShowPuzzleIndex, this.SetPuzzleScaleAndColor(this.m_aryPuzzlePageMember[this.m_iShowPuzzleIndex].nodeRoot, !0);
                                    let e = this.m_aryPuzzlePageMember[this.m_iShowPuzzleIndex].data;
                                    e && (this.SetTitle(e), e.TmpPieceAmount > 0 ? this.ShowCollectEffect(e) : this.m_nodeTouchMask.activeInHierarchy && (this.m_nodeTouchMask.active = !1))
                                } else this.SetPuzzleScaleAndColor(this.m_aryPuzzlePageMember[this.m_iShowPuzzleIndex].nodeRoot);
                            e++, this.m_iShowPuzzleIndex++
                        }
                        this.m_iShowPuzzleIndex >= this.m_iPageCount && (this.m_iShowPuzzleIndex = 0)
                    }
            }
            SetPuzzleScaleAndColor(e, t = !1, o = !1) {
                let n = t ? cc.Color.WHITE : cc.Color.GRAY,
                    s = t ? 1 : .7;
                cc.Tween.stopAllByTarget(e), cc.tween(e).to(this.m_iUIScrollTweenTime, {
                    scale: s
                }).start(), t && !o && 255 == this.node.opacity && 0 == this.m_TipsMgr.node.active && this.scheduleOnce(() => {
                    c.AudioMgr.Instance.Play(i.PUZZLE_SOUND.PUZZLE_SCROLL_STOP, !1, 1)
                }, this.m_iUIScrollTweenTime), e.getComponentsInChildren(cc.Sprite).forEach(e => {
                    cc.tween(e.node).to(this.m_iUIScrollTweenTime, {
                        color: n
                    }).start()
                })
            }
            ShowPageInfo() {}
            Init(e, t, o) {
                this.m_strPlayerID = e, this.m_questDataAry = t, this.InitPuzzle();
                let n = this.tsToDateTime(t[0].StartTimeUTC),
                    i = this.tsToDateTime(o);
                this.m_labEventTime.string = "EVENT TIME: " + n + " - " + i, this.m_nodeHintL.active = !1, this.m_nodeHintR.active = !1
            }
            tsToDateTime(e) {
                let t = 1e3 * e,
                    o = h(new Date(t), "MM/DD/YYYY");
                return console.warn("\u62fc\u5716\u6642\u9593 date = " + o.toString() + ", ts = " + e), console.warn("\u62fc\u5716\u6642\u9593 TEST date = " + new Date(h(t).toString())), o
            }
            InitPuzzle() {
                if (null == this.m_questDataAry || this.m_questDataAry == [] || this.m_aryPuzzlePageMember == []) return;
                let e = null;
                for (let t = 0; t < this.m_questDataAry.length; t++) {
                    let o = this.FindPuzzleMember(this.m_questDataAry[t].PuzzleType);
                    o && (o.data = this.m_questDataAry[t]), (e = this.FindPuzzleCtrl(this.m_questDataAry[t].PuzzleType)) && e.InitShowCurPieces(this.m_questDataAry[t].CurPuzzleProgress)
                }
            }
            UpdateTimer(e, t) {
                this.m_cdLabTimer && this.m_cdLabTimer.UpdateUIWithFormate(e, t)
            }
            FindPuzzleMember(e) {
                for (let t = 0; t < this.m_aryPuzzlePageMember.length; t++)
                    if (this.m_aryPuzzlePageMember[t].strPuzzleType == e) return this.m_aryPuzzlePageMember[t];
                return null
            }
            FindPuzzleCtrl(e) {
                for (let t = 0; t < this.m_aryPuzzlePageMember.length; t++)
                    if (this.m_aryPuzzlePageMember[t].strPuzzleType == e) return this.m_aryPuzzlePageMember[t].ctrl;
                return null
            }
            Show(e) {
                if (e && (this.m_questDataAry = e, this.m_nodeRoot.opacity = 255, this.m_nodeRoot.setPosition(cc.Vec2.ZERO), this.CheckShowTips(e) ? (this.m_pvPuzzlePage.scrollToPage(this.m_iCenterPageIndex - 1, .01), this.m_TipsMgr.ShowTipePage(this.m_strPlayerID)) : c.AudioMgr.Instance.Play(i.PUZZLE_SOUND.PUZZLE_SCROLL_STOP, !1, 1), e)) {
                    this.InitPuzzle();
                    let t = this.FindMaxUnCollectPiecePuzzle(e);
                    if (t) {
                        let e = r.PUZZLE_ITEM[t.PuzzleType].index;
                        if (e != this.m_iCenterType) {
                            this.m_nodeTouchMask.active = !0, this.ScrollBeganCallBack();
                            let t = e - this.m_iCenterType;
                            t <= -2 ? t = 1 : t >= 2 && (t = -1), this.m_pvPuzzlePage.scrollToPage(this.m_iCenterPageIndex + t, .5), this.ShowPageInfo()
                        } else this.SetTitle(t), t.TmpPieceAmount > 0 && this.ShowCollectEffect(t)
                    } else {
                        let e = this.FindPuzzleDataByIndexType(this.m_iCenterType);
                        this.SetTitle(e)
                    }
                }
            }
            FindMaxUnCollectPiecePuzzle(e) {
                if (!e) return;
                let t = 0,
                    o = null;
                for (let n = 0; n < e.length; n++) e[n].TmpPieceAmount > t && (t = e[n].TmpPieceAmount, o = e[n]);
                if (null != o && t > 0)
                    for (let n = 0; n < e.length; n++) e[n].PuzzleType != o.PuzzleType && e[n].TmpPieceAmount == o.TmpPieceAmount && (e[n].Award.AwardType == i.PUZZLE_ITEM_DEFINE.Entry ? e[n].Award.AwardEntries > o.Award.AwardEntries && (o = e[n]) : e[n].Award.AwardType == i.PUZZLE_ITEM_DEFINE.Winning && e[n].Award.AwardWinnings > o.Award.AwardWinnings && (o = e[n]));
                return o && console.warn("\u627e\u6700\u5927\u672a\u6536\u96c6\u6578 Type = " + o.PuzzleType + ", maxTmpCount \u672a\u6536\u96c6\u6578 = " + t), o
            }
            MapPuzzleTypeByCenterType(e) {
                let t = "";
                switch (e) {
                    case 0:
                        t = "Copper";
                        break;
                    case 1:
                        t = "Sliver";
                        break;
                    case 2:
                        t = "Gold"
                }
                return t
            }
            FindPuzzleDataByIndexType(e) {
                let t = this.MapPuzzleTypeByCenterType(e);
                return this.m_questDataAry.find(e => e.PuzzleType == t)
            }
            CheckShowTips(e) {
                if (this.m_bHasShowTips) return !1;
                let t = 0,
                    o = 0;
                for (let n = 0; n < e.length; n++) t += e[n].CurPuzzleProgressCount, o += e[n].TmpCompleteTimes;
                return 0 == t && 0 == o && (this.m_bHasShowTips = !0, !0)
            }
            ShowCollectEffect(e) {
                e.TmpPieceAmount <= 0 || (this.m_nodeTouchMask.active = !0, this.m_aryPuzzleCollectParticle.forEach(e => {
                    e.resetSystem()
                }), this.m_nodeRadPoin.active = !1, this.m_animPuzzleCollectEffect.node.opacity = 255, this.m_animPuzzleCollectEffect.play(), c.AudioMgr.Instance.Play(i.PUZZLE_SOUND.PUZZLE_PIECE_COLLECT_START, !1, 1), this.scheduleOnce(() => {
                    this.m_labPieceCount.node.active = !1
                }, 1), this.scheduleOnce(() => {
                    e.TmpPieceAmount = 0;
                    let t = this.FindPuzzleCtrl(e.PuzzleType);
                    t && t.CollectPieces(e.CurPuzzleProgress, e.CurGetNewPuzzleProgress), c.AudioMgr.Instance.Play(i.PUZZLE_SOUND.PUZZLE_PIECE_COLLECT_DONE, !1, 1)
                }, 1.3), this.scheduleOnce(() => {
                    this.m_nodeTouchMask.active = !1, this.m_animPuzzleCollectEffect.node.opacity = 0, this.CheckHint()
                }, 2.25))
            }
            CheckHint() {
                let e = this.m_iCenterType + 1;
                e > this.m_aryPuzzlePageMember.length - 1 && (e = 0);
                let t = this.FindPuzzleDataByIndexType(e);
                t && t.TmpPieceAmount > 0 && (this.m_nodeHintR.active = !0);
                let o = this.m_iCenterType - 1;
                o < 0 && (o = this.m_aryPuzzlePageMember.length - 1);
                let n = this.FindPuzzleDataByIndexType(o);
                n && n.TmpPieceAmount > 0 && (this.m_nodeHintL.active = !0)
            }
            SetTitle(e) {
                let t = r.PUZZLE_ITEM[e.PuzzleType].index;
                this.m_spAwardTitle.spriteFrame = this.m_aryAwardTitleFrame[t], this.m_spPuzzleIcon.spriteFrame = this.m_aryPieceSpriteFrame[t], 4 == e.Award.AwardType ? this.m_labAward.string = "$" + (e.Award.AwardEntries * e.ExchangeRate).toLocaleString("en-US", {
                    minimumFractionDigits: 2
                }) : 5 == e.Award.AwardType && (this.m_labAward.string = "$" + (e.Award.AwardWinnings * e.ExchangeRate).toLocaleString("en-US", {
                    minimumFractionDigits: 2
                })), e.TmpPieceAmount > 0 ? (this.m_nodeRadPoin.active = !0, this.m_labPieceCount.node.active = !0, this.m_labPieceCount.string = e.TmpPieceAmount.toString()) : (this.m_nodeRadPoin.active = !1, this.m_labPieceCount.node.active = !1)
            }
            HidePage() {
                this.m_nodeRoot.opacity = 0, this.m_nodeRoot.setPosition(new cc.Vec2(9999, 9999)), this.m_funUnlockShoot && this.m_funUnlockShoot()
            }
            Clear() {
                if (0 != this.m_iCenterType) {
                    this.ScrollBeganCallBack();
                    let e = 0 - this.m_iCenterType;
                    e <= -2 ? e = 1 : e >= 2 && (e = -1), this.m_pvPuzzlePage.scrollToPage(this.m_iCenterPageIndex + e, .1), this.ShowPageInfo()
                }
                this.HidePage()
            }
            OnClosePage() {
                this.HidePage(), this.m_funClosePage && this.m_funClosePage()
            }
            CallNextPage() {
                this.ScrollBeganCallBack(), this.m_pvPuzzlePage.scrollToPage(this.m_iCenterPageIndex + 1, .3), this.ShowPageInfo()
            }
            CallPrePage() {
                this.ScrollBeganCallBack(), this.m_pvPuzzlePage.scrollToPage(this.m_iCenterPageIndex - 1, .3), this.ShowPageInfo()
            }
            ShowInfoPage() {
                this.m_funOpenInfoPage && this.m_funOpenInfoPage()
            }
            ShowAwardListPage() {
                this.m_funOpenAwardListPage && this.m_funOpenAwardListPage()
            }
        };
        n([u(cc.Node)], p.prototype, "m_nodeRoot", void 0), n([u(cc.Node)], p.prototype, "m_nodeTouchMask", void 0), n([u(cc.Node)], p.prototype, "m_nodeTitleAward", void 0), n([u(cc.PageView)], p.prototype, "m_pvPuzzlePage", void 0), n([u(cc.Prefab)], p.prototype, "m_PuzzlePagePrefab", void 0), n([u(cc.Node)], p.prototype, "m_nodeRadPoin", void 0), n([u(cc.Label)], p.prototype, "m_labPieceCount", void 0), n([u(cc.Label)], p.prototype, "m_labAward", void 0), n([u([cc.SpriteFrame])], p.prototype, "m_aryAwardTitleFrame", void 0), n([u(cc.Sprite)], p.prototype, "m_spAwardTitle", void 0), n([u([cc.SpriteFrame])], p.prototype, "m_aryPieceSpriteFrame", void 0), n([u(cc.Sprite)], p.prototype, "m_spPuzzleIcon", void 0), n([u(cc.Animation)], p.prototype, "m_animPuzzleCollectEffect", void 0), n([u([cc.ParticleSystem])], p.prototype, "m_aryPuzzleCollectParticle", void 0), n([u([cc.Prefab])], p.prototype, "m_aryPuzzlePfb", void 0), n([u(cc.Node)], p.prototype, "m_nodeHintL", void 0), n([u(cc.Node)], p.prototype, "m_nodeHintR", void 0), n([u(cc.Label)], p.prototype, "m_labEventTime", void 0), n([u(a.DateTimeCountDown)], p.prototype, "m_cdLabTimer", void 0), n([u(l.default)], p.prototype, "m_TipsMgr", void 0), p = n([m], p), o.FishPuzzleEggPuzzlePageMgr = p, cc._RF.pop()
    }, {
        "../../../Component/AudioMgr": "AudioMgr",
        "../../../Component/DateTimeCountDown": "DateTimeCountDown",
        "./FishPuzzleEggData": "FishPuzzleEggData",
        "./FishPuzzleEggPuzzlePage": "FishPuzzleEggPuzzlePage",
        "./FishPuzzleEggTipsMgr": "FishPuzzleEggTipsMgr",
        "date-fns/format": 5
    }],
    FishPuzzleEggPuzzlePageState: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "b2575XEE9NGRYWFXZ4/i5nv", "FishPuzzleEggPuzzlePageState"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishPuzzleEggPuzzlePageState = void 0, o.FishPuzzleEggPuzzlePageState = class {
            PreUpdate() {
                this.target.EVENT_OPEN_UI && this.target.EVENT_OPEN_UI(), this.target.m_IconMgr.ShowIcon(!1), this.target.m_PuzzlePageMgr.Show(this.target.m_aryEventData)
            }
            Update() {}
            PostUpdate() {
                this.target.m_IconMgr.CheckRedPoint(this.target.m_aryEventData), this.target.m_PuzzlePageMgr.HidePage()
            }
        }, cc._RF.pop()
    }, {}],
    FishPuzzleEggPuzzlePage: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "6b44bjdrXJKyJki9nhp2ugX", "FishPuzzleEggPuzzlePage");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_iPuzzleType = "", this.m_aryPiecesAnim = []
            }
            get PuzzleType() {
                return this.m_iPuzzleType
            }
            onLoad() {}
            ShowAllPieces() {
                for (let e = 0; e < this.m_aryPiecesAnim.length; e++) this.m_aryPiecesAnim[e].node.active = !0, this.m_aryPiecesAnim[e].play("PuzzlePieceShowIdle")
            }
            InitShowCurPieces(e) {
                Object.keys(e).forEach(t => {
                    let o = Number(t) - 1;
                    e[t] >= 1 ? (this.m_aryPiecesAnim[o].node.active = !0, this.m_aryPiecesAnim[o].play("PuzzlePieceShowIdle")) : this.m_aryPiecesAnim[o].node.active = !1
                })
            }
            GetPieceCount() {
                return this.m_aryPiecesAnim.length
            }
            CollectPieces(e, t) {
                if (null != e && null != t)
                    for (let o = 0; o < this.m_aryPiecesAnim.length; o++) {
                        let n = o + 1;
                        0 == t[n] && (this.m_aryPiecesAnim[o].node.active = !1), t[n] >= 1 && 0 == e[n] && (this.m_aryPiecesAnim[o].node.active = !0, this.m_aryPiecesAnim[o].node.getComponentInChildren(cc.Sprite).node.active = !1, this.m_aryPiecesAnim[o].play("PuzzlePieceCollect"), e[n] = Object.assign(t[n]))
                    }
            }
            Clear() {
                for (let e = 0; e < this.m_aryPiecesAnim.length; e++) this.m_aryPiecesAnim[e].node.active = !1
            }
        };
        n([s], r.prototype, "m_iPuzzleType", void 0), n([s([cc.Animation])], r.prototype, "m_aryPiecesAnim", void 0), r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    FishPuzzleEggTipsMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "b7355+wGmFAnrCoCrLJmHDD", "FishPuzzleEggTipsMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.PuzzleTipsStep = void 0;
        const i = e("../../../Component/AudioMgr"),
            s = e("./FishPuzzleEggData"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        var l;
        (function(e) {
            e[e.NONE = -1] = "NONE", e[e.ShowP1Tips = 0] = "ShowP1Tips", e[e.ShowP1ID = 1] = "ShowP1ID", e[e.ShowP2Tips = 2] = "ShowP2Tips", e[e.Close = 3] = "Close"
        })(l = o.PuzzleTipsStep || (o.PuzzleTipsStep = {}));
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeP1 = null, this.m_nodeP1Txt = null, this.m_nodeP1ID = null, this.m_labID = null, this.m_nodeP2 = null, this.m_Step = l.NONE
            }
            ShowTipePage(e) {
                this.m_labID.string = "No. " + e, this.CloseTipPage(), this.CallNextStep()
            }
            ShowPage1Tips() {
                this.node.active = !0, this.m_nodeP1.active = !0, this.m_nodeP1Txt.active = !0, this.m_nodeP1ID.active = !1, this.m_nodeP2.active = !1
            }
            ShowPage1ID() {
                this.m_nodeP1.active = !0, this.m_nodeP1Txt.active = !1, this.m_nodeP1ID.active = !0, this.m_nodeP2.active = !1
            }
            ShowPage2() {
                this.m_nodeP1.active = !1, this.m_nodeP2.active = !0
            }
            CloseTipPage() {
                this.m_Step = l.NONE, this.node.active = !1, this.m_nodeP1.active = !1, this.m_nodeP2.active = !1
            }
            CallNextStep() {
                switch (this.m_Step++, this.m_Step == Number(l.ShowP1ID) && (this.m_Step = l.ShowP2Tips), this.m_Step) {
                    case l.ShowP1Tips:
                        i.AudioMgr.Instance.Play(s.PUZZLE_SOUND.TIPS_SHOW, !1, 1), this.ShowPage1Tips();
                        break;
                    case l.ShowP1ID:
                        break;
                    case l.ShowP2Tips:
                        i.AudioMgr.Instance.Play(s.PUZZLE_SOUND.TIPS_SHOW, !1, 1), this.ShowPage2();
                        break;
                    case l.Close:
                        this.CloseTipPage()
                }
            }
        };
        n([a(cc.Node)], c.prototype, "m_nodeP1", void 0), n([a(cc.Node)], c.prototype, "m_nodeP1Txt", void 0), n([a(cc.Node)], c.prototype, "m_nodeP1ID", void 0), n([a(cc.Label)], c.prototype, "m_labID", void 0), n([a(cc.Node)], c.prototype, "m_nodeP2", void 0), c = n([r], c), o.default = c, cc._RF.pop()
    }, {
        "../../../Component/AudioMgr": "AudioMgr",
        "./FishPuzzleEggData": "FishPuzzleEggData"
    }],
    FishPuzzleEggWaitCmdState: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "322fab2eWlLcLbgl1ch4FR6", "FishPuzzleEggWaitCmdState"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishPuzzleEggWaitCmdState = void 0, o.FishPuzzleEggWaitCmdState = class {
            PreUpdate() {}
            Update() {}
            PostUpdate() {}
        }, cc._RF.pop()
    }, {}],
    FishUIMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "fc0f03cLdJMgKQ3vmbKNR3m", "FishUIMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FishEventType = o.WeaponType = void 0;
        const i = e("../../GameCommon/DownBar/GameBar"),
            s = e("./SSMouseMark"),
            r = e("./BtnState"),
            a = e("./SSCanvasHandler"),
            l = e("../../LobbyCommon/Net/LobbyClient"),
            c = e("./WeaponChangeHint"),
            h = e("./WeaponActiveHint"),
            m = e("../../LobbyCommon/Component/NumberCountUp"),
            u = e("../../LobbyCommon/Helper/EventSystem"),
            d = e("../../LobbyCommon/Component/AvatarIcon"),
            p = e("../../GameCommon/Profile/RewardNoticeMgr"),
            g = e("../../GameCommon/Profile/AvatarNoticeMgr"),
            _ = e("../../LobbyCommon/Net/ClickLog"),
            S = e("../../LobbyCommon/Net/ClickLogEnum");
        var y, C;
        (function(e) {
            e[e.None = -1] = "None", e[e.Normal = 50001] = "Normal", e[e.Lock = 51001] = "Lock", e[e.Tiger = 56001] = "Tiger", e[e.Dragon = 57001] = "Dragon"
        })(y = o.WeaponType || (o.WeaponType = {})),
        function(e) {
            e[e.ItemMission = 0] = "ItemMission", e[e.OceanHeart = 1] = "OceanHeart", e[e.PuzzleEgg = 2] = "PuzzleEgg"
        }(C = o.FishEventType || (o.FishEventType = {}));
        const {
            ccclass: f,
            property: v
        } = cc._decorator;
        let P = class {
            constructor() {
                this.Root = null, this.ScoreBoxNode = null, this.NoScoreBoxNode = null, this.Entries = null, this.Winnings = null, this.Credit = null, this.Profile = null, this.ProfileBtn = null, this.ScoreBoxProfileBtn = null, this.NoScoreBoxProfileBtn = null
            }
        };
        n([v(cc.Node)], P.prototype, "Root", void 0), n([v(cc.Node)], P.prototype, "ScoreBoxNode", void 0), n([v(cc.Node)], P.prototype, "NoScoreBoxNode", void 0), n([v(m.NumberCountUp)], P.prototype, "Entries", void 0), n([v(m.NumberCountUp)], P.prototype, "Winnings", void 0), n([v(m.NumberCountUp)], P.prototype, "Credit", void 0), n([v(d.default)], P.prototype, "Profile", void 0), n([v(cc.Button)], P.prototype, "ProfileBtn", void 0), n([v(cc.Button)], P.prototype, "ScoreBoxProfileBtn", void 0), n([v(cc.Button)], P.prototype, "NoScoreBoxProfileBtn", void 0), P = n([f("PlayerBlock")], P);
        let b = class {
            constructor() {
                this.Root = null, this.Avatar = null, this.Frame = null
            }
        };
        n([v(cc.Node)], b.prototype, "Root", void 0), n([v({
            type: cc.Sprite,
            displayName: "\u982d\u50cf"
        })], b.prototype, "Avatar", void 0), n([v({
            type: cc.Sprite,
            displayName: "\u5916\u6846"
        })], b.prototype, "Frame", void 0), b = n([f("Avatar")], b);
        let w = class extends i.GameBar {
            constructor() {
                super(...arguments), this.BET_TIPS_EVENT_PUZZLE = "Raise your play and get more EGGS!", this.Root = null, this.BtnWeapon = null, this.BtnLockSetting = null, this.WeaponChangeTouchArea = null, this.WeaponChangeHintPrefab = null, this.WeaponActiveHintPrefab = null, this.PurchaseBlockingHint = null, this.PurchaseBlockHintLabel = [], this.MousePrefab = null, this.BtnList = [], this.NodeTeachPanel = null, this.MaskTeachPanel = null, this.MaskNode = [], this.SummonTip = null, this.FreezeTip = null, this.MaskWeaponNode = [], this.WeaponTeachUI = null, this.NodeWeaponChangeHintRoot = null, this.SignalObj = [], this.SignalSprite = [], this.NodeBetEventTips = null, this.LabBetEventTips = null, this.BetScale = null, this.ChangeWeaponNode = null, this.OtherPlayerBlocks = [], this.ProfileNode = null, this.AvatarNode = new b, this.PlayerNameNode = null, this.AvatarNoticeMgr = null, this.RewardNoticeMgr = null, this.ProfileBlockingHint = null, this.ProfileBlockingHintBG = null, this.ProfileBlockingHintArrow = null, this.ProfileBlockingHintLabel = null, this.m_WeaponChangeHint = null, this.m_WeaponActiveHint = null, this.m_FucGetWeaponSetting = null, this.m_FucGetPlayerById = null, this.m_FucGetPlayerIdBySeat = null, this.m_FucGetOtherPlayerAsset = null, this.MouseMark = null, this.isPurchaseOpen = !1, this.isEnableLockSetting = !1, this.isEnableAuto = !1, this.isShowedLockSettingHint = !1, this.tempBetScale = 1, this.weapon_setting = {}, this.cannonEnableData = null, this.MainPlayerSeat = -1, this.OtherPlayerSeat = -1, this.BlockIndex = -1, this.profileTempData = {}
            }
            set CannonEnableData(e) {
                this.cannonEnableData = e
            }
            _onLoad() {
                this.m_DelBetChange = new SS.Common.Delegate, this.m_DelClickAddBetLevel = new SS.Common.Delegate, this.m_DelClickReduceBetLevel = new SS.Common.Delegate, this.m_DelClickChange = new SS.Common.Delegate, this.m_DelClickAuto = new SS.Common.Delegate, this.m_DelClickLockSetting = new SS.Common.Delegate, this.m_DelClickPurchase = new SS.Common.Delegate, this.m_DelPurchaseSuccess = new SS.Common.Delegate, this.m_DelCloseTeachPanel = new SS.Common.Delegate, this.m_DelClickWeaponChose = new SS.Common.Delegate, this.m_DelClickWeaponChoseBtn = new SS.Common.Delegate, this.m_DelClickProfile = new SS.Common.Delegate, this.m_DelClickAutoStop = new SS.Common.Delegate, u.EventSystem.Event(u.FishHunter.OpenProfile).Insert(this.ClickPlayerProfile, this), u.EventSystem.Event(u.FishHunter.OpenAvatarEditor).Insert(this.ClickMainPlayerAvatarEditor, this), u.EventSystem.Event(u.FishHunter.RegisterMouseObjs).Insert(this.RegisterMouseEventList, this)
            }
            Compose(e) {
                u.EventSystem.Event(u.PurchaseEvent.OnPurchaseSuccess).Insert(this.OnPurchaseSuccess, this), u.EventSystem.Event(u.PurchaseEvent.OnPurchasePanelDisable).Insert(this.OnPurchasePanelDisable, this)
            }
            _onDestroy() {
                u.EventSystem.Event(u.FishHunter.OpenProfile).Remove(this.ClickPlayerProfile, this), u.EventSystem.Event(u.FishHunter.OpenAvatarEditor).Remove(this.ClickMainPlayerAvatarEditor, this), u.EventSystem.Event(u.PurchaseEvent.OnPurchaseSuccess).Remove(this.OnPurchaseSuccess, this), u.EventSystem.Event(u.PurchaseEvent.OnPurchasePanelDisable).Remove(this.OnPurchasePanelDisable, this), u.EventSystem.Event(u.FishHunter.RegisterMouseObjs).Remove(this.RegisterMouseEventList, this)
            }
            Init() {
                if (cc.sys.platform == cc.sys.DESKTOP_BROWSER && "iOS" != cc.sys.os && !this.MouseMark && this.MousePrefab) {
                    cc.game.canvas.style.cursor = "none";
                    let e = cc.instantiate(this.MousePrefab);
                    this.MouseMark = e.getComponent(s.default);
                    let t = cc.find("Canvas").getComponent(cc.Canvas);
                    t ? (t.node.on(cc.Node.EventType.MOUSE_MOVE, this.mouseMove, this), t.node.on(cc.Node.EventType.MOUSE_ENTER, () => {
                        this.switchMouseMark(!1)
                    }, this, !1), e.setParent(t.node)) : console.error("[FishUIMgr] Can't Find Canvas");
                    for (let o = 0; o < this.BtnList.length; o++) this.BtnList[o].on(cc.Node.EventType.MOUSE_ENTER, () => {
                        this.switchMouseMark(!0)
                    }, this, !1)
                }
                this.isEnableAuto = !1, this.NodeTeachPanel.active = !1, this.BtnBetUp.node.on(cc.Node.EventType.TOUCH_START, this.PressAddBtn, this), this.BtnBetUp.node.on(cc.Node.EventType.TOUCH_END, this.ReleaseAddBtn, this), this.BtnBetUp.node.on(cc.Node.EventType.TOUCH_CANCEL, this.ReleaseAddBtn, this), this.BtnBetDown.node.on(cc.Node.EventType.TOUCH_START, this.PressMinusBtn, this), this.BtnBetDown.node.on(cc.Node.EventType.TOUCH_END, this.ReleaseMinusBtn, this), this.BtnBetDown.node.on(cc.Node.EventType.TOUCH_CANCEL, this.ReleaseMinusBtn, this), this.ChangeWeaponNode.on(cc.Node.EventType.TOUCH_START, this.ClickChangeWeapon, this), this.ChangeWeaponNode.on(cc.Node.EventType.TOUCH_MOVE, this.ClickChangeWeapon, this), this.OtherPlayerBlocks.forEach(e => e.Root.active = !1)
            }
            mouseMove(e) {
                this.MouseMark && this.MouseMark.node.setPosition(e.getLocation().sub(a.default.Instance.halfDiagonal))
            }
            switchMouseMark(e) {
                this.MouseMark && this.MouseMark.switchArrowMark(e)
            }
            RegisterMouseEvent(e) {
                e.on(cc.Node.EventType.MOUSE_ENTER, () => {
                    this.switchMouseMark(!0)
                }, this, !1)
            }
            RegisterMouseEventList(e) {
                for (let t = 0; t < e.length; t++) this.RegisterMouseEvent(e[t])
            }
            switchMouseMarkTrue() {
                this.MouseMark.switchArrowMark(!0)
            }
            SetUserName(e) {
                null != this.TextUserName && (null == e && (e = ""), this.TextUserName.string = e)
            }
            SetGameVersion(e) {
                null != this.TextVersion && null != e && "" != e && (this.TextVersion.string = "v" + e)
            }
            SetPurchaseBlockingMsg(e) {
                null != this.PurchaseBlockingHint && 0 != this.PurchaseBlockHintLabel.length && null != e && this.PurchaseBlockHintLabel.forEach(t => t.string = e)
            }
            SetUserInfoPosition(e) {
                null != this.NodeScoreBox && (this.MainPlayerSeat = e, u.EventSystem.Event(u.FishHunter.SetMainPlayerSeat).Notify(this.MainPlayerSeat), 0 != (e %= 2) && 1 != e && (e = 0), console.error(" \u8a2d\u5b9a SS \u4f7f\u7528\u8005\u8cc7\u8a0a  SS.Common.GameEnvironment.IsUseScoreBox = " + SS.Common.GameEnvironment.IsUseScoreBox), SS.Common.GameEnvironment.IsUseScoreBox ? (this.NodeCreadit.active = !1, this.NodeScoreBox.setPosition(532 * (2 * e - 1), -360), this.BtnPurchase.node.setPosition(90, 130), this.BtnPromptPurchase.node.setPosition(100 * (1 - 2 * e), 130), this.PurchaseBlockingHint.children[e].active = !0, this.PurchaseBlockingHint.children[(e + 1) % 2].active = !1, this.SignalObj[0].node.setPosition(610 * (2 * e - 1), -170)) : (this.NodeScoreBox.active = !1, this.NodeCreadit.setPosition(537 * (2 * e - 1), -360), this.SignalObj[0].node.setPosition(610 * (2 * e - 1), -170)), this.ProfileNode.node.setPosition(532 * (2 * e - 1), -360), this.AvatarNode.Root.setPosition(79 * (2 * e - 1), 35), this.AvatarNode.Root.convertToWorldSpaceAR(cc.Vec3.ZERO), this.PlayerNameNode.setPosition(18 * (1 - 2 * e), 37), this.ProfileBlockingHintBG.setPosition(507 * (2 * e - 1), -191), this.ProfileBlockingHintArrow.setPosition(679 * (2 * e - 1), -271), this.ProfileBlockingHintLabel.node.setPosition(507 * (2 * e - 1), -188), this.TextVersion.node.setPosition(530 * (1 - 2 * e), -345), this.TextVersion.horizontalAlign = 0 == e ? cc.Label.HorizontalAlign.RIGHT : cc.Label.HorizontalAlign.LEFT, this.SetAvatarNotice(), this.SetRewardNotice())
            }
            SetAvatarNotice() {
                this.AvatarNoticeMgr.m_AvatarNoticeItem.forEach(e => {
                    e.root.setPosition(this.ProfileNode.node.position.x, this.ProfileNode.node.position.y + 160)
                })
            }
            SetRewardNotice() {
                let e = this.AvatarNode.Root.convertToWorldSpaceAR(cc.Vec3.ZERO);
                this.RewardNoticeMgr.m_nodeEffectTargetRoot.position = this.RewardNoticeMgr.node.convertToNodeSpaceAR(e), this.RewardNoticeMgr.m_spriteProfileBar = this.AvatarNode.Avatar
            }
            SetMainPlayerAvatarInfo(e, t = -1) {
                this.ProfileNode.SetNickname(e.nick_name), this.ProfileNode.SetFaceByID(e.equip_avatar), this.ProfileNode.SetFrameByID(e.equip_avatar_frame)
            }
            SetOtherPlayerInfo(e, t = -1) {
                if (t > -1) return this.BlockIndex = this.GetTargetBlockIndexBySeat(t), this.OtherPlayerBlocks[this.BlockIndex].Root.active = !1, this.OtherPlayerBlocks[this.BlockIndex].ProfileBtn.node.off(cc.Node.EventType.MOUSE_ENTER, this.switchMouseMarkTrue, this, !1), void(SS.Common.GameEnvironment.IsUseScoreBox ? this.OtherPlayerBlocks[this.BlockIndex].ScoreBoxProfileBtn.node.off(cc.Node.EventType.MOUSE_ENTER, this.switchMouseMarkTrue, this, !1) : this.OtherPlayerBlocks[this.BlockIndex].NoScoreBoxProfileBtn.node.off(cc.Node.EventType.MOUSE_ENTER, this.switchMouseMarkTrue, this, !1));
                e.seat != this.MainPlayerSeat && (this.BlockIndex = this.GetTargetBlockIndexBySeat(e.seat), this.OtherPlayerBlocks[this.BlockIndex].ScoreBoxNode.active = SS.Common.GameEnvironment.IsUseScoreBox, this.OtherPlayerBlocks[this.BlockIndex].NoScoreBoxNode.active = !SS.Common.GameEnvironment.IsUseScoreBox, this.OtherPlayerBlocks[this.BlockIndex].Entries.SetNumberNow(e.entries), this.OtherPlayerBlocks[this.BlockIndex].Winnings.SetNumberNow(e.winning), this.OtherPlayerBlocks[this.BlockIndex].Credit.SetNumberNow(e.entries), this.OtherPlayerBlocks[this.BlockIndex].Root.active = !0, this.OtherPlayerBlocks[this.BlockIndex].Profile.SetNickname(e.nick_name), this.OtherPlayerBlocks[this.BlockIndex].Profile.SetFaceByID(e.equip_avatar), this.OtherPlayerBlocks[this.BlockIndex].Profile.SetFrameByID(e.equip_avatar_frame), this.OtherPlayerBlocks[this.BlockIndex].ProfileBtn.node.on(cc.Node.EventType.MOUSE_ENTER, this.switchMouseMarkTrue, this, !1), SS.Common.GameEnvironment.IsUseScoreBox ? this.OtherPlayerBlocks[this.BlockIndex].ScoreBoxProfileBtn.node.on(cc.Node.EventType.MOUSE_ENTER, this.switchMouseMarkTrue, this, !1) : this.OtherPlayerBlocks[this.BlockIndex].NoScoreBoxProfileBtn.node.on(cc.Node.EventType.MOUSE_ENTER, this.switchMouseMarkTrue, this, !1))
            }
            UpdateOtherPlayerAsset(e) {
                for (let t = 0; t < e.length; t++) e[t].seat != this.MainPlayerSeat && (this.BlockIndex = this.GetTargetBlockIndexBySeat(e[t].seat), SS.Common.GameEnvironment.IsUseScoreBox ? (this.OtherPlayerBlocks[this.BlockIndex].Entries.SetNumberNow(e[t].entries), this.OtherPlayerBlocks[this.BlockIndex].Winnings.SetNumberNow(e[t].winnings)) : this.OtherPlayerBlocks[this.BlockIndex].Credit.SetNumberNow(e[t].entries))
            }
            GetTargetBlockIndexBySeat(e) {
                return this.OtherPlayerSeat = e, this.MainPlayerSeat > 1 && (this.OtherPlayerSeat = this.OtherPlayerSeat > 1 ? this.OtherPlayerSeat - 2 : this.OtherPlayerSeat + 2), this.OtherPlayerSeat
            }
            GetPlayerSeatByBlockIndex(e) {
                return this.OtherPlayerSeat = e, this.MainPlayerSeat > 1 && (this.OtherPlayerSeat = this.OtherPlayerSeat > 1 ? this.OtherPlayerSeat - 2 : this.OtherPlayerSeat + 2), this.OtherPlayerSeat
            }
            SetWeaponChangeAreaPosition(e, t) {
                null != this.WeaponChangeTouchArea && this.WeaponChangeTouchArea.node.setPosition(e, t)
            }
            SetWeaponChangeHintPosition(e, t) {
                null != this.WeaponChangeHintPrefab && (this.m_WeaponChangeHint = cc.instantiate(this.WeaponChangeHintPrefab), this.NodeWeaponChangeHintRoot.addChild(this.m_WeaponChangeHint), this.m_FucGetWeaponSetting ? this.m_WeaponChangeHint.getComponent(c.default).InitWithWeaponList(this.m_FucGetWeaponSetting()) : this.m_WeaponChangeHint.getComponent(c.default).Init(this.cannonEnableData), this.m_WeaponChangeHint.setPosition(e, t))
            }
            SetBetBtnPosition(e, t) {
                null != this.BtnBetUp && null != this.BtnBetDown && (this.BtnBetUp.node.setPosition(e + 90, t), this.BtnBetDown.node.setPosition(e - 90, t))
            }
            SetBetBtnActive(e) {
                this.BtnBetUp.node.active = e, this.BtnBetDown.node.active = e
            }
            IsWeaponChangeHintActive() {
                return null != this.m_WeaponChangeHint && this.m_WeaponChangeHint.active
            }
            CloseWeaponChangeHint() {
                null != this.m_WeaponChangeHint && (this.m_WeaponChangeHint.active = !1, this.m_WeaponChangeHint.destroy(), this.m_WeaponChangeHint = null)
            }
            ChangeWeaponButton(e, t = [y.Normal, y.Lock]) {
                if (null == this.BtnWeapon || null == this.BtnLockSetting) return;
                let o = t[t.indexOf(e) + 1];
                switch (o || (o = t[0]), e) {
                    case y.Normal:
                        return this.BtnWeapon.getComponent(r.default).ChangeState(r.enumState.STATE_0), void(this.BtnLockSetting.node.active = !1);
                    case y.Lock:
                        switch (o) {
                            case y.Tiger:
                                this.BtnWeapon.getComponent(r.default).ChangeState(r.enumState.STATE_2);
                                break;
                            case y.Dragon:
                                this.BtnWeapon.getComponent(r.default).ChangeState(r.enumState.STATE_4);
                                break;
                            default:
                                this.BtnWeapon.getComponent(r.default).ChangeState(r.enumState.STATE_1)
                        }
                        break;
                    case y.Tiger:
                        switch (o) {
                            case y.Dragon:
                                this.BtnWeapon.getComponent(r.default).ChangeState(r.enumState.STATE_6);
                                break;
                            default:
                                this.BtnWeapon.getComponent(r.default).ChangeState(r.enumState.STATE_3)
                        }
                        break;
                    case y.Dragon:
                        this.BtnWeapon.getComponent(r.default).ChangeState(r.enumState.STATE_5)
                }
                if (this.BtnLockSetting.node.active = !0, !this.isShowedLockSettingHint) {
                    let e = this.BtnLockSetting.getComponent(cc.Animation);
                    null != e.currentClip && e.currentClip.name != e.getClips()[0].name || e.play(e.getClips()[1].name)
                }
            }
            SetBet(e, t) {
                t && (this.tempBetScale = t, this.BetScale.node.parent.active = t > 1), this.BetScale.string = (e * this.tempBetScale).toString()
            }
            SwitchLockSettingButton(e) {
                null != this.BtnLockSetting && this.isEnableLockSetting != e && (e ? this.BtnLockSetting.getComponent(r.default).ChangeState(r.enumState.STATE_1) : this.BtnLockSetting.getComponent(r.default).ChangeState(r.enumState.STATE_0), this.isEnableLockSetting = e)
            }
            SwitchAutoButton(e) {
                if (null == this.BtnAuto) return;
                if (this.isEnableAuto == e) return;
                e ? this.BtnAuto.getComponent(r.default).ChangeState(r.enumState.STATE_1) : this.BtnAuto.getComponent(r.default).ChangeState(r.enumState.STATE_0);
                let t = this.BtnAuto.getComponent(cc.Animation);
                t.play(t.getClips()[Number(e)].name), this.isEnableAuto = e
            }
            ShowPurchaseHint(e = !0) {
                if (null == this.BtnPurchase || null == this.BtnPromptPurchase) return;
                if (this.BtnPromptPurchase.node.active == e) return;
                this.BtnPurchase.node.active = !e, this.BtnPromptPurchase.node.active = e;
                let t = this.BtnPromptPurchase.getComponent(cc.Animation);
                t.play(t.getClips()[Number(e)].name)
            }
            ShowPurchaseBlockingHint(e = !0) {
                null != this.PurchaseBlockingHint && (e ? (this.PurchaseBlockingHint.active || (this.PurchaseBlockingHint.active = !0, this.PurchaseBlockingHint.opacity = 0), this.PurchaseBlockingHint.stopAllActions(), this.PurchaseBlockingHint.runAction(cc.sequence(cc.fadeTo(.25, 255), cc.delayTime(3), cc.fadeTo(.5, 0)))) : (this.PurchaseBlockingHint.stopAllActions(), this.PurchaseBlockingHint.runAction(cc.fadeTo(.2, 0))))
            }
            SetEntriesNow(e, t = !1) {
                SS.Common.GameEnvironment.IsUseScoreBox ? this.NumAnimEntries.SetNumberNow(e) && t && (cc.Tween.stopAllByTarget(this.NumAnimEntries.node), cc.tween(this.NumAnimEntries.node).to(0, {
                    scale: 1
                }).to(.05, {
                    scale: 1.5
                }).to(.05, {
                    scale: 1
                }).start()) : this.NumAnimCreadit.SetNumberNow(e) && t && (cc.Tween.stopAllByTarget(this.NumAnimCreadit.node), cc.tween(this.NumAnimCreadit.node).to(0, {
                    scale: 1
                }).to(.05, {
                    scale: 1.5
                }).to(.05, {
                    scale: 1
                }).start())
            }
            CountUpEntries(e, t = 1) {
                SS.Common.GameEnvironment.IsUseScoreBox ? this.NumAnimEntries.CountUp(e, t) : this.NumAnimCreadit.CountUp(e, t)
            }
            SetWinningNow(e, t = !0, o = !1) {
                if (SS.Common.GameEnvironment.IsUseScoreBox) {
                    if (!o && this.NumAnimWinning.GetCurrentNumber > e) return;
                    this.NumAnimWinning.SetNumberNow(e) && t && (cc.Tween.stopAllByTarget(this.NumAnimWinning.node), cc.tween(this.NumAnimWinning.node).to(0, {
                        scale: 1
                    }).to(.05, {
                        scale: 1.5
                    }).to(.05, {
                        scale: 1
                    }).start())
                } else {
                    if (!o && this.NumAnimCreadit.GetCurrentNumber > e) return;
                    this.NumAnimCreadit.SetNumberNow(e) && t && (cc.Tween.stopAllByTarget(this.NumAnimCreadit.node), cc.tween(this.NumAnimCreadit.node).to(0, {
                        scale: 1
                    }).to(.05, {
                        scale: 1.5
                    }).to(.05, {
                        scale: 1
                    }).start())
                }
            }
            CountUpWinning(e, t = 1) {
                SS.Common.GameEnvironment.IsUseScoreBox ? this.NumAnimWinning.CountUp(e, t) : this.NumAnimCreadit.CountUp(e, t)
            }
            PressAddBtn() {
                this.AddBet(!1), this.schedule(this.AddBet, .1, cc.macro.REPEAT_FOREVER, .5)
            }
            ReleaseAddBtn() {
                this.unschedule(this.AddBet), this.unschedule(this.SendUpdateBet), this.scheduleOnce(this.SendUpdateBet, .3)
            }
            PressMinusBtn() {
                this.MinusBet(!1), this.schedule(this.MinusBet, .1, cc.macro.REPEAT_FOREVER, .5)
            }
            ReleaseMinusBtn() {
                this.unschedule(this.MinusBet), this.unschedule(this.SendUpdateBet), this.scheduleOnce(this.SendUpdateBet, .3)
            }
            SendUpdateBet() {
                this.m_DelBetChange && this.m_DelBetChange.Length > 0 && this.m_DelBetChange.Notify()
            }
            AddBet(e = !0) {
                this.m_DelClickAddBetLevel && this.m_DelClickAddBetLevel.Length > 0 && this.m_DelClickAddBetLevel.Notify(e)
            }
            MinusBet(e = !1) {
                this.m_DelClickReduceBetLevel && this.m_DelClickReduceBetLevel.Length > 0 && this.m_DelClickReduceBetLevel.Notify(e)
            }
            ClickChangeWeapon(e) {
                a.default.Instance.IsLockChangeWeapon ? a.default.CANVAS.node.emit(e.type, e) : e.type == cc.Node.EventType.TOUCH_END && this.m_DelClickChange && this.m_DelClickChange.Length > 0 && this.m_DelClickChange.Notify()
            }
            ClickAuto() {
                this.m_DelClickAuto && this.m_DelClickAuto.Length > 0 && this.m_DelClickAuto.Notify()
            }
            ClickLockSetting() {
                if (this.m_DelClickLockSetting && this.m_DelClickLockSetting.Length > 0 && this.m_DelClickLockSetting.Notify(), !this.isShowedLockSettingHint) {
                    let e = this.BtnLockSetting.getComponent(cc.Animation);
                    e.play(e.getClips()[0].name), this.isShowedLockSettingHint = !0
                }
                l.LobbyClient.Instance.GetUserClient.recordClickLog("FishLockSetting", 9999)
            }
            ClickWeaponChose() {
                if (this.m_DelClickWeaponChose && this.m_DelClickWeaponChose.Length > 0 ? this.m_DelClickWeaponChose.Notify() : this.m_DelClickChange && this.m_DelClickChange.Length > 0 && this.m_DelClickChange.Notify(), !this.isShowedLockSettingHint) {
                    let e = this.BtnLockSetting.getComponent(cc.Animation);
                    e.play(e.getClips()[0].name), this.isShowedLockSettingHint = !0
                }
            }
            ClickPurchase() {
                this.m_DelClickPurchase && this.m_DelClickPurchase.Length > 0 && this.m_DelClickPurchase.Notify("purchase", this.ShowPurchaseBlockingHint.bind(this))
            }
            OpenPurchase() {
                this.isPurchaseOpen = !0, SS.Common.GameEnvironment.IsUseScoreBox ? u.EventSystem.Event(u.PurchaseEvent.ShowPanel).Notify(this.NumAnimWinning.GetCurrentNumber) : u.EventSystem.Event(u.PurchaseEvent.ShowPanel).Notify(this.NumAnimCreadit.GetCurrentNumber)
            }
            IsPurchaseOpen() {
                return this.isPurchaseOpen
            }
            OnPurchaseSuccess(e, t) {
                this.SetWinningNow(e, !1, !0), this.SetEntriesNow(t), this.ShowPurchaseHint(!1), this.m_DelPurchaseSuccess && this.m_DelPurchaseSuccess.Length > 0 && this.m_DelPurchaseSuccess.Notify(e, t), this.isPurchaseOpen = !1
            }
            OnPurchasePanelDisable() {
                this.isPurchaseOpen = !1
            }
            ShowTeachPanel(e = !1, t = "", o = !0, n = "") {
                this.NodeTeachPanel.active = !0;
                let i = this.NodeTeachPanel.getChildByName("Mission");
                null != i && (i.active = e);
                let s = "FishHunterAladdin" == SS.Common.GameEnvironment.CurrentGameNow || "FishHunterGhost" == SS.Common.GameEnvironment.CurrentGameNow,
                    r = null;
                this.m_FucGetWeaponSetting ? s = this.m_FucGetWeaponSetting().length > 2 : this.cannonEnableData && (this.cannonEnableData.hasOwnProperty("Scale") && this.cannonEnableData.Scale || this.cannonEnableData.hasOwnProperty("MultipleScale") && this.cannonEnableData.MultipleScale) && (s = !0), this.WeaponTeachUI.active = s;
                let a = u.EventSystem.Function(u.FishHunter.GetMenuIcon)();
                if (null != a && a.length >= 2) {
                    for (let t = 0; t < a.length; t++) {
                        let e = a[t].convertToWorldSpaceAR(cc.v2(0, 0));
                        this.MaskNode[t] && this.MaskNode[t].setPosition(this.MaskNode[t].parent.convertToNodeSpaceAR(e))
                    }
                    let e = a[0].convertToWorldSpaceAR(cc.v2(0, 0));
                    null != this.SummonTip && this.SummonTip.setPosition(this.SummonTip.parent.convertToNodeSpaceAR(e)), e = a[1].convertToWorldSpaceAR(cc.v2(0, 0)), null != this.FreezeTip && this.FreezeTip.setPosition(this.FreezeTip.parent.convertToNodeSpaceAR(e))
                }
                this.SetTeachPanelMask(s);
                let l = cc.find("Item/Tips/LabEventTime", this.NodeTeachPanel);
                if (null != l && "" != t) {
                    l.active = !0, l.getComponent(cc.Label).string = t;
                    let e = l.getComponentInChildren(cc.Label).string;
                    l.getComponentInChildren(cc.Label).string = e.replace("{0}", n), l.active = !0
                }
            }
            OnCloseTeachPanel() {
                this.NodeTeachPanel.active = !1, this.m_DelCloseTeachPanel && this.m_DelCloseTeachPanel.Length > 0 && this.m_DelCloseTeachPanel.Notify()
            }
            CheckTeachPanelActive() {
                return this.NodeTeachPanel.activeInHierarchy
            }
            SetNetSignal(e) {
                this.SignalObj[1].spriteFrame = this.SignalSprite[e - 1], 1 == e ? (this.SignalObj[2].node.active = !0, this.SignalObj[2].node.runAction(cc.repeatForever(cc.sequence(cc.fadeIn(1), cc.delayTime(.4), cc.fadeOut(1), cc.delayTime(.4))))) : (this.SignalObj[2].node.active = !1, this.SignalObj[2].node.stopAllActions())
            }
            ShowBetTips(e, t) {
                switch (this.NodeBetEventTips.active = !0, t) {
                    case C.PuzzleEgg:
                        this.LabBetEventTips.string = this.BET_TIPS_EVENT_PUZZLE;
                        break;
                    default:
                        this.LabBetEventTips.string = ""
                }
                this.scheduleOnce(() => {
                    this.NodeBetEventTips.active = !1
                }, e)
            }
            SetTeachPanelMask(e) {
                let t = this.MaskTeachPanel._graphics;
                this.MaskNode.forEach(e => {
                    t.circle(e.x, e.y, e.width / 2), t.fill()
                }), e && this.MaskWeaponNode.forEach(e => {
                    t.circle(e.x, e.y, e.width / 2), t.fill()
                })
            }
            WeaponActiveHint(e) {
                null != this.WeaponActiveHintPrefab && (this.m_WeaponActiveHint = cc.instantiate(this.WeaponActiveHintPrefab), this.node.addChild(this.m_WeaponActiveHint), this.m_WeaponActiveHint.getComponent(h.default).Init(e), this.scheduleOnce(this.CloseWeaponActiveHint.bind(this), 10))
            }
            CloseWeaponActiveHint() {
                this.m_WeaponActiveHint && (this.m_WeaponActiveHint.destroy(), this.m_WeaponActiveHint = null)
            }
            ClickMainPlayerProfile() {
                this.profileTempData.Id = this.m_FucGetPlayerIdBySeat(this.MainPlayerSeat), this.profileTempData.IsMainPlayer = !0, this.profileTempData.SubType = S.LogEvent_OpenPanel.InFish, this.m_DelClickProfile && this.m_DelClickProfile.Length > 0 && this.m_DelClickProfile.Notify("profile", this.ShowProfileBlockingHint.bind(this))
            }
            ClickOtherPlayerProfile(e, t) {
                this.profileTempSeat = this.GetPlayerSeatByBlockIndex(parseInt(t)), this.profileTempId = this.m_FucGetPlayerIdBySeat(this.profileTempSeat), this.OpenOtherPlayerProfile(this.profileTempId, S.LogEvent_OpenOthersPanel.InFish)
            }
            ClickPlayerProfile(e, t, o, n) {
                t ? (this.profileTempData.Id = e, this.profileTempData.IsMainPlayer = t, this.profileTempData.SubType = o, this.m_DelClickProfile && this.m_DelClickProfile.Length > 0 && this.m_DelClickProfile.Notify("profile", n || this.ShowProfileBlockingHint.bind(this))) : this.OpenOtherPlayerProfile(e, o)
            }
            OpenPlayerProfile() {
                SS.Common.GameEnvironment.IsUseScoreBox ? u.EventSystem.Event(u.Profile.OpenProfile).Notify(!0, SS.Network.LoginModel.LoginInfo.pin_ark_id, this.NumAnimWinning.GetCurrentNumber, this.NumAnimEntries.GetCurrentNumber) : u.EventSystem.Event(u.Profile.OpenProfile).Notify(!0, SS.Network.LoginModel.LoginInfo.pin_ark_id, 0, this.NumAnimCreadit.GetCurrentNumber), _.ClickLog.recordClickLog(S.LogName.Profile, -1, S.LogType_Profile.OpenPanel, this.profileTempData.SubType >= 0 ? this.profileTempData.SubType : S.LogEvent_OpenPanel.InFish)
            }
            OpenOtherPlayerProfile(e, t) {
                this.m_DelClickAutoStop && this.m_DelClickAutoStop.Length > 0 && this.m_DelClickAutoStop.Notify();
                let o = this.m_FucGetPlayerById(e);
                o ? u.EventSystem.Event(u.Profile.OpenProfile).Notify(!1, e, o.winning, o.entries) : u.EventSystem.Event(u.Profile.OpenProfile).Notify(!1, e), _.ClickLog.recordClickLog(S.LogName.Profile, -1, S.LogType_Profile.OpenOthersPanel, t)
            }
            ClickMainPlayerAvatarEditor(e) {
                this.profileTempData.SubType = e, this.m_DelClickProfile && this.m_DelClickProfile.Length > 0 && this.m_DelClickProfile.Notify("avatar", this.ShowProfileBlockingHint.bind(this))
            }
            OpenMainPlayerAvatarEditor() {
                u.EventSystem.Event(u.Profile.OpenAvatarEditor).Notify(!0), _.ClickLog.recordClickLog(S.LogName.Profile, -1, S.LogType_Profile.OpenPanel, this.profileTempData.SubType)
            }
            ShowProfileBlockingHint(e = !0) {
                null != this.ProfileBlockingHint && (e ? (this.ProfileBlockingHint.active || (this.ProfileBlockingHint.active = !0, this.ProfileBlockingHint.opacity = 0), this.ProfileBlockingHint.stopAllActions(), this.ProfileBlockingHint.runAction(cc.sequence(cc.fadeTo(.25, 255), cc.delayTime(3), cc.fadeTo(.5, 0)))) : (this.ProfileBlockingHint.stopAllActions(), this.ProfileBlockingHint.runAction(cc.fadeTo(.2, 0))))
            }
            SetProfileBlockingMsg(e) {
                null != this.ProfileBlockingHint && null != this.ProfileBlockingHintLabel && null != e && (this.ProfileBlockingHintLabel.string = e)
            }
            UpdatePlayerInfo(e, t) {
                this.BlockIndex = this.GetTargetBlockIndexBySeat(e), this.OtherPlayerBlocks[this.BlockIndex].Profile.SetNickname(t.nickname), this.OtherPlayerBlocks[this.BlockIndex].Profile.SetFaceByID(t.avatar_id), this.OtherPlayerBlocks[this.BlockIndex].Profile.SetFrameByID(t.avatar_frame_id)
            }
        };
        n([v(cc.Node)], w.prototype, "Root", void 0), n([v(cc.Button)], w.prototype, "BtnWeapon", void 0), n([v(cc.Button)], w.prototype, "BtnLockSetting", void 0), n([v(cc.Button)], w.prototype, "WeaponChangeTouchArea", void 0), n([v(cc.Prefab)], w.prototype, "WeaponChangeHintPrefab", void 0), n([v(cc.Prefab)], w.prototype, "WeaponActiveHintPrefab", void 0), n([v(cc.Node)], w.prototype, "PurchaseBlockingHint", void 0), n([v([cc.Label])], w.prototype, "PurchaseBlockHintLabel", void 0), n([v(cc.Prefab)], w.prototype, "MousePrefab", void 0), n([v([cc.Node])], w.prototype, "BtnList", void 0), n([v(cc.Node)], w.prototype, "NodeTeachPanel", void 0), n([v(cc.Mask)], w.prototype, "MaskTeachPanel", void 0), n([v([cc.Node])], w.prototype, "MaskNode", void 0), n([v(cc.Node)], w.prototype, "SummonTip", void 0), n([v(cc.Node)], w.prototype, "FreezeTip", void 0), n([v([cc.Node])], w.prototype, "MaskWeaponNode", void 0), n([v(cc.Node)], w.prototype, "WeaponTeachUI", void 0), n([v(cc.Node)], w.prototype, "NodeWeaponChangeHintRoot", void 0), n([v([cc.Sprite])], w.prototype, "SignalObj", void 0), n([v([cc.SpriteFrame])], w.prototype, "SignalSprite", void 0), n([v(cc.Node)], w.prototype, "NodeBetEventTips", void 0), n([v(cc.Label)], w.prototype, "LabBetEventTips", void 0), n([v(cc.Label)], w.prototype, "BetScale", void 0), n([v(cc.Node)], w.prototype, "ChangeWeaponNode", void 0), n([v([P])], w.prototype, "OtherPlayerBlocks", void 0), n([v(d.default)], w.prototype, "ProfileNode", void 0), n([v(b)], w.prototype, "AvatarNode", void 0), n([v(cc.Node)], w.prototype, "PlayerNameNode", void 0), n([v(g.AvatarNoticeMgr)], w.prototype, "AvatarNoticeMgr", void 0), n([v(p.RewardNoticeMgr)], w.prototype, "RewardNoticeMgr", void 0), n([v(cc.Node)], w.prototype, "ProfileBlockingHint", void 0), n([v(cc.Node)], w.prototype, "ProfileBlockingHintBG", void 0), n([v(cc.Node)], w.prototype, "ProfileBlockingHintArrow", void 0), n([v(cc.Label)], w.prototype, "ProfileBlockingHintLabel", void 0), w = n([f], w), o.default = w, cc._RF.pop()
    }, {
        "../../GameCommon/DownBar/GameBar": "GameBar",
        "../../GameCommon/Profile/AvatarNoticeMgr": "AvatarNoticeMgr",
        "../../GameCommon/Profile/RewardNoticeMgr": "RewardNoticeMgr",
        "../../LobbyCommon/Component/AvatarIcon": "AvatarIcon",
        "../../LobbyCommon/Component/NumberCountUp": "NumberCountUp",
        "../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../../LobbyCommon/Net/ClickLog": "ClickLog",
        "../../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum",
        "../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "./BtnState": "BtnState",
        "./SSCanvasHandler": "SSCanvasHandler",
        "./SSMouseMark": "SSMouseMark",
        "./WeaponActiveHint": "WeaponActiveHint",
        "./WeaponChangeHint": "WeaponChangeHint"
    }],
    FixEngineUtil: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "074ddvGQDxJFr126oiwbn/e", "FixEngineUtil"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.FixEngineUtils = void 0;
        const n = () => {
                cc.EditBox.prototype.editBoxEditingDidBegan = function() {
                    if (null != window.gd_EditBox_BeganCallBack && window.gd_EditBox_BeganCallBack.length > 0)
                        for (var e = 0; e < window.gd_EditBox_BeganCallBack.length; e++) window.gd_EditBox_BeganCallBack[e]();
                    window.gd_EditBox_isEditing = !0, cc.Component.EventHandler.emitEvents(this.editingDidBegan, this), this.node.emit("editing-did-began", this)
                }, cc.EditBox.prototype.editBoxEditingDidEnded = function() {
                    if (null != window.gd_EditBox_EndedCallBack && window.gd_EditBox_EndedCallBack.length > 0)
                        for (var e = 0; e < window.gd_EditBox_EndedCallBack.length; e++) window.gd_EditBox_EndedCallBack[e]();
                    window.gd_EditBox_isEditing = !1, cc.Component.EventHandler.emitEvents(this.editingDidEnded, this), this.node.emit("editing-did-ended", this)
                }
            },
            i = () => {
                let e = cc.EditBox._ImplClass.prototype.init,
                    t = cc.EditBox._ImplClass.prototype.clear;
                var o = {
                    zoomInvalid: !1
                };
                cc.sys.OS_ANDROID !== cc.sys.os || cc.sys.browserType !== cc.sys.BROWSER_TYPE_SOUGOU && cc.sys.browserType !== cc.sys.BROWSER_TYPE_360 || (o.zoomInvalid = !0), Object.assign(cc.EditBox._ImplClass.prototype, {
                    init: function(t) {
                        e.call(this, t), this._event = this._forceUpdateMatrix.bind(this), window.addEventListener("resize", this._event), window.addEventListener("orientationchange", this._event)
                    },
                    clear: function() {
                        t.call(this), window.removeEventListener("resize", this._event), window.removeEventListener("orientationchange", this._event)
                    },
                    update: function() {
                        this._updateMatrix(!1)
                    },
                    _forceUpdateMatrix: function() {
                        this._updateMatrix(!0)
                    },
                    _updateMatrix: function(e) {
                        if (this._updateCameraMatrix()) {
                            var t = this._cameraMat.m,
                                n = this._delegate.node,
                                i = cc.view;
                            if (e || this._m00 !== t[0] || this._m01 !== t[1] || this._m04 !== t[4] || this._m05 !== t[5] || this._m12 !== t[12] || this._m13 !== t[13] || this._w !== n._contentSize.width || this._h !== n._contentSize.height || !this._cacheViewportRect.equals(i._viewportRect)) {
                                this._m00 = t[0], this._m01 = t[1], this._m04 = t[4], this._m05 = t[5], this._m12 = t[12], this._m13 = t[13], this._w = n._contentSize.width, this._h = n._contentSize.height, this._cacheViewportRect.set(i._viewportRect);
                                var s = i._scaleX,
                                    r = i._scaleY,
                                    a = i._viewportRect,
                                    l = i._devicePixelRatio;
                                s /= l, r /= l;
                                var c = cc.game.container,
                                    h = t[0] * s,
                                    m = t[1],
                                    u = t[4],
                                    d = t[5] * r,
                                    p = c && c.style.paddingLeft && parseInt(c.style.paddingLeft);
                                p += a.x / l;
                                var g = c && c.style.paddingBottom && parseInt(c.style.paddingBottom);
                                g += a.y / l;
                                var _ = t[12] * s + p,
                                    S = t[13] * r + g;
                                o.zoomInvalid && (this.setSize(n.width * h, n.height * d), h = 1, d = 1);
                                var y = this._elem,
                                    C = "matrix(" + h + "," + -m + "," + -u + "," + d + "," + _ + "," + -S + ")";
                                y.style.transform = C, y.style["-webkit-transform"] = C, y.style["transform-origin"] = "0px 100% 0px", y.style["-webkit-transform-origin"] = "0px 100% 0px"
                            }
                        }
                    }
                })
            },
            s = () => {
                var e = {
                    init: function() {
                        this.html = document.getElementsByTagName("html")[0]
                    },
                    availWidth: function(e) {
                        return e && e !== this.html ? e.clientWidth : window.innerWidth
                    },
                    availHeight: function(e) {
                        return e && e !== this.html ? e.clientHeight : window.innerHeight
                    },
                    meta: {
                        width: "device-width"
                    },
                    adaptationType: cc.sys.browserType
                };
                switch (cc.sys.os === cc.sys.OS_IOS && (e.adaptationType = cc.sys.BROWSER_TYPE_SAFARI), e.adaptationType) {
                    case cc.sys.BROWSER_TYPE_SAFARI:
                        e.meta["minimal-ui"] = "true", / OS \d/.test(navigator.userAgent) && !~navigator.userAgent.indexOf("CriOS") && !navigator.userAgent.indexOf("Mozilla") && /Safari\/[\d\.]+$/.test(navigator.userAgent) && (e.availWidth = function() {
                            return window.innerWidth
                        }, e.availHeight = function() {
                            return window.innerHeight
                        });
                        break;
                    case cc.sys.BROWSER_TYPE_SOUGOU:
                    case cc.sys.BROWSER_TYPE_UC:
                        e.meta["minimal-ui"] = "false", e.availWidth = function(e) {
                            return e.clientWidth
                        }, e.availHeight = function(e) {
                            return e.clientHeight
                        }
                }
                cc.view.__proto__._initFrameSize = function() {
                    var t = this._frameSize,
                        o = e.availWidth(cc.game.frame),
                        n = e.availHeight(cc.game.frame),
                        i = o >= n;
                    !cc.sys.isMobile || i && this._orientation & cc.macro.ORIENTATION_LANDSCAPE || !i && this._orientation & cc.macro.ORIENTATION_PORTRAIT ? (t.width = o, t.height = n, cc.game.container.style["-webkit-transform"] = "rotate(0deg)", cc.game.container.style.transform = "rotate(0deg)", this._isRotated = !1) : (t.width = n, t.height = o, cc.game.container.style["-webkit-transform"] = "rotate(90deg)", cc.game.container.style.transform = "rotate(90deg)", cc.game.container.style["-webkit-transform-origin"] = "0px 0px 0px", cc.game.container.style.transformOrigin = "0px 0px 0px", this._isRotated = !0), this._orientationChanging && setTimeout(function() {
                        cc.view._orientationChanging = !1
                    }, 1e3)
                }
            },
            r = () => {
                const e = cc.sys.os == cc.sys.OS_IOS && cc.sys.isBrowser && cc.sys.isMobile,
                    t = cc.sys.osMainVersion >= 14;
                null != cc.MeshBuffer && e && t && (cc.MeshBuffer.prototype.checkAndSwitchBuffer = function(e) {
                    this.vertexOffset + e > 65535 && (this.uploadData(), this._batcher._flush())
                }, cc.MeshBuffer.prototype.forwardIndiceStartToOffset = function() {
                    this.uploadData(), this.switchBuffer()
                })
            },
            a = () => {
                const e = cc.sys.browserType === cc.sys.BROWSER_TYPE_EDGE || cc.sys.browserType === cc.sys.BROWSER_TYPE_BAIDU || cc.sys.browserType === cc.sys.BROWSER_TYPE_UC ? .01 : 0;
                Object.defineProperty(Audio, "volume", {
                    get: function() {
                        return this._volume
                    },
                    set: function(t) {
                        if (this._volume = t, this._gainObj.gain.setTargetAtTime) try {
                            this._gainObj.gain.setTargetAtTime(t, this._context.currentTime, e)
                        } catch (o) {
                            this._gainObj.gain.setTargetAtTime(t, this._context.currentTime, 0)
                        } else this._gainObj.gain.value = t;
                        cc.sys.os === cc.sys.OS_IOS && !this.paused && this._currentSource && (this._currentSource.onended = null, this.pause(), this.play())
                    },
                    enumerable: !0,
                    configurable: !0
                })
            },
            l = () => {
                let e = cc.game._initRenderer;
                cc.game._initRenderer = () => {
                    var t;
                    try {
                        var o = document.createElement("canvas");
                        t = !(!window.WebGLRenderingContext || !o.getContext("webgl") && !o.getContext("experimental-webgl"))
                    } catch (n) {
                        t = !1
                    }
                    t ? e() : alert("Please update the Internet Browser or use Safari, FireFox,  Chrome.")
                }
            },
            c = () => {
                cc.js.mixin(cc.view.__proto__, {
                    _resizeEvent: function(e) {
                        var t;
                        t = this.setDesignResolutionSize ? this : cc.view;
                        var o = cc.sys;
                        if (o.browserType !== o.BROWSER_TYPE_UC || o.os !== o.OS_IOS) {
                            var n = t._frameSize.width,
                                i = t._frameSize.height,
                                s = t._isRotated;
                            if (cc.sys.isMobile) {
                                var r = cc.game.container.style,
                                    a = r.margin;
                                r.margin = "0", r.display = "none", t._initFrameSize(), r.margin = a, r.display = "block"
                            } else t._initFrameSize();
                            if (!0 === e || t._isRotated !== s || t._frameSize.width !== n || t._frameSize.height !== i) {
                                var l = t._originalDesignResolutionSize.width,
                                    c = t._originalDesignResolutionSize.height;
                                t._resizing = !0, l > 0 && t.setDesignResolutionSize(l, c, t._resolutionPolicy), t._resizing = !1, t.emit("canvas-resize"), t._resizeCallback && t._resizeCallback.call(), cc.sys.browserType != cc.sys.BROWSER_TYPE_SAFARI || !/ OS \d/.test(navigator.userAgent) || ~navigator.userAgent.indexOf("CriOS") || navigator.userAgent.indexOf("Mozilla") || !/Safari\/[\d\.]+$/.test(navigator.userAgent) || 90 != window.orientation && -90 != window.orientation || window.scrollTo(0, 0)
                            }
                        } else setTimeout(function() {
                            t._resizeEvent(e)
                        }, 0)
                    },
                    enableAutoFullScreen: function(e) {
                        e && e !== this._autoFullScreen && cc.sys.isMobile, this._autoFullScreen = !1, cc.screen.disableAutoFullScreen(cc.game.frame)
                    }
                })
            },
            h = () => {
                cc.WebView.Impl.prototype._createDom = function(e, t) {
                    cc.WebView.Impl._polyfill.enableDiv ? (this._div = document.createElement("div"), this._div.style["-webkit-overflow"] = "auto", this._div.style["-webkit-overflow-scrolling"] = "touch", this._iframe = document.createElement("iframe"), this._div.appendChild(this._iframe), this._iframe.style.width = "100%", this._iframe.style.height = "100%") : this._div = this._iframe = document.createElement("iframe"), cc.WebView.Impl._polyfill.enableBG && (this._div.style.background = "rgba(0, 0, 0, 0.5)"), this._div.style.background = "rgba(0, 0, 0, 0.5)", this._div.style.height = t + "px", this._div.style.width = e + "px", this._div.style.overflow = "scroll", this._iframe.style.border = "0", cc.game.container.appendChild(this._div), this._updateVisibility()
                }
            },
            m = {
                ApplyCustomEngineFixes: () => {
                    window.gd_EditBox_isEditing = !1, window.gd_EditBox_BeganCallBack = [], window.gd_EditBox_EndedCallBack = [], window.isIpad = () => {
                        const e = window.navigator.userAgent;
                        if (e.indexOf("iPad") > -1) return !0;
                        if (e.indexOf("Macintosh") > -1) try {
                            return document.createEvent("TouchEvent"), !0
                        } catch (t) {}
                        return !1
                    }, r(), a(), cc.director._physics3DManager = null, l(), cc.game.off(cc.game.EVENT_HIDE), cc.game.off(cc.game.EVENT_SHOW), cc.assetManager.downloader.downloadFile = (e, t, o, n) => {
                        var i = cc.assetManager.utils.parseParameters(t, o, n),
                            s = (t = i.options, o = i.onProgress, n = i.onComplete, new XMLHttpRequest),
                            r = "download failed: " + e + ", status: ";
                        if (s.open("GET", e, !0), void 0 !== t.responseType && (s.responseType = t.responseType), void 0 !== t.withCredentials && (s.withCredentials = t.withCredentials), void 0 !== t.mimeType && s.overrideMimeType && s.overrideMimeType(t.mimeType), void 0 !== t.timeout && (s.timeout = t.timeout), t.header)
                            for (var a in t.header) s.setRequestHeader(a, t.header[a]);
                        return s.onload = function() {
                            200 === s.status || 0 === s.status ? n && window.parent.idbSet("playgd", "cocos", e, s.response, s.response instanceof Blob, s.response instanceof ArrayBuffer) && n(null, s.response) : n && n(new Error(r + s.status + "(no response)"))
                        }, o && (s.onprogress = function(e) {
                            e.lengthComputable && o(e.loaded, e.total)
                        }), s.onerror = function() {
                            n && n(new Error(r + s.status + "(error)"), void 0)
                        }, s.ontimeout = function() {
                            n && n(new Error(r + s.status + "(time out)"), void 0)
                        }, s.onabort = function() {
                            n && n(new Error(r + s.status + "(abort)"), void 0)
                        }, window.parent.idbGet("playgd", "cocos", e).then(e => {
                            e ? e.isBlob2 ? n(null, new Blob([e.buffer], {
                                type: e.type
                            })) : n(null, e) : s.send(null)
                        }).catch(() => {
                            s.send(null)
                        }), s
                    }, c(), cc.view.enableAutoFullScreen(!1), n(), h(), s(), i()
                }
            };
        o.FixEngineUtils = m, cc._RF.pop()
    }, {}],
    FullScreenHandler: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "3859cK82CZP5pjG/l/A5XnR", "FullScreenHandler");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.Orientation = void 0;
        const i = e("./Helper/EventSystem"),
            s = e("./LobbyCommon"),
            r = e("./SwipeMgr/Scripts/Device"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        var c;
        (function(e) {
            e[e.Landscape = 0] = "Landscape", e[e.Portrait = 1] = "Portrait", e[e.Auto = 2] = "Auto"
        })(c = o.Orientation || (o.Orientation = {}));
        let h = class extends cc.Component {
            constructor() {
                super(...arguments), this.orentation = c.Landscape, this.designSolution = cc.size(1560, 720), this.minDesignSolution = cc.size(1280, 720), this.designSolutionH = cc.size(1560, 720), this.minDesignSolutionH = cc.size(1280, 720), this.designSolutionV = cc.size(720, 1560), this.minDesignSolutionV = cc.size(720, 1280), this._screenOrientation = null, this.clientSize = cc.size(0, 0), this.lastClientSize = cc.size(0, 0), this.canvas = null, this.orentationHint = null, this.orentationHintH = null, this.orentationHintV = null
            }
            onLoad() {
                this._screenOrientation = this.orentation, this.canvas = cc.find("Canvas").getComponent(cc.Canvas), i.EventSystem.RegisterFunction(i.ScreenOrientationState.GetOrientation, () => this._screenOrientation), i.EventSystem.RegisterFunction(i.ScreenOrientationState.GetOrientationSetting, () => this.orentation), i.EventSystem.Event(i.ScreenOrientationState.SetOrientation).Insert(this.SetOrientation, this), i.EventSystem.Event(i.ScreenOrientationState.CheckOrientation).Insert(this.CheckOrientation, this), window.addEventListener("orientationchange", this.OrientationChangeSetSize), this.orentationHint = window.parent.document.getElementById("orientation"), this.orentationHintH = window.parent.document.getElementById("orientationH"), this.orentationHintV = window.parent.document.getElementById("orientationV");
                let e = self == top ? "../../.." : "../../../..",
                    t = "en" == SS.Common.GameEnvironment.Language ? "en" : SS.Common.GameEnvironment.Language;
                "" === this.orentationHintH.style.backgroundImage && (this.orentationHintH.style.backgroundImage = "url(" + e + "/Plugin/" + t + "_orientation.gif)"), "" === this.orentationHintV.style.backgroundImage && (this.orentationHintV.style.backgroundImage = "url(" + e + "/Plugin/" + t + "_orientation_v.gif)")
            }
            update(e) {
                this.ChangeDesignResolution()
            }
            onDestroy() {
                i.EventSystem.UnregisterFunction(i.ScreenOrientationState.GetOrientation), i.EventSystem.UnregisterFunction(i.ScreenOrientationState.GetOrientationSetting), i.EventSystem.Event(i.ScreenOrientationState.SetOrientation).Remove(this.SetOrientation, this), window.removeEventListener("orientationchange", this.OrientationChangeSetSize), this.unscheduleAllCallbacks()
            }
            OrientationChangeSetSize() {
                cc.sys.isMobile && !r.Device.isSafari() && window.gd_EditBox_isEditing && (document.activeElement.blur(), window != window.parent && window.parent.document.activeElement.blur())
            }
            SetOrientation(e, t = !0) {
                this.orentation = e, console.warn("FullScreenHandler: set orientaion", this.orentation, this.enabled), t && this.ChangeDesignResolution(!0)
            }
            ChangeDesignResolution(e = !1) {
                let t;
                if (r.Device.isWindows()) t = cc.view.getFrameSize().clone();
                else if (t = window.parent.cc.view.getFrameSize().clone(), r.Device.isSafari() && window.parent != window && t.width != window.parent.cc.game.frame.clientWidth) return void window.parent.cc.view.setFrameSize(window.parent.cc.game.frame.clientWidth, window.parent.cc.game.frame.clientHeight, !1);
                let o = !1;
                o = t.width / t.height >= 1, this._screenOrientation = o ? c.Landscape : c.Portrait, this.CheckOrientation(), (t.width != this.clientSize.width || t.height != this.clientSize.height || e) && (console.log("[FullScreenHandler] Change Design Resolution, getFrameSize() = " + t), cc.sys.garbageCollect(), cc.sys.isMobile && r.Device.isIOS14Up() && window.gd_EditBox_isEditing ? (null != this.lastClientSize && (this.clientSize = this.lastClientSize), this.lastClientSize = cc.size(t.width, t.height)) : (this.clientSize = cc.size(t.width, t.height), this.lastClientSize = null), this.orentation === c.Auto ? o ? (console.log("[FullScreenHandler] \u6a6b\u7248\u87a2\u5e55"), this.SetDesignResolution(this.designSolutionH, this.minDesignSolutionH, t)) : (console.log("[FullScreenHandler] \u76f4\u7248\u87a2\u5e55"), this.SetDesignResolution(this.designSolutionV, this.minDesignSolutionV, t)) : this.SetDesignResolution(this.designSolution, this.minDesignSolution, t), i.EventSystem.Event(i.ScreenOrientationState.ChangeOrientation).Notify(this._screenOrientation), cc.sys.isMobile && r.Device.isIOS14Up() && r.Device.isSafari() && this.scheduleOnce(() => {
                    cc.view._initFrameSize()
                }, .5))
            }
            SetDesignResolution(e, t, o) {
                let n = 0,
                    i = 0,
                    r = 0,
                    a = 0;
                this._screenOrientation === c.Landscape ? o.width / o.height >= e.width / e.height ? (this.canvas.designResolution = e, n = i = .5 * (o.width - e.width)) : o.width / o.height >= t.width / t.height ? this.canvas.designResolution = cc.size(o.width * (t.height / o.height), t.height) : (this.canvas.designResolution = t, r = a = .5 * (o.height - t.height)) : o.width / o.height <= e.width / e.height ? (this.canvas.designResolution = e, r = a = .5 * (o.height - e.height)) : o.width / o.height <= t.width / t.height ? this.canvas.designResolution = cc.size(t.width, o.height * (t.width / o.width)) : (this.canvas.designResolution = t, n = i = .5 * (o.width - t.width)), this.canvas.node.setContentSize(this.canvas.designResolution.clone()), this.orentation == c.Auto ? s.LobbyCommon.Instance.setMaskRotation(this._screenOrientation) : s.LobbyCommon.Instance.UpdateResolution(this.canvas.designResolution), this.UpdateSafeArea(this.canvas.designResolution, n, i, r, a)
            }
            UpdateSafeArea(e, t, o, n, s) {
                let r = document.getElementById("SafeArea");
                window != window.parent && (r = window.parent.document.getElementById("SafeArea"));
                let a = Number(getComputedStyle(r).getPropertyValue("padding-left").replace("px", "")) / this.clientSize.width * e.width,
                    l = Number(getComputedStyle(r).getPropertyValue("padding-right").replace("px", "")) / this.clientSize.width * e.width,
                    h = Number(getComputedStyle(r).getPropertyValue("padding-bottom").replace("px", "")) / this.clientSize.height * e.height,
                    m = Number(getComputedStyle(r).getPropertyValue("padding-top").replace("px", "")) / this.clientSize.height * e.height;
                h = 0, this._screenOrientation == c.Landscape ? m = 0 : this._screenOrientation == c.Portrait && (a = 0, l = 0), i.EventSystem.Event(i.UpdateSafeArea).Notify(e, t > a ? 0 : a, o > l ? 0 : l, n > m ? 0 : m, 0)
            }
            get isIpad() {
                const e = window.navigator.userAgent;
                return e.indexOf("iPad") > -1 || e.indexOf("Macintosh") > -1
            }
            SetOrientationHint(e) {
                this.orentationHintH && (this.orentationHintH.style.visibility = e ? "hidden" : "visible"), this.orentationHintV && (this.orentationHintV.style.visibility = e ? "visible" : "hidden")
            }
            CheckOrientation() {
                this.orentation != c.Auto && (2 === window.parent.gd_orientationType ? this.HideOrientationHint() : this._screenOrientation !== window.parent.gd_orientationType && (cc.sys.isMobile || r.Device.isIpad()) ? (this.SetOrientationHint(this.orentation === c.Portrait), this.ShowOrientationHint()) : this.HideOrientationHint())
            }
            ShowOrientationHint() {
                this.orentationHint && (this.orentationHint.style.visibility = "visible")
            }
            HideOrientationHint() {
                this.orentationHint && (this.orentationHint.style.visibility = "hidden"), this.orentationHintH && (this.orentationHintH.style.visibility = "hidden"), this.orentationHintV && (this.orentationHintV.style.visibility = "hidden")
            }
        };
        n([l({
            type: cc.Enum(c),
            displayName: "\u93e1\u982d\u662f\u5426\u9396\u5b9a\u6a6b\u7248\u76f4\u7248"
        })], h.prototype, "orentation", void 0), n([l({
            displayName: "\u9810\u8a08 Canvas \u89e3\u6790\u5ea6",
            visible: function() {
                return this.orentation !== c.Auto
            }
        })], h.prototype, "designSolution", void 0), n([l({
            displayName: "\u6700\u5c0f Canvas \u89e3\u6790\u5ea6",
            visible: function() {
                return this.orentation !== c.Auto
            }
        })], h.prototype, "minDesignSolution", void 0), n([l({
            displayName: "\u9810\u8a08\u6a6b\u7248 Canvas \u89e3\u6790\u5ea6",
            visible: function() {
                return this.orentation === c.Auto
            }
        })], h.prototype, "designSolutionH", void 0), n([l({
            displayName: "\u6700\u5c0f\u6a6b\u7248 Canvas \u89e3\u6790\u5ea6",
            visible: function() {
                return this.orentation === c.Auto
            }
        })], h.prototype, "minDesignSolutionH", void 0), n([l({
            displayName: "\u9810\u8a08\u76f4\u7248 Canvas \u89e3\u6790\u5ea6",
            visible: function() {
                return this.orentation === c.Auto
            }
        })], h.prototype, "designSolutionV", void 0), n([l({
            displayName: "\u6700\u5c0f\u76f4\u7248 Canvas \u89e3\u6790\u5ea6",
            visible: function() {
                return this.orentation === c.Auto
            }
        })], h.prototype, "minDesignSolutionV", void 0), h = n([a], h), o.default = h, cc._RF.pop()
    }, {
        "./Helper/EventSystem": "EventSystem",
        "./LobbyCommon": "LobbyCommon",
        "./SwipeMgr/Scripts/Device": "Device"
    }],
    Functions: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "a9b3bUq5o5GhJ3D1gbI5H8W", "Functions");
        var n = this && this.__awaiter || function(e, t, o, n) {
            return new(o || (o = Promise))(function(i, s) {
                function r(e) {
                    try {
                        l(n.next(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function a(e) {
                    try {
                        l(n.throw(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                        e(t)
                    })).then(r, a)
                }
                l((n = n.apply(e, t || [])).next())
            })
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        class i {
            static IsNullOrEmpty(e) {
                let t = !0;
                try {
                    t = void 0 === e || null == e || "" == e
                } catch (o) {
                    console.error("[Functions] IsNullOrEmpty error.", o), t = !0
                }
                return t
            }
            static NumberFormat(e, t, o = !1, n = "", s = 1, r = !1) {
                t <= 0 && (t = 0), null == o && (o = !1), null == n && (n = ""), null == s && (s = 1), Number(e) && (e = Number(e));
                let a = "";
                return 1 != s && (e = i.GetValueByRatio(e, s)), a = null == t ? e.toString() : e.toFixed(t), r && (a = Number(a).toString()), o && (a = a.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,")), n + a
            }
            static GetValueByRatio(e, t) {
                return Number((e * t).toFixed(6))
            }
            static GetDecimalPlaces(e) {
                return e % 1 == 0 ? 0 : e.toString().split(".")[1].length
            }
            static Clamp(e, t, o) {
                return Math.min(Math.max(o, e), t)
            }
            static RoundDecimalPlaces(e, t) {
                let o = Math.pow(10, t);
                return Math.round(e * o) / o
            }
            static GetBezierCurvePoint(e, t, o, n, s) {
                return {
                    x: i.BezierValue(e, t.x, o.x, n.x, s.x),
                    y: i.BezierValue(e, t.y, o.y, n.y, s.y)
                }
            }
            static BezierValue(e, t, o, n, i) {
                return Math.pow(1 - e, 3) * t + 3 * Math.pow(1 - e, 2) * e * o + 3 * (1 - e) * Math.pow(e, 2) * n + Math.pow(e, 3) * i
            }
            static DrawTestBezierCurve(e, t, o, n, s = {
                x: 0,
                y: 0
            }, r = .01) {
                let a = document.getElementById("GameCanvas"),
                    l = document.getElementById("BezierCurveCanvas");
                l || ((l = document.createElement("canvas")).id = "BezierCurveCanvas", l.width = a.width, l.height = a.height, l.style.position = "fixed", l.style.left = "0", l.style.top = "0", l.addEventListener("click", () => {
                    a.focus()
                }), a.parentElement.appendChild(l));
                let c = l.getContext("2d");
                c.clearRect(0, 0, l.width, l.height), c.strokeStyle = "#FF0000", c.lineWidth = 3, c.beginPath();
                for (let h = 0; h < 1; h += r) {
                    let r = i.GetBezierCurvePoint(h, e, t, o, n);
                    c.lineTo(s.x + r.x, l.height - s.y - r.y)
                }
                c.stroke(), console.warn("DrawTestBezierCurve", arguments)
            }
            static ClearTestBezierCurve() {
                let e = document.getElementById("BezierCurveCanvas");
                e && e.remove()
            }
            static GetURLParameter() {
                let e = window.location.search.substring(1).split("&"),
                    t = {};
                for (let o = 0; o < e.length; o++) {
                    let n = e[o].split("=");
                    if (void 0 === t[n[0]]) t[n[0]] = decodeURIComponent(n[1]);
                    else if ("string" == typeof t[n[0]]) {
                        let e = [t[n[0]], decodeURIComponent(n[1])];
                        t[n[0]] = e
                    } else t[n[0]].push(decodeURIComponent(n[1]))
                }
                return t
            }
            static CloseGame(e) {
                console.log("%c** CloseGame **", "color:red");
                let t = e ? "true" : "false",
                    o = i.GetURLParameter();
                if ("true" == o.unity) {
                    let e = "uniwebview://close?isMute=" + t;
                    return console.log("** CloseGame ** - open url: %s", e), void window.open(e)
                }
                if (window.parent != window.self) {
                    let e = {
                        IsCloseGame: "true",
                        IsMute: t
                    };
                    console.log("** CloseGame ** - post message: %s", JSON.stringify(e)), window.parent.postMessage(JSON.stringify(e), "*")
                }
                if ("refresh" == o.closeMode) window.location.replace(window.location.href);
                else {
                    if (window.location.replace("about:blank"), null == window.opener && window.parent == window.self && window.history.length > 1) return void window.history.go(-1);
                    window.close()
                }
            }
            static setCookie(e, t, o, n = !1) {
                null == n && (n = !1);
                let i = "expires=" + (Date.now() + 6e4 * o),
                    s = n ? "path=/" : "";
                document.cookie = `${e}=${t}; ${i}; ${s};`
            }
            static getCookie(e) {
                let t = e + "=",
                    o = document.cookie.split(";");
                for (let n = 0; n < o.length; n++) {
                    let e = o[n].trim();
                    if (0 == e.indexOf(t)) return e.substring(t.length, e.length)
                }
                return ""
            }
            static GetLocaleStringByTimeZone(e, t) {
                return new Date(e + 36e5 * t + 6e4 * (new Date).getTimezoneOffset()).toLocaleString()
            }
            static GetLocaleStringByBrowser(e, t) {
                return new Date(e).toLocaleString(t, {
                    year: "numeric",
                    month: "2-digit",
                    day: "2-digit",
                    hour: "2-digit",
                    minute: "2-digit"
                })
            }
            static GetLocaleDateStringByTimeZone(e, t) {
                return new Date(e + 36e5 * t + 6e4 * (new Date).getTimezoneOffset()).toLocaleDateString()
            }
            static GetLocaleTimeStringByTimeZone(e, t) {
                return new Date(e + 36e5 * t + 6e4 * (new Date).getTimezoneOffset()).toLocaleTimeString()
            }
            static GetTimeDiffSec(e) {
                let t = (new Date).getTime();
                return Math.floor((e - t) / 1e3)
            }
            static GetTimeDiffStr(e) {
                let t = (new Date).getTime() - e,
                    o = Math.floor(t / 1e3),
                    n = Math.floor(o / 60),
                    i = Math.floor(n / 60),
                    s = Math.floor(i / 24);
                return s > 0 ? s + "d" : i > 0 ? i + "h" : n > 0 ? n + "m" : "1m"
            }
            static RemoveNullItemFromList(e, t = 3) {
                if (e.length > t && e.slice(e.length - (t + 1)).every(e => null == e)) e = e.filter(e => null != e);
                else {
                    const t = e.length,
                        o = (e = e.filter(e => null != e)).length;
                    e.length = t, e.fill(null, o, t)
                }
                return e
            }
            static LoadRemoteJson(e) {
                return n(this, void 0, void 0, function*() {
                    let t = {};
                    return yield new Promise(function(o, n) {
                        cc.assetManager.loadRemote(e, function(e, i) {
                            if (e) return console.error("[Functions] LoadRemoteJson error.", e), void n(e);
                            t = i.json, cc.assetManager.releaseAsset(i), o(null)
                        })
                    }), t
                })
            }
            static SetGlobalVariable(e, t) {
                (t = t || e.name) ? (window[t] = e, console.warn("[Functions] SetGlobalVariable", t, e)) : console.error("[Functions] SetGlobalVariable keyName / target.name is null.")
            }
            static PreviewImportClass(e, t = !1) {}
            static ExportClassToGlobal(e, t) {
                if (!n(t)) return void console.error("[Functions] ExportClassToGlobal targetClass is not class: %o", t);
                const o = window[e];

                function n(e) {
                    return e instanceof Object && "function" == typeof e
                }!o || n(o) ? this.SetGlobalVariable(t, e) : console.error(`[Functions] ExportClassToGlobal window["${e}"] already exists and not class`, o)
            }
            static SetNestedJSON(e, t, ...o) {
                if (0 == o.length) return e; {
                    const n = o[0];
                    let s = t[n];
                    return s ? s = i.SetNestedJSON(e, s, ...o.slice(1)) : t[n] = i.SetNestedJSON(e, {}, ...o.slice(1)), t
                }
            }
        }
        o.default = i, cc._RF.pop()
    }, {}],
    GAME_APP: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "a9d7atdLa1FqKYMWAq+JEAk", "GAME_APP");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GAME_APP = o.Status = void 0;
        const s = e("../LobbyCommon/Net/LobbyClient"),
            r = e("../LobbyCommon/Loading/Script/LoadingMgr"),
            a = e("../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            l = e("../LobbyCommon/Net/Downloader/VersionDownloader"),
            c = e("../LobbyCommon/EventModule/EventModule"),
            h = e("../LobbyCommon/InGameJp/Script/GameJpMgr"),
            m = e("../LobbyCommon/Component/BundleCtrl"),
            u = e("../LobbyCommon/SwipeMgr/Scripts/Device"),
            d = e("../LobbyCommon/Helper/Setting"),
            p = e("../LobbyCommon/Skin/Skin"),
            g = e("../LobbyCommon/Helper/LayerSystem"),
            _ = e("../LobbyCommon/Helper/Download"),
            S = e("../LobbyCommon/LobbyCommon"),
            y = e("../LobbyCommon/Helper/EventSystem"),
            C = e("../LobbyCommon/Net/ClickLog"),
            f = e("../LobbyCommon/Net/ClickLogEnum"),
            v = e("../LobbyCommon/FullScreenHandler");
        var P;
        cc.sys.OS_ANDROID && (cc.macro.ENABLE_MULTI_TOUCH = !1),
            function(e) {
                e[e.NONE = -1] = "NONE", e[e.INIT = 0] = "INIT", e[e.SEND_CMD = 1] = "SEND_CMD", e[e.LOAD_RESOUCE = 2] = "LOAD_RESOUCE", e[e.LOAD_BUNDLE = 3] = "LOAD_BUNDLE", e[e.FINISH = 4] = "FINISH"
            }(P = o.Status || (o.Status = {}));
        const {
            ccclass: b,
            property: w
        } = cc._decorator;
        let I = class extends cc.Component {
            constructor() {
                super(...arguments), this.needChangeScene = !0, this.needOpenLoading = !0, this.needCloseSplash = !0, this.isFirstInit = !0, this.m_sSceneName = "MainGame", this.m_status = P.NONE, this.m_lastStatus = P.NONE, this.isRecvCommonEventInfo = !1, this.m_isDownloadSkinFinished = !1, this.m_isLobbyRefSetDone = !1
            }
            start() {
                return i(this, void 0, void 0, function*() {
                    if (this.isFirstInit) {
                        let e;
                        if (this.isFirstInit = !1, this.m_isLobbyRefSetDone = !1, yield this.LoadClientConfig().catch(t => {
                                console.error(t), e = t, a.PopupMsgMgr.Instance.ShowPopMsg(a.PopupPriority.Warning, "C04", "InitializeGame", "load game versione error")
                            }), e) return;
                        this.GetLobbyRef();
                        for (let t = 0; t < 200; t++) 0 == this.m_isLobbyRefSetDone && (yield this.Timer(1e3));
                        this.BundleAsync()
                    }
                })
            }
            Timer(e) {
                return i(this, void 0, void 0, function*() {
                    return new Promise(t => setTimeout(t, e))
                })
            }
            update() {
                let e = this.m_status != this.m_lastStatus;
                switch (this.m_lastStatus = this.m_status, this.m_status) {
                    case P.SEND_CMD:
                        e && (console.error("Status.SEND_CMD"), s.LobbyClient.Instance.GetUserClient.getCommonEventInfo(this.RecvCommonEventInfo.bind(this))), this.isRecvCommonEventInfo && (this.m_status = P.LOAD_BUNDLE);
                        break;
                    case P.LOAD_BUNDLE:
                        this.m_isLobbyRefSetDone && this.m_isDownloadSkinFinished && (this.m_status = P.FINISH);
                        break;
                    case P.FINISH:
                        e && (console.error("Status.FINISH"), this.needChangeScene ? cc.director.loadScene(this.m_sSceneName) : y.EventSystem.Event(y.IsGameAppReady).Notify())
                }
            }
            RecvCommonEventInfo(e, t) {
                if (console.warn("RecvCommonEventInfo:" + e), console.warn(t), e == ArkSDK.HttpResult.OK && t && t.cmd_data) {
                    let e = t.cmd_data[900004];
                    e && (console.warn(e), 0 == e.result ? s.LobbyClient.Instance.m_CommonEventInfo_900004 = JSON.stringify(e.data) : s.LobbyClient.Instance.m_CommonEventInfo_900004 = null)
                }
                this.isRecvCommonEventInfo = !0
            }
            GetLobbyRef() {
                if (1 == (self == top)) {
                    r.LoadingMgr.Instance.SetProgress(80, 20), console.log("[Debug] No WebView..."), this.SendLoadPageOk();
                    let e = SS.Common.GameEnvironment.Language + this.m_sSceneName;
                    cc.assetManager.bundles.find(function(t) {
                        return t._config.getSceneInfo(e)
                    }) && (this.m_sSceneName = e), this.m_status = self == top ? P.LOAD_BUNDLE : P.SEND_CMD, this.m_isLobbyRefSetDone = !0
                } else console.log("[Debug] Wait Lobby Parameters..."), window.StartIframeGame = (e, t, o, n, l, c, m) => i(this, void 0, void 0, function*() {
                    let i;
                    console.log("StartIframeGame"), window.SS = e, window.JSUtility = t, window.ArkSDK = n, window.gd_nowLOGO = m, yield d.default.CheckInit(), g.default.Init(), d.default.GetSetting("Game") && (i = d.default.GetSetting("Game").Dependency);
                    for (let e of i) yield _.Download.Bundle(e);
                    yield S.LobbyCommon.Instance.InitAfterModuleDownload(), this.needOpenLoading && r.LoadingMgr.Instance.OpenLoading(), a.PopupMsgMgr.Instance.SetPopupMsgTitle(), this.needCloseSplash && (SS.Common.GameEnvironment.Splash.style.display = "none"), this.needOpenLoading && r.LoadingMgr.Instance.SetProgress(80, 20), s.LobbyClient.SetInstance(o), C.ClickLog.DirectSend(f.LogName.PlayerConversion, f.LogType_PlayerConversion.GameLoading, f.LogEvent_EnterGameProcess.DynamicLoading), h.GameJpMgr.SetInstance(l), u.Device.SetInstance(c), this.SetConsoleLog();
                    let p = SS.Common.GameEnvironment.Language + this.m_sSceneName;
                    cc.assetManager.bundles.find(function(e) {
                        return e._config.getSceneInfo(p)
                    }) && (this.m_sSceneName = p), console.log("%c This is game's lobby system object.", "font-size:18px;font-weight:bold;color:Violet"), console.log(t), console.log(e), console.log(o), console.log(ArkSDK), this.CheckVersionFlow(), this.m_isLobbyRefSetDone = !0
                })
            }
            CheckVersionFlow() {
                return i(this, void 0, void 0, function*() {
                    let e;
                    yield this.DownloadGameVersion().catch(t => {
                        console.error(t), e = t, a.PopupMsgMgr.Instance.ShowPopMsg(a.PopupPriority.Warning, "C19", "InitializeGame", "load game versione error")
                    })
                })
            }
            SetConsoleLog() {
                0 == SS.Common.GameEnvironment.ProjectSetting.ShowConsoleLog && (console.log = function() {}, cc.log = function() {}), 0 == SS.Common.GameEnvironment.ProjectSetting.ShowConsoleWarn && (console.warn = function() {}, cc.warn = function() {}), 0 == SS.Common.GameEnvironment.ProjectSetting.ShowConsoleError && (console.error = function() {}, cc.error = function() {})
            }
            DownloadGameVersion() {
                return i(this, void 0, void 0, function*() {
                    yield new Promise((e, t) => {
                        (new l.VersionDownloader).Start(SS.Common.GameEnvironment.S3URL + SS.Common.GameEnvironment.ProjectSetting.Modules[SS.Common.GameEnvironment.CurrentGameNow].Path, o => {
                            try {
                                this.CheckVersion(o, e)
                            } catch (n) {
                                t(n)
                            }
                        }, e => {
                            t(e)
                        })
                    })
                })
            }
            CheckVersion(e, t) {
                SS.Common.GameEnvironment.IgnoreVersionCtrl ? (SS.Common.GameEnvironment.CurrentGameVersion = this.m_sVersion, this.SendLoadPageOk(), this.m_status = self == top ? P.LOAD_BUNDLE : P.SEND_CMD, console.log("IgnoreVersionCtrl , client version : ", this.m_sVersion)) : e.Maintain.IsMaintainNow ? a.PopupMsgMgr.Instance.ShowPopMsg(a.PopupPriority.Warning, "C17", "InitializeGame", "maintain", null) : e.Version != this.m_sVersion ? a.PopupMsgMgr.Instance.ShowPopMsg(a.PopupPriority.Warning, "C18", "InitializeGame", "maintain", null) : (SS.Common.GameEnvironment.CurrentGameVersion = this.m_sVersion, this.SendLoadPageOk(), this.m_status = self == top ? P.LOAD_BUNDLE : P.SEND_CMD), t()
            }
            SendLoadPageOk() {
                -1 == SS.Common.GameEnvironment.SentGameFlowStatus.indexOf(SS.Common.GameEnvironment.CurrentGameNow + s.GAME_STATUS.LOAD_PAGE_OK) && (SS.Common.GameEnvironment.SentGameFlowStatus.push(SS.Common.GameEnvironment.CurrentGameNow + s.GAME_STATUS.LOAD_PAGE_OK), self == top || s.LobbyClient.Instance.GetUserClient.SendPlayFlowData(SS.Common.GameEnvironment.DeviceInfo, SS.Common.GameEnvironment.CurrentGameNow, s.GAME_STATUS.LOAD_PAGE_OK))
            }
            LoadClientConfig() {
                return i(this, void 0, void 0, function*() {
                    yield new Promise((e, t) => {
                        cc.loader.loadRes("config", (o, n) => {
                            if (o) t(o);
                            else try {
                                let o = n.json;
                                this.m_sVersion = o.Version, o.hasOwnProperty("Debug") && o.Debug.hasOwnProperty("MainScene") ? this.m_sSceneName = o.Debug.MainScene : this.m_sSceneName = "MainGame", e(null)
                            } catch (i) {
                                t(i)
                            }
                        })
                    })
                })
            }
            parseTitleType_900004(e) {
                let t = [];
                try {
                    let n = JSON.parse(e);
                    if (n.hasOwnProperty("Enable") && n.Enable && n.hasOwnProperty("QuestList") && n.QuestList.length > 0 && n.hasOwnProperty("UserQuestData")) {
                        let e = n.QuestList;
                        if (0 == e.length) return [];
                        for (let o = 0; o < e.length; o++) {
                            let i = e[o];
                            switch (i.TitleType) {
                                case 102:
                                    n.NowTimeUTC < i.ExtraInfo.jp_end_time && n.NowTimeUTC > i.ExtraInfo.jp_begin_time && t.push("RankBonus")
                            }
                        }
                    }
                } catch (o) {
                    console.log("[]", o)
                }
                return t
            }
            BundleAsync() {
                return i(this, void 0, void 0, function*() {
                    let e = !0;
                    this.m_isDownloadSkinFinished = !1, yield m.default.Instance.DownloadConfig().catch(() => {
                        e = !1
                    }), e && (yield m.default.Instance.DownloadCommonBundles(), yield this.DownloadGameFeature()), yield p.default.Instance.Init();
                    let t = p.default.Instance.GetLoadList("Game"),
                        o = {},
                        n = cc.director.getScene().getChildByName("LobbyCommon");
                    if (o.Purchase = e => {
                            e.parent = n, e.setSiblingIndex(0)
                        }, o.JPReward = e => {
                            e.parent = n, e.setSiblingIndex(1)
                        }, o.QuestSystem = e => {
                            e.parent = n, e.setSiblingIndex(2)
                        }, o.SystemBackground = e => {
                            e.parent = n, e.setSiblingIndex(3)
                        }, o.Profile = e => {
                            e.parent = n, e.active = !1
                        }, !this.CheckInFishGame()) {
                        let e = this.parseTitleType_900004(s.LobbyClient.Instance.m_CommonEventInfo_900004);
                        for (let o of e) t.push(o);
                        o.RankBonus = e => {
                            e.parent = n
                        }
                    }
                    let i = SS.Common.GameEnvironment.GetCurGameIsVertical();
                    yield p.default.Instance.Download(o, t, i), yield this.DoModuleBaseOnloadEvent(), yield this.DoModuleBaseStartEvent(), yield this.DoModuleBaseWaitPacket(), yield this.DoModuleBaseDownloadResource(), g.default.Init(), this.m_isDownloadSkinFinished = !0, y.EventSystem.Event(y.ScreenOrientationState.ChangeOrientation).Notify(i ? v.Orientation.Portrait : v.Orientation.Landscape)
                })
            }
            CheckInFishGame() {
                let e = SS.Common.GameEnvironment.GetGameIdByName(SS.Common.GameEnvironment.CurrentGameNow);
                return null != e && "" != e && "FISH" == SS.Common.GameEnvironment.GameSetting.Icon[e].IconWaysText
            }
            DownloadGameFeature() {
                return i(this, void 0, void 0, function*() {
                    let e = cc.director.getScene().getChildByName("LobbyCommon").getChildByName("GameFeatureRoot");
                    yield d.default.CheckInit();
                    let t = d.default.GetSetting("FeatureUIGame"),
                        o = [];
                    if (t) {
                        let e = SS.Common.GameEnvironment.GameSetting.kioskOpenGameList;
                        for (let n = 0; n < t.length; n++) {
                            let i = t[n];
                            e.indexOf(i) >= 0 && o.push(i)
                        }
                    }
                    if (o) {
                        yield m.default.Instance.DownloadGameFeatureBundles(!1, o);
                        for (let t = 0; t < o.length; t++) {
                            let n = m.default.Instance.GetGameFeatureBundlesName(o[t]),
                                i = yield m.default.Instance.GetMainPrefab(n);
                            if (i) {
                                let t = cc.instantiate(i);
                                t.getComponent(c.EventModule).init(null, null), t.parent = e
                            }
                        }
                    }
                })
            }
            DoModuleBaseWaitPacket() {
                return i(this, void 0, void 0, function*() {
                    let e = y.EventSystem.Event(y.LobbyState.WaitPacket).Length;
                    for (y.EventSystem.Event(y.LobbyState.WaitPacket).Notify(() => {
                            e--
                        }); 0 !== e;) yield SS.Common.WaitForSeconds(.25)
                })
            }
            DoModuleBaseDownloadResource() {
                return i(this, void 0, void 0, function*() {
                    let e = y.EventSystem.Event(y.LobbyState.DownloadResources).Length;
                    for (y.EventSystem.Event(y.LobbyState.DownloadResources).Notify(() => {
                            e--
                        }); 0 !== e;) yield SS.Common.WaitForSeconds(.25)
                })
            }
            DoModuleBaseOnloadEvent() {
                return i(this, void 0, void 0, function*() {
                    let e = y.EventSystem.Event(y.ModuleState.OnLoad).Length;
                    for (y.EventSystem.Event(y.ModuleState.OnLoad).Notify(() => {
                            e--
                        }); 0 !== e;) yield SS.Common.WaitForSeconds(.25)
                })
            }
            DoModuleBaseStartEvent() {
                return i(this, void 0, void 0, function*() {
                    let e = y.EventSystem.Event(y.ModuleState.Start).Length;
                    for (y.EventSystem.Event(y.ModuleState.Start).Notify(() => {
                            e--
                        }); 0 !== e;) yield SS.Common.WaitForSeconds(.25)
                })
            }
        };
        n([w(cc.Boolean)], I.prototype, "needChangeScene", void 0), n([w(cc.Boolean)], I.prototype, "needOpenLoading", void 0), n([w(cc.Boolean)], I.prototype, "needCloseSplash", void 0), I = n([b], I), o.GAME_APP = I, cc._RF.pop()
    }, {
        "../LobbyCommon/Component/BundleCtrl": "BundleCtrl",
        "../LobbyCommon/EventModule/EventModule": "EventModule",
        "../LobbyCommon/FullScreenHandler": "FullScreenHandler",
        "../LobbyCommon/Helper/Download": "Download",
        "../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../LobbyCommon/Helper/LayerSystem": "LayerSystem",
        "../LobbyCommon/Helper/Setting": "Setting",
        "../LobbyCommon/InGameJp/Script/GameJpMgr": "GameJpMgr",
        "../LobbyCommon/Loading/Script/LoadingMgr": "LoadingMgr",
        "../LobbyCommon/LobbyCommon": "LobbyCommon",
        "../LobbyCommon/Net/ClickLog": "ClickLog",
        "../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum",
        "../LobbyCommon/Net/Downloader/VersionDownloader": "VersionDownloader",
        "../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../LobbyCommon/Skin/Skin": "Skin",
        "../LobbyCommon/SwipeMgr/Scripts/Device": "Device"
    }],
    GDC_APP: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "02ca2iMFqtLDLAufmAwMZ8r", "GDC_APP");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GDC_APP = void 0;
        const s = e("./Loading/Script/LoadingMgr"),
            r = e("./Net/Downloader/ProjectSettingDownloader"),
            a = e("./Net/Downloader/ModuleDownloader"),
            l = e("./PopupMessage/Script/PopupMsgMgr"),
            c = e("./Net/Downloader/VersionDownloader"),
            h = e("./Component/GlobalData"),
            m = e("./Net/Downloader/GameMsgDownloader"),
            u = e("./Net/Downloader/ErrorMsgDownloader"),
            d = e("./SwipeMgr/Scripts/Device"),
            p = e("./LobbyCommon"),
            g = e("./Helper/LayerSystem"),
            _ = e("./Helper/Setting"),
            S = e("./Helper/Download"),
            y = e("./Component/Keyboard/Script/KeyboardMgr"),
            C = e("./Define/CustomConfig"),
            f = e("./FixEngineUtil"),
            {
                ccclass: v,
                property: P
            } = cc._decorator;
        let b = class extends cc.Component {
            constructor() {
                super(...arguments), this.tmpS3HOST = "", this.isInit = !1
            }
            RemoveVirtualKeyboard() {
                var e, t, o;
                null === (t = null === (e = y.default.Instance) || void 0 === e ? void 0 : e.node) || void 0 === t || t.destroy(), null === (o = y.default.Instance) || void 0 === o || o.destroy()
            }
            GetCustomConfig() {
                return i(this, void 0, void 0, function*() {
                    let e = d.Device.Instance.GetURLParameterByName("CustomConfig");
                    if ("" == e && (e = "default"), console.log("GDC_APP GetCustomConfig", e), -1 != this.tmpProjectSetting.CustomConfig.indexOf(e)) try {
                        const o = window.gd_nowLOGO,
                            n = yield S.Download.JSON(o + `/CustomConfig/${e}.json`);
                        C.CustomConfig.Instance.Init(e, n), console.log("GDC_APP config", C.CustomConfig.Instance);
                        const i = cc.sys.os == cc.sys.OS_OSX || cc.sys.os == cc.sys.OS_WINDOWS || cc.sys.os == cc.sys.OS_LINUX;
                        n.useVirtualKeyboard && i ? y.default.Instance.init() : this.RemoveVirtualKeyboard()
                    } catch (t) {
                        console.log("GDC_APP Get Config Failed", C.CustomConfig.Instance), this.RemoveVirtualKeyboard()
                    } else this.RemoveVirtualKeyboard()
                })
            }
            start() {
                return i(this, void 0, void 0, function*() {
                    if (this.isInit) return;
                    f.FixEngineUtils.ApplyCustomEngineFixes(), window.StartIframe = {}, this.isInit = !0;
                    var e = document.getElementById("splash");
                    let t;
                    if (yield this.LoadClientConfig().catch(e => {
                            t = e, console.error(e), l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Critical, "C01", "InitializeScene", e)
                        }), t) return;
                    if (yield this.DownloadProjectSetting().catch(e => {
                            t = e, console.error(e), l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Critical, "C02", "InitializeScene", e)
                        }), t) return;
                    if (yield this.DownloadLobbyModule().catch(e => {
                            console.error(e), t = e, l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Critical, "C03", "InitializeScene", e)
                        }), t) return;
                    if (yield this.DownloadErrorMsgByLan().catch(e => {
                            t = e, l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Critical, "C39", "InitializeScene", e)
                        }), t) return;
                    if (yield this.DownloadGameMsgByLan().catch(e => {
                            t = e, l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Critical, "C40", "InitializeScene", e)
                        }), t) return;
                    SS.Common.GameEnvironment.S3URL = window.location.protocol + "//" + this.tmpS3HOST, yield _.default.CheckInit(), g.default.Init();
                    let o = _.default.GetSetting("Lobby").Dependency;
                    for (let s of o) yield S.Download.Bundle(s);
                    if (yield p.LobbyCommon.Instance.InitAfterModuleDownload(), l.PopupMsgMgr.Instance.SetPopupMsgTitle(), null != SS.Common.GameEnvironment.OriginalSplashSRC && null != SS.Common.GameEnvironment.OriginalSplashSRC || (SS.Common.GameEnvironment.OriginalSplashSRC = e.src), null != SS.Common.GameEnvironment.OriginalSplashSRC && (null == SS.Common.GameEnvironment.verticalSplashSRC || null == SS.Common.GameEnvironment.verticalSplashSRC)) {
                        let e = SS.Common.GameEnvironment.OriginalSplashSRC.substr(0, SS.Common.GameEnvironment.OriginalSplashSRC.lastIndexOf("/")) + "/verticalsplash.jpg";
                        SS.Common.GameEnvironment.verticalSplashSRC = e
                    }
                    d.Device.Instance.init(), yield this.GetCustomConfig(), SS.Common.GameEnvironment.Splash = e;
                    let n = this.GetChangeToGameName();
                    if ("" == n || null == n || null == n ? (e && (e.style.display = "none"), s.LoadingMgr.Instance.OpenLoading(e), s.LoadingMgr.Instance.SetProgress(40, 5)) : SS.Common.GameEnvironment.ChangeToGameName = n, !SS.Common.GameEnvironment.IgnoreVersionCtrl && (yield this.DownloadLobbyVersion().catch(e => {
                            t = e, l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Critical, "C04", "InitializeScene", e)
                        }), t)) return;
                    JSUtility.FullScreen.ListenerFullScreenChange(), p.LobbyCommon.Instance.InitWaitForSeconds();
                    let i = SS.Common.GameEnvironment.Language + "Login";
                    cc.assetManager.bundles.find(function(e) {
                        return e._config.getSceneInfo(i)
                    }) ? cc.director.loadScene(i) : cc.director.loadScene("Login")
                })
            }
            GetChangeToGameName() {
                let e;
                return JSUtility.IsSupportLocalStorage() ? (e = localStorage.getItem("changeToGameName"), localStorage.setItem("changeToGameName", "")) : JSUtility.IsSupportCookie() && (e = JSUtility.GetCookie("changeToGameName"), document.cookie = "changeToGameName=;"), e
            }
            LoadClientConfig() {
                return i(this, void 0, void 0, function*() {
                    yield new Promise((e, t) => {
                        cc.loader.loadRes("config", (o, n) => {
                            if (o) t(o);
                            else try {
                                let o = n.json;
                                if (o && o.hasOwnProperty("Debug")) {
                                    h.GlobalData.isDeveloper = !0, h.GlobalData.IsCompress = !1;
                                    let e = o.Debug;
                                    e.hasOwnProperty("UserID") && (h.GlobalData.tmpUserID = e.UserID), e.hasOwnProperty("UserPassword") && (h.GlobalData.tmpUserPW = e.UserPassword), e.hasOwnProperty("isScoreBox") && (h.GlobalData.tmpCustomScoreBoxStatus = e.isScoreBox), e.hasOwnProperty("LogoMode") && (window.gd_LogoMode = e.LogoMode), e.hasOwnProperty("NowLOGO") && (window.gd_nowLOGO = e.NowLOGO)
                                } else o && o.hasOwnProperty("IsCompress") ? h.GlobalData.IsCompress = o.IsCompress : h.GlobalData.IsCompress = !0;
                                this.tmpVersion = o.Version, this.tmpS3HOST = o.S3HOST, h.GlobalData.S3Host = this.tmpS3HOST, e(n)
                            } catch (i) {
                                t(i)
                            }
                        })
                    })
                })
            }
            DownloadErrorMsgByLan() {
                return i(this, void 0, void 0, function*() {
                    yield new Promise((e, t) => {
                        let o;
                        o = this.tmpProjectSetting.CDN_HOST ? window.location.protocol + "//" + this.tmpProjectSetting.CDN_HOST : "../../..", (new u.ErrorMsgDownloader).Start(o + "/Message/" + SS.Common.GameEnvironment.Language, o => {
                            try {
                                SS.Common.GameEnvironment.ErrorMsg = o, e(o)
                            } catch (n) {
                                t(n)
                            }
                        }, e => {
                            t(e)
                        })
                    })
                })
            }
            DownloadGameMsgByLan() {
                return i(this, void 0, void 0, function*() {
                    yield new Promise((e, t) => {
                        let o;
                        o = this.tmpProjectSetting.CDN_HOST ? window.location.protocol + "//" + this.tmpProjectSetting.CDN_HOST : "../../..", (new m.GameMsgDownloader).Start(o + "/Message/" + SS.Common.GameEnvironment.Language, o => {
                            try {
                                SS.Common.GameEnvironment.GameMsg = o, e(o)
                            } catch (n) {
                                t(n)
                            }
                        }, e => {
                            t(e)
                        })
                    })
                })
            }
            DownloadLobbyVersion() {
                return i(this, void 0, void 0, function*() {
                    yield new Promise((e, t) => {
                        let o = this.tmpProjectSetting.Modules.Lobby.Path;
                        (new c.VersionDownloader).Start(window.location.protocol + "//" + this.tmpS3HOST + o, o => {
                            try {
                                this.CheckVersion(o, e)
                            } catch (n) {
                                t(n)
                            }
                        }, e => {
                            t(e)
                        })
                    })
                })
            }
            CheckVersion(e, t) {
                let o, n = SS.Common.BaseFunction.GetURLParameterByName("KioskDEV"),
                    i = SS.Common.BaseFunction.GetURLParameterByName("CustomConfig"),
                    s = SS.Common.GameEnvironment.ProjectSetting;
                if (n && s.KioskDEVs.includes(SS.Common.BaseFunction.SHA1(n)) && (SS.Common.GameEnvironment.IgnoreVersionCtrl = !0), o = e.Version, SS.Common.GameEnvironment.IgnoreVersionCtrl) console.log("IgnoreVersionCtrl , client version : ", this.tmpVersion);
                else if (e.Maintain.IsMaintainNow) l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Critical, "C07", "InitializeScene", "maintain", null);
                else if (o != this.tmpVersion) {
                    const {
                        protocol: e,
                        hostname: t
                    } = window.location, o = "" != i ? `?CustomConfig=${i}` : "";
                    location.replace(`${e}//${t}${o}`)
                }
                SS.Common.GameEnvironment.LobbyVersion = this.tmpVersion, t()
            }
            DownloadProjectSetting() {
                return i(this, void 0, void 0, function*() {
                    yield new Promise((e, t) => {
                        let o, n = "/" + window.gd_nowLOGO + "ProjectSetting";
                        o = h.GlobalData.IsCompress ? window.location.protocol + "//" + this.tmpS3HOST + n + ".txt" : window.location.protocol + "//" + this.tmpS3HOST + n + ".json", (new r.ProjectSettingDownloader).Start(o, !h.GlobalData.IsCompress, t => {
                            this.tmpProjectSetting = t, e(null)
                        }, e => {
                            t(e)
                        })
                    })
                })
            }
            DownloadLobbyModule() {
                return i(this, void 0, void 0, function*() {
                    yield new Promise((e, t) => {
                        (new a.ModuleDownloader).Start("Lobby", this.tmpProjectSetting, () => {
                            SS.Common.GameEnvironment.IgnoreVersionCtrl = h.GlobalData.isDeveloper, SS.Common.GameEnvironment.Initialize(this.tmpProjectSetting, () => {
                                e(null)
                            }, e => {
                                t(e)
                            })
                        }, e => {
                            t(e)
                        })
                    })
                })
            }
        };
        b = n([v], b), o.GDC_APP = b, cc._RF.pop()
    }, {
        "./Component/GlobalData": "GlobalData",
        "./Component/Keyboard/Script/KeyboardMgr": "KeyboardMgr",
        "./Define/CustomConfig": "CustomConfig",
        "./FixEngineUtil": "FixEngineUtil",
        "./Helper/Download": "Download",
        "./Helper/LayerSystem": "LayerSystem",
        "./Helper/Setting": "Setting",
        "./Loading/Script/LoadingMgr": "LoadingMgr",
        "./LobbyCommon": "LobbyCommon",
        "./Net/Downloader/ErrorMsgDownloader": "ErrorMsgDownloader",
        "./Net/Downloader/GameMsgDownloader": "GameMsgDownloader",
        "./Net/Downloader/ModuleDownloader": "ModuleDownloader",
        "./Net/Downloader/ProjectSettingDownloader": "ProjectSettingDownloader",
        "./Net/Downloader/VersionDownloader": "VersionDownloader",
        "./PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "./SwipeMgr/Scripts/Device": "Device"
    }],
    GameBar: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "5cfa0k63jNHBb7gKiA/nuRV", "GameBar");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GameBar = void 0;
        const i = e("../../LobbyCommon/Component/NumberCountUp"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.NodeScoreBox = null, this.NodeCreadit = null, this.BtnPurchase = null, this.BtnPromptPurchase = null, this.BtnBetDown = null, this.BtnBetUp = null, this.AutoRoot = null, this.BtnAuto = null, this.NodeBtnAuto = null, this.BtnAutoStop = null, this.NodeBtnAutoStop = null, this.BtnSpin = null, this.NodeBtnSpin = null, this.BtnStop = null, this.NodeBtnStop = null, this.BtnStart = null, this.NodeBtnStart = null, this.BtnTake = null, this.NodeBtnTake = null, this.BtnFastSpin = null, this.NodeBtnFastSpin = null, this.BtnStopFastSpin = null, this.NodeBtnStopFastSpin = null, this.TextJPBet = null, this.TextGameBet = null, this.TextVersion = null, this.TextUserName = null, this.NumAnimGameWin = null, this.NumAnimWinning = null, this.NumAnimEntries = null, this.NumAnimCreadit = null, this.m_skipMachineId = !1
            }
            _start() {}
            _onLoad() {}
            _onDestroy() {}
            Compose(e) {}
            setVersion() {
                let e = SS.Common.GameEnvironment.CurrentGameVersion;
                "" == SS.Common.GameEnvironment.CurrentGameVersion && (e = "DEV_MODE"), this.TextVersion.string = "v." + e
            }
            setUserName(e, t = 0) {
                if (this.m_skipMachineId) return;
                let o = e;
                0 == t ? this.m_skipMachineId = !0 : o = o + "(" + t + ")", this.TextUserName.string = o
            }
        };
        n([r(cc.Node)], a.prototype, "NodeScoreBox", void 0), n([r(cc.Node)], a.prototype, "NodeCreadit", void 0), n([r(cc.Button)], a.prototype, "BtnPurchase", void 0), n([r(cc.Button)], a.prototype, "BtnPromptPurchase", void 0), n([r(cc.Button)], a.prototype, "BtnBetDown", void 0), n([r(cc.Button)], a.prototype, "BtnBetUp", void 0), n([r(cc.Node)], a.prototype, "AutoRoot", void 0), n([r(cc.Button)], a.prototype, "BtnAuto", void 0), n([r(cc.Node)], a.prototype, "NodeBtnAuto", void 0), n([r(cc.Button)], a.prototype, "BtnAutoStop", void 0), n([r(cc.Node)], a.prototype, "NodeBtnAutoStop", void 0), n([r(cc.Button)], a.prototype, "BtnSpin", void 0), n([r(cc.Node)], a.prototype, "NodeBtnSpin", void 0), n([r(cc.Button)], a.prototype, "BtnStop", void 0), n([r(cc.Node)], a.prototype, "NodeBtnStop", void 0), n([r(cc.Button)], a.prototype, "BtnStart", void 0), n([r(cc.Node)], a.prototype, "NodeBtnStart", void 0), n([r(cc.Button)], a.prototype, "BtnTake", void 0), n([r(cc.Node)], a.prototype, "NodeBtnTake", void 0), n([r(cc.Button)], a.prototype, "BtnFastSpin", void 0), n([r(cc.Node)], a.prototype, "NodeBtnFastSpin", void 0), n([r(cc.Button)], a.prototype, "BtnStopFastSpin", void 0), n([r(cc.Node)], a.prototype, "NodeBtnStopFastSpin", void 0), n([r(cc.Label)], a.prototype, "TextJPBet", void 0), n([r(cc.Label)], a.prototype, "TextGameBet", void 0), n([r(cc.Label)], a.prototype, "TextVersion", void 0), n([r(cc.Label)], a.prototype, "TextUserName", void 0), n([r(i.NumberCountUp)], a.prototype, "NumAnimGameWin", void 0), n([r(i.NumberCountUp)], a.prototype, "NumAnimWinning", void 0), n([r(i.NumberCountUp)], a.prototype, "NumAnimEntries", void 0), n([r(i.NumberCountUp)], a.prototype, "NumAnimCreadit", void 0), a = n([s], a), o.GameBar = a, cc._RF.pop()
    }, {
        "../../LobbyCommon/Component/NumberCountUp": "NumberCountUp"
    }],
    GameIconMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "f99b5IAtJNJ0oylu/lq7sxI", "GameIconMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GameIconMgr = o.IconSetting = o.Property = void 0;
        const i = e("../../../LobbyCommon/Helper/EventSystem"),
            s = e("../../../LobbyCommon/InGameJp/Script/GameJpMgr"),
            r = e("./FavoriteMgr"),
            a = e("./IconGroupData"),
            l = e("./IconScrollView"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        let m = class {
            constructor() {
                this.FLAG_POS = cc.Vec2.ZERO, this.FLAGR_POS = cc.Vec2.ZERO, this.HEART_POS = cc.Vec2.ZERO, this.BUYBONUS_FLAG_POS = cc.Vec2.ZERO, this.FLAG_SCALE = 0, this.LABEL_POS = cc.Vec2.ZERO, this.LABEL_SCALE = 0, this.BTN_SIZE = cc.Size.ZERO
            }
        };
        n([h(cc.Vec2)], m.prototype, "FLAG_POS", void 0), n([h(cc.Vec2)], m.prototype, "FLAGR_POS", void 0), n([h(cc.Vec2)], m.prototype, "HEART_POS", void 0), n([h(cc.Vec2)], m.prototype, "BUYBONUS_FLAG_POS", void 0), n([h(cc.Float)], m.prototype, "FLAG_SCALE", void 0), n([h(cc.Vec2)], m.prototype, "LABEL_POS", void 0), n([h(cc.Float)], m.prototype, "LABEL_SCALE", void 0), n([h(cc.Size)], m.prototype, "BTN_SIZE", void 0), m = n([c("Property")], m), o.Property = m;
        let u = class {
            constructor() {
                this.m_iconSizePrefix = "", this.m_ElementProperty = new m
            }
        };
        n([h()], u.prototype, "m_iconSizePrefix", void 0), n([h(m)], u.prototype, "m_ElementProperty", void 0), u = n([c("IconSetting")], u), o.IconSetting = u;
        let d = class extends cc.Component {
            constructor() {
                super(...arguments), this.iconLayoutRoot = null, this.iconLayoutTemplates = [], this.iconScrollView = null, this.BIGX3_ICON_PREFIX = "BIGX3", this.BIGX2_ICON_PREFIX = "BIGX2", this.BIG_ICON_PREFIX = "BIG", this.NORMAL_ICON_PREFIX = "NORMAL", this.COMMIN_SOON = "CS_", this.m_DelClickIcon = null, this.tmpTypeMapIconCtrlList = {}, this.IconAllSetting = [], this.iconGroupDatas = []
            }
            _onLoad() {
                this.m_DelClickIcon = new SS.Common.Delegate
            }
            _start() {
                i.EventSystem.Event(i.FavoriteGame.RefreshFavorite).Insert(this.RefreshFavorite, this)
            }
            _onDestroy() {
                i.EventSystem.Event(i.FavoriteGame.RefreshFavorite).Remove(this.RefreshFavorite, this);
                let e = this;
                if (null != this.tmpTypeMapIconCtrlList)
                    for (let t in this.tmpTypeMapIconCtrlList) this.tmpTypeMapIconCtrlList[t].forEach(o => {
                        o.m_DelClickIcon.remove(e.OnIconClicked, e), this.tmpTypeMapIconCtrlList[t]._onDestroy()
                    });
                this.tmpTypeMapIconCtrlList = null, this.m_DelClickIcon && (this.m_DelClickIcon.Clear(), this.m_DelClickIcon = null)
            }
            SetIconGroupDatas(e) {
                this.iconGroupDatas = e
            }
            AddIconGroupDatas(e) {
                e.forEach(e => {
                    this.iconGroupDatas.push(e)
                })
            }
            SetGroup(e, t) {
                let o = [],
                    n = SS.Common.BaseFunction.getKeyConvertArys(SS.Common.GameEnvironment.InGameJpInfoDict),
                    i = e;
                for (let s = 0; s < n.length; s++) {
                    let e = n[s],
                        r = this.GetIconJpValAry(e),
                        l = this.GetKioskOpenGame(e),
                        c = this.GetThemeIdByNameList(l),
                        h = this.GetSettingSortData(c, l, i),
                        m = this.GetIconSize(c, i),
                        u = this.GetIconIsEqual(m) && "FAVORITE" != t;
                    if (h.length <= 0 && m.length <= 0) continue;
                    let d, p, g, _, S = u ? 1 : h.length,
                        y = !1,
                        C = !1;
                    for (let n = 0; n < S; n++) {
                        u ? (d = m[0], p = h[0].themeId, g = h[h.length - 1].themeId, _ = h.length, d == this.NORMAL_ICON_PREFIX && _ >= 2 && this.GetIconIndexIsOrder(h) && (y = !0)) : (p = h[n].themeId, d = m[n], g = h[n].themeId, _ = 1), 1 != _ && SS.Common.GameEnvironment.InGameJpInfoDict[e].theme_id.length == _ || (C = !0);
                        let i = new a.IconGroupData(r, c, e, p, g, t, d, _, null, null, null, y, C);
                        o.push(i)
                    }
                }
                return o
            }
            GetIconJpValAry(e) {
                let t = SS.Common.BaseFunction.getKeyConvertArys(s.GameJpMgr.Instance.GetAllGameJp());
                for (let o = 0; o < t.length; o++)
                    if (t[o] == e) return s.GameJpMgr.Instance.GetInGameJpArray(t[o], !0);
                return []
            }
            GameSettingSortChange(e, t) {
                let o = [];
                for (let c = 0; c < e.length; c++) {
                    let n = this.GetIconSettingSort(e[c], t); - 1 != n && o.push(n)
                }
                if (o.length <= 1) return;
                o.sort(function(e, t) {
                    return e - t
                });
                let n = o[0],
                    i = [],
                    s = [],
                    r = [];
                for (let c = 0; c < t.length; c++) c < n ? i.push(t[c]) : -1 !== o.indexOf(c) ? r.push(t[c]) : s.push(t[c]);
                let a = 1;
                for (let c = 0; c < o.length - 1; c++) s.length <= 0 ? r.splice(a, 0, "CS_ComminSoon") : (r.splice(a, 0, s[0]), s.splice(0, 1), a += 2);
                let l = i.concat(r).concat(s);
                return console.warn("[SettingSortChange]"), console.log(l), l
            }
            GetSettingSortData(e, t, o) {
                let n = [],
                    i = [];
                for (let s = 0; s < o.length; s++) i.push(o[s].replace(/\w*_/, ""));
                for (let s = 0; s < e.length; s++) {
                    let o = this.GetIconSettingSort(e[s], i);
                    if (-1 == o) continue;
                    let r = JSON.parse("{}");
                    r.sortVal = o, r.gameName = e[s], r.themeId = t[s], n.push(r)
                }
                return n.sort(function(e, t) {
                    return e.sortVal - t.sortVal
                }), n
            }
            GetIconSettingSort(e, t) {
                if (t.length <= 0) return -1;
                for (let o = 0; o < t.length; o++)
                    if (t[o].replace(/\w*_/, "") == e) return o;
                return -1
            }
            GetIconSize(e, t) {
                let o = [];
                return t.forEach(t => {
                    let n = t.replace(/\w*_/, "");
                    e.forEach(e => {
                        if (e == n) {
                            let e = -1 != t.indexOf(this.BIGX3_ICON_PREFIX) ? this.BIGX3_ICON_PREFIX : -1 != t.indexOf(this.BIGX2_ICON_PREFIX) ? this.BIGX2_ICON_PREFIX : -1 != t.indexOf(this.BIG_ICON_PREFIX) ? this.BIG_ICON_PREFIX : this.NORMAL_ICON_PREFIX;
                            o.push(e)
                        }
                    })
                }), o
            }
            GetSingleIconSize(e) {
                return -1 != e.indexOf(this.BIGX3_ICON_PREFIX) ? this.BIGX3_ICON_PREFIX : -1 != e.indexOf(this.BIGX2_ICON_PREFIX) ? this.BIGX2_ICON_PREFIX : -1 != e.indexOf(this.BIG_ICON_PREFIX) ? this.BIG_ICON_PREFIX : this.NORMAL_ICON_PREFIX
            }
            GetIconIsEqual(e) {
                if (e.length <= 0) return !1;
                if (e.length <= 1) return !0;
                let t = e[0];
                for (let o of e)
                    if (o !== t) return !1;
                return !0
            }
            GetIconIndexIsOrder(e) {
                if (e.length <= 1) return !0;
                for (let t = 0; t < e.length - 1; t++) {
                    let o = e[t + 1].sortVal - e[t].sortVal;
                    if (2 != Math.abs(o)) return !0
                }
                return !1
            }
            GetKioskOpenGame(e) {
                let t = [],
                    o = SS.Common.GameEnvironment.InGameJpInfoDict[e].theme_id;
                for (let n = 0; n < o.length; n++) {
                    let e = !1;
                    for (let t of SS.Common.GameEnvironment.GameSetting.kioskOpenGameList)
                        if (t == this.GetThemeIdByNameList(o)[n]) {
                            e = !0;
                            break
                        }
                    e && t.push(o[n])
                }
                return t
            }
            GetThemeIdByNameList(e) {
                let t = [];
                for (let o = 0; o < e.length; o++) {
                    let n = e[o];
                    if (SS.Common.GameEnvironment.GameSetting.hasOwnProperty("Icon") && SS.Common.GameEnvironment.GameSetting.Icon.hasOwnProperty(n) && SS.Common.GameEnvironment.GameSetting.Icon[n].hasOwnProperty("GameName")) {
                        let e = SS.Common.GameEnvironment.GameSetting.Icon[n].GameName;
                        t.push(e)
                    }
                }
                return t
            }
            SetIcon(e, t, o) {
                null != s.GameJpMgr.Instance && s.GameJpMgr.Instance.ClearGameJpBroadcastEvent();
                for (let i in e) {
                    let n = e[i];
                    const s = n.length;
                    let r = [],
                        a = [],
                        l = 0;
                    for (; l < s;) {
                        let e = cc.instantiate(this.iconLayoutTemplates["en" == SS.Common.GameEnvironment.Language ? 0 : 1]);
                        e.setParent(this.iconLayoutRoot);
                        let s = e.getComponent("IconVerticleLayout");
                        s._onLoad(), l = s.SetIcon(i, l, n, t, o, this.IconAllSetting, this.iconGroupDatas), s.m_DelClickIcon.Insert(this.OnIconClicked, this), e.active = !1, r.push(e), a.push(s)
                    }
                    this.iconScrollView.AddNodeList(i, r.slice(0)), this.tmpTypeMapIconCtrlList[i] = a.slice(0), SS.Common.GameEnvironment.CurrentTypeGameCounts && !SS.Common.GameEnvironment.CurrentTypeGameCounts[i] && (SS.Common.GameEnvironment.CurrentTypeGameCounts[i] = this.iconScrollView.NodeListLength(i), console.log("[Current " + i + " Game verticleLayout Count] " + SS.Common.GameEnvironment.CurrentTypeGameCounts[i])), r = null, a = null, n = null
                }
                SS.Common.GameEnvironment.CurrentGameTypeNow || (SS.Common.GameEnvironment.CurrentGameTypeNow = "ALL"), this.iconScrollView.SetIconViewNodePosFromCookie();
                let n = SS.Common.GameEnvironment.CurrentGameTypeNow;
                SS.Common.GameEnvironment.CurrentTypeGameCounts[n] && SS.Common.GameEnvironment.GameTypeMapScrollContentPos && SS.Common.GameEnvironment.GameTypeMapScrollContentPos[n] && SS.Common.GameEnvironment.CurrentTypeGameCounts[n] != this.iconScrollView.NodeListLength(n) && (SS.Common.GameEnvironment.GameTypeMapScrollContentPos[n].x = 0), this.ShowIcon(n)
            }
            OnSwitchGame(e) {
                this.OnIconClicked(e, !0)
            }
            OnIconClicked(e, t = !1) {
                console.warn("[OnIconClicked] gameName = " + e + ", isSwitchGame = " + t), this.iconScrollView.SaveScrollPosition(), this.m_DelClickIcon.Length > 0 && this.m_DelClickIcon.Notify(e, t)
            }
            ClearScrollPositionData() {
                SS.Common.GameEnvironment.GameTypeMapScrollContentPos = {}
            }
            RecordCurrentGameTypePos() {
                this.iconScrollView.RecordPos(SS.Common.GameEnvironment.CurrentGameTypeNow)
            }
            ShowIcon(e) {
                let t = SS.Common.GameEnvironment.CurrentGameTypeNow;
                e !== t && this.iconScrollView.IsNodeListExist(t) && (this.iconScrollView.StopCurrentScroll(), this.iconScrollView.SetActive(t, !1)), this.iconScrollView.IsNodeListExist(e) ? ("FAVORITE" == e ? (this.ShowFavoriteIcon(), this.iconScrollView.AutoLayoutFavorite(r.FavoriteMgr.Instance.m_strFavoriteList.length)) : (this.iconScrollView.SetActive(e, !0), this.iconScrollView.AutoLayout(this.iconScrollView.NodeListLength(e))), this.iconScrollView.RestoreContentPos(e), this.iconScrollView.CheckPromptShow(), SS.Common.GameEnvironment.CurrentGameTypeNow = e, this.iconScrollView.onScrollingDrawCallOpt()) : this.iconScrollView.StopCurrentScroll(), this.SetJpPanelPosition(e)
            }
            SetJpPanelPosition(e) {
                let t = 0,
                    o = this.tmpTypeMapIconCtrlList[e];
                if (o.length > 1) {
                    let e, n = null;
                    for (let t = 0; t < o.length; t++) {
                        let i = o[t];
                        if (1 == i.node.active)
                            if (null == e) e = i.node;
                            else if (null == n) {
                            n = i.node;
                            break
                        }
                    }
                    e && n && (t = n.position.x - e.position.x)
                }
                let n = this.GetThemeIdByNameList(r.FavoriteMgr.Instance.m_strFavoriteList);
                for (let i = 0; i < o.length; i++) {
                    let s = o[i];
                    s.SetGameJpPosition(t), "FAVORITE" == e && s.CheckIfNeedToHideJpPanel(n)
                }
            }
            ShowFavoriteIcon() {
                let e = this.tmpTypeMapIconCtrlList.FAVORITE;
                if (e)
                    for (let t = 0; t < e.length; t++) {
                        let o = e[t].GetGameIDList();
                        e[t].node.active = !1;
                        for (let n = 0; n < o.length; n++) r.FavoriteMgr.Instance.m_strFavoriteList.indexOf(o[n]) > -1 && (e[t].node.active = !0)
                    }
            }
            setEventFlag(e, t) {
                try {
                    this.tmpTypeMapIconCtrlList[e].forEach(e => {
                        e.m_vecIconMgr.forEach(e => {
                            e.checkEventAndSetFlag(t)
                        })
                    })
                } catch (o) {
                    console.error("setEventFlag error")
                }
            }
            setFishFlagByEvent(e, t, o = !1, n, i) {
                try {
                    this.tmpTypeMapIconCtrlList[e].forEach(e => {
                        e.m_vecIconMgr.forEach(e => {
                            e.SetFishEventFlag(t, o, n, i)
                        })
                    })
                } catch (s) {
                    console.error("setFlag error")
                }
            }
            RefreshFavorite(e, t) {
                for (let o in this.tmpTypeMapIconCtrlList)
                    for (let n = 0; n < this.tmpTypeMapIconCtrlList[o].length; n++) this.tmpTypeMapIconCtrlList[o][n].RefreshHeartCheckbox(e, t)
            }
        };
        n([h(cc.Node)], d.prototype, "iconLayoutRoot", void 0), n([h([cc.Prefab])], d.prototype, "iconLayoutTemplates", void 0), n([h(l.IconScrollView)], d.prototype, "iconScrollView", void 0), n([h([u])], d.prototype, "IconAllSetting", void 0), d = n([c], d), o.GameIconMgr = d, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../../../LobbyCommon/InGameJp/Script/GameJpMgr": "GameJpMgr",
        "./FavoriteMgr": "FavoriteMgr",
        "./IconGroupData": "IconGroupData",
        "./IconScrollView": "IconScrollView"
    }],
    GameJpMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "37a86YHHl5P9KeGiSoJxBxy", "GameJpMgr");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GameJpMgr = void 0;
        const s = e("../../Net/LobbyClient"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = n = class {
            constructor() {
                this.gameJpJson = {}, this.Event_GameJpBroadcast = null, this.jpRate = -1, this.ratioRatio = -1, null == n.Instance && (n.Instance = this)
            }
            get JPRate() {
                return this.jpRate
            }
            get JPRatioRatio() {
                return this.ratioRatio
            }
            _onLoad() {
                this.Event_GameJpBroadcast = new SS.Common.Delegate, s.LobbyClient.Instance.GetJPSystem.OnChangeInGameJpSingnal.remove(this.ParseInGameJpVal, this), s.LobbyClient.Instance.GetJPSystem.OnChangeInGameJpSingnal.add(this.ParseInGameJpVal, this)
            }
            _onDestroy() {
                s.LobbyClient.Instance && s.LobbyClient.Instance.GetJPSystem && s.LobbyClient.Instance.GetJPSystem.OnChangeInGameJpSingnal && s.LobbyClient.Instance.GetJPSystem.OnChangeInGameJpSingnal.remove(this.ParseInGameJpVal, this), this.ClearGameJpBroadcastEvent(), this.Event_GameJpBroadcast = null
            }
            static SetInstance(e) {
                n.Instance = e
            }
            ClearGameJpBroadcastEvent() {
                console.warn("[ClearGameJpBroadcastEvent]"), null != this.Event_GameJpBroadcast && this.Event_GameJpBroadcast.Length > 0 && this.Event_GameJpBroadcast.Clear()
            }
            RemoveGameJpBroadcastEvent(e) {
                console.warn("[RemoveGameJpBroadcastEvent]"), null != this.Event_GameJpBroadcast && this.Event_GameJpBroadcast.Length > 0 && this.Event_GameJpBroadcast.Remove(e, this)
            }
            RegisterGameJpBroadcastEvent(e) {
                console.warn("[RegisterGameJpBroadcastEvent]"), this.Event_GameJpBroadcast.Insert(e, this)
            }
            GetInGameJp(e) {
                return this.gameJpJson[e]
            }
            GetAllGameJp() {
                return this.gameJpJson
            }
            GetInGameJpArray(e, t) {
                if (null == this.gameJpJson || !this.gameJpJson.hasOwnProperty(e)) return;
                const o = this.gameJpJson[e],
                    n = [];
                let i = -1;
                o.hasOwnProperty("jp_rate") && (i = o.jp_rate);
                let s = -1;
                if (o.hasOwnProperty("ratio_rate") && (s = t ? o.ratio_rate : 1), this.jpRate = i, this.ratioRatio = s, o.hasOwnProperty("jp1") && o.hasOwnProperty("jp2") && o.hasOwnProperty("jp3") && o.hasOwnProperty("jp4") && i && s) n.push(o.jp1 * i * s), n.push(o.jp2 * i * s), n.push(o.jp3 * i * s), n.push(o.jp4 * i * s);
                else {
                    if (!o.hasOwnProperty("0") || !s) return void console.error("GameJPMgr GetInGameJpArray:" + e + " data ERROR!!", o);
                    n.push(o[0] * s)
                }
                return n
            }
            ParseInGameJpVal(e) {
                null != e && null != e && (console.log("[ParseInGameJpVal]", e), this.gameJpJson = e, this.Event_GameJpBroadcast.Length > 0 && this.Event_GameJpBroadcast.Notify(e))
            }
        };
        l.Instance = null, l = n = i([r], l), o.GameJpMgr = l, cc._RF.pop()
    }, {
        "../../Net/LobbyClient": "LobbyClient"
    }],
    GameMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "cd2a3Fr/7BK+o/o8DAz5guD", "GameMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GameMgr = void 0;
        const s = e("../LobbyCommon/Net/LobbyClient"),
            r = e("../LobbyCommon/Loading/Script/LoadingMgr"),
            a = e("../LobbyCommon/Net/Downloader/VersionDownloader"),
            l = e("../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            c = e("../LobbyCommon/Connect/Script/ConnectPanelMgr"),
            h = e("../LobbyCommon/SwipeMgr/Scripts/Device"),
            m = e("../LobbyCommon/InGameJp/Script/GameJpMgr"),
            u = e("../LobbyCommon/Component/GlobalData"),
            d = e("../LobbyCommon/Net/ClickLogEnum"),
            p = e("../LobbyCommon/Net/ClickLog"),
            {
                ccclass: g,
                property: _
            } = cc._decorator;
        let S = class extends cc.Component {
            constructor() {
                super(...arguments), this.gameWebView = null, this.isFirstRunGameView = !0, this.loadIframeMaxCount = 2, this.curLoadIframeCount = 0, this.initReloadTime = 20, this.curReloadTime = 0, this.isStopUpdate = !1, this.isBackLobby = !1, this.mainLoopInterval = null, this.iframeLoopSrc = null, this.iframeLoadEmptyComplete = !1, this.iframeLoadGameComplete = !1
            }
            start() {
                this.isFirstRunGameView && (this.isFirstRunGameView = !1, SS.Common.GameEnvironment.Splash || (SS.Common.GameEnvironment.Splash = document.getElementById("splash")), this.gameName = SS.Common.GameEnvironment.CurrentGameNow, s.LobbyClient.Instance.OnGameLoadingOK = this.OnGameLoadingOK.bind(this), this.LoadWebView(SS.Common.GameEnvironment.CurrentGameVersion), s.LobbyClient.Instance.ReloadGame = this.ReloadGame.bind(this), s.LobbyClient.Instance.ReloadLobby = this.ReloadLobby.bind(this))
            }
            onDestroy() {
                s.LobbyClient.Instance.ReloadGame = null, s.LobbyClient.Instance.ReloadLobby = null, s.LobbyClient.Instance.OnGameMaintain = null, s.LobbyClient.Instance.OnGameUpdateVersion = null, s.LobbyClient.Instance.OnGameLoadingOK = null
            }
            OnGameLoadingOK() {
                this.isStopUpdate = !0
            }
            ReloadLobby() {
                console.log("[GameMgr.ReloadLobby]"), location.replace(this.GetIndexURL())
            }
            GetIndexURL() {
                let e = "",
                    t = "",
                    o = SS.Common.BaseFunction.GetURLParameterByName("KioskDEV"),
                    n = SS.Common.BaseFunction.GetURLParameterByName("CustomConfig");
                const i = "" != n ? `?CustomConfig=${n}` : "";
                return SS.Common.BaseFunction.GetURLParameterByName("standalone") && (o ? (e = "index.html", t = ",standalone=true") : (e = "index_ni.html", t = "?standalone=true")), o ? window.origin + e + "/?KioskDEV=" + o + t + i : window.origin + e + t + i
            }
            DestroyWebView(e, t = !1) {
                this.mainLoopInterval && (clearInterval(this.mainLoopInterval), this.mainLoopInterval = null), this.iframe.contentWindow.removeEventListener("touchend", h.Device.Instance.ExecuteFullScreen.bind(h.Device.Instance), !0), this.iframe = null, this.iframeLoadEmptyComplete = !1;
                var o = document.getElementById("splash");
                SS.Common.GameEnvironment.Splash = o;
                let n = SS.Common.GameEnvironment.GetGameIdByName(SS.Common.GameEnvironment.CurrentGameNow);
                s.LobbyClient.Instance.GetUserClient.SendSessionLengthEnd(n, null), o && (o.style.display = "block"), t && r.LoadingMgr.Instance.OpenLoading(), window.clearTimeout(this.loadVersionTimeoutID);
                let i = this,
                    a = function() {
                        if (!i.iframeLoadEmptyComplete) {
                            if (console.log("setIframeSrc "), !i.gameWebView) return;
                            i.gameWebView.url = "about:blank", setTimeout(a, 2e3)
                        }
                    };
                this.gameWebView.node.once("loaded", () => {
                    i.iframeLoadEmptyComplete = !0, e()
                }), this.gameWebView.node.once("error", () => {
                    console.error("self.gameWebView.url = about:blank error ... wait timeout reload"), setTimeout(a, 2e3)
                }), i.iframeLoadEmptyComplete || setTimeout(a, 2e3)
            }
            onLoadVersionSuccess(e) {
                SS.Common.GameEnvironment.IgnoreVersionCtrl || (e.Maintain && e.Maintain.IsMaintainNow ? s.LobbyClient.Instance.OnGameMaintain && s.LobbyClient.Instance.OnGameMaintain() : SS.Common.GameEnvironment.CurrentGameVersion != e.Version ? s.LobbyClient.Instance.OnGameUpdateVersion && s.LobbyClient.Instance.OnGameUpdateVersion() : this.loadVersionTimeoutID = setTimeout(() => {
                    this.DownloadVersion(this.gameName, this.onLoadVersionSuccess.bind(this), this.onLoadVersionFail.bind(this))
                }, 3e4))
            }
            onLoadVersionFail(e) {
                console.error("onLoadVersionFail : ", e), this.loadVersionTimeoutID = setTimeout(() => {
                    this.DownloadVersion(this.gameName, this.onLoadVersionSuccess.bind(this), this.onLoadVersionFail.bind(this))
                }, 3e4)
            }
            pollingGameVersion() {
                SS.Common.GameEnvironment.IgnoreVersionCtrl || (this.loadVersionTimeoutID = setTimeout(() => {
                    this.DownloadVersion(this.gameName, this.onLoadVersionSuccess.bind(this), this.onLoadVersionFail.bind(this))
                }, 3e4))
            }
            onWebViewLoaded(e) {
                return i(this, void 0, void 0, function*() {
                    console.log("[GameMgr] gameWebView Loaded !"), e.iframe = e.gameWebView._impl._iframe;
                    let t = 0;
                    for (; !e.iframeLoadGameComplete;) {
                        if (yield new Promise(e => {
                                setTimeout(() => {
                                    e(null)
                                }, 300)
                            }), null != e.iframe.contentWindow && e.iframe.contentWindow.StartIframeGame) {
                            console.log("iframeLoadGameComplete= " + e.iframeLoadGameComplete), e.iframeLoadGameComplete = !0, e.isBackLobby = !1;
                            let t = SS.Common.GameEnvironment.GetGameIdByName(SS.Common.GameEnvironment.CurrentGameNow);
                            s.LobbyClient.Instance.GetUserClient.SendSessionLengthStart(t, null), null != e.iframeLoopSrc && clearTimeout(e.iframeLoopSrc), h.Device.Instance.IsAllowRegisterFullScreenEvent() && h.Device.Instance.RegisterFullScreenEvent(e.iframe.contentWindow), e.iframe.contentWindow.StartIframeGame(SS, JSUtility, s.LobbyClient.Instance, ArkSDK, m.GameJpMgr.Instance, h.Device.Instance, window.gd_nowLOGO), e.ExecuteResizeWebView(), cc.game.pause()
                        }
                        if ((t += .3) >= 15) {
                            null != e.iframeLoopSrc && clearTimeout(e.iframeLoopSrc), null != e.gameWebView && null != e.gameWebView.node && (e.gameWebView.node.active = !1), l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Warning, "C30-2", "Lobby", "load webView error");
                            break
                        }
                    }
                })
            }
            LoadWebView(e) {
                console.warn("[LoadWebView]");
                let t = this;
                this.curLoadIframeCount = 0, this.curReloadTime = this.initReloadTime, this.pollingGameVersion(), t.iframeLoadGameComplete = !1, t.gameWebView.node.once("loaded", () => {
                    this.onWebViewLoaded(t)
                }), t.gameWebView.node.once("error", e => {
                    console.error("[GameMgr] Load webview error", e), this.gameWebView.node.active = !1, l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Warning, "C30", this.gameName, "load webView error")
                }), -1 == SS.Common.GameEnvironment.SentGameFlowStatus.indexOf(this.gameName + s.GAME_STATUS.START_LOAD_PAGE) && (s.LobbyClient.Instance.GetUserClient.SendPlayFlowData(SS.Common.GameEnvironment.DeviceInfo, this.gameName, s.GAME_STATUS.START_LOAD_PAGE), SS.Common.GameEnvironment.SentGameFlowStatus.push(this.gameName + s.GAME_STATUS.START_LOAD_PAGE)), this.DisableWebViewScroll();
                let o = function() {
                    t.iframeLoadGameComplete || (t.curLoadIframeCount <= t.loadIframeMaxCount ? (console.log("setIframeSrc"), t.curReloadTime += 10, t.gameWebView.url = t.GetGameURL(t.gameName, e), t.iframeLoopSrc = setTimeout(o, 1e3 * t.curReloadTime), t.curLoadIframeCount += 1) : (console.error("load webView error"), l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Warning, "C30-1", t.gameName, "load webView error")))
                };
                o(), console.warn("GameMgr.LoadWebView")
            }
            DisableWebViewScroll() {
                this.gameWebView._impl._iframe.style.overflow = "hidden", this.gameWebView._impl._iframe.style["-webkit-overflow"] = "", this.gameWebView._impl._iframe.style["-webkit-overflow-scrolling"] = ""
            }
            ExecuteResizeWebView() {
                null != this.gameWebView && (this.mainLoopInterval = setInterval(this.OnSetDirectorMainLoop.bind(this), 500))
            }
            OnSetDirectorMainLoop() {
                cc.director.mainLoop(null)
            }
            update() {
                if (this.isStopUpdate || s.LobbyClient.Instance.IsSocketErrorClose && !this.iframeLoadGameComplete && (this.isStopUpdate = !0, s.LobbyClient.Instance.IsSocketErrorClose = !1, this.SocketErrorClose()), !this.isBackLobby && this.iframe && "about:blank" == this.iframe.src) {
                    this.isBackLobby = !0;
                    let e = this;
                    this.DestroyWebView(() => e.LoadLobbyScene(), !0)
                }
            }
            SocketErrorClose() {
                SS.Common.GameEnvironment.Splash.style.display = "none", this.DestroyWebView(() => {
                    this.gameWebView.node.active = !1, l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Disconnected, "N14-2", "Lobby", "The internet was diconnected.", () => {
                        c.ConnectPanelMgr.Instance.ShowConnectPanel();
                        let e, t, o = window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.Modules.Lobby.ServerHOST;
                        e = SS.Common.GameEnvironment.UserID, t = SS.Common.GameEnvironment.UserPW, s.LobbyClient.Instance.DoLogin(o, e, t, this.DoLoginSuccess.bind(this), this.DoLoginFail.bind(this))
                    })
                }, !0)
            }
            LoadLobbyScene() {
                let e = SS.Common.GameEnvironment.Language + "Lobby";
                cc.assetManager.bundles.find(function(t) {
                    return t._config.getSceneInfo(e)
                }) ? cc.director.loadScene(e) : cc.director.loadScene("Lobby"), p.ClickLog.DirectSend(d.LogName.PlayerConversion, d.LogType_PlayerConversion.GameLoading, d.LogEvent_LeaveGameProcess.DynamicLoading);
                let t = this;
                u.GlobalData.LoadLobbySceneTimeOutID = setTimeout(() => {
                    u.GlobalData.LoadLobbySceneTimeOutID = -1, "Lobby" != cc.director.getScene().name && confirm(SS.Common.GameEnvironment.ErrorMsg.C73 + "  C73") && location.replace(t.GetIndexURL())
                }, 9e4)
            }
            DoLoginSuccess() {
                c.ConnectPanelMgr.Instance.DisableConnectPanel(), this.LoadLobbyScene()
            }
            DoLoginFail(e, t, o) {
                c.ConnectPanelMgr.Instance.DisableConnectPanel(), console.log("LoginFail", t);
                let n = e.toString();
                "VerifyMobile" === o ? this.VerifyMobileFailHandle(e, t) : "DeviceLogin" === o ? this.DeviceLoginFailHandle(e, t) : "PinLogin" === o ? this.PinLoginFailHandle(e, t) : "BindSocket" === o ? (e == ArkSDK.SocketResult.OK ? n = "S133" : e == ArkSDK.SocketResult.Timeout ? n = "S134" : e == ArkSDK.SocketResult.Error ? n = "S135" : e == ArkSDK.SocketResult.NotReset && (n = "S136"), this.ErrorHandler(n, t)) : "ConnectWebSocket" === o && l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Critical, "S172", "Login", t, null)
            }
            ErrorHandler(e, t) {
                l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Critical, e, "Lobby", t, null)
            }
            PinLoginFailHandle(e, t) {
                let o = e.toString();
                e == ArkSDK.HttpResult.Condition && t.hasOwnProperty("reason") ? o = "-5" == (o = t.reason) ? "S23" : "-4" == o || "-2" == o ? "S173" : "S131" : e == ArkSDK.HttpResult.OK ? t.hasOwnProperty("reason") && (o = "-3" == (o = t.reason) ? "S25" : "-4" == o ? "S26" : "S24") : e == ArkSDK.HttpResult.Abort ? o = "S128" : e == ArkSDK.HttpResult.Timeout ? o = "S21" : e == ArkSDK.HttpResult.Error ? o = "S22" : e == ArkSDK.HttpResult.Status ? o = "S129" : e == ArkSDK.HttpResult.NotReset ? o = "S130" : e == ArkSDK.HttpResult.Condition && (o = "S131"), this.ErrorHandler(o, t)
            }
            VerifyMobileFailHandle(e, t) {
                let o = e.toString(),
                    n = null;
                e == ArkSDK.HttpResult.OK ? t.hasOwnProperty("result") && ("-6" == (o = t.result) ? (n = "User ID is deactivated.", o = "S115") : "-4" == o ? (n = "The user ID or password you entered is incorrect.", o = "S116") : "-5" == o && (n = "The user ID or password you entered is incorrect.", o = "S117")) : (e == ArkSDK.HttpResult.Abort ? o = "S118" : e == ArkSDK.HttpResult.Timeout ? o = "S119" : e == ArkSDK.HttpResult.Error ? o = "S120" : e == ArkSDK.HttpResult.Status ? o = "S121" : e == ArkSDK.HttpResult.NotReset ? o = "S122" : e == ArkSDK.HttpResult.Condition && (o = "S123"), n = "The Internet was lost! Please login again!"), this.ErrorHandler(o, t)
            }
            DeviceLoginFailHandle(e, t) {
                let o = e.toString();
                e == ArkSDK.HttpResult.Condition && t.hasOwnProperty("reason") ? o = "-1" == (o = t.reason) ? "S15" : "-2" == o ? "S16" : "-5" == o ? "S13" : "S14" : (e == ArkSDK.HttpResult.OK && (t.hasOwnProperty("reason") && (o = "-1" == (o = t.reason) ? "S15" : "-2" == o ? "S16" : "S14"), e == ArkSDK.HttpResult.Abort ? o = "S124" : e == ArkSDK.HttpResult.Timeout ? o = "S11" : e == ArkSDK.HttpResult.Error ? o = "S12" : e == ArkSDK.HttpResult.Status ? o = "S125" : e == ArkSDK.HttpResult.NotReset ? o = "S126" : e == ArkSDK.HttpResult.Condition && (o = "S127")), this.ErrorHandler(o, t))
            }
            ReloadGame() {
                let e = this;
                this.DestroyWebView(() => {
                    e.LoadWebView(SS.Common.GameEnvironment.CurrentGameVersion)
                })
            }
            GetGameURL(e, t) {
                let o, n = SS.Common.GameEnvironment.ProjectSetting;
                o = n.CDN_HOST ? window.location.protocol + "//" + n.CDN_HOST : "../../..";
                let i, s = e,
                    r = n.Modules[s].Path,
                    a = n.Modules[s].FileName;
                if (!r) return console.error("Project setting is not exist game id: " + s), null;
                switch (n.Modules[s].UrlType) {
                    case "iGaming":
                        i = (o = window.location.origin) + (r = n.Modules[s].FilePath) + a, i += "?logo=" + window.gd_nowLOGO, i += "&user=" + SS.Network.LoginModel.LoginInfo.user_id, i += "&game=" + s, i += "&aid=" + SS.Network.LoginModel.LoginInfo.pin_ark_id, i += "&atoken=" + SS.Network.LoginModel.LoginInfo.pin_ark_token, i += "&isMute=" + SS.Common.GameEnvironment.IsMute, i += "&isUseScoreBox=" + SS.Common.GameEnvironment.IsUseScoreBox, i += "&timestamp=" + (new Date).getTime(), SS.Common.GameEnvironment.IframeSRC = i;
                        break;
                    default:
                        i = o + r + t + "/web-mobile/" + a
                }
                return console.log("gameUrl : " + i), i
            }
            DownloadVersion(e, t, o) {
                return i(this, void 0, void 0, function*() {
                    yield new Promise((n, i) => {
                        let s = SS.Common.GameEnvironment.ProjectSetting,
                            r = SS.Common.GameEnvironment.S3URL;
                        try {
                            let c = s.Modules[e].Path;
                            (new a.VersionDownloader).Start(r + c, e => {
                                t(e), n()
                            }, e => {
                                o(e), i()
                            })
                        } catch (l) {
                            console.error(l)
                        }
                    })
                })
            }
        };
        n([_(cc.WebView)], S.prototype, "gameWebView", void 0), S = n([g], S), o.GameMgr = S, cc._RF.pop()
    }, {
        "../LobbyCommon/Component/GlobalData": "GlobalData",
        "../LobbyCommon/Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../LobbyCommon/InGameJp/Script/GameJpMgr": "GameJpMgr",
        "../LobbyCommon/Loading/Script/LoadingMgr": "LoadingMgr",
        "../LobbyCommon/Net/ClickLog": "ClickLog",
        "../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum",
        "../LobbyCommon/Net/Downloader/VersionDownloader": "VersionDownloader",
        "../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../LobbyCommon/SwipeMgr/Scripts/Device": "Device"
    }],
    GameMsgDownloader: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "2bd3024cQhO+I6DGqH6u3NH", "GameMsgDownloader"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GameMsgDownloader = void 0;
        const n = e("./SSDownloader");
        o.GameMsgDownloader = class extends n.default {
            constructor() {
                super(...arguments), this.OnLoad = null, this.OnError = null
            }
            Start(e, t, o) {
                this.OnLoad = t, this.OnError = o, this.GetJSON(e + "GameMsg" + SS.Common.GameEnvironment.ProjectSetting.GameMsgVersion + ".json", this.OnLoadComplete.bind(this), this.OnError.bind(this))
            }
            OnLoadComplete(e) {
                let t = this;
                try {
                    let n;
                    n = JSON.parse(e), console.log("GameMsgDownloader : ", n), null != t.OnLoad && t.OnLoad(n)
                } catch (o) {
                    console.error("[GameMsgDownloader] Load failed.\n", o), null != t.OnError && t.OnError(o)
                }
            }
        }, cc._RF.pop()
    }, {
        "./SSDownloader": "SSDownloader"
    }],
    GameSettingDownloader: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "41f38ZujO5K04N2x+pD0ffp", "GameSettingDownloader"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GameSettingDownloader = void 0;
        const n = e("jsonpack"),
            i = e("./SSDownloader");
        o.GameSettingDownloader = class extends i.default {
            constructor() {
                super(...arguments), this.OnLoad = null, this.OnError = null
            }
            Start(e, t, o, n) {
                this.OnLoad = o, this.OnError = n, this._isDeveloper = t, this.GetJSON(e, this.OnLoadComplete.bind(this), this.OnError.bind(this))
            }
            OnLoadComplete(e) {
                let t = this;
                try {
                    let i;
                    if (console.log(e), t._isDeveloper) i = JSON.parse(e);
                    else {
                        let t = n.unpack(e);
                        console.log("[GameSettingDownloader] unpack : ", t), i = t.json
                    }
                    null != t.OnLoad && t.OnLoad(i)
                } catch (o) {
                    console.error("[GameSettingDownloader] Load game setting failed.\n", o), null != t.OnError && t.OnError(o)
                }
            }
        }, cc._RF.pop()
    }, {
        "./SSDownloader": "SSDownloader",
        jsonpack: 27
    }],
    GameTypeElement: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "f088elWYWlGpIaYMtxeLyTw", "GameTypeElement");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GameTypeElement = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.TypeName = "", this.NormalNode = null, this.SelectNode = null, this.displaySpriteFrame = [], this.display = null, this.selectDisplaySpriteFrame = [], this.selectDisplay = null
            }
            _onLoad() {
                this.m_DelClickGameType = new SS.Common.Delegate, this.SetDisplay()
            }
            _onDestroy() {
                this.m_DelClickGameType.Clear(), this.m_DelClickGameType = null
            }
            OnClickGameType() {
                this.m_DelClickGameType.Length > 0 && this.m_DelClickGameType.Notify(this.TypeName)
            }
            SetDisplay() {
                const e = "en" === SS.Common.GameEnvironment.Language ? 0 : 1;
                this.displaySpriteFrame.length > 0 && (this.display.spriteFrame = this.displaySpriteFrame[e]), this.selectDisplaySpriteFrame.length > 0 && (this.selectDisplay.spriteFrame = this.selectDisplaySpriteFrame[e])
            }
        };
        n([s()], r.prototype, "TypeName", void 0), n([s(cc.Node)], r.prototype, "NormalNode", void 0), n([s(cc.Node)], r.prototype, "SelectNode", void 0), n([s([cc.SpriteFrame])], r.prototype, "displaySpriteFrame", void 0), n([s(cc.Sprite)], r.prototype, "display", void 0), n([s([cc.SpriteFrame])], r.prototype, "selectDisplaySpriteFrame", void 0), n([s(cc.Sprite)], r.prototype, "selectDisplay", void 0), r = n([i], r), o.GameTypeElement = r, cc._RF.pop()
    }, {}],
    GameTypeMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "fe6bcqNF39GPbHNi5D77dNK", "GameTypeMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GameTypeMgr = o.GameType = void 0;
        const i = e("../../../LobbyCommon/Define/CustomConfig"),
            s = e("../../../LobbyCommon/Helper/EventSystem"),
            r = e("./GameTypeElement"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        (function(e) {
            e[e.All = -1] = "All", e[e.SLOT = 0] = "SLOT", e[e.FISH = 1] = "FISH", e[e.PICKEM = 2] = "PICKEM", e[e.KENO = 3] = "KENO", e[e.BINGO = 4] = "BINGO", e[e.ARCADE = 5] = "ARCADE", e[e.OTHER = 6] = "OTHER"
        })(o.GameType || (o.GameType = {}));
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this.gameTypeView = [], this.verticleLayout = null, this.maskSprite = null, this.lightMaskNode = null, this.lightSpriteNode = null, this.isSwitchOn = !1, this.switchAnim = null, this.switchBtnSpriteNode = null
            }
            GetContainer() {
                return this.verticleLayout.node
            }
            _onLoad() {
                let e = this;
                e.m_DelClickGameType = new SS.Common.Delegate, e.lightMoveSeq = cc.sequence(cc.callFunc(() => e.lightSpriteNode.setPosition(cc.v2(-210, 0))), cc.moveTo(2, cc.v2(210, 0)), cc.delayTime(1)).repeatForever(), e.gameTypeView.forEach(t => {
                    t._onLoad(), t.m_DelClickGameType.Insert(e.OnClickGameType, e), t.node.active = !1
                }), this.isSwitchOn = !1, s.EventSystem.RegisterFunction(s.GameTypeMgrEvent.GetContainer, this.GetContainer.bind(this)), s.EventSystem.RegisterFunction(s.GameTypeMgrEvent.ClickSwitchBtn, this.onClickSwitchBtn.bind(this))
            }
            _onDestroy() {
                this.gameTypeView && (this.gameTypeView.forEach(e => {
                    e._onDestroy()
                }), this.gameTypeView = null), this.m_DelClickGameType && (this.m_DelClickGameType.Clear(), this.m_DelClickGameType = null), this.maskSprite && this.maskSprite.spriteFrame && this.maskSprite.spriteFrame.decRef(), this.switchAnim && this.switchAnim.targetOff(this), s.EventSystem.UnregisterFunction(s.GameTypeMgrEvent.GetContainer), s.EventSystem.UnregisterFunction(s.GameTypeMgrEvent.ClickSwitchBtn)
            }
            InitGameType(e) {
                for (let n in e) {
                    let e = this.gameTypeView.findIndex(e => e.TypeName === n); - 1 !== e && (this.gameTypeView[e].node.active = !0)
                }
                const {
                    enableFavorite: t
                } = i.CustomConfig.Instance.lobbyOption;
                !1 === t && this.gameTypeView.forEach(e => {
                    "FAVORITE" === e.TypeName && (e.node.active = !1)
                });
                let o = SS.Common.GameEnvironment.CurrentGameTypeNow;
                o || (o = "ALL"), this.ShowTypeLightFlow(o), this.UpdateLayout()
            }
            UpdateLayout() {
                this.verticleLayout.enabled = !0, this.verticleLayout.updateLayout(), this.verticleLayout.enabled = !1
            }
            OnClickGameType(e) {
                0 != this.isSwitchOn && e !== SS.Common.GameEnvironment.CurrentGameTypeNow && (this.ShowTypeLightFlow(e), this.m_DelClickGameType.Length > 0 && this.m_DelClickGameType.Notify(e))
            }
            ShowTypeLightFlow(e) {
                this.currentLightSeq && this.lightSpriteNode.stopAction(this.currentLightSeq);
                let t = this.gameTypeView.findIndex(t => t.TypeName === e); - 1 != t && (this.gameTypeView.forEach(t => {
                    t.TypeName === e ? (t.NormalNode.active = !1, t.SelectNode.active = !0) : (t.NormalNode.active = !0, t.SelectNode.active = !1)
                }), this.lightMaskNode.setParent(this.gameTypeView[t].node), this.lightMaskNode.setPosition(cc.Vec2.ZERO), this.currentLightSeq = this.lightSpriteNode.runAction(this.lightMoveSeq))
            }
            OpenSelectTypeSprite() {
                this.ShowTypeLightFlow(SS.Common.GameEnvironment.CurrentGameTypeNow), this.lightSpriteNode.opacity = 255
            }
            HideSelectTypeStatus() {
                if (console.log("HideSelectTypeStatus !!"), this.lightSpriteNode.opacity = 0, "" != SS.Common.GameEnvironment.CurrentGameTypeNow)
                    for (let e = 0; e < this.gameTypeView.length; e++)
                        if (console.log(SS.Common.GameEnvironment.CurrentGameTypeNow + " == " + this.gameTypeView[e].TypeName), SS.Common.GameEnvironment.CurrentGameTypeNow == this.gameTypeView[e].TypeName) {
                            this.gameTypeView[e].NormalNode.active = !0, this.gameTypeView[e].SelectNode.active = !1;
                            break
                        }
            }
            SetDarkMaskSprite(e) {
                this.maskSprite.spriteFrame = e, this.maskSprite.spriteFrame.addRef()
            }
            onClickSwitchBtn() {
                this.isSwitchOn = !this.isSwitchOn, this.isSwitchOn ? (this.switchAnim.once(cc.Animation.EventType.FINISHED, this.SetSwitchBtnSpriteFace, this), this.switchAnim.play("GameTypeSwitchOnAnim")) : (this.switchAnim.once(cc.Animation.EventType.FINISHED, this.SetSwitchBtnSpriteFace, this), this.switchAnim.play("GameTypeSwitchOffAnim"))
            }
            SetSwitchBtnSpriteFace() {
                this.switchBtnSpriteNode.scaleX = this.isSwitchOn ? -1 : 1
            }
        };
        n([l([r.GameTypeElement])], c.prototype, "gameTypeView", void 0), n([l(cc.Layout)], c.prototype, "verticleLayout", void 0), n([l(cc.Sprite)], c.prototype, "maskSprite", void 0), n([l(cc.Node)], c.prototype, "lightMaskNode", void 0), n([l(cc.Node)], c.prototype, "lightSpriteNode", void 0), n([l(cc.Animation)], c.prototype, "switchAnim", void 0), n([l(cc.Node)], c.prototype, "switchBtnSpriteNode", void 0), c = n([a], c), o.GameTypeMgr = c, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Define/CustomConfig": "CustomConfig",
        "../../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "./GameTypeElement": "GameTypeElement"
    }],
    GetBonusMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "2342c3TlORB3Jl2uoLVwLFR", "GetBonusMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GetBonusMgr = void 0;
        const s = e("../../../LobbyCommon/Net/LobbyClient"),
            r = e("../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            a = e("../../../LobbyCommon/Connect/Script/ConnectPanelMgr"),
            l = e("../../../LobbyCommon/FakeScoreBox/Script/FakeScoreBoxCtrl"),
            c = e("../../../LobbyCommon/Component/AudioMgr"),
            {
                ccclass: h,
                property: m
            } = cc._decorator;
        var u;
        (function(e) {
            e[e.InputPhoneNum = 0] = "InputPhoneNum", e[e.InputValidCode = 1] = "InputValidCode"
        })(u || (u = {}));
        let d = class extends cc.Component {
            constructor() {
                super(...arguments), this.isOpenGetBonus = !1, this.root = null, this.boardPage = null, this.finishPage = null, this.phoneLabel = null, this.errorLabel = null, this.reciprocalLabel = null, this.getMoneyNumLabel = null, this.sendCodeBtn = null, this.smsValidVerifyBtn = null, this.backBtn = null, this.confirmBtn = null, this.groups = null, this.phoneVerifyRoot = null, this.SMSValidVerifyRoot = null, this.verticleLayout = null, this.getBonusTypeItem = null, this.getBonusTypeNode = null, this.normalTypeNode = null, this.selectTypeNode = null, this.userInputDatas = [], this.curInputNumIndex = 0, this.tmpMaxInputNum = 0, this.maxPhoneCnt = 10, this.maxSMSCnt = 6, this.clearMsgTime = 5, this.curRetrySendSMSTime = 0, this.maxRetrySendSMSTime = 0, this.getEntriesBonusNum = 0, this.getWinningBonusNum = 0, this.finishEntriesNum = 0, this.finishWinningNum = 0, this.countryNum = "", this.tmpPhoneNum = "", this.tmpPhoneAreaNum = "", this.title = "Lobby", this.isAllowClickBtn = !1, this.groupsAnima = null, this.finishAnima = null, this.fakeScoreBoxCtrl = null, this.getBonusStatus = u.InputPhoneNum, this.Event_SetUserBalance = null, this.Event_SetAllowReload = null, this.Event_HideCurInType = null, this.Event_OpenLastSelectType = null, this.isForTaiwanTest = !1
            }
            LayoutStartInit() {
                this.isOpenGetBonus = !0, this.curInputNumIndex = 0, this.userInputDatas = [], this.groupsAnima = this.groups.getComponent(cc.Animation), this.finishAnima = this.finishPage.getComponent(cc.Animation), this.getBonusTypeNode = cc.instantiate(this.getBonusTypeItem), this.getBonusTypeNode.parent = this.verticleLayout, this.normalTypeNode = this.getBonusTypeNode.getChildByName("Normal"), this.selectTypeNode = this.getBonusTypeNode.getChildByName("Select");
                let e = this.getBonusTypeNode.getChildByName("btn").getComponent(cc.Button);
                var t = new cc.Component.EventHandler;
                t.target = this.node, t.component = "GetBonusMgr", t.handler = "OpenGetBonusPanel", e.clickEvents.push(t), this.isForTaiwanTest ? (this.countryNum = "+886", this.maxPhoneCnt = 9) : (this.countryNum = "+1", this.maxPhoneCnt = 10), this.getBonusTypeNode.active || (this.getBonusTypeNode.active = !0), this.finishPage.active && (this.finishPage.active = !1)
            }
            RegistrationNeedUseEvent(e, t, o, n) {
                this.Event_SetUserBalance = e, this.Event_SetAllowReload = t, this.Event_HideCurInType = o, this.Event_OpenLastSelectType = n
            }
            OpenGetBonusPanel() {
                this.isAllowClickBtn = !1, this.Event_SetAllowReload(!1), a.ConnectPanelMgr.Instance.ShowConnectPanel(), c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), s.LobbyClient.Instance.GetUserClient.SendVerifyCodeEffect(this.RecvVerifyCodeIsValid.bind(this))
            }
            RecvVerifyCodeIsValid(e, t) {
                if (console.warn("VerifyCodeEffect"), console.warn(e), console.warn(t), e == ArkSDK.HttpResult.OK && t && t.cmd_data && t.cmd_data.data) 0 == t.cmd_data.result ? (this.isAllowClickBtn = !0, this.root.active = !0, this.normalTypeNode.active = !1, this.selectTypeNode.active = !0, null != this.Event_HideCurInType && this.Event_HideCurInType(), t.cmd_data.data.is_in_time ? (t.cmd_data.data.hasOwnProperty("cellphone_num") && (this.tmpPhoneNum = t.cmd_data.data.cellphone_num), t.cmd_data.data.hasOwnProperty("cellphone_state_num") && (this.tmpPhoneAreaNum = t.cmd_data.data.cellphone_state_num), this.SetCurBonusStatus(u.InputValidCode)) : this.SetCurBonusStatus(u.InputPhoneNum)) : this.MissionTimeEnd(t.cmd_data.data.error_msg), a.ConnectPanelMgr.Instance.DisableConnectPanel();
                else {
                    let t = null,
                        o = "";
                    t = e == ArkSDK.HttpResult.Abort ? "S332" : e == ArkSDK.HttpResult.Condition ? "S333" : e == ArkSDK.HttpResult.Error ? "S334" : e == ArkSDK.HttpResult.NotReset ? "S335" : e == ArkSDK.HttpResult.Status ? "S336" : e == ArkSDK.HttpResult.Timeout ? "S337" : "S338", o = "The Internet was lost! Please login again!", this.ErrorHandler(t, o)
                }
            }
            OnClickBack(e, t) {
                this.isAllowClickBtn && this.getBonusStatus == u.InputValidCode && this.SetCurBonusStatus(u.InputPhoneNum)
            }
            CloseGetBonusPanel() {
                this.isAllowClickBtn && this.root.active && (this.root.active = !1, this.Event_SetAllowReload(!0), c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.normalTypeNode.active = !0, this.selectTypeNode.active = !1, null != this.Event_OpenLastSelectType && this.Event_OpenLastSelectType())
            }
            OnClickNum(e, t) {
                if (this.isAllowClickBtn && (c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.curInputNumIndex < this.tmpMaxInputNum)) {
                    let e = t;
                    if (this.userInputDatas[this.curInputNumIndex] = e, this.curInputNumIndex++, this.getBonusStatus == u.InputPhoneNum) {
                        let e = this.GetConvertPhoneFormat(this.userInputDatas);
                        this.phoneLabel.string = e
                    } else if (this.getBonusStatus == u.InputValidCode) {
                        let e = this.GetConvertSMSFormat(this.userInputDatas);
                        this.phoneLabel.string = e
                    }
                }
            }
            OnClickClear(e, t) {
                this.isAllowClickBtn && (this.StatusInit(), c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1))
            }
            DeleteNum(e, t) {
                if (this.isAllowClickBtn && (c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.curInputNumIndex > 0))
                    if (this.RefreshErrorMsg(), this.unschedule(this.RefreshErrorMsg), this.getBonusStatus == u.InputPhoneNum) {
                        this.userInputDatas[this.curInputNumIndex - 1] = "_", this.curInputNumIndex -= 1;
                        let e = this.GetConvertPhoneFormat(this.userInputDatas);
                        this.phoneLabel.string = e
                    } else if (this.getBonusStatus == u.InputValidCode) {
                    this.userInputDatas[this.curInputNumIndex - 1] = "_", this.curInputNumIndex -= 1;
                    let e = this.GetConvertSMSFormat(this.userInputDatas);
                    this.phoneLabel.string = e
                }
            }
            UpdateBtnStatus() {
                this.getBonusStatus == u.InputPhoneNum ? this.curInputNumIndex < this.maxPhoneCnt ? this.sendCodeBtn.interactable = !1 : this.curRetrySendSMSTime <= 0 ? this.sendCodeBtn.interactable = !0 : this.sendCodeBtn.interactable = !1 : this.getBonusStatus == u.InputValidCode && (this.curInputNumIndex < this.maxSMSCnt ? this.confirmBtn.interactable = !1 : this.confirmBtn.interactable = !0)
            }
            GetConvertPhoneFormat(e) {
                let t = "";
                for (let o = 0; o < e.length; o++) t += e[o];
                return this.countryNum + " (" + t.substring(0, 3) + ") " + t.substring(3, 6) + "-" + t.substring(6, 10)
            }
            GetConvertSMSFormat(e) {
                let t = "";
                for (let o = 0; o < e.length; o++) t += e[o];
                return t
            }
            SetCurBonusStatus(e) {
                this.getBonusStatus = e, this.StatusInit()
            }
            StatusInit() {
                if (this.curInputNumIndex = 0, this.userInputDatas = [], this.boardPage.active || (this.boardPage.active = !0), this.RefreshErrorMsg(), this.unschedule(this.RefreshErrorMsg), this.sendCodeBtn.interactable = !1, this.confirmBtn.interactable = !1, this.getBonusStatus == u.InputPhoneNum) {
                    this.phoneVerifyRoot.opacity = 255, this.phoneVerifyRoot.active = !0, this.SMSValidVerifyRoot.active = !1, this.tmpMaxInputNum = this.maxPhoneCnt;
                    for (let t = 0; t < this.tmpMaxInputNum; t++) this.userInputDatas.push("_");
                    let e = this.GetConvertPhoneFormat(this.userInputDatas);
                    this.phoneLabel.string = e
                } else if (this.getBonusStatus == u.InputValidCode) {
                    this.phoneVerifyRoot.active = !1, this.SMSValidVerifyRoot.opacity = 255, this.SMSValidVerifyRoot.active = !0, this.tmpMaxInputNum = this.maxSMSCnt;
                    for (let t = 0; t < this.tmpMaxInputNum; t++) this.userInputDatas.push("_");
                    let e = this.GetConvertSMSFormat(this.userInputDatas);
                    this.phoneLabel.string = e
                }
            }
            ShowErrorMsg(e) {
                this.unschedule(this.RefreshErrorMsg), this.errorLabel.string = e, this.errorLabel.node.active = !0, this.scheduleOnce(this.RefreshErrorMsg, this.clearMsgTime)
            }
            RefreshErrorMsg() {
                this.errorLabel.string = "", this.errorLabel.node.active = !1
            }
            OnClickSendCode(e, t) {
                if (!this.isAllowClickBtn) return;
                if (-1 != this.phoneLabel.string.indexOf("_")) return;
                c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.isAllowClickBtn = !1;
                let o = this.phoneLabel.string;
                o = o.replace(/\s*/g, ""), this.tmpPhoneAreaNum = o.substring(o.indexOf("(") + 1, o.indexOf(")")), o = (o = (o = o.replace("(", "")).replace(")", "")).replace("-", ""), console.warn("send phone num = " + o), this.backBtn.interactable = !1, this.smsValidVerifyBtn.interactable = !1, this.tmpPhoneNum = o, a.ConnectPanelMgr.Instance.ShowConnectPanel(), s.LobbyClient.Instance.GetUserClient.SendVerifyCode(o, this.tmpPhoneAreaNum, this.RecvVerifyCode.bind(this))
            }
            SetValidVerifyBtnIsCanClick() {
                this.reciprocalLabel.string = "Send new code in " + this.curRetrySendSMSTime.toString() + " sec.", this.curRetrySendSMSTime <= 0 && (this.reciprocalLabel.string = "", this.sendCodeBtn.interactable = !0, this.backBtn.interactable = !0, this.smsValidVerifyBtn.interactable = !0, this.unschedule(this.SetValidVerifyBtnIsCanClick)), this.curRetrySendSMSTime > 0 && (this.curRetrySendSMSTime -= 1, this.schedule(this.SetValidVerifyBtnIsCanClick, 1))
            }
            OnClickSendSMS(e, t) {
                this.isAllowClickBtn && (c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.isAllowClickBtn = !1, this.backBtn.interactable = !1, this.smsValidVerifyBtn.interactable = !1, a.ConnectPanelMgr.Instance.ShowConnectPanel(), s.LobbyClient.Instance.GetUserClient.SendVerifyCode(this.tmpPhoneNum, this.tmpPhoneAreaNum, this.RecvVerifyCode.bind(this)))
            }
            RecvVerifyCode(e, t) {
                if (console.warn("RecvVerifyCode"), console.log(e), console.log(t), e == ArkSDK.HttpResult.OK && t) {
                    if (!t.hasOwnProperty("cmd_data")) {
                        let e = "324",
                            t = "The Internet was lost! Please login again!";
                        return void this.ErrorHandler(e, t)
                    }
                    if (a.ConnectPanelMgr.Instance.DisableConnectPanel(), 0 == t.cmd_data.result) {
                        if (this.RefreshErrorMsg(), this.unschedule(this.RefreshErrorMsg), this.maxRetrySendSMSTime = t.cmd_data.data.resend_second + 10, this.curRetrySendSMSTime = this.maxRetrySendSMSTime, this.unschedule(this.SetValidVerifyBtnIsCanClick), this.SetValidVerifyBtnIsCanClick(), this.getBonusStatus == u.InputPhoneNum) return this.phoneLabel.string = "", this.groupsAnima.once("finished", () => {
                            this.isAllowClickBtn = !0, this.SetCurBonusStatus(u.InputValidCode)
                        }, this), void this.groupsAnima.play("PhoneToSmsFade", 0);
                        this.getBonusStatus == u.InputValidCode && (this.isAllowClickBtn = !0)
                    } else console.warn(t.cmd_data.result), -28 == t.cmd_data.result || -29 == t.cmd_data.result ? this.MissionTimeEnd(t.cmd_data.data.error_msg) : (-24 == t.cmd_data.result && (this.backBtn.interactable = !0), this.isAllowClickBtn = !0, this.ShowErrorMsg(t.cmd_data.data.error_msg))
                } else {
                    let t = null,
                        o = "";
                    t = e == ArkSDK.HttpResult.Abort ? "S318" : e == ArkSDK.HttpResult.Condition ? "S319" : e == ArkSDK.HttpResult.Error ? "S320" : e == ArkSDK.HttpResult.NotReset ? "S321" : e == ArkSDK.HttpResult.Status ? "S322" : e == ArkSDK.HttpResult.Timeout ? "S323" : "S324", o = "The Internet was lost! Please login again!", this.ErrorHandler(t, o)
                }
            }
            OnClickConfirm(e, t) {
                if (!this.isAllowClickBtn) return;
                if (this.curInputNumIndex < this.maxSMSCnt) return;
                c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.isAllowClickBtn = !1;
                let o = this.phoneLabel.string;
                a.ConnectPanelMgr.Instance.ShowConnectPanel(), s.LobbyClient.Instance.GetUserClient.SendVerifyValidCode(o, this.RecvConfirm.bind(this))
            }
            RecvConfirm(e, t) {
                if (console.warn("RecvConfirm"), console.warn(e), console.warn(t), e == ArkSDK.HttpResult.OK && t && t.cmd_data && t.cmd_data.data) {
                    if (0 == t.cmd_data.result) this.getEntriesBonusNum = t.cmd_data.data.AwardEntries, this.getWinningBonusNum = t.cmd_data.data.AwardWinnings, this.finishEntriesNum = t.cmd_data.playerInfo.entries, this.finishWinningNum = t.cmd_data.playerInfo.winnings, this.getEntriesBonusNum > 0 ? this.getMoneyNumLabel.string = "$ " + (this.getEntriesBonusNum / 100).toString() : this.getMoneyNumLabel.string = "$ " + (this.getWinningBonusNum / 100).toString(), this.boardPage.active = !1, this.getBonusTypeNode.active = !1, this.finishPage.active = !0, this.finishAnima.play("ShowFinishPanel", 0), this.finishAnima.once("finished", () => {
                        this.isAllowClickBtn = !0
                    }, this);
                    else {
                        this.curInputNumIndex = 0, this.tmpMaxInputNum = this.maxSMSCnt, this.userInputDatas = [];
                        for (let t = 0; t < this.tmpMaxInputNum; t++) this.userInputDatas.push("_");
                        let e = this.GetConvertSMSFormat(this.userInputDatas);
                        this.phoneLabel.string = e, this.confirmBtn.interactable = !1, -28 == t.cmd_data.result || -29 == t.cmd_data.result ? this.MissionTimeEnd(t.cmd_data.data.error_msg) : (-24 == t.cmd_data.result && (this.backBtn.interactable = !0), this.isAllowClickBtn = !0, this.ShowErrorMsg(t.cmd_data.data.error_msg))
                    }
                    a.ConnectPanelMgr.Instance.DisableConnectPanel()
                } else {
                    let t = null,
                        o = "";
                    t = e == ArkSDK.HttpResult.Abort ? "S325" : e == ArkSDK.HttpResult.Condition ? "S326" : e == ArkSDK.HttpResult.Error ? "S327" : e == ArkSDK.HttpResult.NotReset ? "S328" : e == ArkSDK.HttpResult.Status ? "S329" : e == ArkSDK.HttpResult.Timeout ? "S330" : "S331", o = "The Internet was lost! Please login again!", this.ErrorHandler(t, o)
                }
            }
            OnClickGetBonusBtn(e, t) {
                if (console.warn("OnClickGetBonusBtn !!"), this.isAllowClickBtn)
                    if (c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), e.target.getComponent(cc.Button).interactable = !1, SS.Common.GameEnvironment.IsUseScoreBox) this.getEntriesBonusNum > 0 ? (this.fakeScoreBoxCtrl.show(l.ShowType.ENTRIES, this.finishEntriesNum - this.getEntriesBonusNum), this.fakeScoreBoxCtrl.countUpShowMoney(this.finishEntriesNum, 1.5, new cc.Vec2(this.root.position.x + e.target.position.x, this.root.position.y + e.target.position.y), this.GetAward.bind(this))) : (this.fakeScoreBoxCtrl.show(l.ShowType.WINNING, this.finishWinningNum - this.getWinningBonusNum), this.fakeScoreBoxCtrl.countUpShowMoney(this.finishWinningNum, 1.5, new cc.Vec2(this.root.position.x + e.target.position.x, this.root.position.y + e.target.position.y), this.GetAward.bind(this)));
                    else {
                        let t = this.finishEntriesNum + this.finishWinningNum,
                            o = this.finishEntriesNum + this.finishWinningNum - (this.getEntriesBonusNum + this.getWinningBonusNum);
                        this.fakeScoreBoxCtrl.show(l.ShowType.CREDIT, o), this.fakeScoreBoxCtrl.countUpShowMoney(t, 1.5, new cc.Vec2(this.root.position.x + e.target.position.x, this.root.position.y + e.target.position.y), this.GetAward.bind(this))
                    }
            }
            GetAward() {
                return i(this, void 0, void 0, function*() {
                    SS.Common.GameEnvironment.IsUseScoreBox ? this.getEntriesBonusNum > 0 ? this.fakeScoreBoxCtrl.show(l.ShowType.ENTRIES, this.finishEntriesNum) : this.fakeScoreBoxCtrl.show(l.ShowType.WINNING, this.finishWinningNum) : this.getEntriesBonusNum > 0 ? this.fakeScoreBoxCtrl.show(l.ShowType.CREDIT, this.finishEntriesNum) : this.fakeScoreBoxCtrl.show(l.ShowType.CREDIT, this.finishWinningNum), null != this.Event_SetUserBalance && this.Event_SetUserBalance(this.finishEntriesNum, this.finishWinningNum), yield SS.Common.WaitForSeconds(1), this.CloseGetBonusPanel()
                })
            }
            CloseFinishGetBonusPanel() {
                this.isAllowClickBtn && this.finishPage.active && (this.finishPage.active = !1, c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1))
            }
            MissionTimeEnd(e) {
                let t = e;
                this.ErrorHandler("S339", t)
            }
            ErrorHandler(e, t) {
                r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Critical, e, this.title, t, null)
            }
        };
        n([m(cc.Node)], d.prototype, "root", void 0), n([m(cc.Node)], d.prototype, "boardPage", void 0), n([m(cc.Node)], d.prototype, "finishPage", void 0), n([m(cc.Label)], d.prototype, "phoneLabel", void 0), n([m(cc.Label)], d.prototype, "errorLabel", void 0), n([m(cc.Label)], d.prototype, "reciprocalLabel", void 0), n([m(cc.Label)], d.prototype, "getMoneyNumLabel", void 0), n([m(cc.Button)], d.prototype, "sendCodeBtn", void 0), n([m(cc.Button)], d.prototype, "smsValidVerifyBtn", void 0), n([m(cc.Button)], d.prototype, "backBtn", void 0), n([m(cc.Button)], d.prototype, "confirmBtn", void 0), n([m(cc.Node)], d.prototype, "groups", void 0), n([m(cc.Node)], d.prototype, "phoneVerifyRoot", void 0), n([m(cc.Node)], d.prototype, "SMSValidVerifyRoot", void 0), n([m(cc.Node)], d.prototype, "verticleLayout", void 0), n([m(cc.Prefab)], d.prototype, "getBonusTypeItem", void 0), n([m()], d.prototype, "isForTaiwanTest", void 0), d = n([h], d), o.GetBonusMgr = d, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Component/AudioMgr": "AudioMgr",
        "../../../LobbyCommon/Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../../../LobbyCommon/FakeScoreBox/Script/FakeScoreBoxCtrl": "FakeScoreBoxCtrl",
        "../../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr"
    }],
    GetBonusShow: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7bd5fYpheFNF7cLhvRjd/oT", "GetBonusShow");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GetBonusShow = void 0;
        const s = e("../../Component/SSSpawnPool"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.spawnPool = null, this.coinPrefab = null, this.creditCoinPrefab = null, this.itemCount = 0, this.XreangeLevel = 0, this.jumpHeight = 0, this.m_nodeStart = null, this.m_nodeTaret = null, this.coinPf = null
            }
            start() {
                this.Init()
            }
            Set(e, t, o, n) {
                e && (this.coinPrefab = e), this.itemCount = t, this.XreangeLevel = o, this.jumpHeight = n
            }
            Init() {
                this.coinPf = this.coinPrefab, !SS.Common.GameEnvironment.IsUseScoreBox && this.creditCoinPrefab && (this.coinPf = this.creditCoinPrefab);
                for (let e = 0; e < this.itemCount; e++) {
                    let e = cc.instantiate(this.coinPf);
                    e.parent = this.node, e.setPosition(new cc.Vec2(0, 0)), e.active = !1, this.spawnPool.Despawn(e)
                }
            }
            Show(e, t, o) {
                this.coinPf || this.Init(), null != this.m_nodeStart && (e = this.m_nodeStart.convertToWorldSpaceAR(cc.Vec2.ZERO)), null != this.m_nodeTaret && (t = this.m_nodeTaret.convertToWorldSpaceAR(cc.Vec2.ZERO));
                for (let n = 0; n < this.itemCount; n++) {
                    let i = this.spawnPool.Spawn(this.coinPf.data, this.node);
                    Math.random() > .5 ? i.setPosition(new cc.Vec2(e.x + Math.random() * this.XreangeLevel, e.y)) : i.setPosition(new cc.Vec2(e.x - Math.random() * this.XreangeLevel, e.y));
                    let s = .5 * Math.random();
                    this.scheduleOnce(() => {
                        i.active = !0
                    }, s);
                    let r = cc.sequence(cc.delayTime(s), cc.moveTo(.25, new cc.Vec2(i.getPosition().x, e.y + Math.random() * this.jumpHeight)), cc.moveTo(.15, new cc.Vec2(i.getPosition().x, e.y)), cc.delayTime(.15), cc.moveTo(.25, new cc.Vec2(i.getPosition().x, e.y + Math.random() * this.jumpHeight)), cc.moveTo(.15, new cc.Vec2(i.getPosition().x, e.y)), cc.delayTime(.15), cc.moveTo(.5, t), cc.callFunc(() => {
                        i.active = !1, this.spawnPool.Despawn(i), n == this.itemCount - 1 && null != o && o()
                    }));
                    i.runAction(r)
                }
            }
            ShowAndJump(e, t) {
                if (this.coinPf || this.Init(), null != this.m_nodeStart && null != this.m_nodeTaret) {
                    let n = this.m_nodeStart;
                    this.m_iFinishedCoid = 0;
                    for (let i = 0; i < this.itemCount; i++) {
                        var o = cc.instantiate(this.coinPf.data);
                        o.parent = n.parent, o.setPosition(n.getPosition());
                        let s = cc.hide(),
                            r = cc.delayTime(.25 * i),
                            a = cc.show(),
                            l = cc.moveTo(.25, new cc.Vec2(n.getPosition().x + 200 * Math.random() - 100, n.getPosition().y + 100)),
                            c = cc.moveTo(.25, new cc.Vec2(n.getPosition().x + 200 * Math.random() - 100, n.getPosition().y + 0)),
                            h = cc.moveTo(.25, new cc.Vec2(n.getPosition().x + 200 * Math.random() - 100, n.getPosition().y + 100)),
                            m = cc.moveTo(e, new cc.Vec2(this.m_nodeTaret.getPosition().x, this.m_nodeTaret.getPosition().y)),
                            u = cc.removeSelf(),
                            d = cc.callFunc(() => {
                                this.m_iFinishedCoid++, this.m_iFinishedCoid >= this.itemCount && t && t()
                            }),
                            p = cc.sequence(s, r, a, l, c, h, m, u, d);
                        o.runAction(p)
                    }
                }
            }
            ShowAndJumpCustom(e, t, o, n) {
                return i(this, void 0, void 0, function*() {
                    this.m_iFinishedCoid = 0;
                    for (let i = 0; i < this.itemCount; i++) {
                        let s = this.spawnPool.Spawn(this.coinPrefab.data, this.node);
                        s.opacity = 255, s.scale = 1, s.position = this.node.convertToNodeSpaceAR(e);
                        let r = new cc.Vec2(s.x, s.y),
                            a = this.node.convertToNodeSpaceAR(t),
                            l = cc.hide(),
                            c = cc.delayTime(.25 * i),
                            h = cc.show(),
                            m = cc.moveTo(.25, new cc.Vec2(r.x + (Math.random() * this.XreangeLevel - .5 * this.XreangeLevel), r.y + Math.random() * this.jumpHeight)),
                            u = cc.moveTo(.25, new cc.Vec2(r.x + (Math.random() * this.XreangeLevel - .5 * this.XreangeLevel), r.y)),
                            d = cc.moveTo(.25, new cc.Vec2(r.x + (Math.random() * this.XreangeLevel - .5 * this.XreangeLevel), r.y + Math.random() * this.jumpHeight)),
                            p = cc.moveTo(o, new cc.Vec2(a.x, a.y)),
                            g = cc.callFunc(() => {
                                this.m_iFinishedCoid++, this.m_iFinishedCoid >= this.itemCount && n && (n(), this.spawnPool.DespawnAll())
                            }),
                            _ = cc.sequence(l, c, h, m, u, d, p, g);
                        s.runAction(_)
                    }
                })
            }
            Fly(e, t, o) {
                return i(this, void 0, void 0, function*() {
                    this.coinPf || this.Init();
                    let n = this.spawnPool.Spawn(this.coinPf.data, this.node);
                    n.position = this.node.convertToNodeSpaceAR(t);
                    let i = new cc.Vec2(n.x, n.y),
                        s = this.node.convertToNodeSpaceAR(o),
                        r = new cc.Vec2(s.x, s.y),
                        a = new cc.Vec2(n.y, -n.x).multiplyScalar(.2).neg(),
                        l = i.add(r).multiplyScalar(.5).add(a);
                    return n.opacity = 255, n.scale = 1, console.log(i, l, r), new Promise(t => {
                        cc.tween(n).bezierTo(e, l, l, r).call(() => {
                            t()
                        }).to(.5, {
                            opacity: 0,
                            scale: 0
                        }).call(() => {
                            this.spawnPool.Despawn(n)
                        }).start()
                    })
                })
            }
        };
        n([a(s.SpawnPool)], l.prototype, "spawnPool", void 0), n([a(cc.Prefab)], l.prototype, "coinPrefab", void 0), n([a(cc.Prefab)], l.prototype, "creditCoinPrefab", void 0), n([a(cc.Integer)], l.prototype, "itemCount", void 0), n([a(cc.Float)], l.prototype, "XreangeLevel", void 0), n([a(cc.Float)], l.prototype, "jumpHeight", void 0), n([a(cc.Node)], l.prototype, "m_nodeStart", void 0), n([a(cc.Node)], l.prototype, "m_nodeTaret", void 0), l = n([r], l), o.GetBonusShow = l, cc._RF.pop()
    }, {
        "../../Component/SSSpawnPool": "SSSpawnPool"
    }],
    GifRender: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "b1ced0iLHlAIbdG6ymnjyq6", "GifRender");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GifRender = void 0;
        const {
            ccclass: s,
            property: r,
            disallowMultiple: a,
            requireComponent: l
        } = cc._decorator, c = e("gifuct/lib/index.js");
        let h = class extends cc.Component {
            constructor() {
                super(...arguments), this.url = "", this.isOnEnableRestart = !0, this.isFitNodeSize = !0, this._mainCanvas = null, this._tempCanvas = null, this._mainContext = null, this._tempContext = null, this._frames = [], this._frameIdx = 0, this._frameWidth = 0, this._frameHeight = 0, this._needsDisposal = !1, this._frameData = null, this._isInit = !1, this._spriteScale = null
            }
            set SetUrl(e) {
                this.url = e, console.log("[GifRender][SetUrl] = " + this.url), this.showGif()
            }
            onLoad() {
                this._isInit || (this.Init(), "" != this.url && this.showGif())
            }
            onEnable() {
                this.isOnEnableRestart && this.RePlay()
            }
            onDisable() {
                this.unscheduleAllCallbacks()
            }
            createCanvas() {
                return document.createElement("canvas")
            }
            Init() {
                this._isInit || (this._sprite = this.node.getComponent(cc.Sprite), this._mainCanvas = this.createCanvas(), this._tempCanvas = this.createCanvas(), this._mainContext = this._mainCanvas.getContext("2d"), this._tempContext = this._tempCanvas.getContext("2d"), this._isInit = !0)
            }
            showGif() {
                return i(this, void 0, void 0, function*() {
                    this._isInit || this.Init(), this.unscheduleAllCallbacks();
                    var e = yield this.getGifData(), t = c.parseGIF(e);
                    try {
                        this._frames = c.decompressFrames(t, !0)
                    } catch (i) {
                        return void console.error(i)
                    }
                    this._needsDisposal = !0, this._frameIdx = 0, this._frameWidth = 9999, this._frameHeight = 9999, this._frameData = null, this._mainCanvas.width = this._frames[0].dims.width, this._mainCanvas.height = this._frames[0].dims.height;
                    let o = this._sprite.node.getContentSize().width / this._mainCanvas.width,
                        n = this._sprite.node.getContentSize().height / this._mainCanvas.height;
                    this._spriteScale = new cc.Vec2(o, n), console.log("[GifRender][showGif] \u5bec\u9ad8 = " + this._mainCanvas.width, this._mainCanvas.height), this.drawGif()
                })
            }
            drawGif() {
                let e = this._frames[this._frameIdx],
                    t = Date.now();
                this._needsDisposal && (this._mainContext.clearRect(0, 0, this._frameWidth, this._frameHeight), this._needsDisposal = !1);
                let o = e.dims;
                this._frameData && o.width === this._frameData.width && o.height === this._frameData.height || (this._tempCanvas.width = o.width, this._tempCanvas.height = o.height, this._frameData = this._mainContext.createImageData(o.width, o.height)), this._frameData.data.set(e.patch), this._tempContext.putImageData(this._frameData, 0, 0), this._mainContext.drawImage(this._tempCanvas, o.left, o.top), this._frameIdx++, this._frameIdx >= this._frames.length && (this._frameIdx = 0), 2 === e.disposalType && (this._needsDisposal = !0);
                let n = new cc.Texture2D;
                n.initWithElement(this._mainCanvas), n.handleLoadedTexture(), this._sprite.spriteFrame = new cc.SpriteFrame(n), this.isFitNodeSize && this._sprite.node.setScale(this._spriteScale);
                let i = Date.now() - t,
                    s = Math.max(0, Math.floor(e.delay - i)) / 1e3;
                this.scheduleOnce(this.drawGif.bind(this), s)
            }
            getGifData() {
                return new Promise((e, t) => {
                    cc.assetManager.loadRemote(this.url, (o, n) => {
                        o && (console.error(o), t(o)), this.loadImgArrayBuffer(n.nativeUrl).then(e)
                    })
                })
            }
            loadImgArrayBuffer(e) {
                return new Promise(function(t) {
                    const o = new XMLHttpRequest;
                    o.open("GET", e, !0), o.responseType = "arraybuffer", o.onreadystatechange = function() {
                        4 === o.readyState && t(o.response)
                    }, o.onerror = function(e) {
                        console.error("xhr error", e), t(null)
                    }, o.send(null), setTimeout(function() {
                        t(null)
                    }, 1e5)
                })
            }
            RePlay() {
                "" != this.url && 0 != this._frames.length ? (this.Stop(), this.drawGif()) : console.error("[GifRender][Replay] \u5931\u6557\uff0c\u4e0b\u8f09\u4e2d or URL = " + this.url)
            }
            Pause() {
                this.unscheduleAllCallbacks()
            }
            Resume() {
                "" != this.url && 0 != this._frames.length ? this.drawGif() : console.error("[GifRender][Resume] \u5931\u6557\uff0c\u4e0b\u8f09\u4e2d or URL = " + this.url)
            }
            Stop() {
                this.unscheduleAllCallbacks(), this._frameIdx = 0
            }
        };
        n([r(cc.String)], h.prototype, "url", void 0), n([r(cc.Boolean)], h.prototype, "isOnEnableRestart", void 0), n([r(cc.Boolean)], h.prototype, "isFitNodeSize", void 0), h = n([s(), a, l(cc.Sprite)], h), o.GifRender = h, cc._RF.pop()
    }, {
        "gifuct/lib/index.js": 22
    }],
    GiftHistoryDefine: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "c5ec8OMJ2FI4YVgMZLylHvs", "GiftHistoryDefine"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GiftData = void 0, o.default = class {
            constructor(e) {
                this.data = [], e && this.Parse(e)
            }
            Parse(e) {
                console.log("SSS gifthistorydata", e), this.data = [];
                for (let t of e.History) this.data.push(new n(t));
                return this
            }
            GetHistoryBySessionId(e) {
                return this.data.find(t => t.sessionId == e)
            }
        };
        class n {
            constructor(e) {
                e && this.Parse(e)
            }
            Parse(e) {
                return this.name = e.Name, this.giftId = e.GiftId, this.claimCode = e.Content["CLAIM CODE"], this.amount = e.Content.AMOUNT, this.serialNumber = e.Content["SERIAL NUMBER"], this.sequence = e.Content.SEQUENCE, this.bindReason = e.BindReason, this.sessionId = e.BindInfo.SessionId, this.bindTime = new Date(`${e.BindTime} UTC`), this
            }
        }
        o.GiftData = n, cc._RF.pop()
    }, {}],
    GlobalData: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "5e2adP+z/dJ+4xxGOBRkK7U", "GlobalData");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GlobalData = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {};
        r = n([i], r), o.GlobalData = r, cc._RF.pop()
    }, {}],
    GuestButtonController: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "db612WdEVpG/JLSp64mBh8u", "GuestButtonController");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GustButtonController = void 0;
        const i = e("./ButtonHoverScale"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.button = null, this.buttonHover = null, this.colorGray = new cc.Color, this.colorWhite = new cc.Color(255, 255, 255, 255)
            }
            set interactable(e) {
                this.button.interactable = e, this.buttonHover.Enable = e, this.button.target.color = e ? this.colorWhite : this.colorGray
            }
        };
        n([r(cc.Button)], a.prototype, "button", void 0), n([r(i.ButtonHoverScale)], a.prototype, "buttonHover", void 0), n([r(cc.Color)], a.prototype, "colorGray", void 0), a = n([s], a), o.GustButtonController = a, cc._RF.pop()
    }, {
        "./ButtonHoverScale": "ButtonHoverScale"
    }],
    GuestGameUiMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7e39d2B2KxCR7kxksLEfQ/s", "GuestGameUiMgr");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const s = e("../../../GameCommon/CommonRoot/Script/CommonRoot"),
            r = e("../../Connect/Script/ConnectPanelMgr"),
            a = e("../../Helper/EventSystem"),
            l = e("./GuestInGamePopupMgr"),
            c = e("./GuestSysMgr"),
            h = e("./Utils/DraggableItem"),
            {
                ccclass: m,
                property: u
            } = cc._decorator;
        let d = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.btnWhatsApp = null, this.btnFbMessenger = null, this.btnSharePostWin = null, this.logoGuest = null, this.beginPosSharePostWin = null, this.endPosSharePostWin = null, this.spinTimes = 0, this.spinOverPhase01 = !1, this.isWinEffectStarted = !1
            }
            static getInstance() {
                return n.instance
            }
            onLoad() {
                n.instance = this
            }
            start() {
                0 != c.default.getInstance().isEnabled() ? (window.addEventListener("message", this.onWindowPostMessage.bind(this), !1), this.btnSharePostWin.node.active = !1, this.btnFbMessenger.node.active = !1, this.btnWhatsApp.node.active = !1, this.logoGuest.active = !1, 1 == c.default.getInstance().isGuestLogin() && (1 == c.default.isIpad() ? this.btnFbMessenger.node.active = !0 : this.btnWhatsApp.node.active = !0, this.logoGuest.active = !0, s.CommonRoot.Instance.GetGameBar.setUserName(c.default.getInstance().creditRate, 0)), this.spinTimes = 0, 1 == c.default.isIpad() ? this.scheduleOnce(() => {
                    this.btnFbMessenger.node.getComponent(h.default).showBubbleCanMove()
                }, 2) : this.scheduleOnce(() => {
                    this.btnWhatsApp.node.getComponent(h.default).showBubbleCanMove()
                }, 2)) : this.node.active = !1
            }
            checkGameTip() {
                0 != c.default.getInstance().isGuestLogin() && (this.spinTimes = this.spinTimes + 1, 0 == this.spinOverPhase01 ? (this.spinTimes > 20 && (this.showGameTip(), this.resetSpinTime()), 2 == this.spinTimes && (1 == c.default.isIpad() ? this.btnFbMessenger.node.getComponent(h.default).showBubbleCallMe() : this.btnWhatsApp.node.getComponent(h.default).showBubbleCallMe())) : this.spinTimes > 100 && (this.showGameTip(), this.resetSpinTime()))
            }
            resetSpinTime() {
                this.spinOverPhase01 = !0, this.spinTimes = 0
            }
            showGameTip() {
                if (0 == c.default.getInstance().isGuestLogin()) return;
                let e = !1,
                    t = !1;
                1 == c.default.isIpad() ? (e = !1, t = !0) : (e = !0, t = !1), l.GuestInGamePopupMgr.Instance.ShowPopMsgAB("\xa1Felicidades!", "Has demostrado ser un jugador con potencial para ganar excelentes premios. \n \xbfDeseas jugar en Modo Real?", "No, jugar\xe9 en Modo \n Prueba un poco m\xe1s.", "\xa1Si, deseo jugar para \n ganar dinero!", () => {
                    l.GuestInGamePopupMgr.Instance.ClosePopMsg()
                }, () => {
                    1 == c.default.isIpad() ? (c.default.getInstance().logClickMessenger(41), c.default.getInstance().openFbMessenger()) : (c.default.getInstance().logClickWhatsApp(41), c.default.getInstance().openWhatsApp())
                }, !1, e, t), window.postMessage(JSON.stringify({
                    msg_type: "guest_tip_popup"
                }), "*")
            }
            showPurchaseTip() {
                if (0 == c.default.getInstance().isGuestLogin()) return;
                let e = !1,
                    t = !1;
                1 == c.default.isIpad() ? (e = !1, t = !0) : (e = !0, t = !1);
                let o = c.default.getInstance().isSharingCompsAvailable(),
                    i = this;
                l.GuestInGamePopupMgr.Instance.ShowPopMsgAB("Mensaje", "Actualmente estas jugando en Modo Prueba, quieres seguir jugando?", "Compartir \n mi alegr\xeda!", "Quiero ganar \n DINERO REAL!", () => {
                    r.ConnectPanelMgr.Instance.ShowConnectPanel(), n.getInstance().openSharePostPromote(), i.scheduleOnce(() => {
                        i.requestSharingComps()
                    }, 2), l.GuestInGamePopupMgr.Instance.ClosePopMsg()
                }, () => {
                    1 == c.default.isIpad() ? (c.default.getInstance().logClickMessenger(42), c.default.getInstance().openFbMessenger()) : (c.default.getInstance().logClickWhatsApp(42), c.default.getInstance().openWhatsApp())
                }, !0, e, t, o), window.postMessage(JSON.stringify({
                    msg_type: "guest_tip_popup"
                }), "*")
            }
            requestSharingComps() {
                c.default.getInstance().getSharingComps(this.getCompsSucceed.bind(this), this.getCompsFailed.bind(this)), window.postMessage(JSON.stringify({
                    msg_type: "check_show_purchase_hint"
                }), "*")
            }
            onDestroy() {
                c.default.getInstance().isEnabled() && window.removeEventListener("message", this.onWindowPostMessage)
            }
            onWindowPostMessage(e) {
                let t = JSON.parse(e.data);
                if (null != t.msg_type)
                    if ("win_effect_ctrl" == t.msg_type) {
                        let e = t.win,
                            o = t.action,
                            n = t.win_type;
                        "start" == o ? n >= 5 && n <= 6 ? (c.default.getInstance().setSharePostWinContent(n, e), this.showSharePostWin(), this.isWinEffectStarted = !0) : 4 == n && (this.isWinEffectStarted = !0) : "stop" == o && (this.moveSharePostWin(), 1 == this.isWinEffectStarted && (this.scheduleOnce(() => {
                            this.showGameTip()
                        }, 2), this.resetSpinTime()), this.isWinEffectStarted = !1)
                    } else "ready_to_spin" == t.msg_type ? this.checkGameTip() : "show_purchase_tip" == t.msg_type && this.showPurchaseTip()
            }
            getCompsSucceed(e, t, o) {
                try {
                    console.log("[guestsys][getCompsSucceed] success, status: ", e), console.log(t);
                    let o = t.cmd_data.entries,
                        i = t.cmd_data.winnings,
                        s = t.cmd_data.add_entries;
                    this.showGetCompsTipWindow(i, o, s)
                } catch (n) {
                    console.error(n)
                }
                r.ConnectPanelMgr.Instance.DisableConnectPanel()
            }
            showGetCompsTipWindow(e, t, o = 0) {
                let n = o.toString(),
                    i = this;
                l.GuestInGamePopupMgr.Instance.showPopMsgOk("Mensaje", "Gracias por compartir. Te regalamos " + n + " cr\xe9ditos y te deseamos mucha suerte!!", () => {
                    i.doGetCompsTipFinishJob(e, t)
                })
            }
            doGetCompsTipFinishJob(e, t) {
                a.EventSystem.Event(a.PurchaseEvent.OnPurchaseSuccess).Length > 0 ? a.EventSystem.Event(a.PurchaseEvent.OnPurchaseSuccess).Notify(e, t) : null != s.CommonRoot.Instance.GetGameBar.m_DelGetComps && s.CommonRoot.Instance.GetGameBar.m_DelGetComps.Notify(e, t), l.GuestInGamePopupMgr.Instance.ClosePopMsg()
            }
            getCompsFailed(e, t, o) {
                console.error("[guestsys][getCompsFailed] error, status: ", e), console.error(t), r.ConnectPanelMgr.Instance.DisableConnectPanel()
            }
            openWhatsApp() {
                c.default.getInstance().logClickWhatsApp(40), c.default.getInstance().openWhatsApp()
            }
            openFbMessenger() {
                c.default.getInstance().logClickMessenger(40), c.default.getInstance().openFbMessenger()
            }
            openSharePostPromote() {
                c.default.getInstance().openSharePostPromote()
            }
            openSharePostWin() {
                c.default.getInstance().openSharePostWin(), this.hideSharePostWin()
            }
            showSharePostWin() {
                this.btnSharePostWin.node.setPosition(this.beginPosSharePostWin.getPosition()), this.btnSharePostWin.node.active = !0
            }
            moveSharePostWin() {
                cc.tween(this.btnSharePostWin.node).to(1, {
                    position: this.endPosSharePostWin.position
                }, {
                    easing: "sineInOut"
                }).start()
            }
            hideSharePostWin() {
                this.btnSharePostWin.node.active = !1
            }
        };
        d.instance = null, i([u(cc.Button)], d.prototype, "btnWhatsApp", void 0), i([u(cc.Button)], d.prototype, "btnFbMessenger", void 0), i([u(cc.Button)], d.prototype, "btnSharePostWin", void 0), i([u(cc.Node)], d.prototype, "logoGuest", void 0), i([u(cc.Node)], d.prototype, "beginPosSharePostWin", void 0), i([u(cc.Node)], d.prototype, "endPosSharePostWin", void 0), d = n = i([m], d), o.default = d, cc._RF.pop()
    }, {
        "../../../GameCommon/CommonRoot/Script/CommonRoot": "CommonRoot",
        "../../Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../../Helper/EventSystem": "EventSystem",
        "./GuestInGamePopupMgr": "GuestInGamePopupMgr",
        "./GuestSysMgr": "GuestSysMgr",
        "./Utils/DraggableItem": "DraggableItem"
    }],
    GuestInGamePopupMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "6cea9ts/0VDLZA6IeykOpNf", "GuestInGamePopupMgr");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GuestInGamePopupMgr = void 0;
        const s = e("../../Net/LobbyClient"),
            r = e("../../Loading/Script/LoadingMgr"),
            a = e("../../Connect/Script/ConnectPanelMgr"),
            l = e("../../../GameCommon/CommonRoot/Script/CommonRoot"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        let m = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.root = null, this.content = null, this.title = null, this.btnA = null, this.btnB = null, this.btnC = null, this.btnOk = null, this.decoFacebookIcon = null, this.decoWhatsAppIcon = null, this.decoMessengerIcon = null, this.getCompsTip = null, this.onClickCallbackA = null, this.onClickCallbackB = null, this.onClickCallbackC = null, this.onClickCallbackOk = null
            }
            onLoad() {
                null == n.Instance && (n.Instance = this)
            }
            onDestroy() {
                n.Instance = null
            }
            start() {
                this.root.active = !1
            }
            ClosePopMsg() {
                this.root.active = !1, this.decoFacebookIcon.active = !1, this.decoWhatsAppIcon.active = !1, this.decoMessengerIcon.active = !1, this.getCompsTip.active = !1, this.btnA.node.active = !1, this.btnB.node.active = !1, this.btnC.node.active = !1, this.btnOk.node.active = !1, this.onClickCallbackA = null, this.onClickCallbackB = null, this.onClickCallbackC = null, this.onClickCallbackOk = null
            }
            onClickedA() {
                this.onClickCallbackA()
            }
            onClickedB() {
                this.onClickCallbackB()
            }
            onClickedC() {
                this.onClickCallbackC()
            }
            onClickedOk() {
                this.onClickCallbackOk()
            }
            showPopMsgOk(e, t, o) {
                this.title.string = e, this.content.string = t, this.decoFacebookIcon.active = !1, this.decoWhatsAppIcon.active = !1, this.decoMessengerIcon.active = !1, this.getCompsTip.active = !1, this.btnA.node.active = !1, this.btnB.node.active = !1, this.btnC.node.active = !1, this.btnOk.node.active = !0, this.onClickCallbackOk = o, l.CommonRoot.Instance && l.CommonRoot.Instance.GetInfoMgr && l.CommonRoot.Instance.GetInfoMgr.CloseInfoPage(), this.isHideCursor = "none" == cc.game.canvas.style.cursor, this.isHideCursor && (cc.game.canvas.style.cursor = "default"), this.root.active = !0
            }
            ShowPopMsgAB(e, t, o, n, i, s, r = !1, a = !1, c = !1, h = !1) {
                this.title.string = e, this.content.string = t, this.decoFacebookIcon.active = !1, this.decoWhatsAppIcon.active = !1, this.decoMessengerIcon.active = !1, this.getCompsTip.active = !1, 1 == r && (this.decoFacebookIcon.active = !0), 1 == a && (this.decoWhatsAppIcon.active = !0), 1 == c && (this.decoMessengerIcon.active = !0), 1 == h && (this.getCompsTip.active = !0), this.btnA.node.active = !0, this.btnB.node.active = !0, this.btnC.node.active = !1, this.btnOk.node.active = !1, this.btnA.node.getComponentInChildren(cc.Label).string = o, this.btnB.node.getComponentInChildren(cc.Label).string = n, this.onClickCallbackA = i, this.onClickCallbackB = s, l.CommonRoot.Instance && l.CommonRoot.Instance.GetInfoMgr && l.CommonRoot.Instance.GetInfoMgr.CloseInfoPage(), this.isHideCursor = "none" == cc.game.canvas.style.cursor, this.isHideCursor && (cc.game.canvas.style.cursor = "default"), this.root.active = !0
            }
            ErrorHandler() {
                r.LoadingMgr.Instance.OpenLoading(), s.LobbyClient.Instance.DoLogout(() => {
                    let e = SS.Common.GameEnvironment.Language + "Login";
                    cc.assetManager.bundles.find(function(t) {
                        return t._config.getSceneInfo(e)
                    }) ? cc.director.loadScene(e) : cc.director.loadScene("Login")
                }, (e, t) => {
                    console.error("Logout error status :" + e, "data:", t), this.CriticalHandler()
                })
            }
            CriticalHandler() {
                a.ConnectPanelMgr.Instance.ShowConnectPanel();
                try {
                    null != s.LobbyClient.Instance && s.LobbyClient.Instance.ReloadLobby ? s.LobbyClient.Instance.ReloadLobby() : SS.Common.GameEnvironment.ProjectSetting.CDN_HOST ? location.reload() : location.replace(this.GetIndexURL())
                } catch (e) {
                    location.replace(this.GetIndexURL())
                }
            }
            GetIndexURL() {
                let e = "",
                    t = "",
                    o = SS.Common.BaseFunction.GetURLParameterByName("KioskDEV");
                return SS.Common.BaseFunction.GetURLParameterByName("standalone") && (o ? (e = "index.html", t = ",standalone=true") : (e = "index_ni.html", t = "?standalone=true")), o ? "../../../" + e + "/?KioskDEV=" + o + t : "../../../" + e + t
            }
        };
        m.Instance = null, i([h(cc.Node)], m.prototype, "root", void 0), i([h(cc.Label)], m.prototype, "content", void 0), i([h(cc.Label)], m.prototype, "title", void 0), i([h(cc.Button)], m.prototype, "btnA", void 0), i([h(cc.Button)], m.prototype, "btnB", void 0), i([h(cc.Button)], m.prototype, "btnC", void 0), i([h(cc.Button)], m.prototype, "btnOk", void 0), i([h(cc.Node)], m.prototype, "decoFacebookIcon", void 0), i([h(cc.Node)], m.prototype, "decoWhatsAppIcon", void 0), i([h(cc.Node)], m.prototype, "decoMessengerIcon", void 0), i([h(cc.Node)], m.prototype, "getCompsTip", void 0), m = n = i([c], m), o.GuestInGamePopupMgr = m, cc._RF.pop()
    }, {
        "../../../GameCommon/CommonRoot/Script/CommonRoot": "CommonRoot",
        "../../Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../../Loading/Script/LoadingMgr": "LoadingMgr",
        "../../Net/LobbyClient": "LobbyClient"
    }],
    GuestLobbyPopupMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "a9c495gzk1I6Y6EGC2G5suB", "GuestLobbyPopupMgr");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.GuestLobbyPopupMgr = void 0;
        const s = e("../../../GameCommon/CommonRoot/Script/CommonRoot"),
            r = e("./GuestSysMgr"),
            a = e("./GuestLobbyUiMgr"),
            {
                ccclass: l,
                property: c
            } = cc._decorator;
        let h = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.root = null, this.btnOK = null, this.whatsappNode = null, this.messengerNode = null, this.onClickCallbackOk = null
            }
            onLoad() {
                null == n.Instance && (n.Instance = this)
            }
            start() {
                this.root.active = !1
            }
            onDestroy() {
                n.Instance = null, this.unscheduleAllCallbacks()
            }
            ClosePopMsg() {
                this.root.active = !1, this.btnOK.node.active = !1, this.onClickCallbackOk = null
            }
            onClickedOk() {
                null != this.onClickCallbackOk && this.onClickCallbackOk(), this.ClosePopMsg(), this.scheduleOnce(() => {
                    null != a.default.getInstance() && a.default.getInstance().showBubble()
                }, 3)
            }
            onClickWhatsApp() {
                r.default.getInstance().logClickWhatsApp(30), r.default.getInstance().openWhatsApp()
            }
            onClickFbMessenger() {
                r.default.getInstance().logClickMessenger(30), r.default.getInstance().openFbMessenger()
            }
            ShowPopMsg() {
                r.default.isDesktop() ? (this.whatsappNode.active = !0, this.messengerNode.active = !1) : r.default.isIpad() ? (this.whatsappNode.active = !1, this.messengerNode.active = !0) : (this.whatsappNode.active = !0, this.messengerNode.active = !1), this.btnOK.node.active = !0, s.CommonRoot.Instance && s.CommonRoot.Instance.GetInfoMgr && s.CommonRoot.Instance.GetInfoMgr.CloseInfoPage(), this.isHideCursor = "none" == cc.game.canvas.style.cursor, this.isHideCursor && (cc.game.canvas.style.cursor = "default"), this.root.active = !0
            }
        };
        h.Instance = null, i([c(cc.Node)], h.prototype, "root", void 0), i([c(cc.Button)], h.prototype, "btnOK", void 0), i([c(cc.Node)], h.prototype, "whatsappNode", void 0), i([c(cc.Node)], h.prototype, "messengerNode", void 0), h = n = i([l], h), o.GuestLobbyPopupMgr = h, cc._RF.pop()
    }, {
        "../../../GameCommon/CommonRoot/Script/CommonRoot": "CommonRoot",
        "./GuestLobbyUiMgr": "GuestLobbyUiMgr",
        "./GuestSysMgr": "GuestSysMgr"
    }],
    GuestLobbyUiMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "8746e2x38FHUaj+nPwAKAE9", "GuestLobbyUiMgr");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const s = e("./GuestSysMgr"),
            r = e("./Utils/GuestButtonController"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        let c = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.logoGuest = null, this.guestDownBar = null, this.anchorDefault = null, this.anchorIpad = null, this.anchorDesktop = null, this.bubble = null, this.btnGrayColor = new cc.Color(255, 255, 255, 255), this.btnFB = [], this.btnWhatsApp = []
            }
            static getInstance() {
                return n.instance
            }
            onLoad() {
                n.instance = this
            }
            onDestroy() {
                n.instance = null, this.unscheduleAllCallbacks()
            }
            getContactInfoByKioskSucceedJob(e, t) {
                if (console.log("get contact info by kiosk succeed! whatsapp id: " + e + ", messenger id: " + t), s.default.isIpad() && "" === t) this.node.active = !1;
                else if ("" !== e || "" !== t) {
                    if ("" === e)
                        for (let e of this.btnWhatsApp) e.interactable = !1;
                    if ("" === t)
                        for (let e of this.btnFB) e.interactable = !1
                } else this.node.active = !1
            }
            getContactInfoByKioskFailedJob() {
                this.node.active = !1
            }
            start() {
                0 != s.default.getInstance().isEnabled() ? (0 == s.default.getInstance().isGuestLogin() && s.default.getInstance().getContactInfoByKiosk(this.getContactInfoByKioskSucceedJob.bind(this), this.getContactInfoByKioskFailedJob.bind(this)), this.bubble.active = !1, this.logoGuest.active = !1, this.anchorDefault.active = !1, this.anchorIpad.active = !1, this.anchorDesktop.active = !1, this.guestDownBar.active = !0, 1 == s.default.getInstance().isGuestLogin() && (this.logoGuest.active = !0), 1 == s.default.isDesktop() ? this.anchorDesktop.active = !0 : 1 == s.default.isIpad() ? this.anchorIpad.active = !0 : this.anchorDefault.active = !0) : this.node.active = !1
            }
            showBubble() {
                this.unscheduleAllCallbacks(), this.bubble.active = !0, this.scheduleOnce(() => {
                    this.hideBubble()
                }, 3)
            }
            hideBubble() {
                this.unscheduleAllCallbacks(), this.bubble.active = !1, this.scheduleOnce(() => {
                    this.showBubble()
                }, 10)
            }
            openWhatsApp() {
                s.default.getInstance().logClickWhatsApp(10), s.default.getInstance().openWhatsApp()
            }
            openFbMessenger() {
                s.default.getInstance().logClickMessenger(10), s.default.getInstance().openFbMessenger()
            }
            openSharePostPromote() {
                s.default.getInstance().openSharePostPromote()
            }
            openSharePostWin() {
                s.default.getInstance().openSharePostWin()
            }
            openFbPage() {
                s.default.getInstance().openFbPage(), s.default.getInstance().logClickFanPage(1)
            }
        };
        c.instance = null, i([l(cc.Node)], c.prototype, "logoGuest", void 0), i([l(cc.Node)], c.prototype, "guestDownBar", void 0), i([l(cc.Node)], c.prototype, "anchorDefault", void 0), i([l(cc.Node)], c.prototype, "anchorIpad", void 0), i([l(cc.Node)], c.prototype, "anchorDesktop", void 0), i([l(cc.Node)], c.prototype, "bubble", void 0), i([l(cc.Color)], c.prototype, "btnGrayColor", void 0), i([l(r.GustButtonController)], c.prototype, "btnFB", void 0), i([l(r.GustButtonController)], c.prototype, "btnWhatsApp", void 0), c = n = i([a], c), o.default = c, cc._RF.pop()
    }, {
        "./GuestSysMgr": "GuestSysMgr",
        "./Utils/GuestButtonController": "GuestButtonController"
    }],
    GuestLoginUiMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "d89b8WZFpNIPrV/RIE2EoGK", "GuestLoginUiMgr");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const s = e("./GuestSysMgr"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.btnGuestLogin = null, this.whatsAppNode = null, this.fbMessengerNode = null, this.testButtonClickCount = 0
            }
            onClickGuestLogin() {
                this.guestLoginCallback()
            }
            static getInstance() {
                return n.instance
            }
            onLoad() {
                n.instance = this
            }
            start() {
                this.btnGuestLogin.node.active = !1, this.fbMessengerNode.active = !1, this.whatsAppNode.active = !1, s.default.getInstance().initialize(this.enableUi.bind(this), this.disableUi.bind(this))
            }
            enableUi() {
                this.btnGuestLogin.node.active = !0, this.fbMessengerNode.active = !1, this.whatsAppNode.active = !1, 1 == s.default.isIpad() ? this.fbMessengerNode.active = !0 : (s.default.isDesktop(), this.whatsAppNode.active = !0)
            }
            disableUi() {
                this.btnGuestLogin.node.active = !1, this.whatsAppNode.active = !1, this.fbMessengerNode.active = !1
            }
            openWhatsApp() {
                s.default.getInstance().openWhatsApp(), s.default.getInstance().logClickLoginWhatsApp()
            }
            openFbMessenger() {
                s.default.getInstance().openFbMessenger(), s.default.getInstance().logClickLoginMessenger()
            }
            openSharePostPromote() {
                s.default.getInstance().openSharePostPromote()
            }
            openSharePostWin() {
                s.default.getInstance().openSharePostWin()
            }
            setGuestLoginButtonInteractable(e) {
                n && null != this.btnGuestLogin && (this.btnGuestLogin.interactable = e)
            }
            onClickTestButtonA() {
                this.testButtonClickCount = this.testButtonClickCount + 1, this.testButtonClickCount >= 8 && (this.testButtonClickCount = 0), this.unscheduleAllCallbacks(), this.scheduleOnce(() => {
                    this.testButtonClickCount = 0
                }, 3)
            }
        };
        l.instance = null, i([a(cc.Button)], l.prototype, "btnGuestLogin", void 0), i([a(cc.Node)], l.prototype, "whatsAppNode", void 0), i([a(cc.Node)], l.prototype, "fbMessengerNode", void 0), l = n = i([r], l), o.default = l, cc._RF.pop()
    }, {
        "./GuestSysMgr": "GuestSysMgr"
    }],
    GuestSysMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "e6bdaLfaG1Hw6IPdZL+1YU6", "GuestSysMgr");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const s = e("../../Component/GlobalData"),
            r = e("../../Net/LobbyClient"),
            a = e("./SocialMediaApiHandler"),
            {
                ccclass: l,
                property: c
            } = cc._decorator;
        let h = n = class {
            constructor() {
                this.IsDebug = !1, this.lang = "es", this.logoMode = 0, this.urlCode = "", this.normalPinId = "", this.guestPinId = "", this.loginOnceToken = !1, this.sharingCompsEventName = "", this.initSucceedCallback = null, this.initFailedCallback = null, this.getContactInfoByKioskFailedCallback = null, this.getContactInfoByKioskSucceedCallback = null, this.guestLoginFlag = !1, this.deviceUuid = "", this.enabled = !1, this.receiveResult = !1, this.CreditRateArray = ["1 MXN \uff1d 10 CR\xc9DITOS", "1 CLP \uff1d 1 CR\xc9DITO", "1 CRC \uff1d 1 CR\xc9DITO", "1 MXN \uff1d 10 CR\xc9DITOS", "1 CLP \uff1d 1 CR\xc9DITO", "1 CRC \uff1d 1 CR\xc9DITO", "1 MXN \uff1d 10 CR\xc9DITOS"], this.sharePostUrlRoot = "http://dev.888dragon.mobi/fb_share_post/juegoseguros/page/", this.SharePostWinPageArray = ["bigwin.html", "bigwin.html", "bigwin.html", "bigwin.html", "bigwin.html", "bigwin.html", "megawin.html", "megawin.html"], this.DefaultSharePostPromotePage = "promote.html", this.DefaultFbId = "DefaultFbId", this.DefaultWhatsAppId = "12345678", this.fbId = "", this.whatsAppId = "", this.sharePostPromoteContent = {
                    href: "http://default.url",
                    quote: "default promote quote",
                    hashtag: "#DefaultHashTag"
                }, this.sharePostWinContent = {
                    href: "http://default.url",
                    quote: "default win quote",
                    hashtag: "#DefaultHashTag"
                }, this.LogoFormalNameArray = ["Chrismoney", "juegoseguros", "Arcoiris", "mx_billonario", "cl_billonario", "cr_billonario", "juegoseguros Mx"], this.HashTagArray = ["#Chrismoney", "#juegoseguros", "#Arcoiris", "#mx_billonario", "#cl_billonario", "#cr_billonario", "#juegoseguros_mx"]
            }
            getLogoMode() {
                return this.logoMode
            }
            getUrlCode() {
                return this.urlCode
            }
            consumeLoginOnceToken() {
                let e = this.loginOnceToken;
                return this.loginOnceToken = !1, e
            }
            static getInstance() {
                let e = !1;
                return null != window.parent && null != window.parent.guestSysInstance && (e = !0), null == n.instance && (e ? (n.instance = window.parent.guestSysInstance, console.log("[guestsys] load GuestSysMgr from parent window.")) : (n.instance = new n, window.guestSysInstance = n.instance, console.log("[guestsys] create guest sys instance."))), n.instance
            }
            static setInstance(e) {
                n.instance = e
            }
            isGuestLogin() {
                return !!this.IsDebug || 0 != this.enabled && this.guestLoginFlag
            }
            setGuestLogin(e) {
                this.guestLoginFlag = e, 1 == e && (this.loginOnceToken = !0)
            }
            getDeviceUuid() {
                return this.deviceUuid
            }
            setEnabled(e) {
                this.enabled = e
            }
            isEnabled() {
                return !!this.IsDebug || this.enabled
            }
            getHashTag() {
                let e = "#DefaultHashTag";
                return null != this.HashTagArray[this.logoMode] && (e = this.HashTagArray[this.logoMode]), e
            }
            getFormalLogoName() {
                let e = "";
                return null != this.LogoFormalNameArray[this.logoMode] && (e = this.LogoFormalNameArray[this.logoMode]), e
            }
            get creditRate() {
                let e = "1 USD \uff1d 100 CREDITS";
                return "es" == this.lang && (e = this.CreditRateArray[this.logoMode]), e
            }
            setSharePostWinContent(e, t) {
                this.sharePostWinContent.quote = '\xa1Jug\xfae "' + this.getGameName() + '" en "' + this.getFormalLogoName() + '" y gan\xe9 ' + t.toString() + " creditos!", this.sharePostWinContent.href = this.sharePostUrlRoot + this.SharePostWinPageArray[e], this.sharePostWinContent.hashtag = this.getHashTag()
            }
            readLocalDeviceUuid() {
                JSUtility.IsSupportLocalStorage() ? this.deviceUuid = localStorage.getItem("guest_device_uuid") : JSUtility.IsSupportCookie() && (this.deviceUuid = JSUtility.GetCookie("guest_device_uuid")), null != this.deviceUuid && null != this.deviceUuid || (this.deviceUuid = "")
            }
            writeLocalDeviceUuid(e) {
                this.deviceUuid = e, JSUtility.IsSupportLocalStorage() ? localStorage.setItem("guest_device_uuid", this.deviceUuid) : JSUtility.IsSupportCookie() && (document.cookie = "guest_device_uuid=" + this.deviceUuid + ";")
            }
            writeNormalPinId(e) {
                this.normalPinId = e, JSUtility.IsSupportLocalStorage() ? localStorage.setItem("normal_pin_id", this.normalPinId) : JSUtility.IsSupportCookie() && (document.cookie = "normal_pin_id=" + this.normalPinId + ";")
            }
            writeGuestPinId(e) {
                this.guestPinId = e, JSUtility.IsSupportLocalStorage() ? localStorage.setItem("guest_pin_id", this.guestPinId) : JSUtility.IsSupportCookie() && (document.cookie = "guest_pin_id=" + this.guestPinId + ";")
            }
            readNormalPinId() {
                JSUtility.IsSupportLocalStorage() ? this.normalPinId = localStorage.getItem("normal_pin_id") : JSUtility.IsSupportCookie() && (this.normalPinId = JSUtility.GetCookie("normal_pin_id")), null != this.normalPinId && null != this.normalPinId || (this.normalPinId = "")
            }
            readGuestPinId() {
                JSUtility.IsSupportLocalStorage() ? this.guestPinId = localStorage.getItem("guest_pin_id") : JSUtility.IsSupportCookie() && (this.guestPinId = JSUtility.GetCookie("guest_pin_id")), null != this.guestPinId && null != this.guestPinId || (this.guestPinId = "")
            }
            writeLocalUrlCode() {
                JSUtility.IsSupportLocalStorage() ? localStorage.setItem("guest_url_code", this.urlCode) : JSUtility.IsSupportCookie() && (document.cookie = "guest_url_code=" + this.urlCode + ";")
            }
            readLocalUrlCode() {
                JSUtility.IsSupportLocalStorage() ? this.urlCode = localStorage.getItem("guest_url_code") : JSUtility.IsSupportCookie() && (this.urlCode = JSUtility.GetCookie("guest_url_code")), null != this.urlCode && null != this.urlCode || (this.urlCode = "")
            }
            initialize(e, t) {
                let o = window.location.href;
                if (o.split("com/", 2), o.split("mobi/", 2), o.split("mx/", 2), this.sharePostUrlRoot = s.GlobalData.S3Host + "/fb_share_post/" + window.gd_nowLOGO + "/page/", console.log("[guestsys] sharePostUrlRoot: " + this.sharePostUrlRoot), this.sharePostPromoteContent.href = this.sharePostUrlRoot + this.DefaultSharePostPromotePage, console.log("[guestsys] current share post promote page url: " + this.sharePostPromoteContent.href), a.default.getInstance().initialize(), this.fbId = this.DefaultFbId, this.whatsAppId = this.DefaultWhatsAppId, this.initSucceedCallback = e, this.initFailedCallback = t, this.lang = SS.Common.GameEnvironment.Language, this.logoMode = window.gd_LogoMode, 1 != SS.Common.GameEnvironment.ProjectSetting.EnableGuestMode) return this.setEnabled(!1), void this.initFailedCallback();
                this.urlCode = SS.Common.BaseFunction.GetURLParameterByName("uc"), console.log("[guestsys] urlcode: " + this.urlCode), "" == this.urlCode ? this.readLocalUrlCode() : this.writeLocalUrlCode(), this.readNormalPinId(), this.readGuestPinId(), this.getContactInfoBeforeLogin(), this.readLocalDeviceUuid()
            }
            openWhatsApp() {
                0 != this.isEnabled() && a.default.getInstance().openWhatsApp(this.whatsAppId)
            }
            openFbMessenger() {
                0 != this.isEnabled() && a.default.getInstance().openFbMessenger(this.fbId)
            }
            openFbPage() {
                0 != this.isEnabled() && a.default.getInstance().openFbPage(this.fbId)
            }
            openSharePostPromote() {
                0 != this.isEnabled() && (this.sharePostPromoteContent.quote = 'Estoy jugando "' + this.getGameName() + '" en "' + this.getFormalLogoName() + '", ven a ganar conmigo!', this.sharePostPromoteContent.hashtag = this.getHashTag(), a.default.getInstance().openFbSharePost(this.sharePostPromoteContent), this.logSharePostPromote())
            }
            openSharePostWin() {
                0 != this.isEnabled() && (a.default.getInstance().openFbSharePost(this.sharePostWinContent), this.logSharePostWin())
            }
            static isIpad() {
                if (1 == this.IsDebugIpad) return !0;
                const e = window.navigator.userAgent;
                if (e.indexOf("iPad") > -1) return !0;
                if (e.indexOf("Macintosh") > -1) try {
                    return document.createEvent("TouchEvent"), !0
                } catch (t) {}
                return !1
            }
            static isDesktop() {
                return cc.sys.os == cc.sys.OS_WINDOWS
            }
            logClickWhatsApp(e) {
                this.userLog("click_whatsapp", e)
            }
            logClickMessenger(e) {
                this.userLog("click_messenger", e)
            }
            logNormalLogin(e) {
                this.userLog("login_normal", e)
            }
            logGuestLogin(e) {
                this.userLog("login_guest", e)
            }
            logSharePostWin() {
                this.userLog("click_sharepost_win", 0)
            }
            logSharePostPromote() {
                this.userLog("click_sharepost_promote", 0)
            }
            logClickFanPage(e) {
                this.userLog("click_fanpage", e)
            }
            logClickBanner(e) {
                this.userLog("click_banner", e)
            }
            userLog(e, t) {
                if (0 == n.instance.isEnabled()) return;
                let o = "guestmode_" + e;
                r.LobbyClient.Instance.GetUserClient.sendClickLogEx("guestmode", t, o, this.urlCode, SS.Common.GameEnvironment.DeviceInfo), console.log("[guestsys] click name: " + o + ", button click id: " + t.toString())
            }
            logEnterLoginPage() {
                this.userLogBeforeLogin("enter_loginpage", 0)
            }
            logClickLoginMessenger() {
                this.userLogBeforeLogin("click_login_messenger", 0)
            }
            logClickLoginWhatsApp() {
                this.userLogBeforeLogin("click_login_whatsapp", 0)
            }
            userLogBeforeLogin(e, t) {
                if (0 == n.instance.isEnabled()) return;
                let o = window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.Modules.Lobby.ServerHOST;
                null == r.LobbyClient.Instance && (r.LobbyClient.Instance = new r.LobbyClient);
                let i = "guestmode_" + e;
                r.LobbyClient.Instance.sendDirectClickLog(o, "guestmode", t, i, this.urlCode, this.getLogoMode()), console.log("[guestsys][sendDirectClickLog] click name: " + i + ", button click id: " + t.toString())
            }
            getGameName() {
                let e = "";
                try {
                    e = SS.Common.GameEnvironment.CurrentGameNow, console.log("[guestsys][getGameName] Game Name: " + e);
                    let n = SS.Common.GameEnvironment.GameSetting.Icon;
                    for (var t in n)
                        if (n.hasOwnProperty(t) && null != n[t] && n[t].hasOwnProperty("GameName") && n[t].GameName == e && n[t].hasOwnProperty("FormalName")) {
                            e = n[t].FormalName, console.log("[guestsys][getGameName] Use Formal Name: " + e);
                            break
                        }
                } catch (o) {
                    console.error(o)
                }
                return e
            }
            getContactInfoByKiosk(e, t) {
                this.getContactInfoByKioskSucceedCallback = e, this.getContactInfoByKioskFailedCallback = t, r.LobbyClient.Instance.GetUserClient.getContactInfoByKiosk(this.getContactInfoByKioskSucceed.bind(this), this.getContactInfoByKioskFailed.bind(this))
            }
            getContactInfoByKioskSucceed(e, t, o) {
                console.log("[guestsys][getContactInfoByKiosk] success, status: ", e), console.log(t), this.whatsAppId = t.cmd_data.whatsapp_id, this.fbId = t.cmd_data.messenger_id, null != this.getContactInfoByKioskSucceedCallback && this.getContactInfoByKioskSucceedCallback(this.whatsAppId, this.fbId)
            }
            getContactInfoByKioskFailed(e, t, o) {
                console.error("[guestsys][getContactInfoByKiosk] error, status: ", e), console.error(t), null != this.getContactInfoByKioskFailedCallback && this.getContactInfoByKioskFailedCallback()
            }
            getContactInfoBeforeLogin() {
                let e = window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.Modules.Lobby.ServerHOST;
                console.log("[guestsys][getContactInfoBeforeLogin] serverURL", e), null == r.LobbyClient.Instance && (r.LobbyClient.Instance = new r.LobbyClient), r.LobbyClient.Instance.getContactInfoNotLogin(e, this.urlCode, this.logoMode, this.getContactInfoBeforeLoginSucceed.bind(this), this.getContactInfoBeforeLoginFailed.bind(this))
            }
            getContactInfoBeforeLoginSucceed(e, t, o) {
                console.log("[guestsys][getContactInfoBeforeLogin] success, status: ", e), console.log(t), this.receiveResult = !0, this.whatsAppId = t.whatsapp_id, this.fbId = t.messenger_id, this.setEnabled(!0), this.initSucceedCallback(), this.logEnterLoginPage()
            }
            getContactInfoBeforeLoginFailed(e, t, o) {
                console.error("[guestsys][getContactInfoBeforeLogin] error, status: ", e), console.error(t), this.receiveResult = !0, this.setEnabled(!1), this.initFailedCallback()
            }
            checkGuestLogin() {
                if (0 != this.isEnabled())
                    if (1 == this.isGuestLogin()) {
                        this.deviceUuid == SS.Network.LoginModel.LoginInfo.device_uuid ? console.log("[guestsys][checkGuestLogin] same device_uuid, device_uuid: ", this.deviceUuid) : (n.getInstance().writeLocalDeviceUuid(SS.Network.LoginModel.LoginInfo.device_uuid), console.log("[guestsys][checkGuestLogin] write device_uuid to local, device_uuid: ", this.deviceUuid)), n.getInstance().getCompsEventInfo(), this.writeGuestPinId(SS.Network.LoginModel.LoginInfo.pin_id);
                        let e = Number(this.normalPinId);
                        NaN == e && (e = 0), this.logGuestLogin(e), console.log("[guestsys][checkGuestLogin] guest login, has normal pin id: ", e)
                    } else {
                        this.writeNormalPinId(SS.Network.LoginModel.LoginInfo.pin_id);
                        let e = Number(this.guestPinId);
                        NaN == e && (e = 0), this.logNormalLogin(e), console.log("[guestsys][checkGuestLogin] normal login, has guest pin id: ", e)
                    }
            }
            isSharingCompsAvailable() {
                return "" != this.sharingCompsEventName
            }
            getCompsEventInfo() {
                this.sharingCompsEventName = "", r.LobbyClient.Instance.GetUserClient.getCompsEventInfo(this.getCompsEventInfoSucceed.bind(this), this.getCompsEventInfoFailed.bind(this))
            }
            getSharingComps(e, t) {
                r.LobbyClient.Instance.GetUserClient.getComps(this.sharingCompsEventName, e, t)
            }
            getCompsEventInfoSucceed(e, t, o) {
                try {
                    t.cmd_data.event_info.forEach(e => {
                        "Sharing" == e.type && (this.sharingCompsEventName = e.name)
                    }), console.log("[guestsys][getCompsEventInfoSucceed] success, status: ", e), console.log(t)
                } catch (n) {
                    console.error(n)
                }
            }
            getCompsEventInfoFailed(e, t, o) {
                console.error("[guestsys][getCompsEventInfoFailed] error, status: ", e), console.error(t)
            }
        };
        h.IsDebugIpad = !1, h.instance = null, h = n = i([l], h), o.default = h, cc._RF.pop()
    }, {
        "../../Component/GlobalData": "GlobalData",
        "../../Net/LobbyClient": "LobbyClient",
        "./SocialMediaApiHandler": "SocialMediaApiHandler"
    }],
    IconGroupData: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "8d24a8u7lxDHJRaMkIV7XYn", "IconGroupData"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.IconGroupData = void 0;
        const {
            ccclass: n,
            property: i
        } = cc._decorator;
        o.IconGroupData = class {
            constructor(e, t, o, n, i, s, r, a, l, c, h, m, u) {
                this.gameJpVals = [], this.groupAllGameName = [], this.gameJpKey = "", this.firstThemeId = "", this.lastThemeId = "", this.groupInType = "", this.iconSizeType = "", this.iconLinkCount = 0, this.jpPanel = null, this.jpBg = null, this.featurePanel = null, this.isNeedChangeSetting = !1, this.isUseSingleRes = !1, this.gameJpVals = e, this.groupAllGameName = t, this.gameJpKey = o, this.firstThemeId = n, this.lastThemeId = i, this.groupInType = s, this.iconSizeType = r, this.iconLinkCount = a, this.jpPanel = l, this.jpBg = c, this.featurePanel = h, this.isNeedChangeSetting = m, this.isUseSingleRes = u
            }
        }, cc._RF.pop()
    }, {}],
    IconMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "ea19eprD/5Eboq5YGeVz7xD", "IconMgr");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.IconMgr = o.FLAG_R = o.FLAG = void 0;
        const s = e("../../../LobbyCommon/Helper/EventSystem"),
            r = e("../../../LobbyCommon/InGameJp/Script/GameJpMgr"),
            a = e("../../../LobbyCommon/Net/ClickLog"),
            l = e("../../../LobbyCommon/Net/ClickLogEnum"),
            c = e("./InGameJpBg"),
            h = e("./InGameJpPanel"),
            {
                ccclass: m,
                property: u
            } = cc._decorator;
        var d, p;
        (function(e) {
            e[e.NEW = 0] = "NEW", e[e.HOT = 1] = "HOT", e[e.EVENT = 2] = "EVENT", e[e.ALTA = 3] = "ALTA", e[e.EVENT_PUZZLE = 4] = "EVENT_PUZZLE"
        })(d = o.FLAG || (o.FLAG = {})),
        function(e) {
            e[e.EVENT_PUZZLE = 0] = "EVENT_PUZZLE"
        }(p = o.FLAG_R || (o.FLAG_R = {}));
        let g = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.flagNode = [], this.flagRNode = [], this.heartNodeRoot = null, this.heartNode = null, this.heartBtn = null, this.buyBonusFlagNode = null, this.iconBtnNode = null, this.iconSprite = null, this.waysTextNode = null, this.waystextLayout = null, this.waysText = [], this.jpBgRoot = null, this.jpRoot = null, this.featureRoot = null, this.lockPivot = null, this.lockLabel = null, this.m_DelClickIcon = null, this.m_bHasEvent = !1, this.isLock = !1, this.jpBg = null, this.jpPanelNode = null, this.featurePnael = null, this.iconGroupData = null, this.inGameJpPanelScript = null, this.inGameJpBgScript = null
            }
            _onLoad() {
                this.node.active = !1, n.CanClickIcon = !0, this.m_DelClickIcon = new SS.Common.Delegate, null != this.lockPivot && (this.lockPivot.active = !1), null != this.lockLabel && (this.lockLabel.node.active = !1), this.isLock = !1
            }
            _onDestroy() {
                this.unscheduleAllCallbacks(), null != this.iconSprite && (this.iconSprite.spriteFrame = null, this.iconSprite.destroy()), null != this.m_DelClickIcon && (this.m_DelClickIcon.Clear(), this.m_DelClickIcon = null), this.flagNode = null, this.flagRNode = null, this.waysText = null
            }
            SetIconElement(e) {
                this.iconProperty = e, console.log(this.iconProperty)
            }
            setLock() {
                null != this.lockPivot && (this.lockPivot.active = !0), null != this.lockLabel && (this.lockLabel.node.active = !0), this.isLock = !0
            }
            setFlag(e) {
                if (this.flagNode.forEach(e => e.active = !1), void 0 === d[e]) return;
                let t = d[e];
                this.flagNode[t].setPosition(this.iconProperty.FLAG_POS), this.flagNode[t].setScale(this.iconProperty.FLAG_SCALE), this.flagNode[t].active = !0
            }
            setFlagR(e, t = null) {
                if (this.flagRNode.forEach(e => e.active = !1), void 0 === p[e]) return;
                let o = p[e];
                if (this.flagRNode[o].setPosition(this.iconProperty.FLAGR_POS), this.flagRNode[o].setScale(this.iconProperty.FLAG_SCALE), this.flagRNode[o].active = !0, "EVENT_PUZZLE" == e && null != t) {
                    let e = cc.instantiate(t);
                    e.parent = this.flagRNode[o], e.active = !0, e.setPosition(cc.Vec2.ZERO)
                }
            }
            SetBuyBonusFlag(e) {
                this.buyBonusFlagNode.setPosition(this.iconProperty.BUYBONUS_FLAG_POS), this.buyBonusFlagNode.setScale(this.iconProperty.FLAG_SCALE), this.buyBonusFlagNode.active = !0, s.EventSystem.Event(s.BuyBonus.SpawnLobbyIconFlag).Notify(this.iconBtnGameName, this.buyBonusFlagNode, e)
            }
            setWaysText(e) {
                this.waysTextNode.setPosition(this.iconProperty.LABEL_POS), this.waysTextNode.setScale(this.iconProperty.LABEL_SCALE), this.waysText.forEach(e => e.node.active = !1);
                let t = e.split("_"),
                    o = this.waysText.length;
                try {
                    for (let e = 0; e < o && t[e]; e++) this.waysText[e].string = t[e], this.waysText[e].node.active = !0
                } catch (n) {
                    console.error(n, "GameSetting.json error...")
                }
                this.waysTextNode.active = !0, this.UpdateLayout(this.waystextLayout), t = null
            }
            setBtnSize() {
                this.iconBtnNode.setContentSize(this.iconProperty.BTN_SIZE)
            }
            setHeart(e) {
                this.heartNodeRoot.setPosition(this.iconProperty.HEART_POS), this.heartNode.active = e
            }
            setBtnName(e) {
                this.iconBtnGameName = e, this.iconBtnNode.active = !0
            }
            setBtnGameID(e) {
                this.iconBtnGameID = e
            }
            ParseIconGroupData(e) {
                this.iconGroupData = e
            }
            ShowGameJpBg() {
                null != this.iconGroupData && null != this.iconGroupData && null != this.iconGroupData.jpBg && null != this.iconGroupData.jpBg && (this.jpBg = cc.instantiate(this.iconGroupData.jpBg), this.jpBg.parent = this.jpBgRoot, this.inGameJpBgScript = this.jpBg.getComponent(c.InGameJpBg))
            }
            ShowGameJpPanel() {
                null != this.iconGroupData && null != this.iconGroupData && null != this.iconGroupData.jpPanel && null != this.iconGroupData.jpPanel && this.iconGroupData.gameJpVals.length > 0 && null != this.iconGroupData.gameJpVals[0] && null != this.iconGroupData.gameJpVals[0] && this.iconGroupData.gameJpVals[0] > 0 && (this.jpPanelNode = cc.instantiate(this.iconGroupData.jpPanel), this.jpPanelNode.parent = this.jpRoot, this.inGameJpPanelScript = this.jpPanelNode.getComponent(h.InGameJpPanel), this.inGameJpPanelScript.SetJpVal(this.iconGroupData.gameJpVals[0]), r.GameJpMgr.Instance.RegisterGameJpBroadcastEvent(this.SetRefreshJpVal.bind(this)))
            }
            CheckIfNeedToHideJpPanel(e) {
                if (this.iconGroupData && this.iconGroupData.iconLinkCount >= 2) {
                    let t = 0,
                        o = this.iconGroupData.groupAllGameName;
                    for (let n = 0; n < o.length; n++)
                        for (let i = 0; i < e.length; i++) e[i].indexOf(o[n]) > -1 && t++;
                    1 == t ? (this.SetGameJpPosition(0), this.SetGameJpPanelOpacity(255), this.SetGameJpBGOpacity(0)) : t == this.iconGroupData.iconLinkCount && (this.iconGroupData.firstThemeId == this.iconBtnGameID ? this.SetGameJpBGOpacity(255) : this.SetGameJpBGOpacity(0), this.iconGroupData.lastThemeId != this.iconBtnGameID && this.SetGameJpPanelOpacity(0))
                }
            }
            SetGameJpPanelOpacity(e) {
                null != this.iconGroupData && null != this.iconGroupData && null != this.jpPanelNode && (this.jpPanelNode.opacity = e)
            }
            SetGameJpBGOpacity(e) {
                null != this.iconGroupData && null != this.iconGroupData && null != this.jpBg && (this.jpBg.opacity = e)
            }
            GetGameNameFromSetting(e) {
                for (let t = 0; t < e.length; t++) SS.Common.GameEnvironment.GameSetting;
                return []
            }
            ShowFeaturePanel() {
                null != this.iconGroupData && null != this.iconGroupData && null != this.iconGroupData.featurePanel && null != this.iconGroupData.featurePanel && (this.featurePnael = cc.instantiate(this.iconGroupData.featurePanel), this.featurePnael.parent = this.featureRoot)
            }
            SetGameJpPosition(e) {
                if (null != this.iconGroupData && null != this.iconGroupData) {
                    if (null != this.inGameJpPanelScript) {
                        this.jpPanelNode.setPosition(cc.Vec2.ZERO);
                        let t = new cc.Vec2(this.node.width, this.node.height);
                        this.inGameJpPanelScript.SetJpPanelPosition(this.iconGroupData.iconSizeType, this.iconGroupData.iconLinkCount, e, t)
                    }
                    null != this.inGameJpBgScript && (this.jpBg.setPosition(cc.Vec2.ZERO), this.inGameJpBgScript.SetJpBgPosition(this.iconGroupData.iconLinkCount, e))
                }
            }
            SetRefreshJpVal(e) {
                if (null == this.iconGroupData || null == this.iconGroupData) return;
                let t = Object.keys(e),
                    o = [];
                for (let n = 0; n < t.length; n++) o.push(t[n]);
                for (let n = 0; n < o.length; n++)
                    if (o[n] == this.iconGroupData.gameJpKey && null != this.inGameJpPanelScript) {
                        let e = r.GameJpMgr.Instance.GetInGameJpArray(this.iconGroupData.gameJpKey, !0);
                        null != e && (e[0] > this.iconGroupData.gameJpVals[0] ? (this.iconGroupData.gameJpVals = e, this.inGameJpPanelScript.JpNumberCountUp(this.iconGroupData.gameJpVals[0], 10)) : e[0] < this.iconGroupData.gameJpVals[0] && (this.iconGroupData.gameJpVals = e, this.inGameJpPanelScript.SetJpVal(this.iconGroupData.gameJpVals[0])))
                    }
            }
            UpdateLayout(e) {
                e.enabled = !0, e.updateLayout(), e.enabled = !1
            }
            setIconSpriteFrame(e) {
                this.iconSprite.spriteFrame = e
            }
            DisableAllUI() {
                this.iconBtnNode.active = !1, this.flagNode.forEach(e => e.active = !1), this.flagRNode.forEach(e => e.active = !1), this.waysTextNode.active = !1, this.heartNodeRoot.active = !1, this.buyBonusFlagNode.active = !1
            }
            OnIconClicked() {
                this.isLock ? this.showLockTip() : n.CanClickIcon && (a.ClickLog.EntryPoint = l.LogEvent_EntryPoint.Icon, n.CanClickIcon = !1, this.m_DelClickIcon.Length > 0 && this.m_DelClickIcon.Notify(this.iconBtnGameName))
            }
            showLockTip() {
                null != this.iconSprite && cc.tween(this.iconSprite.node).then(cc.tween().to(.5, {
                    color: cc.color(100, 100, 100, 255)
                }, {
                    easing: "sineInOut"
                })).then(cc.tween().to(3, {
                    color: cc.color(100, 100, 100, 255)
                }, {
                    easing: "sineInOut"
                })).then(cc.tween().to(.5, {
                    color: cc.color(255, 255, 255, 255)
                }, {
                    easing: "sineInOut"
                })).start(), null != this.lockLabel && cc.tween(this.lockLabel.node).then(cc.tween().to(.5, {
                    opacity: 255
                }, {
                    easing: "sineInOut"
                })).then(cc.tween().to(3, {
                    opacity: 255
                }, {
                    easing: "sineInOut"
                })).then(cc.tween().to(.5, {
                    opacity: 0
                }, {
                    easing: "sineInOut"
                })).start()
            }
            checkEventAndSetFlag(e) {
                if (e.indexOf(this.iconBtnGameName) > -1) this.m_bHasEvent = !0, this.setFlag("EVENT");
                else if (this.m_bHasEvent) {
                    this.m_bHasEvent = !1;
                    let e = "",
                        t = SS.Common.GameEnvironment.GameSetting.Icon;
                    for (let o = 0; o < t.length; o++)
                        if (t[o].GameName) {
                            e = t[o].Flag;
                            break
                        }
                    this.setFlag(e)
                }
            }
            SetFishEventFlag(e, t = !1, o, n) {
                if (null == o) return;
                let i = SS.Common.GameEnvironment.GameSetting.Icon;
                for (let s in i) i[s].GameName == this.iconBtnGameName && -1 != o.indexOf(s) && (t ? this.setFlagR(e, n) : this.setFlag(e))
            }
            SetBuyBonusFlagData(e) {
                let t = SS.Common.GameEnvironment.GameSetting.Icon;
                for (let o in t)
                    if (t[o].GameName == this.iconBtnGameName && e.containsKey(this.iconBtnGameName)) {
                        console.log("[BuyBonus] SetBuyBonusFlagData, this.iconBtnGameName = " + this.iconBtnGameName), this.SetBuyBonusFlag(e.getValue(this.iconBtnGameName));
                        break
                    }
            }
            onClickHeart() {
                cc.log("[step] onClickHeart iconBtnGameID = ", this.iconBtnGameID, this.iconBtnGameName), s.EventSystem.Event(s.FavoriteGame.ClickHeart).Length > 0 && s.EventSystem.Event(s.FavoriteGame.ClickHeart).Notify(!this.heartNode.active, this.iconBtnGameID)
            }
            getGameName() {
                return this.iconBtnGameName
            }
            getGameID() {
                return this.iconBtnGameID
            }
        };
        g.CanClickIcon = !0, i([u([cc.Node])], g.prototype, "flagNode", void 0), i([u([cc.Node])], g.prototype, "flagRNode", void 0), i([u(cc.Node)], g.prototype, "heartNodeRoot", void 0), i([u(cc.Node)], g.prototype, "heartNode", void 0), i([u(cc.Button)], g.prototype, "heartBtn", void 0), i([u(cc.Node)], g.prototype, "buyBonusFlagNode", void 0), i([u(cc.Node)], g.prototype, "iconBtnNode", void 0), i([u(cc.Sprite)], g.prototype, "iconSprite", void 0), i([u(cc.Node)], g.prototype, "waysTextNode", void 0), i([u(cc.Layout)], g.prototype, "waystextLayout", void 0), i([u([cc.Label])], g.prototype, "waysText", void 0), i([u(cc.Node)], g.prototype, "jpBgRoot", void 0), i([u(cc.Node)], g.prototype, "jpRoot", void 0), i([u(cc.Node)], g.prototype, "featureRoot", void 0), i([u(cc.Node)], g.prototype, "lockPivot", void 0), i([u(cc.Label)], g.prototype, "lockLabel", void 0), g = n = i([m], g), o.IconMgr = g, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../../../LobbyCommon/InGameJp/Script/GameJpMgr": "GameJpMgr",
        "../../../LobbyCommon/Net/ClickLog": "ClickLog",
        "../../../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum",
        "./InGameJpBg": "InGameJpBg",
        "./InGameJpPanel": "InGameJpPanel"
    }],
    IconScrollView: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "616ecg+QylO2pF62BGoFJd7", "IconScrollView");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.IconScrollView = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.IconViewNode = null, this.scrollView = null, this.LobbyPrompt = null, this.iconLayoutWidget = null, this.HorizontalLayout = null, this.iconLayoutRoot = null, this.LobbyNode = null, this.tmpPreScrollOffsetX = null, this.iconNodeList = [], this.LOBBY_VIEW_MOVE_POSX = 140, this.ICON_CONTENT_LEAST_COUNT = 5, this.ICON_CONTENT_LEAST_WIDTH = 1180, this.DISABLE_PROMPT_DIS = 100
            }
            start() {
                this.PromptFadeEffect = cc.sequence(cc.fadeOut(1.5), cc.fadeIn(1.5)).repeatForever(), this.LobbyBoxRect = this.LobbyNode.getBoundingBoxToWorld()
            }
            onDestroy() {
                this.PromptFadeEffect = null, this.LobbyBoxRect = null, this.iconNodeList && this.iconNodeList.forEach(() => null), this.iconNodeList = null
            }
            AddNodeList(e, t) {
                this.iconNodeList[e] || (this.iconNodeList[e] = []);
                for (let o = 0; o < t.length; o++) this.iconNodeList[e].push(t[o])
            }
            RemoveNode(e, t) {
                this.iconNodeList[e] || (this.iconNodeList[e] = []);
                let o = this.iconNodeList[e].indexOf(t);
                o > -1 && this.iconNodeList[e].splice(o, 1)
            }
            NodeListLength(e) {
                let t = 0;
                return this.iconNodeList[e] && (t = this.iconNodeList[e].length), t
            }
            SetActive(e, t) {
                this.iconNodeList[e].forEach(e => {
                    e.active = t
                })
            }
            IsNodeListExist(e) {
                return !!this.iconNodeList[e]
            }
            StopCurrentScroll() {
                this.scrollView.stopAutoScroll(), this.tmpPreScrollOffsetX = null
            }
            SaveScrollPosition() {
                this.RecordPos(SS.Common.GameEnvironment.CurrentGameTypeNow), JSUtility.IsSupportLocalStorage() ? localStorage.setItem("IconView_X", this.IconViewNode.x.toString()) : JSUtility.IsSupportCookie() && (document.cookie = "IconView_X=" + this.IconViewNode.x.toString() + ";")
            }
            RestoreContentPos(e) {
                let t = JSON.parse(JSON.stringify(SS.Common.GameEnvironment.GameTypeMapScrollContentPos))[e];
                t && "FAVORITE" != e ? this.scrollView.setContentPosition(new cc.Vec2(t.x, t.y)) : this.scrollView.scrollToLeft()
            }
            RecordPos(e) {
                SS.Common.GameEnvironment.GameTypeMapScrollContentPos && (SS.Common.GameEnvironment.GameTypeMapScrollContentPos[e] = this.scrollView.getContentPosition())
            }
            SetIconViewNodePosFromCookie() {
                let e = "",
                    t = 0;
                JSUtility.IsSupportLocalStorage() ? e = localStorage.getItem("IconView_X") : JSUtility.IsSupportCookie() && (e = JSUtility.GetCookie("IconView_X")), e && "" != e && (t = Number(e), this.IconViewNode.x = t, JSUtility.IsSupportLocalStorage() ? localStorage.setItem("IconView_X", "") : JSUtility.IsSupportCookie() && (document.cookie = "IconView_X=;"))
            }
            AutoLayout(e) {
                if (e < this.ICON_CONTENT_LEAST_COUNT) switch (this.iconLayoutRoot.width = this.ICON_CONTENT_LEAST_WIDTH, this.HorizontalLayout.resizeMode = cc.Layout.ResizeMode.CHILDREN, e) {
                    case 1:
                        this.HorizontalLayout.paddingLeft = 0, this.HorizontalLayout.paddingRight = 165, this.HorizontalLayout.spacingX = 0;
                        break;
                    case 2:
                        this.HorizontalLayout.paddingLeft = 40, this.HorizontalLayout.paddingRight = 165, this.HorizontalLayout.spacingX = 0;
                        break;
                    case 3:
                        this.HorizontalLayout.paddingLeft = 20, this.HorizontalLayout.paddingRight = 190, this.HorizontalLayout.spacingX = 0;
                        break;
                    case 4:
                        this.HorizontalLayout.paddingLeft = 0, this.HorizontalLayout.paddingRight = 0, this.HorizontalLayout.spacingX = 0
                } else this.HorizontalLayout.resizeMode = cc.Layout.ResizeMode.CONTAINER, this.HorizontalLayout.paddingLeft = 20, this.HorizontalLayout.paddingRight = 90, this.HorizontalLayout.spacingX = 20;
                this.iconLayoutWidget.enabled = !0, this.iconLayoutWidget.left = 0, this.iconLayoutWidget.updateAlignment(), this.iconLayoutWidget.enabled = !1, this.UpdateLayout(this.HorizontalLayout)
            }
            AutoLayoutFavorite(e) {
                if (e < this.ICON_CONTENT_LEAST_COUNT) switch (this.iconLayoutRoot.width = this.ICON_CONTENT_LEAST_WIDTH, this.HorizontalLayout.resizeMode = cc.Layout.ResizeMode.NONE, e) {
                    case 1:
                        this.HorizontalLayout.paddingLeft = 360;
                        break;
                    case 2:
                        this.HorizontalLayout.paddingLeft = 240;
                        break;
                    case 3:
                        this.HorizontalLayout.paddingLeft = 120;
                        break;
                    default:
                        this.HorizontalLayout.paddingLeft = 20
                } else this.HorizontalLayout.resizeMode = cc.Layout.ResizeMode.CONTAINER, this.HorizontalLayout.paddingLeft = 20;
                this.HorizontalLayout.paddingRight = 90, this.HorizontalLayout.spacingX = 20, this.iconLayoutWidget.enabled = !0, this.iconLayoutWidget.left = 0, this.iconLayoutWidget.updateAlignment(), this.iconLayoutWidget.enabled = !1, this.UpdateLayout(this.HorizontalLayout)
            }
            onScrollingDrawCallOpt() {
                let e = SS.Common.GameEnvironment.CurrentGameTypeNow;
                if (this.iconNodeList[e]) {
                    let t = this.iconNodeList[e].length;
                    for (let o = 0; o < t; o++) this.iconNodeList[e][o].getBoundingBoxToWorld().intersects(this.LobbyBoxRect) ? this.EnterScrollView(this.iconNodeList[e][o]) : this.ExitScrollView(this.iconNodeList[e][o])
                }
            }
            EnterScrollView(e) {
                255 != e.opacity && (e.opacity = 255)
            }
            ExitScrollView(e) {
                0 != e.opacity && (e.opacity = 0)
            }
            MoveRootView(e) {
                if (null == this.tmpPreScrollOffsetX) return void(this.tmpPreScrollOffsetX = e.getScrollOffset().x);
                let t = e.getScrollOffset().x - this.tmpPreScrollOffsetX;
                this.tmpPreScrollOffsetX = e.getScrollOffset().x, e.isAutoScrolling() || this.IconViewNode.x < 0 && t < 0 || this.IconViewNode.x > this.LOBBY_VIEW_MOVE_POSX && t > 0 || (this.IconViewNode.x + t > this.LOBBY_VIEW_MOVE_POSX ? t = this.LOBBY_VIEW_MOVE_POSX - this.IconViewNode.x : this.IconViewNode.x + t < 0 && (t = 0 - this.IconViewNode.x), this.IconViewNode.x = this.IconViewNode.x + t)
            }
            CheckPromptShow() {
                this.CheckPrompt(this.scrollView.getContentPosition())
            }
            CheckPrompt(e) {
                let t = this.scrollView.getMaxScrollOffset(),
                    o = 2 * e.x + t.x;
                0 === t.x || e.x <= 0 && o < this.DISABLE_PROMPT_DIS ? !0 === this.LobbyPrompt.active && (this.LobbyPrompt.stopAction(this.PromptFadeEffect), this.LobbyPrompt.active = !1) : !1 === this.LobbyPrompt.active && (this.LobbyPrompt.active = !0, this.LobbyPrompt.runAction(this.PromptFadeEffect))
            }
            OnScrollEvent(e, t) {
                this.CheckPrompt(e.getContentPosition()), this.onScrollingDrawCallOpt()
            }
            UpdateLayout(e) {
                e.enabled = !0, e.updateLayout(), e.enabled = !1
            }
        };
        n([s(cc.Node)], r.prototype, "IconViewNode", void 0), n([s(cc.ScrollView)], r.prototype, "scrollView", void 0), n([s(cc.Node)], r.prototype, "LobbyPrompt", void 0), n([s(cc.Widget)], r.prototype, "iconLayoutWidget", void 0), n([s(cc.Layout)], r.prototype, "HorizontalLayout", void 0), n([s(cc.Node)], r.prototype, "iconLayoutRoot", void 0), n([s(cc.Node)], r.prototype, "LobbyNode", void 0), r = n([i], r), o.IconScrollView = r, cc._RF.pop()
    }, {}],
    IconVerticleLayout: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "36ccbAT5GZBcoYnQtKiHNlv", "IconVerticleLayout");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.IconVerticleLayout = void 0;
        const i = e("./IconMgr"),
            s = e("./FavoriteMgr"),
            r = e("../../../LobbyCommon/Helper/EventSystem"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_Layout = null, this.m_vecIconMgr = [], this.cominSoonSpriteFrame = null, this.m_DelClickIcon = null, this.IconAllSetting = [], this.BIGX3_ICON_PREFIX = "BIGX3", this.BIGX2_ICON_PREFIX = "BIGX2", this.BIG_ICON_PREFIX = "BIG", this.NORMAL_ICON_PREFIX = "NORMAL", this.COMMIN_SOON = "CS_"
            }
            _onLoad() {
                let e = this;
                this.m_DelClickIcon = new SS.Common.Delegate, this.m_vecIconMgr.forEach(t => {
                    t._onLoad(), t.m_DelClickIcon.Insert(e.OnIconClicked, e)
                })
            }
            onDestroy() {
                let e = this;
                null != this.m_vecIconMgr && this.m_vecIconMgr.forEach(t => {
                    null != t && (null != t.m_DelClickIcon && t.m_DelClickIcon.Remove(e.OnIconClicked, e), t._onDestroy())
                }), null != this.m_DelClickIcon && (this.m_DelClickIcon.Clear(), this.m_DelClickIcon = null), this.m_vecIconMgr = null
            }
            OnIconClicked(e) {
                this.m_DelClickIcon.Length > 0 && this.m_DelClickIcon.Notify(e)
            }
            SetIcon(e, t, o, n, i, s, r) {
                this.IconAllSetting = s;
                const a = o.length;
                let l = this.m_vecIconMgr.length;
                for (let c = 0; c < l && t < a; c++) {
                    let s, a = o[t],
                        h = n[o[t]],
                        m = a.includes(this.COMMIN_SOON),
                        u = -1 != a.indexOf(this.BIGX3_ICON_PREFIX) ? this.BIGX3_ICON_PREFIX : -1 != a.indexOf(this.BIGX2_ICON_PREFIX) ? this.BIGX2_ICON_PREFIX : -1 != a.indexOf(this.BIG_ICON_PREFIX) ? this.BIG_ICON_PREFIX : this.NORMAL_ICON_PREFIX;
                    a = a.replace(/\w*_/, "");
                    for (let e in i.Icon)
                        if (i.Icon[e].GameName === a) {
                            s = e;
                            break
                        }
                    let d, p = i.Icon[s],
                        g = this.GetGameIsLock(i, s);
                    for (let t = 0; t < r.length; t++) r[t].groupInType == e && r[t].iconSizeType == u && (r[t].lastThemeId != s && r[t].firstThemeId != s || (d = r[t]));
                    this.SetIconContent(c, s, o[t], m, h, p, g, d);
                    let _ = o[++t],
                        S = !1;
                    if (_ ? S = _.includes(this.BIG_ICON_PREFIX) : u != this.BIG_ICON_PREFIX && u != this.BIGX2_ICON_PREFIX && u != this.BIGX3_ICON_PREFIX && c + 1 < l && this.FillUpCominSoon(c + 1), u == this.BIG_ICON_PREFIX || S) break
                }
                return t
            }
            FillUpCominSoon(e) {
                this.m_vecIconMgr[e].node.active = !0, this.m_vecIconMgr[e].setIconSpriteFrame(this.cominSoonSpriteFrame), this.m_vecIconMgr[e].DisableAllUI(), this.UpdateLayout(this.m_Layout)
            }
            GetGameIsLock(e, t) {
                let o = !1;
                if (null != e.LockGame)
                    for (let n in e.LockGame) e.LockGame[n] == t && (o = !0);
                return o
            }
            SetIconContent(e, t, o, n, i, a, l, c) {
                this.m_vecIconMgr[e].node.active = !0;
                let h = this.IconAllSetting.find(e => o.includes(e.m_iconSizePrefix));
                if (h || (h = this.IconAllSetting.find(e => e.m_iconSizePrefix.includes("NORMAL"))), this.m_vecIconMgr[e].SetIconElement(h.m_ElementProperty), this.m_vecIconMgr[e].setBtnSize(), null != c && (this.m_vecIconMgr[e].ParseIconGroupData(c), "FAVORITE" == c.groupInType ? this.m_vecIconMgr[e].ShowGameJpPanel() : c.lastThemeId == t && this.m_vecIconMgr[e].ShowGameJpPanel(), c.iconLinkCount >= 2 && c.firstThemeId == t && this.m_vecIconMgr[e].ShowGameJpBg(), null != c.featurePanel && this.m_vecIconMgr[e].ShowFeaturePanel()), l && this.m_vecIconMgr[e].setLock(), n) this.m_vecIconMgr[e].DisableAllUI(), this.m_vecIconMgr[e].setIconSpriteFrame(this.cominSoonSpriteFrame);
                else {
                    this.m_vecIconMgr[e].setIconSpriteFrame(i), this.m_vecIconMgr[e].setBtnName(a.GameName), this.m_vecIconMgr[e].setBtnGameID(t), this.m_vecIconMgr[e].setFlag(a.Flag), this.m_vecIconMgr[e].setFlagR(a.FlagR), this.m_vecIconMgr[e].setWaysText(a.IconWaysText), this.m_vecIconMgr[e].setHeart(s.FavoriteMgr.Instance.IsFavorite(t));
                    let o = r.EventSystem.Function(r.BuyBonus.GetLobbyFlagData)();
                    o && this.m_vecIconMgr[e].SetBuyBonusFlagData(o)
                }
                this.UpdateLayout(this.m_Layout)
            }
            SetGameJpPosition(e) {
                for (let t = 0; t < this.m_vecIconMgr.length; t++) this.m_vecIconMgr[t].SetGameJpPosition(e)
            }
            EnterScrollView() {
                255 != this.node.opacity && (this.node.opacity = 255)
            }
            ExitScrollView() {
                0 != this.node.opacity && (this.node.opacity = 0)
            }
            UpdateLayout(e) {
                e.enabled = !0, e.updateLayout(), e.enabled = !1
            }
            GetGameIDList() {
                let e = [];
                for (let t = 0; t < this.m_vecIconMgr.length; t++) {
                    let o = this.m_vecIconMgr[t].getGameID();
                    o && e.push(o)
                }
                return e
            }
            RefreshHeartCheckbox(e, t) {
                for (let o = 0; o < this.m_vecIconMgr.length; o++) 1 == this.m_vecIconMgr[o].node.active && this.m_vecIconMgr[o].getGameID() == t && this.m_vecIconMgr[o].setHeart(e)
            }
            CheckIfNeedToHideJpPanel(e) {
                for (let t = 0; t < this.m_vecIconMgr.length; t++) this.m_vecIconMgr[t].CheckIfNeedToHideJpPanel(e)
            }
        };
        n([l(cc.Layout)], c.prototype, "m_Layout", void 0), n([l([i.IconMgr])], c.prototype, "m_vecIconMgr", void 0), n([l(cc.SpriteFrame)], c.prototype, "cominSoonSpriteFrame", void 0), c = n([a], c), o.IconVerticleLayout = c, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "./FavoriteMgr": "FavoriteMgr",
        "./IconMgr": "IconMgr"
    }],
    IdleState: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "27ae9GtYchDEooBSss3st3d", "IdleState");
        var n = this && this.__awaiter || function(e, t, o, n) {
            return new(o || (o = Promise))(function(i, s) {
                function r(e) {
                    try {
                        l(n.next(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function a(e) {
                    try {
                        l(n.throw(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                        e(t)
                    })).then(r, a)
                }
                l((n = n.apply(e, t || [])).next())
            })
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.IdleState = void 0;
        const i = e("../../LobbyCommon/Loading/Script/LoadingMgr"),
            s = e("../../LobbyCommon/TopBar/Script/TopbarMgr"),
            r = e("../../LobbyCommon/Net/LobbyClient"),
            a = e("../../LobbyCommon/Connect/Script/ConnectPanelMgr"),
            l = e("../../LobbyCommon/Component/AudioMgr"),
            c = e("../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            h = e("../../LobbyCommon/Net/Downloader/VersionDownloader"),
            m = e("../../Component/GameIconMgr/Script/IconMgr"),
            u = e("../../LobbyCommon/SwipeMgr/Scripts/Device"),
            d = e("../../LobbyCommon/GuestSystem/Script/GuestSysMgr"),
            p = e("../../LobbyCommon/GuestSystem/Script/GuestLobbyPopupMgr"),
            g = e("../../LobbyCommon/InGameJp/Script/GameJpMgr"),
            _ = e("../../LobbyCommon/PopUpMgr/Scripts/PriorityCustomEvent"),
            S = e("../../LobbyCommon/Helper/Download"),
            y = e("../../LobbyCommon/Helper/CrossDomainCookie"),
            C = e("../../LobbyCommon/Helper/EventSystem"),
            f = e("../../LobbyCommon/Net/ClickLog"),
            v = e("../../LobbyCommon/Net/ClickLogEnum"),
            P = e("../../Component/GameIconMgr/Script/FavoriteMgr"),
            b = e("../../LobbyCommon/EventModule/SessionBonus/Script/SessionDataCtrl"),
            w = e("../../LobbyCommon/Skin/Skin"),
            I = e("../../LobbyCommon/Define/CustomConfig"),
            E = e("../../LobbyCommon/Asset/Script/Asset");
        o.IdleState = class {
            constructor() {
                this.tmpRepeatingMissionMgr = null, this.isHideLobbyBegginerGuide = !1, this.LOGIN_SCENE_NAME = "Login", this.GAME_SCENE_NAME = "Game", this.newsLogRecord = null, this.isLoginProcess = null, this.releaseBundle = null, this.isRedirecting = !1, this.pageLoadEvent = null, this.publicKey = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAm57PpzGKcstTbOlDuAs0Ai5PEFd0leISof3BSdIWrf8KjmMK04bM/U5vhK0Q4RTnLwTjtzJyPeCw353I067f1ayYghwb3EB63vkoLepOYH3H6bY5Ag4POIXHyMspJEu1Rod48tHG4YZDT1JxhOWktwNebLvtohm0a+r/XfHJROm+IAn4feyeaoaWa3NOPFVdPZ05CPAy4gVFBhdrnLsYVT3bREFAcNJZl9BCNYFneQHE4MtPItAjWVKXRsfXX6eJsAKdzlzo4sg6YQCcs4s5W93wfefMdzjRB17vvcrGmSOdJUxImqpIfC3H7JtItphI8fvZ60bJ+KA9DucO3A5PywIDAQAB"
            }
            PreUpdate() {
                console.log("[LobbyFSM] %c IdleState PreUpdate", "font-size:18px;font-weight:bold;color:orange;"), this.pageLoadEvent = this.OnAfterRedirect.bind(this), cc.game.setFrameRate(60), this.isError = !1, this.isStopUpdate = !1, this.InitLobby(this.target.tmpTypeMapGameNameList), this.ListenModuleEvent(), "" != SS.Common.GameEnvironment.ChangeToGameName ? "Login" == SS.Common.GameEnvironment.ChangeToGameName ? (SS.Common.GameEnvironment.ChangeToGameName = "", console.log("GameJumpLogin"), this.DoLogout()) : (console.log("GameJumpGame"), this.OnClickIcon(SS.Common.GameEnvironment.ChangeToGameName, !0)) : (this.LoadAudioClip(), this.WaitFakeLoadingProgress(), this.SendMessage()), cc.game.canvas.style.cursor = "default"
            }
            LoadAudioClip() {
                return n(this, void 0, void 0, function*() {
                    l.AudioMgr.Instance.setAudioClip(this.target.audioClips, this.target.audioClipsName), l.AudioMgr.Instance.Play("LobbyMusic", !0, .3)
                })
            }
            Update() {
                if (!this.isStopUpdate)
                    if (this.isError) this.isError = !1, this.isStopUpdate = !0, c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Error, this.errorCode, "Lobby", this.reason);
                    else if (this.isChangeScene) {
                    console.warn("Execute ChangeScene"), this.isChangeScene = !1, l.AudioMgr.Instance.UncacheAudioClip(), null != g.GameJpMgr.Instance && g.GameJpMgr.Instance.ClearGameJpBroadcastEvent(), this.RemoveListenModuleEvent(), this.strNextScene == this.LOGIN_SCENE_NAME && (SS.Common.GameEnvironment.CurrentGameVersion = null);
                    let e = SS.Common.GameEnvironment.Language + this.strNextScene,
                        t = cc.assetManager.bundles.find(function(t) {
                            return t._config.getSceneInfo(e)
                        });
                    this.releaseBundle = this.ReleaseBundle.bind(this), cc.director.on(cc.Director.EVENT_AFTER_SCENE_LAUNCH, this.releaseBundle), t ? cc.director.loadScene(e) : cc.director.loadScene(this.strNextScene)
                } else if (r.LobbyClient.Instance && r.LobbyClient.Instance.GetLobbySystem && r.LobbyClient.Instance.GetLobbySystem.m_isPosKick) this.isStopUpdate = !0, r.LobbyClient.Instance.GetLobbySystem.m_isPosKick = !1, c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Critical, "S171", "Lobby", "PosKick");
                else if (r.LobbyClient.Instance && r.LobbyClient.Instance.GetLobbySystem && -1 != r.LobbyClient.Instance.GetLobbySystem.m_ServerToIdleWaitMin) {
                    let e = r.LobbyClient.Instance.GetLobbySystem.m_ServerToIdleWaitMin;
                    r.LobbyClient.Instance.GetLobbySystem.m_ServerToIdleWaitMin = -1;
                    let t = this;
                    clearTimeout(t.shutdownTimeoutID), console.log("wait " + e + "min for server to idle"), t.shutdownTimeoutID = setTimeout(() => {
                        t.isStopUpdate = !0, c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Critical, "S170", "Lobby", "maintain", null)
                    }, 6e4 * e)
                } else r.LobbyClient.Instance && r.LobbyClient.Instance.IsSocketErrorClose && (this.isStopUpdate = !0, r.LobbyClient.Instance.IsSocketErrorClose = !1, this.SocketErrorClose())
            }
            ReleaseBundle() {
                cc.director.off(cc.Director.EVENT_AFTER_SCENE_LAUNCH, this.releaseBundle), this.releaseBundle = null, console.log("Lobby Release Bundle Start!\n Now Bundles: " + cc.assetManager.bundles.count);
                let e = w.default.Instance.GetLoadList("LobbyMgr");
                S.Download.ReleaseBundles(e), e = w.default.Instance.GetLoadList("Lobby"), S.Download.ReleaseBundles(e), cc.sys.garbageCollect(), E.AssetIcon.Clear(), console.log("Lobby Release Bundle Finished!\n Now Bundles: " + cc.assetManager.bundles.count)
            }
            SocketErrorClose() {
                this.isRedirecting || c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Disconnected, "N14-1", "Lobby", "The internet was diconnected.", () => {
                    a.ConnectPanelMgr.Instance.ShowConnectPanel();
                    let e, t, o = window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.Modules.Lobby.ServerHOST;
                    e = SS.Common.GameEnvironment.UserID, t = SS.Common.GameEnvironment.UserPW, r.LobbyClient.Instance.DoLogin(o, e, t, this.DoLoginSuccess.bind(this), this.DoLoginFail.bind(this))
                })
            }
            DoLoginSuccess() {
                a.ConnectPanelMgr.Instance.DisableConnectPanel(), m.IconMgr.CanClickIcon = !0, this.isStopUpdate = !1
            }
            DoLoginFail(e, t, o) {
                a.ConnectPanelMgr.Instance.DisableConnectPanel(), console.log("LoginFail", t);
                let n = e.toString();
                "VerifyMobile" === o ? this.VerifyMobileFailHandle(e, t) : "DeviceLogin" === o ? this.DeviceLoginFailHandle(e, t) : "PinLogin" === o ? this.PinLoginFailHandle(e, t) : "BindSocket" === o ? (e == ArkSDK.SocketResult.OK ? n = "S133" : e == ArkSDK.SocketResult.Timeout ? n = "S134" : e == ArkSDK.SocketResult.Error ? n = "S135" : e == ArkSDK.SocketResult.NotReset && (n = "S136"), this.ErrorHandler(n, t)) : "ConnectWebSocket" === o && c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Critical, "S172", "Lobby", t, null)
            }
            DeviceLoginFailHandle(e, t) {
                let o = e.toString();
                e == ArkSDK.HttpResult.Condition && t.hasOwnProperty("reason") ? o = "-1" == (o = t.reason) ? "S15" : "-2" == o ? "S16" : "-5" == o ? "S13" : "S14" : e == ArkSDK.HttpResult.OK ? t.hasOwnProperty("reason") && (o = "-1" == (o = t.reason) ? "S15" : "-2" == o ? "S16" : "S14") : e == ArkSDK.HttpResult.Abort ? o = "S124" : e == ArkSDK.HttpResult.Timeout ? o = "S11" : e == ArkSDK.HttpResult.Error ? o = "S12" : e == ArkSDK.HttpResult.Status ? o = "S125" : e == ArkSDK.HttpResult.NotReset ? o = "S126" : e == ArkSDK.HttpResult.Condition && (o = "S127"), this.ErrorHandler(o, t)
            }
            PinLoginFailHandle(e, t) {
                let o = e.toString();
                e == ArkSDK.HttpResult.Condition && t.hasOwnProperty("reason") ? o = "-5" == (o = t.reason) ? "S23" : "-4" == o || "-2" == o ? "S173" : "S131" : e == ArkSDK.HttpResult.OK ? t.hasOwnProperty("reason") && (o = "-3" == (o = t.reason) ? "S25" : "-4" == o ? "S26" : "S24") : e == ArkSDK.HttpResult.Abort ? o = "S128" : e == ArkSDK.HttpResult.Timeout ? o = "S21" : e == ArkSDK.HttpResult.Error ? o = "S22" : e == ArkSDK.HttpResult.Status ? o = "S129" : e == ArkSDK.HttpResult.NotReset ? o = "S130" : e == ArkSDK.HttpResult.Condition && (o = "S131"), this.ErrorHandler(o, t)
            }
            ErrorHandler(e, t) {
                c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Critical, e, "Lobby", t, null)
            }
            VerifyMobileFailHandle(e, t) {
                let o = e.toString();
                e == ArkSDK.HttpResult.OK ? t.hasOwnProperty("result") && ("-6" == (o = t.result) ? o = "S115" : "-4" == o ? o = "S116" : "-5" == o && (o = "S117")) : e == ArkSDK.HttpResult.Abort ? o = "S118" : e == ArkSDK.HttpResult.Timeout ? o = "S119" : e == ArkSDK.HttpResult.Error ? o = "S120" : e == ArkSDK.HttpResult.Status ? o = "S121" : e == ArkSDK.HttpResult.NotReset ? o = "S122" : e == ArkSDK.HttpResult.Condition && (o = "S123"), this.ErrorHandler(o, t)
            }
            PostUpdate() {
                console.log("[LobbyFSM] %c IdleState PostUpdate", "font-size:18px;font-weight:bold;color:orange;")
            }
            ListenModuleEvent() {
                console.warn("[ListenModuleEvent]"), r.LobbyClient.Instance.GetJPSystem.OnChangeJpValCmdSignal.add(this.RecvJPValCmd, this), r.LobbyClient.Instance.GetLobbySystem.OnUpdateSignal.add(this.RecvVersionkCmd, this), r.LobbyClient.Instance.GetJPSystem.OnRecordUpdateSignal.add(this.RecvRecordUpdateCmd, this), this.target.topBarMgr.m_DelClickLogout.Insert(this.OnClickLogout, this), this.target.topBarMgr.m_DelClickJPHistory.Insert(this.OnClickJPHistory, this), this.target.topBarMgr.m_DelClickMenu.Insert(this.OnClickMenu, this), this.target.topBarMgr.m_DelClickSound.Insert(this.OnClickSound, this), this.target.topBarMgr.m_DelClickFullScreen.Insert(this.OnClickFullScreen, this), this.target.topBarMgr.m_DelClickNews.Insert(this.OnClickNews, this), this.target.downBarMgr.m_DelClickNews.Insert(this.OnClickNews, this), this.target.downBarMgr.m_DelClickProfile.Insert(this.OnClickProfile, this), this.target.jackpotWinnerMgr.m_DelClickClose.Insert(this.OnJPWinnerCloseClose, this), this.target.bulletinBoardNode && (this.target.bulletinBoardNode.on("call_activity", this.OnCallActivity, this, !0), this.target.bulletinBoardNode.on("call_switch_game", this.OnCallSwitchGame, this, !0), this.target.bulletinBoardNode.on("call_webview", this.OnCallWebview, this, !0), this.target.bulletinBoardNode.on("close_news_board", this.OnBulletinBoardClosed, this, !0)), C.EventSystem.Event(C.DoLogOut).Insert(this.DoLogout, this), C.EventSystem.Event(C.SwitchGame).Insert(this.target.switchGame.OnSwitchGameIgnoreWindow, this.target.switchGame), C.EventSystem.Event(C.PurchaseEvent.OnPurchaseSuccess).Insert(this.OnPurchaseSuccess, this), C.EventSystem.Event(C.GameTipCloseAnGoOnTheGame).Insert(this.DownloadCustomLoadpage, this), C.EventSystem.Event(C.SessionEvent.ClickSessionIcon).Insert(this.onClickSessionBonus, this), C.EventSystem.Event(C.SessionEvent.CloseSessionBonus).Insert(this.onCloseSessionBonus, this), C.EventSystem.Event(C.SessionEvent.UpdateAssets).Insert(this.onSessionUpdateAssets, this)
            }
            RemoveListenModuleEvent() {
                r.LobbyClient.Instance.GetJPSystem && (r.LobbyClient.Instance.GetJPSystem.OnChangeJpValCmdSignal.remove(this.RecvJPValCmd, this), r.LobbyClient.Instance.GetJPSystem.OnRecordUpdateSignal.remove(this.RecvRecordUpdateCmd, this)), r.LobbyClient.Instance.GetLobbySystem && r.LobbyClient.Instance.GetLobbySystem.OnUpdateSignal.remove(this.RecvVersionkCmd, this), C.EventSystem.Event(C.DoLogOut).Remove(this.DoLogout, this), C.EventSystem.Event(C.PurchaseEvent.OnPurchaseSuccess).Remove(this.OnPurchaseSuccess, this), C.EventSystem.Event(C.BeginnersGuide.OnExit).Remove(this.OnBeginnerGuildComplete, this), C.EventSystem.Event(C.GameTipCloseAnGoOnTheGame).Remove(this.DownloadCustomLoadpage, this), P.FavoriteMgr.Instance.Release(), b.SessionDataCtrl.Instance.Release(), C.EventSystem.Event(C.SessionEvent.ClickSessionIcon).Remove(this.onClickSessionBonus, this), C.EventSystem.Event(C.SessionEvent.CloseSessionBonus).Remove(this.onCloseSessionBonus, this), C.EventSystem.Event(C.SessionEvent.UpdateAssets).Remove(this.onSessionUpdateAssets, this), this.target && (this.target.switchGame && C.EventSystem.Event(C.SwitchGame).Remove(this.target.switchGame.OnSwitchGameIgnoreWindow, this.target.switchGame), this.target.gameIconMgr && this.target.gameIconMgr.m_DelClickIcon && this.target.gameIconMgr.m_DelClickIcon.Remove(this.OnClickIcon, this), this.target.gameTypeMgr && this.target.gameTypeMgr.m_DelClickGameType && (this.target.gameTypeMgr.m_DelClickGameType.Remove(this.OnClickGameType, this), this.target.getBonusMgr && this.target.gameTypeMgr.m_DelClickGameType.Remove(this.target.getBonusMgr.CloseGetBonusPanel, this.target.getBonusMgr)), this.target.topBarMgr && (this.target.topBarMgr.m_DelClickLogout && this.target.topBarMgr.m_DelClickLogout.Remove(this.OnClickLogout, this), this.target.topBarMgr.m_DelClickJPHistory && this.target.topBarMgr.m_DelClickJPHistory.Remove(this.OnClickJPHistory, this), this.target.topBarMgr.m_DelClickMenu && this.target.topBarMgr.m_DelClickMenu.Remove(this.OnClickMenu, this), this.target.topBarMgr.m_DelClickSound && this.target.topBarMgr.m_DelClickSound.Remove(this.OnClickSound, this), this.target.topBarMgr.m_DelClickFullScreen && this.target.topBarMgr.m_DelClickFullScreen.Remove(this.OnClickFullScreen, this), this.target.topBarMgr.m_DelClickNews && this.target.topBarMgr.m_DelClickNews.Remove(this.OnClickNews, this)), this.target.downBarMgr && (this.target.downBarMgr.m_DelClickNews && this.target.downBarMgr.m_DelClickNews.Remove(this.OnClickNews, this), this.target.downBarMgr.m_DelClickProfile && this.target.downBarMgr.m_DelClickProfile.Remove(this.OnClickProfile, this)), this.target.jackpotWinnerMgr && this.target.jackpotWinnerMgr.m_DelClickClose && this.target.jackpotWinnerMgr.m_DelClickClose.Remove(this.OnJPWinnerCloseClose, this), this.target.node.targetOff(this), this.target.bulletinBoardNode && this.target.bulletinBoardNode.targetOff(this))
            }
            RecvVersionkCmd(e) {
                console.log("RecvVersionkCmd : ", SS.Common.GameEnvironment.IgnoreVersionCtrl), SS.Common.GameEnvironment.IgnoreVersionCtrl || e != SS.Common.GameEnvironment.LobbyVersion && (this.RemoveListenModuleEvent(), c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Critical, "C08", "Lobby", "updateVersion", null))
            }
            RecvJPValCmd(e, t, o, n, i) {
                SS.Common.GameEnvironment.exchange_rate = i, this.target.topBarMgr.ChangeJPVal(e, t, o, n, !0)
            }
            RecvRecordUpdateCmd(e) {
                C.EventSystem.Event(C.NoticedArrived.OnReceiveBroadcast).Notify(e)
            }
            InitLobby(e) {
                console.warn("[InitLobby]");
                try {
                    if (this.isLoginProcess = this.target.CheckCookieValue("login_clicked", "1"), C.EventSystem.UnregisterFunction(C.IsLoginProcess), C.EventSystem.RegisterFunction(C.IsLoginProcess, () => this.isLoginProcess), null != this.target.getBonusMgr) {
                        this.target.gameTypeMgr.m_DelClickGameType.Insert(this.target.getBonusMgr.CloseGetBonusPanel, this.target.getBonusMgr), this.target.getBonusMgr.RegistrationNeedUseEvent(this.target.downBarMgr.SetUserBalance.bind(this.target.downBarMgr), this.target.SetIsAllowReloadLobby.bind(this.target), this.target.gameTypeMgr.HideSelectTypeStatus.bind(this.target.gameTypeMgr), this.target.gameTypeMgr.OpenSelectTypeSprite.bind(this.target.gameTypeMgr));
                        for (let e = 0; e < this.target.m_arrEventBannerData.length; e++)
                            if ("getBonusKey" == this.target.m_arrEventBannerData[e].m_sBannerID) {
                                let t = this.target.m_arrEventBannerData[e];
                                this.target.popUpMgr.setEventPopUp(t);
                                break
                            }
                    }
                    this.target.gameTypeMgr.InitGameType(e), this.target.gameTypeMgr.m_DelClickGameType.Insert(this.OnClickGameType, this);
                    const {
                        enablePlayerSystem: o,
                        enableSessionBonus: n
                    } = I.CustomConfig.Instance.lobbyOption;
                    n && this.target.SessionIconArea.SetSessionIconArea(), this.target.gameIconMgr.SetIcon(e, this.target.tmpNameMapIcon, SS.Common.GameEnvironment.GameSetting), this.target.gameIconMgr.m_DelClickIcon.Insert(this.OnClickIcon, this), this.target.topBarMgr.SetDisableMenuBtn(SS.Common.GameEnvironment.GameSetting.DisableMenuBtn), this.target.topBarMgr.SetJPValShowFormat(SS.Common.GameEnvironment.TopBarJPIsMoneyFormat), this.target.jackpotWinnerMgr.SetJPValueFormat(SS.Common.GameEnvironment.JPWinnerIsMoneyFormat), C.EventSystem.Event(C.DownBar.SetPlayerInfo).Notify(this.target.UserEntries, this.target.UserWinnings), this.target.downBarMgr.ToggleScoreBox(), this.target.downBarMgr.SetUserInfo(SS.Network.LoginModel.LoginInfo.user_id, SS.Network.LoginModel.LoginInfo.machine_id), C.EventSystem.Event(C.Avatar.RequestUpdate).Notify(), d.default.getInstance().isGuestLogin() && this.target.downBarMgr.SetUserInfo(d.default.getInstance().creditRate), this.target.switchGame.SetSwitchGameData(this.target.gameIconMgr.OnSwitchGame.bind(this.target.gameIconMgr)), this.setEventPopUpAndBanner(), d.default.getInstance().isGuestLogin() ? d.default.getInstance().consumeLoginOnceToken() && p.GuestLobbyPopupMgr.Instance.ShowPopMsg() : (cc.log("[Popup]\u958b\u59cb\u986f\u793aPopup!"), this.target.popUpMgr.checkAndShowPopup(), this.target.bannerMgr.ShowBanner());
                    let i = null;
                    if (SS.Common.GameEnvironment.LobbyVersion && (i = "v." + SS.Common.GameEnvironment.LobbyVersion), i || (i = "DEV MODE"), this.target.downBarMgr.SetVersion(i), d.default.getInstance().isGuestLogin() ? this.target.topBarMgr.SetTopBarStatus(s.TopbarStatus.GuestLogin) : this.target.topBarMgr.SetTopBarStatus(s.TopbarStatus.InLobbyNormal), SS.Common.GameEnvironment.IgnoreVersionCtrl || console.clear(), cc.warn("%c console.clear()", "font-size:24px"), this.target.IsFirstLogin) {
                        let e = v.LogEvent_Login.IdleState;
                        switch (I.CustomConfig.Instance.configName) {
                            case I.CustomConfigName.TX:
                                e = v.LogEvent_Login.IdleStateTxCustom;
                                break;
                            default:
                                e = v.LogEvent_Login.IdleState
                        }
                        f.ClickLog.DirectSend(v.LogName.PlayerConversion, v.LogType_PlayerConversion.PlayerLogin, e, "Lobby")
                    } else f.ClickLog.DirectSend(v.LogName.PlayerConversion, v.LogType_PlayerConversion.GameLoading, v.LogEvent_LeaveGameProcess.EnterLobby, SS.Common.GameEnvironment.GetGameIdByName(this.target.lastGameID));
                    this.target.SetCookieValue("login_clicked", "0"), C.EventSystem.Event(C.LobbyState.EnterLobby).Length && C.EventSystem.Event(C.LobbyState.EnterLobby).Notify(this.isLoginProcess, () => {})
                } catch (t) {
                    this.isError = !0, this.reason = t, this.errorCode = "C13", console.error(t)
                }
            }
            setEventPopUpAndBanner() {
                this.target.popUpMgr.rulePageNoCallback = this.DoLogout.bind(this);
                for (let e = 0; e < this.target.m_arrEventBannerData.length; e++) {
                    let t = this.target.m_arrEventBannerData[e];
                    this.target.bannerMgr.setEventBanner(t), this.target.popUpMgr.setEventPopUp(t)
                }
                if (this.isLoginProcess && this.target.sessionBonusNode) {
                    let e = new _.PriorityCustomEvent(_.PopEventPriority.SessionBonus, this.OnOpenSessionBonus.bind(this));
                    this.target.popUpMgr.priorityShowEvents.push(e)
                }
                if (this.isLoginProcess && this.target.bulletinBoardNode) {
                    let e = new _.PriorityCustomEvent(_.PopEventPriority.BulletinBoard, this.OnOpenNews.bind(this));
                    this.target.popUpMgr.priorityShowEvents.push(e)
                }
                f.ClickLog.recordClickLog(v.LogName.Profile, 0, v.LogType_Profile.Lobby, v.LogEvent_Lobby.Enter), this.CheckCookieExist("lobby_profile_beginner") || (f.ClickLog.recordClickLog(v.LogName.Profile, 0, v.LogType_Profile.Guide, v.LogEvent_Guide.showHandTips), this.target.popUpMgr.priorityShowEvents.push(new _.PriorityCustomEvent(_.PopEventPriority.ProfileBeginner, this.OnOpenProfileBeginnerGuild.bind(this))))
            }
            SetAutoLogoutBtn() {
                const {
                    autoLogout: e,
                    autoLogoutTimeout: t,
                    autoLogoutMsgTimeout: o
                } = I.CustomConfig.Instance, {
                    autoLogoutBtn: n
                } = this.target;
                e ? n._start(t, o) : n.Destroy()
            }
            WaitFakeLoadingProgress() {
                return n(this, void 0, void 0, function*() {
                    console.warn("[WaitFakeLoadingProgress]"), i.LoadingMgr.Instance.SetProgress(100), yield SS.Common.WaitForSeconds(.5), this.target.unscheduleAllCallbacks(), -1 == SS.Common.GameEnvironment.SentFlowStatus.indexOf(r.LOBBY_STATUS.INTO_LOBBY_OK) && (r.LobbyClient.Instance.GetUserClient.SendPlayFlowData(SS.Common.GameEnvironment.DeviceInfo, "Lobby", r.LOBBY_STATUS.INTO_LOBBY_OK), SS.Common.GameEnvironment.SentFlowStatus.push(r.LOBBY_STATUS.INTO_LOBBY_OK)), this.SetAutoLogoutBtn(), i.LoadingMgr.Instance.CloseLoading()
                })
            }
            SendMessage() {
                return n(this, void 0, void 0, function*() {
                    this.SetMessageCookie();
                    let e = "";
                    try {
                        let o = SS.Common.GameEnvironment.ProjectSetting.Modules.CrossLog.ServerHOST;
                        e = yield y.default.GetCookie(o, "Extra")
                    } catch (t) {
                        return
                    }
                    y.default.Close(), y.default.Destroy();
                    try {
                        console.log("[MC] cookie", e);
                        let o = window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.Modules.Log.ServerHOST,
                            n = new ArkSDK.ArkClient(o);
                        n.clone(r.LobbyClient.Instance.GetUserClient.GetPinClient);
                        let i = this.messageContent;
                        "" == e || null == e ? (i.Extra = this.NoData(), i.Status = "NoData") : "error" == e ? (i.Extra = this.NoData(), i.Status = "NoCookie") : (i.Extra = e, i.Status = "GetCookie"), n.send_cmd("log", "CrossLog", i, null, null)
                    } catch (t) {
                        console.warn(t)
                    }
                })
            }
            get messageContent() {
                let e = {
                    Logo: "GD"
                };
                return e.KioskID = SS.Network.LoginModel.LoginInfo.kiosk_id, e.PinID = SS.Network.LoginModel.LoginInfo.pin_id, e
            }
            SetMessageCookie() {
                let e = new JSEncrypt;
                e.setKey(this.publicKey);
                let t = "";
                t = "GD," + SS.Network.LoginModel.LoginInfo.kiosk_id + "," + SS.Network.LoginModel.LoginInfo.pin_id + "," + this.getDate();
                let o = e.encrypt(JSON.stringify(t));
                return JSUtility.IsSupportLocalStorage() ? localStorage.setItem("Extra", o) : JSUtility.IsSupportCookie() && (document.cookie = "Extra=" + o + ";"), o
            }
            NoData() {
                let e = new JSEncrypt;
                return e.setKey(this.publicKey), e.encrypt(JSON.stringify(",,,"))
            }
            getDate() {
                return Date.prototype.getISOString = function() {
                    let e = e => e < 10 ? "0" + e : e,
                        t = this.getTimezoneOffset() / 60,
                        o = (this.setHours(this.getHours() - t), (t >= 0 ? "-" : "+") + e(Math.abs(t)) + ":00");
                    return this.getUTCFullYear() + "-" + e(this.getUTCMonth() + 1) + "-" + e(this.getUTCDate()) + "T" + e(this.getUTCHours()) + ":" + e(this.getUTCMinutes()) + ":" + e(this.getUTCSeconds()) + "." + (this.getUTCMilliseconds() / 1e3).toFixed(3).slice(2, 5) + o
                }, (new Date).getISOString()
            }
            OnClickSound(e) {
                e ? l.AudioMgr.Instance.Play("Btn_Select_n_v01", !1, 1) : l.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), l.AudioMgr.Instance.SetMute(e)
            }
            OnClickFullScreen(e) {
                e ? l.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1) : l.AudioMgr.Instance.Play("Btn_Select_n_v01", !1, 1)
            }
            OnClickMenu(e) {
                e ? l.AudioMgr.Instance.Play("Btn_Confirm_openwindow_v02", !1, 1) : l.AudioMgr.Instance.Play("Beep_CloseWindow_v02", !1, 1)
            }
            OnOpenNews() {
                console.log("%c[IdleState]OnOpenNews()", "font-weight:bold;"), this.target.bulletinBoardNode && !this.target.bulletinBoardNode.active && (this.target.bulletinBoardNode.active = !0, this.newsLogRecord || (this.newsLogRecord = {}), this.newsLogRecord.open_time = Date.now())
            }
            OnClickNews() {
                this.target.bulletinBoardNode && !this.target.bulletinBoardNode.active && (l.AudioMgr.Instance.Play("Btn_Confirm_openwindow_v02", !1, 1), this.OnOpenNews(), this.newsLogRecord || (this.newsLogRecord = {}), this.newsLogRecord.click = !0, r.LobbyClient.Instance.GetUserClient.recordClickLog("NewsClickEnterIcon", 0))
            }
            OnOpenSessionBonus(e, t = !1) {
                C.EventSystem.Event(C.SessionEvent.OpenSessionBonus).Length > 0 && C.EventSystem.Event(C.SessionEvent.OpenSessionBonus).Notify(e, t)
            }
            onCloseSessionBonus() {
                this.target.popUpMgr.checkAndShowPopup()
            }
            onClickSessionBonus(e) {
                this.target.sessionBonusNode && ("7Day" == e && f.ClickLog.recordClickLog(v.LogName.ClickEvent, -1, v.LogType_ClickEvent.SessionEvent, v.LogEvent_SessionEvent.DailyBonus_Icon), this.OnOpenSessionBonus(e, !0))
            }
            onSessionUpdateAssets(e) {
                this.target ? (this.target.downBarMgr ? this.target.downBarMgr.SetUserBalance(e, this.target.UserWinnings) : console.error("[Error] IdleState.onSessionUpdateAssets : this.target.downBarMgr is null"), this.target.UserEntries = e) : console.error("[Error] IdleState.onSessionUpdateAssets : this.target is null")
            }
            OnOpenProfileBeginnerGuild() {
                this.isHideLobbyBegginerGuide = !1, this.target.beginnerMgr.OpenProfileBeginnerGuild(this.OnBeginnerGuildComplete.bind(this))
            }
            OnBeginnerGuildComplete(e, t) {
                this.isHideLobbyBegginerGuide = !0, this.target.popUpMgr.checkAndShowPopup()
            }
            OnClickProfile() {
                console.log("%c[IdleState]OnClickProfile()", "font-weight:bold;"), this.isHideLobbyBegginerGuide || C.EventSystem.Event(C.BeginnersGuide.Hide).Notify("lobby");
                const {
                    enablePlayerSystem: e
                } = I.CustomConfig.Instance.lobbyOption;
                e ? (C.EventSystem.Event(C.Profile.OpenProfile).Length > 0 && C.EventSystem.Event(C.Profile.OpenProfile).Notify(!0), this.CheckCookieExist("profile_ui_beginnerguide") && f.ClickLog.recordClickLog(v.LogName.Profile, 0, v.LogType_Profile.OpenPanel, v.LogEvent_OpenPanel.InLobby)) : C.EventSystem.Event(C.AccountPageMgrEvent.ShowAccountPage).Length > 0 && C.EventSystem.Event(C.AccountPageMgrEvent.ShowAccountPage).Notify(SS.Network.LoginModel.LoginInfo.user_id)
            }
            CheckCookieExist(e) {
                let t = "";
                return JSUtility.IsSupportLocalStorage() ? t = localStorage.getItem(e) : JSUtility.IsSupportCookie() && (t = JSUtility.GetCookie(e)), null != t
            }
            OnClickLogout() {
                l.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), C.EventSystem.UnregisterFunction(C.IsLoginProcess), this.target.isEnableSkillGame && this.target.UserWinnings > 0 ? this.target.skillGameMgr.ShowPanel(this.target.UserWinnings, this.target.skillGamelostRate, e => this.DoLogout(e)) : this.DoLogout()
            }
            DoLogout(e = 0) {
                return n(this, void 0, void 0, function*() {
                    i.LoadingMgr.Instance.OpenLoading();
                    let t = C.EventSystem.Event(C.LobbyState.Logout).Length,
                        o = !1;
                    for (C.EventSystem.Event(C.LobbyState.Logout).Notify(() => {
                            0 == --t && (o = !0)
                        }); o;) yield SS.Common.WaitForSeconds(.25);
                    r.LobbyClient.Instance.DoLogout(() => {
                        this.DoLogoutChangeScene()
                    }, (e, t) => {
                        console.error("DoLogout error Status : " + e, "data :", t), this.DoLogoutChangeScene()
                    }, e)
                })
            }
            DoLogoutChangeScene() {
                this.isChangeScene = !0, this.strNextScene = this.LOGIN_SCENE_NAME
            }
            OnPurchaseSuccess(e, t) {
                this.target ? (this.target.downBarMgr ? this.target.downBarMgr.SetUserBalance(t, e) : console.error("[Error] IdleState.OnPurchaseSuccess : this.target.downBarMgr is null"), this.target.UserEntries = t, this.target.UserWinnings = e) : console.error("[Error] IdleState.OnPurchaseSuccess : this.target is null")
            }
            OnClickJPHistory() {
                l.AudioMgr.Instance.Play("Btn_Page_v01", !1, 1), this.target.jackpotWinnerMgr.ShowJpWinner()
            }
            DownloadVersion(e, t, o, i) {
                return n(this, void 0, void 0, function*() {
                    console.warn("[DownloadVersion]");
                    let n = SS.Common.GameEnvironment.ProjectSetting.Modules[e].Function;
                    if (n) switch (n) {
                        case "Redirect":
                            return this.isRedirecting = !0, void this.Redirect(e);
                        case "RedirectToGame":
                            o = this.RedirectToGame.bind(this)
                    }
                    yield new Promise((n, s) => {
                        let r = SS.Common.GameEnvironment.ProjectSetting,
                            a = SS.Common.GameEnvironment.S3URL;
                        try {
                            let c = r.Modules[e].Path;
                            (new h.VersionDownloader).Start(a + c, e => {
                                o(e, t), n(e)
                            }, e => {
                                i(e), s()
                            })
                        } catch (l) {
                            console.error(l)
                        }
                    })
                })
            }
            Redirect(e) {
                return n(this, void 0, void 0, function*() {
                    let t = SS.Common.GameEnvironment.ProjectSetting.Modules[e].Path; - 1 != t.toUpperCase().indexOf("MAGICCITY") && f.ClickLog.recordClickLog(v.LogName.ClickEvent, -1, v.LogType_ClickEvent.MCEntry, v.LogEvent_Click.MC_Icon), yield f.ClickLog.SendRecordedList(v.LogName.ClickEvent), this.isRedirecting = !0, window.addEventListener("load", this.pageLoadEvent), window.location.href = t
                })
            }
            RedirectToGame(e, t) {
                this.SetGameEnvironmentVariable();
                let o, n = SS.Common.GameEnvironment.ProjectSetting,
                    i = SS.Common.GameEnvironment.CurrentGameNow,
                    s = n.Modules[i].Path,
                    r = !1;
                SS.Common.GameEnvironment.IgnoreVersionCtrl ? (o = e.VersionDEV ? e.VersionDEV : e.Version, a.ConnectPanelMgr.Instance.DisableConnectPanel()) : e.Maintain.IsMaintainNow ? (!0, c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Info, "C07", "Lobby", "maintain", null)) : o = e.Version;
                let l = window.location.origin + s + o + "/web-mobile/index.html" + I.CustomConfig.Instance.urlParamStr;
                this.isRedirecting = !0, window.addEventListener("load", this.pageLoadEvent), window.location.href = l
            }
            SetGameEnvironmentVariable() {
                let e = SS.Common.GameEnvironment.CurrentGameTypeNow,
                    t = SS.Common.GameEnvironment.GameTypeMapScrollContentPos[e],
                    o = SS.Common.GameEnvironment.IsMute ? "1" : "0",
                    n = JSUtility.FullScreen.IsFullScreen() ? "1" : "0";
                JSUtility.IsSupportLocalStorage() ? (localStorage.setItem("CURRENT_GAME_TYPE", e), t && (localStorage.setItem("CURRENT_SCROLL_POS_X", t.x), localStorage.setItem("CURRENT_SCROLL_POS_Y", t.y)), localStorage.setItem("IS_FULL_SCREEN", n), localStorage.setItem("IS_MUTE", o), localStorage.setItem("REDIRECT_TO_GAME", "1")) : JSUtility.IsSupportCookie() && (document.cookie = "CURRENT_GAME_TYPE=" + e + ";", t && (document.cookie = "CURRENT_SCROLL_POS_X=" + t.x + ";", document.cookie = "CURRENT_SCROLL_POS_Y=" + t.y + ";"), document.cookie = "IS_FULL_SCREEN=" + n + ";", document.cookie = "IS_MUTE=" + o + ";", document.cookie = "REDIRECT_TO_GAME=1;")
            }
            NewTab(e) {
                let t = SS.Common.GameEnvironment.ProjectSetting.Modules[e].Path,
                    o = window.open("about:blank", "redirect");
                o.opener = null, o.location.href = t
            }
            onLoadVersionSuccess(e, t) {
                return n(this, void 0, void 0, function*() {
                    let o;
                    console.log("onLoadVersionSuccess isSwitchGame = " + t), console.log("onLoadVersionSuccess jsonData :", e);
                    let n = !1,
                        i = !1;
                    if (SS.Common.GameEnvironment.IgnoreVersionCtrl) o = e.VersionDEV ? e.VersionDEV : e.Version, a.ConnectPanelMgr.Instance.DisableConnectPanel();
                    else if (e.Maintain.IsMaintainNow) n = !0, c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Info, "C07", "Lobby", "maintain", null);
                    else if (e.hasOwnProperty("CloseTip") && !t) {
                        let t = e.CloseTip,
                            o = yield S.Download.Prefab(t.BundleName, t.PrefabName);
                        if (o) {
                            let e = cc.director.getScene().getChildByName("LobbyCommon"),
                                t = cc.instantiate(o);
                            t.parent = e, t.setSiblingIndex(0), i = !0
                        }
                    } else o = e.Version;
                    this.loadpagePath = "", SS.Common.GameEnvironment.CurrentGameVersion = o, n || i ? this.StopClickIcon() : this.DownloadCustomLoadpage()
                })
            }
            StopClickIcon() {
                a.ConnectPanelMgr.Instance.DisableConnectPanel(0), this.CloseCSSLogoPage(), m.IconMgr.CanClickIcon = !0
            }
            DownloadCustomLoadpage() {
                this.loadpagePath = this.GetGameLoadPage(SS.Common.GameEnvironment.CurrentGameNow, SS.Common.GameEnvironment.CurrentGameVersion), console.warn(this.loadpagePath);
                let e = this,
                    t = new Image,
                    o = !1;
                SS.Common.GameEnvironment.GetIsGameIsVertical(SS.Common.GameEnvironment.CurrentGameNow) && (o = !0), t.onload = function() {
                    console.log("OnFinsihLoadpage !!"), window.gd_orientationType = o ? 1 : 0, u.Device.Instance.setOnOrientation(), e.target.scheduleOnce(() => {
                        if (e.target.unschedule(e.OnErrorLoadpage.bind(e)), SS.Common.GameEnvironment.ChangeToGameName) SS.Common.GameEnvironment.Splash = document.getElementById("splash");
                        else {
                            let e = document.getElementById("splash");
                            e.src = t.src, e.style.display = "block", SS.Common.GameEnvironment.Splash = e
                        }
                        e.FinishLoadPage()
                    }, .5)
                }, t.onerror = function() {
                    e.target.unschedule(e.OnErrorLoadpage.bind(e)), e.OnErrorLoadpage()
                }, t.src = this.loadpagePath, this.target.scheduleOnce(this.OnErrorLoadpage.bind(this), 60)
            }
            OnErrorLoadpage() {
                console.log("OnErrorLoadpage !!"), SS.Common.GameEnvironment.GetIsGameIsVertical(SS.Common.GameEnvironment.CurrentGameNow) ? this.DownloadVerticalLoadpage() : (window.gd_orientationType = 0, u.Device.Instance.setOnOrientation(), this.target.scheduleOnce(() => {
                    SS.Common.GameEnvironment.Splash = document.getElementById("splash"), this.FinishLoadPage()
                }, .5))
            }
            SetSplashScale() {
                let e = SS.Common.GameEnvironment.GetIsGameIsVertical(SS.Common.GameEnvironment.CurrentGameNow);
                SS.Common.GameEnvironment.Splash && (e ? (SS.Common.GameEnvironment.Splash.style.width = "auto", SS.Common.GameEnvironment.Splash.style.height = "100%") : (SS.Common.GameEnvironment.Splash.style.width = "100%", SS.Common.GameEnvironment.Splash.style.height = "auto"))
            }
            DownloadVerticalLoadpage() {
                let e = this,
                    t = new Image;
                t.onload = function() {
                    console.log("OnFinsih Default Vertical_Loadpage!!"), window.gd_orientationType = 1, u.Device.Instance.setOnOrientation(), e.target.scheduleOnce(() => {
                        let o = document.getElementById("splash");
                        o.src = t.src, o.style.display = "block", SS.Common.GameEnvironment.Splash = o, e.FinishLoadPage()
                    }, 1)
                }, t.onerror = function() {
                    console.log("OnError Vertical_Loadpage !!"), c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Critical, "C38", "Lobby", null, null), a.ConnectPanelMgr.Instance.DisableConnectPanel(0)
                }, t.src = SS.Common.GameEnvironment.verticalSplashSRC
            }
            FinishLoadPage() {
                return n(this, void 0, void 0, function*() {
                    if (this.SetSplashScale(), f.ClickLog.DirectSend(v.LogName.PlayerConversion, v.LogType_PlayerConversion.GameLoading, v.LogEvent_EnterGameProcess.StaticLoading), null !== SS.Common.GameEnvironment.CurrentGameNow && void 0 !== SS.Common.GameEnvironment.CurrentGameNow) {
                        if (S.Download.CheckConfig(SS.Common.GameEnvironment.CurrentGameNow) && (SS.Common.GameEnvironment.CurrentGameVersion = S.Download.CheckVersion(SS.Common.GameEnvironment.CurrentGameNow), yield S.Download.Bundle(SS.Common.GameEnvironment.CurrentGameNow, "")), a.ConnectPanelMgr.Instance.DisableConnectPanel(0), cc.assetManager.bundles.find(function(e) {
                                return e._config.getSceneInfo(SS.Common.GameEnvironment.CurrentGameNow)
                            })) {
                            if ("" != SS.Common.GameEnvironment.ChangeToGameName) {
                                var e = document.getElementById("splash");
                                e && (e.style.display = "none")
                            }
                            i.LoadingMgr.Instance.OpenLoading(), i.LoadingMgr.Instance.SetProgress(30, 5), f.ClickLog.DirectSend(v.LogName.PlayerConversion, v.LogType_PlayerConversion.GameLoading, v.LogEvent_EnterGameProcess.DynamicLoading), yield SS.Common.WaitForSeconds(.1), SS.Common.GameEnvironment.Splash.style.display = "none", this.GAME_SCENE_NAME = SS.Common.GameEnvironment.CurrentGameNow, cc.game.setFrameRate(10)
                        } else {
                            let e = SS.Common.GameEnvironment.GetIsGameIsVertical(SS.Common.GameEnvironment.CurrentGameNow);
                            this.GAME_SCENE_NAME = e ? "Game_Vertical" : "Game", this.OpenCSSLogoPage(), i.LoadingMgr.Instance.CloseLoading()
                        }
                        SS.Common.GameEnvironment.ChangeToGameName = "", this.strNextScene = this.GAME_SCENE_NAME, this.isChangeScene = !0
                    } else c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Warning, "C60", "Lobby", "Game Name Exception Error!")
                })
            }
            GetGameLoadPage(e, t) {
                let o, n = SS.Common.GameEnvironment.ProjectSetting;
                o = n.CDN_HOST ? window.location.protocol + "//" + n.CDN_HOST : "../../..";
                let i = e,
                    s = n.Modules[i].Path;
                if (!s) return console.warn("Project setting is not exist game id: " + i), null;
                let r = n.Modules[i].UrlType,
                    a = "en" == SS.Common.GameEnvironment.Language ? "" : SS.Common.GameEnvironment.Language;
                "FishTable3" == i && (i = "PhoenixReturns");
                let l = cc.assetManager.bundles.find(function(e) {
                    return e._config.getSceneInfo(SS.Common.GameEnvironment.CurrentGameNow)
                });
                return SS.Common.GameEnvironment.IsUseScoreBox ? r && "iGaming" == r ? o + "/iGaming/Game/_RemoteResources/Game/" + i + "/LoadPage/" + a + "loadpage.jpg?" : l ? o + s + t + "/img/" + a + "loadpage.jpg?" : o + s + t + "/web-mobile/img/" + a + "loadpage.jpg?" : r && "iGaming" == r ? o + "/iGaming/Game/_RemoteResources/Game/" + i + "/LoadPage/" + a + "nobar_loadpage.jpg?" : l ? o + s + t + "/img/" + a + "nobar_loadpage.jpg?" : o + s + t + "/web-mobile/img/" + a + "nobar_loadpage.jpg?"
            }
            onLoadVersionFail(e) {
                this.CloseCSSLogoPage(), a.ConnectPanelMgr.Instance.DisableConnectPanel(), c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Warning, "C09", "Lobby", e, () => {
                    m.IconMgr.CanClickIcon = !0
                })
            }
            OnClickIcon(e, t) {
                console.log("click gameName", e), "" == SS.Common.GameEnvironment.ChangeToGameName && l.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1);
                let o = window.matchMedia("(display-mode: standalone)").matches,
                    n = "" == SS.Common.BaseFunction.GetURLParameterByName("standalone");
                SS.Common.GameEnvironment.GetIsGameIsVertical(e) && cc.sys.isMobile && o && n && "" == SS.Common.GameEnvironment.ChangeToGameName ? this.showVerticalHint(this.clickIconShowConnectPanel.bind(this, e, t), this.resetClickIcon.bind(this)) : (f.ClickLog.SendEntryPoint(e), this.clickIconShowConnectPanel(e, t))
            }
            resetClickIcon() {
                cc.error("resetClickIcon()"), m.IconMgr.CanClickIcon = !0
            }
            clickIconShowConnectPanel(e, t) {
                console.warn("[clickIconShowConnectPanel] gameName= " + e + ", isSwitchGame = " + t), SS.Common.GameEnvironment.CurrentGameNow = e, a.ConnectPanelMgr.Instance.ShowConnectPanel(0), -1 == SS.Common.GameEnvironment.SentGameFlowStatus.indexOf(SS.Common.GameEnvironment.CurrentGameNow + r.GAME_STATUS.ICON_CLICK) && (r.LobbyClient.Instance.GetUserClient.SendPlayFlowData(SS.Common.GameEnvironment.DeviceInfo, SS.Common.GameEnvironment.CurrentGameNow, r.GAME_STATUS.ICON_CLICK), SS.Common.GameEnvironment.SentGameFlowStatus.push(SS.Common.GameEnvironment.CurrentGameNow + r.GAME_STATUS.ICON_CLICK)), -1 == SS.Common.GameEnvironment.SentFlowStatus.indexOf(r.LOBBY_STATUS.FIRST_CLICK_ICON) && (r.LobbyClient.Instance.GetUserClient.SendPlayFlowData(SS.Common.GameEnvironment.DeviceInfo, "Lobby", r.LOBBY_STATUS.FIRST_CLICK_ICON), SS.Common.GameEnvironment.SentFlowStatus.push(r.LOBBY_STATUS.FIRST_CLICK_ICON)), this.DownloadVersion(e, t, this.onLoadVersionSuccess.bind(this), this.onLoadVersionFail.bind(this))
            }
            OpenCSSLogoPage() {
                SS.Common.GameEnvironment.Splash || (SS.Common.GameEnvironment.Splash = document.getElementById("splash")), SS.Common.GameEnvironment.Splash.style.display = "block"
            }
            CloseCSSLogoPage() {
                SS.Common.GameEnvironment.Splash || (SS.Common.GameEnvironment.Splash = document.getElementById("splash")), SS.Common.GameEnvironment.Splash.style.display = "none"
            }
            OnClickGameType(e) {
                console.log("click gameTypeName", e), SS.Common.GameEnvironment.CurrentGameTypeNow !== e && l.AudioMgr.Instance.Play("Btn_Page_v01", !1, 1), this.target.gameIconMgr.ShowIcon(e)
            }
            OnAccountClickClose() {
                l.AudioMgr.Instance.Play("Btn_Select_n_v01", !1, 1)
            }
            OnJPWinnerCloseClose() {
                l.AudioMgr.Instance.Play("Btn_Select_n_v01", !1, 1)
            }
            OnCallActivity(e) {
                let t = e.getUserData();
                cc.log("OnCallActivity: " + t);
                let o = this.target.m_arrEventBannerData.findIndex(e => e.m_sBannerID == t);
                o > -1 && this.target.m_arrEventBannerData[o].m_bValid ? this.target.m_arrEventBannerData[o].m_fucClickEvent() : (c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Info, "C57", "Lobby", "This event has already expired."), this.target.bulletinBoardNode && (this.target.bulletinBoardNode.active = !1))
            }
            OnCallSwitchGame(e) {
                let t = e.getUserData();
                cc.log("OnCallSwitchGame: " + t), this.newsLogRecord && (this.newsLogRecord.switch = !0), this.target.switchGame.OnSwitchGameIgnoreWindow(t)
            }
            OnCallWebview(e) {
                let t = e.getUserData();
                cc.log("OnCallWebview: " + t), this.target.webviewUiGroup.OpenWebView(t)
            }
            OnBulletinBoardClosed() {
                if (cc.log("OnBulletinBoardClosed"), this.newsLogRecord) {
                    let e = Date.now() - this.newsLogRecord.open_time;
                    this.newsLogRecord.stay_time = e;
                    let t = 0;
                    this.newsLogRecord.hasOwnProperty("click") && (t = 2), this.newsLogRecord.hasOwnProperty("switch") && (t += 1), r.LobbyClient.Instance.GetUserClient.recordClickLog("NewsStayTime", t, this.newsLogRecord), this.newsLogRecord = null
                }
                this.target.popUpMgr.checkAndShowPopup()
            }
            OnAfterRedirect() {
                window.removeEventListener("load", this.pageLoadEvent), this.isRedirecting = !1
            }
        }, cc._RF.pop()
    }, {
        "../../Component/GameIconMgr/Script/FavoriteMgr": "FavoriteMgr",
        "../../Component/GameIconMgr/Script/IconMgr": "IconMgr",
        "../../LobbyCommon/Asset/Script/Asset": "Asset",
        "../../LobbyCommon/Component/AudioMgr": "AudioMgr",
        "../../LobbyCommon/Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../../LobbyCommon/Define/CustomConfig": "CustomConfig",
        "../../LobbyCommon/EventModule/SessionBonus/Script/SessionDataCtrl": "SessionDataCtrl",
        "../../LobbyCommon/GuestSystem/Script/GuestLobbyPopupMgr": "GuestLobbyPopupMgr",
        "../../LobbyCommon/GuestSystem/Script/GuestSysMgr": "GuestSysMgr",
        "../../LobbyCommon/Helper/CrossDomainCookie": "CrossDomainCookie",
        "../../LobbyCommon/Helper/Download": "Download",
        "../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../../LobbyCommon/InGameJp/Script/GameJpMgr": "GameJpMgr",
        "../../LobbyCommon/Loading/Script/LoadingMgr": "LoadingMgr",
        "../../LobbyCommon/Net/ClickLog": "ClickLog",
        "../../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum",
        "../../LobbyCommon/Net/Downloader/VersionDownloader": "VersionDownloader",
        "../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../../LobbyCommon/PopUpMgr/Scripts/PriorityCustomEvent": "PriorityCustomEvent",
        "../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../../LobbyCommon/Skin/Skin": "Skin",
        "../../LobbyCommon/SwipeMgr/Scripts/Device": "Device",
        "../../LobbyCommon/TopBar/Script/TopbarMgr": "TopbarMgr"
    }],
    ImageDownloader: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7f65cQF35BMQqRJejIZujut", "ImageDownloader"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ImageDownloader = void 0;
        const n = e("./SSDownloader");
        o.ImageDownloader = class extends n.default {
            constructor() {
                super(...arguments), this.OnLoad = null, this.OnError = null
            }
            Start(e, t, o) {
                this.OnLoad = t, this.OnError = o, this.GetImage(e, this.OnLoadComplete.bind(this), this.OnError.bind(this))
            }
            OnLoadComplete(e) {
                let t = this;
                try {
                    var o = new Uint8Array(e),
                        n = new Image;
                    n.src = "data:image/png;base64," + t.Base64Encode(o), n.onload = function() {
                        var e = new cc.Texture2D;
                        e.initWithElement(n), null != t.OnLoad && t.OnLoad(new cc.SpriteFrame(e))
                    }, console.log("ImageDownloader.OnLoadComplete")
                } catch (i) {
                    console.error("[ImageDownloader] Load failed.\n", i), null != t.OnError && t.OnError(i)
                }
            }
            Base64Encode(e) {
                let t, o, n, i, s, r, a, l = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    c = "",
                    h = 0;
                for (; h < e.length;) i = (t = e[h++]) >> 2, s = (3 & t) << 4 | (o = e[h++]) >> 4, r = (15 & o) << 2 | (n = e[h++]) >> 6, a = 63 & n, isNaN(o) ? r = a = 64 : isNaN(n) && (a = 64), c = c + l.charAt(i) + l.charAt(s) + l.charAt(r) + l.charAt(a);
                return c
            }
        }, cc._RF.pop()
    }, {
        "./SSDownloader": "SSDownloader"
    }],
    InGameJpBg: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "6e7707DXDVJZKjkJ9/0LbDM", "InGameJpBg");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.InGameJpBg = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            SetJpBgPosition(e, t) {
                switch (e) {
                    case 2:
                        let o = .5 * t;
                        this.node.setPosition(new cc.Vec2(this.node.position.x + o, 0));
                        break;
                    case 3:
                        this.node.setPosition(new cc.Vec2(this.node.position.x + t, 0))
                }
            }
        };
        r = n([i], r), o.InGameJpBg = r, cc._RF.pop()
    }, {}],
    InGameJpDownloadList: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "186a9lL0FVAt5iKcM/a/JTt", "InGameJpDownloadList"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.InGameJpDownloadList = void 0;
        const {
            ccclass: n,
            property: i
        } = cc._decorator;
        o.InGameJpDownloadList = class {
            constructor(e, t, o, n, i, s, r) {
                this.gameThemeId = "", this.groupInType = "", this.iconSizeType = "", this.panelLoadPath = "", this.bgLoadPath = "", this.jpPanelPrefab = null, this.jpBgPrefab = null, this.gameThemeId = e, this.groupInType = t, this.iconSizeType = o, this.panelLoadPath = n, this.bgLoadPath = i, this.jpPanelPrefab = s, this.jpBgPrefab = r
            }
        }, cc._RF.pop()
    }, {}],
    InGameJpPanel: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "fc14cBOOYxIMKFOct0sbc7R", "InGameJpPanel");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.InGameJpPanel = void 0;
        const i = e("../../../LobbyCommon/Component/NumberCountUp"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.jpValLabel = null, this.numberCountUp = null, this.NORMAL_ICON_PREFIX = "NORMAL"
            }
            SetJpPanelPosition(e, t, o, n) {
                let i = 1;
                switch (i = e == this.NORMAL_ICON_PREFIX ? .2 : 1, t) {
                    case 1:
                        this.node.setPosition(new cc.Vec2(0, this.node.position.y + n.y * i));
                        break;
                    case 2:
                        let s = .5 * o;
                        this.node.setPosition(new cc.Vec2(this.node.position.x - s, this.node.position.y + n.y * i));
                        break;
                    case 3:
                        this.node.setPosition(new cc.Vec2(this.node.position.x - o, this.node.position.y + n.y * i))
                }
            }
            SetJpVal(e) {
                null != this.jpValLabel && (console.log("[SetJpVal]", SS.Common.BaseFunction.addCommas(e, 2)), this.numberCountUp = this.jpValLabel.getComponent(i.NumberCountUp), this.numberCountUp.SetNumberFormat(!1, !0, !0), this.numberCountUp.SetNumberNow(e))
            }
            JpNumberCountUp(e, t) {
                this.numberCountUp = this.jpValLabel.getComponent(i.NumberCountUp), this.numberCountUp.SetNumberFormat(!1, !0, !0), this.numberCountUp.CountUp(e, t)
            }
        };
        n([r(cc.Label)], a.prototype, "jpValLabel", void 0), n([r(i.NumberCountUp)], a.prototype, "numberCountUp", void 0), a = n([s], a), o.InGameJpPanel = a, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Component/NumberCountUp": "NumberCountUp"
    }],
    InfoMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "115b6n0eelNN6sFLRSIxDuT", "InfoMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.InfoMgr = void 0;
        const i = e("../../../LobbyCommon/Connect/Script/ConnectPanelMgr"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.root = null, this.scrollViewRoot = null, this.webViewRoot = null, this.PFWebView = null, this.PFScrollView = null, this.InfoPageContent = null, this.webView = null, this.downloadErrorEventId = null, this.tmpDowmloadInfo = null, this.onDownloadFinishEvent = null, this.infoURL = "", this.Event_OpenInfo = null, this.Event_CloseInfo = null
            }
            _onLoad() {
                null != this.webViewRoot && (this.webViewRoot.active = !1), null != this.scrollViewRoot && (this.scrollViewRoot.active = !1), this.Event_OpenInfo = new SS.Common.Delegate, this.Event_CloseInfo = new SS.Common.Delegate
            }
            _onDestroy() {
                null != this.tmpDowmloadInfo && (cc.loader.release(this.tmpDowmloadInfo), this.tmpDowmloadInfo = null), null != this.InfoPageContent && null != this.InfoPageContent.spriteFrame && (cc.loader.release(this.InfoPageContent.spriteFrame), this.InfoPageContent.spriteFrame = null), null != this.webView && (this.webView.destroy(), this.webView = null)
            }
            OpenInfoPage(e = "") {
                if (null == this.webViewRoot) return;
                let t = "en" == SS.Common.GameEnvironment.Language ? "" : SS.Common.GameEnvironment.Language;
                "" != e && (e += "/"), SS.Common.GameEnvironment.IsUseScoreBox ? this.infoURL = "./" + e + t + "info.html" : this.infoURL = "./" + e + t + "nobar_info.html";
                let o = cc.instantiate(this.PFWebView);
                o.parent = this.webViewRoot, o.setPosition(0, 0), this.webView = o.getComponent(cc.WebView), this.webView.url = this.infoURL, this.webViewRoot.active = !0, this.root.active = !0, this.Event_OpenInfo.Length > 0 && this.Event_OpenInfo.Notify()
            }
            OpenScrollViewInfoPage(e) {
                this.scrollViewRoot.active = !0, this.GetInfoDownloadImg(e)
            }
            GetInfoDownloadImg(e) {
                let t = this,
                    o = !1,
                    n = this.GetInfoDownloadPath(e);
                this.onDownloadFinishEvent = null, null == this.tmpDowmloadInfo ? (i.ConnectPanelMgr.Instance.ShowConnectPanel(), this.onDownloadFinishEvent = this.SetOpenRoot.bind(this), this.downloadErrorEventId = this.scheduleOnce(() => {
                    o || (console.warn("[Info Image Download is error !!] "), t.root.active = !1, this.onDownloadFinishEvent = null, i.ConnectPanelMgr.Instance.DisableConnectPanel(), this.CloseInfoPage())
                }, 5), cc.assetManager.loadRemote(n, (e, n) => {
                    if (e) return o = !0, console.warn("[Info Image Download is error !!] "), t.root.active = !1, i.ConnectPanelMgr.Instance.DisableConnectPanel(), this.CloseInfoPage(), void(t.downloadErrorEventId && t.unschedule(t.downloadErrorEventId));
                    if (o = !0, t.downloadErrorEventId && t.unschedule(t.downloadErrorEventId), null != this.onDownloadFinishEvent && this.onDownloadFinishEvent(), t.root.active) {
                        t.tmpDowmloadInfo = new cc.SpriteFrame(n), console.log("Download infoImage Finish !!");
                        let e = t.tmpDowmloadInfo.getTexture().height;
                        t.PFScrollView.content.height = e, t.InfoPageContent.spriteFrame = t.tmpDowmloadInfo, t.PFScrollView.scrollToTop(0), i.ConnectPanelMgr.Instance.DisableConnectPanel()
                    }
                    n = null
                })) : (this.PFScrollView.scrollToTop(0), this.SetOpenRoot())
            }
            SetOpenRoot() {
                this.root.active = !0
            }
            GetInfoDownloadPath(e) {
                let t = "./" + e + "/" + ("en" == SS.Common.GameEnvironment.Language ? "" : SS.Common.GameEnvironment.Language) + (SS.Common.GameEnvironment.IsUseScoreBox ? "infoPage" : "noScoreBox_infoPage") + ".jpg?" + (new Date).getTime();
                return console.warn("[Download InfoImage Path] = " + t), t
            }
            CloseInfoPage() {
                this.webView && (this.webView.url = "about:blank", this.webView.destroy(), this.webView = null), this.root.active = !1, this.Event_CloseInfo.Length > 0 && this.Event_CloseInfo.Notify()
            }
            OnDarkBgClicked() {
                this.root.active = !1, this.webView && this.CloseInfoPage(), this.Event_CloseInfo.Length > 0 && this.Event_CloseInfo.Notify()
            }
            isActive() {
                let e = !1;
                return null != this.root && (e = this.root.active), e
            }
        };
        n([r(cc.Node)], a.prototype, "root", void 0), n([r(cc.Node)], a.prototype, "scrollViewRoot", void 0), n([r(cc.Node)], a.prototype, "webViewRoot", void 0), n([r(cc.Prefab)], a.prototype, "PFWebView", void 0), n([r(cc.ScrollView)], a.prototype, "PFScrollView", void 0), n([r(cc.Sprite)], a.prototype, "InfoPageContent", void 0), a = n([s], a), o.InfoMgr = a, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Connect/Script/ConnectPanelMgr": "ConnectPanelMgr"
    }],
    ItemBag: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "dca17vmA+FOk7mNZAgxi3+q", "ItemBag"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ItemBag = void 0;
        const n = e("../../Net/LobbyClient");
        var i, s;
        (function(e) {
            e.ItemBag = "ItemBag"
        })(i || (i = {})),
        function(e) {
            e.GetItem = "GET_ITEM"
        }(s || (s = {}));
        const r = (e, t, o, n, i, s, r = null) => {
            if (0 === t && o && o.cmd_data) {
                const t = o.cmd_data.Code;
                if (0 == t)
                    if (s) {
                        const t = s.Parse(o.cmd_data);
                        console.log("[ItemBag] " + e + " res: ", t), n(t)
                    } else console.log("[ItemBag] " + o.cmd_data), n(o.cmd_data);
                else r && r[t] ? console.warn("[ItemBag] " + e + " code: " + t + " err: " + r[t]) : console.warn("[ItemBag] " + e + " code: " + t), i(t)
            } else console.warn("[ItemBag] " + e + " status: " + t + ", data: ", o), i(t)
        };
        o.ItemBag = {
            GetItem: (e, t) => new Promise((o, a) => {
                const l = {
                    RoundId: e,
                    ItemId: t
                };
                n.LobbyClient.Instance.GetUserClient.SendCommand(i.ItemBag, s.GetItem, l, (e, t) => {
                    r(s.GetItem, e, t, o, a)
                })
            })
        }, cc._RF.pop()
    }, {
        "../../Net/LobbyClient": "LobbyClient"
    }],
    ItemDataStructure: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "56cbaZ0po9NBKufAbj0/rUK", "ItemDataStructure"), Object.defineProperty(o, "__esModule", {
                value: !0
            }), o.itemRank = o.Item = o.ItemData = void 0, o.ItemData = class {}, o.Item = class {
                constructor() {
                    this.infoTop = "", this.infoBot = ""
                }
            },
            function(e) {
                e[e.green = 0] = "green", e[e.bron = 1] = "bron", e[e.silve = 2] = "silve", e[e.gold = 3] = "gold", e[e.purple = 4] = "purple", e[e.rainbow = 5] = "rainbow"
            }(o.itemRank || (o.itemRank = {})), cc._RF.pop()
    }, {}],
    ItemIconCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "640817kODFAu620VvoISVHv", "ItemIconCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ItemIconCtrl = void 0;
        const i = e("./ItemDataStructure"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_arrPrefabRankedFrame = [], this.m_btn = null, this.m_bIsBigOne = !0
            }
            onEnable() {
                this.creatFrame()
            }
            setIcon(e, t) {
                this.m_bIsBigOne = null == e, this.m_bIsBigOne || (this.m_nodeFrameLayer = e.m_nodeRankedFrameLayer, e.m_nodeRankedFrameLayer, e.m_nodeGameIconLayer, e.m_nodeTextLayer, this.m_btn.clickEvents[0] = new cc.Component.EventHandler, this.m_btn.clickEvents[0].target = e.node, this.m_btn.clickEvents[0].component = "backpackMgr", this.m_btn.clickEvents[0].handler = "OpenSelectOptionPage", this.m_btn.clickEvents[0].customEventData = "")
            }
            creatFrame() {
                let e = this.m_arrPrefabRankedFrame[i.itemRank.purple],
                    t = cc.instantiate(e);
                if (t.scale = .5, this.m_bIsBigOne) t.parent = this.node, t.setPosition(cc.Vec2.ZERO);
                else {
                    t.parent = this.m_nodeFrameLayer;
                    let e = this.node.parent.convertToWorldSpace(new cc.Vec2(this.node.getPosition().x, this.node.getPosition().y));
                    t.setPosition(this.m_nodeFrameLayer.convertToNodeSpace(e))
                }
            }
        };
        n([r([cc.Prefab])], a.prototype, "m_arrPrefabRankedFrame", void 0), n([r(cc.Button)], a.prototype, "m_btn", void 0), a = n([s], a), o.ItemIconCtrl = a, cc._RF.pop()
    }, {
        "./ItemDataStructure": "ItemDataStructure"
    }],
    JPTimerMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "27457jDU3RHAZmOvueoKu3P", "JPTimerMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.JPTimerMgr = void 0;
        const i = e("../../../LobbyCommon/Net/LobbyClient"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.textJPTime = null, this.jpInfoButton = null, this.jpHelpBackground = null, this.nodeJPLight = [], this.m_bVertical = !1, this.m_labJPES = null, this.m_sprIndicator = null, this.JP_TIME_MAX = 30, this._isCountDownJPtimeNow = !1, this._jpTime = 0, this.intervalID = -1, this.Event_clickJpPage = null
            }
            _onLoad() {
                this.Event_clickJpPage = new SS.Common.Delegate
            }
            _start() {
                this.UpdateJPTimerUI(0)
            }
            Compose(e) {}
            UpdateJPTimerUI(e) {
                if (this.textJPTime && (this.textJPTime.string = e.toString()), this.m_bVertical) this.m_sprIndicator && (this.m_sprIndicator.fillStart = .5 * (1 - e / this.JP_TIME_MAX));
                else if (this.nodeJPLight) {
                    let t = this.nodeJPLight.length;
                    for (let e = 0; e < t; e++) this.nodeJPLight[e].active = !1;
                    if (e > 0) {
                        let o = 1 + t * e / this.JP_TIME_MAX;
                        o = o > t ? t : o;
                        for (let e = 0; e < o; e++) this.nodeJPLight[e].active = !0
                    }
                }
            }
            ToggleJPHelp() {
                this.jpHelpBackground.node.active = !this.jpHelpBackground.node.active, this.Event_clickJpPage.Length > 0 && this.Event_clickJpPage.Notify(this.jpHelpBackground.node.active)
            }
            JPtimer(e) {
                --e._jpTime, e._jpTime <= 0 && (e._jpTime = 0, e.PauseJPtime()), e.UpdateJPTimerUI(e._jpTime)
            }
            StartConutDownJPTimer() {
                this._isCountDownJPtimeNow = !0, -1 != this.intervalID && clearInterval(this.intervalID), this.intervalID = setInterval(() => this.JPtimer(this), 1e3)
            }
            SetJpTimerPos(e) {
                this.node.setPosition(e)
            }
            AddJPtime(e) {
                this.PauseJPtime(), this._jpTime += e, this._jpTime >= this.JP_TIME_MAX && (this._jpTime = this.JP_TIME_MAX), this.UpdateJPTimerUI(this._jpTime)
            }
            ForceSetJPtime(e) {
                this.PauseJPtime(), e > this.JP_TIME_MAX ? e = this.JP_TIME_MAX : e < 0 && (e = 0), this._jpTime = e, this.UpdateJPTimerUI(this._jpTime), this._jpTime > 0 && !this._isCountDownJPtimeNow && this.StartConutDownJPTimer()
            }
            PauseJPtime() {
                clearInterval(this.intervalID), this._isCountDownJPtimeNow = !1
            }
            ResumeJPtime() {
                this._jpTime > 0 && (i.LobbyClient.Instance.GetJPSystem.SendJPTimerResume(), this._isCountDownJPtimeNow || (this._isCountDownJPtimeNow = !0, this.StartConutDownJPTimer()))
            }
        };
        n([r(cc.Label)], a.prototype, "textJPTime", void 0), n([r(cc.Button)], a.prototype, "jpInfoButton", void 0), n([r(cc.Sprite)], a.prototype, "jpHelpBackground", void 0), n([r([cc.Node])], a.prototype, "nodeJPLight", void 0), n([r(cc.Boolean)], a.prototype, "m_bVertical", void 0), n([r(cc.Label)], a.prototype, "m_labJPES", void 0), n([r(cc.Sprite)], a.prototype, "m_sprIndicator", void 0), a = n([s], a), o.JPTimerMgr = a, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Net/LobbyClient": "LobbyClient"
    }],
    JPWinnerItem: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "5907c+y5hxCG4KF8yKr+9m8", "JPWinnerItem");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.JPWinnerItem = void 0;
        const i = e("../../../LobbyCommon/Component/NumberCountUp"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_MachineIDLabel = null, this.m_winTypeSprite = null, this.m_newFlagNode = null, this.m_isShowing = !1, this.m_jpWinValNum = null
            }
            EnterScrollView() {
                255 != this.node.opacity && (this.node.opacity = 255)
            }
            ExitScrollView() {
                0 != this.node.opacity && (this.node.opacity = 0)
            }
            SetWinVaul(e) {
                this.m_jpWinValNum.SetNumberNow(e)
            }
            SetJPValueFormat(e) {
                this.m_jpWinValNum.SetNumberFormat(!e, e)
            }
        };
        n([r(cc.Label)], a.prototype, "m_MachineIDLabel", void 0), n([r(cc.Sprite)], a.prototype, "m_winTypeSprite", void 0), n([r(cc.Node)], a.prototype, "m_newFlagNode", void 0), n([r(i.NumberCountUp)], a.prototype, "m_jpWinValNum", void 0), a = n([s], a), o.JPWinnerItem = a, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Component/NumberCountUp": "NumberCountUp"
    }],
    JSONDownloder: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "53fb9qRRiZNVblU7Fntw8e7", "JSONDownloder"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.JSONDownloader = void 0;
        const n = e("./SSDownloader");
        o.JSONDownloader = class extends n.default {
            constructor() {
                super(...arguments), this.OnLoad = null, this.OnError = null
            }
            Start(e, t, o) {
                this.OnLoad = t, this.OnError = o, this.GetJSON(e, this.OnLoadComplete.bind(this), this.OnError.bind(this))
            }
            OnLoadComplete(e) {
                let t = this;
                try {
                    let n;
                    console.log(e), n = JSON.parse(e), null != t.OnLoad && t.OnLoad(n)
                } catch (o) {
                    console.error("[JSONDownloader] Load setting failed.\n", o), null != t.OnError && t.OnError(o)
                }
            }
        }, cc._RF.pop()
    }, {
        "./SSDownloader": "SSDownloader"
    }],
    JackpotWinnerMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "a5803RLRIdImbPQ6fGBbaPJ", "JackpotWinnerMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.JackpotWinnerMgr = void 0;
        const i = e("../../../LobbyCommon/Connect/Script/ConnectPanelMgr"),
            s = e("../../../LobbyCommon/Net/LobbyClient"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.jpRewardSprite = [], this.esjpRewardSprite = [], this.jPRewardColor = [], this.jpItem = null, this.esjpItem = null, this.content = null, this.verticleLayout = null, this.scrollView = null, this.root = null, this.NoData = null, this.ScrollBar = null, this.titleSprite = null, this.titleSpriteFrame = null, this.estitleSpriteFrame = null, this.jpItemPool = null, this.tmpJPAllItem = [], this.tmpJPAllItemCom = []
            }
            _onLoad() {
                this.SetTitleSprite(), this.m_DelClickClose = new SS.Common.Delegate, this.jpItemPool = new cc.NodePool;
                let e = this.scrollView.node.parent.convertToWorldSpaceAR(cc.v2(this.scrollView.node.x - this.scrollView.node.anchorX * this.scrollView.node.width, this.scrollView.node.y - this.scrollView.node.anchorY * this.scrollView.node.height));
                this.svBBoxRect = cc.rect(e.x, e.y, this.scrollView.node.width, this.scrollView.node.height)
            }
            SetTitleSprite() {
                this.titleSprite.spriteFrame = "en" === SS.Common.GameEnvironment.Language ? this.titleSpriteFrame : this.estitleSpriteFrame
            }
            SetJPValueFormat(e) {
                this.jpFormatIsMoney = e
            }
            _onDestroy() {
                null != this.jpItemPool && this.jpItemPool.clear(), null != this.m_DelClickClose && (this.m_DelClickClose.Clear(), this.m_DelClickClose = null), this.tmpJPAllItem = null, this.tmpJPAllItemCom = null, this.jpRewardSprite = null, this.jPRewardColor = null
            }
            ShowJpWinner() {
                i.ConnectPanelMgr.Instance.ShowConnectPanel(), s.LobbyClient.Instance.GetJPSystem.SendGetJPHistory(this.RecvJPHistory.bind(this))
            }
            RecvJPHistory(e, t) {
                if (i.ConnectPanelMgr.Instance.DisableConnectPanel(), console.log("RecvJPHistory , " + e, t), this.NoData.active = !1, this.ScrollBar.active = !0, this.scrollView.node.active = !0, e != ArkSDK.SocketResult.OK || t.hasOwnProperty("result")) this.root.active = !0, this.NoData.active = !0, this.ScrollBar.active = !1, this.scrollView.node.active = !1;
                else {
                    let e = t.length;
                    for (let o = 0; o < e; o++) {
                        let e = null;
                        if (this.jpItemPool.size() > 0) e = this.jpItemPool.get();
                        else {
                            const t = "en" === SS.Common.GameEnvironment.Language ? this.jpItem : this.esjpItem;
                            e = cc.instantiate(t)
                        }
                        e.setParent(this.content);
                        let n = e.getComponent("JPWinnerItem");
                        this.tmpJPAllItem[o] = e, this.tmpJPAllItemCom[o] = n, n.m_newFlagNode.active = 0 === o || 1 === o;
                        let i = t[o].jp_type;
                        if (this.SetMachineID(i, n, t[o]), i < this.jpRewardSprite.length) {
                            const e = "en" === SS.Common.GameEnvironment.Language ? this.jpRewardSprite : this.esjpRewardSprite;
                            n.m_winTypeSprite.spriteFrame = e[i], n.m_MachineIDLabel.node.color = this.jPRewardColor[i]
                        } else n.m_winTypeSprite.spriteFrame = null, n.m_MachineIDLabel.node.color = cc.Color.WHITE;
                        let s = t[o].jp_value;
                        if (this.jpFormatIsMoney) {
                            let e = SS.Common.GameEnvironment.exchange_rate,
                                t = SS.Common.BaseFunction.accMul(s, e);
                            s = this.TruncateCurrency(t, e)
                        }
                        n.SetJPValueFormat(this.jpFormatIsMoney), n.SetWinVaul(s)
                    }
                    this.UpdateLayout()
                }
            }
            TruncateCurrency(e, t) {
                let o = SS.Common.BaseFunction.accDiv(1, t);
                return e = SS.Common.BaseFunction.accMul(e, o), e = Math.floor(e), SS.Common.BaseFunction.accDiv(e, o)
            }
            SetMachineID(e, t, o) {
                if (0 === e && o.hasOwnProperty("WinPlayerCount")) {
                    let e = o.WinPlayerCount,
                        n = o.machine_id;
                    t.m_MachineIDLabel.string = 1 === e ? "No." + n[0] : "Community : " + e + " people"
                } else t.m_MachineIDLabel.string = "No." + o.machine_id
            }
            UpdateLayout() {
                this.verticleLayout.enabled = !0, this.root.active = !0, this.verticleLayout.updateLayout(), this.verticleLayout.enabled = !1, this.scrollView.scrollToTop(), this.onScrollingDrawCallOpt()
            }
            OnCloseClicked() {
                this.m_DelClickClose.Length > 0 && this.m_DelClickClose.Notify(), this.root.active = !1;
                for (let e of this.tmpJPAllItem) this.jpItemPool.put(e);
                this.tmpJPAllItem = [], this.tmpJPAllItemCom = []
            }
            onScrollingDrawCallOpt() {
                if (0 == this.tmpJPAllItem.length) return;
                let e = this.tmpJPAllItem.length;
                for (let t = 0; t < e; t++) this.tmpJPAllItem[t].getBoundingBoxToWorld().intersects(this.svBBoxRect) ? this.tmpJPAllItemCom[t].EnterScrollView() : this.tmpJPAllItemCom[t].ExitScrollView()
            }
        };
        n([a([cc.SpriteFrame])], l.prototype, "jpRewardSprite", void 0), n([a([cc.SpriteFrame])], l.prototype, "esjpRewardSprite", void 0), n([a([cc.Color])], l.prototype, "jPRewardColor", void 0), n([a(cc.Prefab)], l.prototype, "jpItem", void 0), n([a(cc.Prefab)], l.prototype, "esjpItem", void 0), n([a(cc.Node)], l.prototype, "content", void 0), n([a(cc.Layout)], l.prototype, "verticleLayout", void 0), n([a(cc.ScrollView)], l.prototype, "scrollView", void 0), n([a(cc.Node)], l.prototype, "root", void 0), n([a(cc.Node)], l.prototype, "NoData", void 0), n([a(cc.Node)], l.prototype, "ScrollBar", void 0), n([a(cc.Sprite)], l.prototype, "titleSprite", void 0), n([a(cc.SpriteFrame)], l.prototype, "titleSpriteFrame", void 0), n([a(cc.SpriteFrame)], l.prototype, "estitleSpriteFrame", void 0), l = n([r], l), o.JackpotWinnerMgr = l, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../../../LobbyCommon/Net/LobbyClient": "LobbyClient"
    }],
    KeyboardMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "9310dz1V7RIbbUHlsb5KCEx", "KeyboardMgr");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const s = e("../../../Helper/EventSystem"),
            r = e("../../../Helper/LayerSystem"),
            a = e("./Key"),
            {
                ccclass: l,
                property: c
            } = cc._decorator;
        var h;
        (function(e) {
            e[e.En = 0] = "En", e[e.Mark = 1] = "Mark"
        })(h || (h = {}));
        class m {
            constructor() {
                this.position = cc.v3(), this.scale = 1
            }
            reset(e) {
                e && (e.setPosition(this.position), e.scale = this.scale, this.position = cc.v3(), this.scale = 1)
            }
            set(e) {
                this.position = e.position.clone(), this.scale = e.scale
            }
        }
        let u = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.root = null, this.objectRoot = null, this.layerBgRowAry = [], this.layerWordRowAry = [], this.layerFixedBg = null, this.layerFixedWord = null, this.layout = [], this.keyPf = null, this.strABC = null, this.keyFontSize = 30, this.fixedKey = [], this.btnEnList = [
                    ["1", "2", "3", "4", "5", "6", "7", "8", "9", "0"],
                    ["q", "w", "e", "r", "t", "y", "u", "i", "o", "p"],
                    ["a", "s", "d", "f", "g", "h", "j", "k", "l"],
                    ["z", "x", "c", "v", "b", "n", "m"]
                ], this.btnMarkList = [
                    ["1", "2", "3", "4", "5", "6", "7", "8", "9", "0"],
                    ["\\", "/", ":", ";", "(", ")", "$", "&", "@", '"'],
                    ["[", "]", "{", "}", "#", "%", "^", "*", "+", "="],
                    ["_", "-", "`", "?", "!", "'"]
                ], this.keyAry = [], this.curType = h.En, this.isABC = !1, this.targetEditBox = null, this.returnStr = "", this.FunEBChangeCB = null, this.FunEBReturnCB = null, this.ctrlNode = null, this.nodeInfo = null, this.getSelectedText = !1, this.selectedText = "", this.closeKeyboardAfterEnter = !1
            }
            fitScreenSize() {
                const {
                    width: e,
                    height: t
                } = this.objectRoot.getContentSize(), o = this.ctrlNode.getContentSize(), {
                    scale: n
                } = this.ctrlNode;
                o.height * n > t ? this.ctrlNode.scale = t / (o.height * n) : o.width * n > e && (this.ctrlNode.scale = e / (o.width * n))
            }
            onLoad() {
                null == n.Instance && (n.Instance = this, window.Keyboard = this, this.root.opacity = 0, this.nodeInfo = new m)
            }
            init() {
                this.root.opacity = 255, s.EventSystem.Event(s.Keyboard.Show).Insert(this.Show, this), s.EventSystem.Event(s.Keyboard.Click).Insert(this.OnClickKey, this), s.EventSystem.Event(s.Keyboard.Hide).Insert(this.OnClose, this);
                let e, t = 0,
                    o = null,
                    n = null;
                for (this.keyAry = new Array(4), e = 0; e < this.layerBgRowAry.length; e++)
                    for (r.default.RegisterLayer("KeyBoardBg_" + e.toString(), this.layerBgRowAry[e]), r.default.RegisterLayer("KeyBoardWord_" + e.toString(), this.layerWordRowAry[e]), this.keyAry[e] = new Array(10), t = 0; t < 10; t++)(n = (o = cc.instantiate(this.keyPf.data)).getComponent(a.Key)).label.fontSize = this.keyFontSize, r.default.SetParent(o, "KeyBoardBg_" + e.toString()), r.default.SetParent(n.label.node, "KeyBoardWord_" + e.toString()), this.keyAry[e][t] = n;
                for (r.default.RegisterLayer("KeyBoardBg_Fixed", this.layerFixedBg), r.default.RegisterLayer("KeyBoardWord_Fixed", this.layerFixedWord), e = 0; e < this.fixedKey.length; e++) r.default.SetParent(this.fixedKey[e].node, "KeyBoardBg_Fixed"), r.default.SetParent(this.fixedKey[e].label.node, "KeyBoardWord_Fixed"), this.fixedKey[e].LabelRePosition(!0);
                this.RePosition(), this.ShowKeyboard(h.En), this.root.active = !1
            }
            onEnable() {
                this.Reset(), this.ShowKeyboard(h.En)
            }
            onDestroy() {
                s.EventSystem.Event(s.Keyboard.Show).Remove(this.Show, this), s.EventSystem.Event(s.Keyboard.Hide).Remove(this.OnClose, this), s.EventSystem.Event(s.Keyboard.Click).Remove(this.OnClickKey, this), this.Reset()
            }
            Show(e, t = null, o = null, n = null, i = !0) {
                const s = e;
                this.targetEditBox = s, this.returnStr = this.targetEditBox.string, this.FunEBChangeCB = t, this.FunEBReturnCB = o, this.root.active = !0, n != this.ctrlNode && (this.nodeInfo.reset(this.ctrlNode), this.ctrlNode = n, this.nodeInfo.set(n), n.position = n.parent.convertToNodeSpaceAR(this.objectRoot.convertToWorldSpaceAR(cc.v3())), this.fitScreenSize()), this.closeKeyboardAfterEnter = i, this.getSelectedText = !0
            }
            ShowKeyboard(e) {
                let t = [];
                switch (e) {
                    case h.En:
                        t = this.btnEnList;
                        break;
                    case h.Mark:
                        t = this.btnMarkList
                }
                let o, n = 0,
                    i = [],
                    s = null,
                    r = !0;
                for (o = 0; o < this.keyAry.length; o++)
                    for (i = t[o], n = 0; n < this.keyAry[o].length; n++) r = n < i.length, (s = this.keyAry[o][n]).SetActive(r), s.Set(r ? i[n] : "", this.isABC);
                this.curType = e, this.RePosition()
            }
            RePosition() {
                let e, t = 0;
                for (e = 0; e < this.layout.length; e++) this.layout[e].updateLayout();
                for (e = 0; e < this.keyAry.length; e++)
                    for (t = 0; t < this.keyAry[e].length; t++) {
                        let o = this.keyAry[e][t];
                        isNaN(parseInt(o.label.string)) ? o.LabelRePosition(!1, this.isABC ? 0 : 3) : o.LabelRePosition(!1, 0)
                    }
            }
            OnClickKey(e, t) {
                switch (e) {
                    case a.KeyType.Normal:
                        this.OnKeyIn(t);
                        break;
                    case a.KeyType.SpABC:
                        this.OnABC();
                        break;
                    case a.KeyType.Sp123:
                        this.On123();
                        break;
                    case a.KeyType.SpBack:
                        this.OnBackspack();
                        break;
                    case a.KeyType.SpEnter:
                        this.OnEnter()
                }
            }
            OnKeyIn(e) {
                this.returnStr += e, this.UpdateEditBoxLabel()
            }
            UpdateEditBoxLabel() {
                this.targetEditBox.string = this.returnStr, this.FunEBChangeCB && this.FunEBChangeCB(), this.returnStr = this.targetEditBox.string
            }
            Reset() {
                this.returnStr = "", this.FunEBChangeCB = null, this.FunEBReturnCB = null, this.targetEditBox = null, this.getSelectedText = !1
            }
            OnDragStart() {
                let e, t = 0;
                for (e = 0; e < this.keyAry.length; e++)
                    for (t = 0; t < this.keyAry[e].length; t++) this.keyAry[e][t].OnKeyboardDragStart();
                for (e = 0; e < this.fixedKey.length; e++) this.fixedKey[e].OnKeyboardDragStart()
            }
            OnABC() {
                this.isABC = !this.isABC, this.strABC.string = this.isABC ? "abc" : "ABC", this.ShowKeyboard(h.En)
            }
            On123() {
                this.curType == h.Mark ? this.ShowKeyboard(h.En) : this.ShowKeyboard(h.Mark)
            }
            OnBackspack() {
                let e = this.returnStr.length,
                    t = "";
                this.selectedText.length != e && (t = this.returnStr.substring(0, e - 1)), this.returnStr = t, this.UpdateEditBoxLabel()
            }
            OnEnter() {
                null != this.FunEBReturnCB && this.FunEBReturnCB(), this.Reset(), this.ctrlNode && this.closeKeyboardAfterEnter && (this.nodeInfo.reset(this.ctrlNode), this.ctrlNode = null), this.root.active = !this.closeKeyboardAfterEnter
            }
            OnClose() {
                this.Reset(), this.ctrlNode && (this.nodeInfo.reset(this.ctrlNode), this.ctrlNode = null), this.root.active = !1
            }
            update() {
                this.getSelectedText && (this.selectedText = window.getSelection().toString())
            }
        };
        u.Instance = null, i([c(cc.Node)], u.prototype, "root", void 0), i([c(cc.Node)], u.prototype, "objectRoot", void 0), i([c([cc.Node])], u.prototype, "layerBgRowAry", void 0), i([c([cc.Node])], u.prototype, "layerWordRowAry", void 0), i([c(cc.Node)], u.prototype, "layerFixedBg", void 0), i([c(cc.Node)], u.prototype, "layerFixedWord", void 0), i([c([cc.Layout])], u.prototype, "layout", void 0), i([c(cc.Prefab)], u.prototype, "keyPf", void 0), i([c(cc.Label)], u.prototype, "strABC", void 0), i([c(cc.Integer)], u.prototype, "keyFontSize", void 0), i([c([a.Key])], u.prototype, "fixedKey", void 0), u = n = i([l], u), o.default = u, cc._RF.pop()
    }, {
        "../../../Helper/EventSystem": "EventSystem",
        "../../../Helper/LayerSystem": "LayerSystem",
        "./Key": "Key"
    }],
    Key: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "c5fd7kPLKhHG5K9+GoGqIVY", "Key");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.Key = o.KeyType = void 0;
        const i = e("../../../Helper/EventSystem"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        var a;
        (function(e) {
            e[e.Normal = 0] = "Normal", e[e.SpABC = 1] = "SpABC", e[e.Sp123 = 2] = "Sp123", e[e.SpBack = 3] = "SpBack", e[e.SpEnter = 4] = "SpEnter"
        })(a = o.KeyType || (o.KeyType = {}));
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.label = null, this.spBg = null, this.spfNormal = null, this.spfPress = null, this.type = a.Normal, this.enable = !1, this.dragStartPos = null, this.isHolding = !1, this.holdStart = null
            }
            onLoad() {
                this.node.on(cc.Node.EventType.TOUCH_START, this.OnMouseDown, this), this.node.on(cc.Node.EventType.TOUCH_END, this.OnMouseLeave, this), this.node.on(cc.Node.EventType.MOUSE_LEAVE, this.OnMouseLeave, this), this.node.on(cc.Node.EventType.MOUSE_UP, this.OnMouseUp, this)
            }
            onDestroy() {
                this.node.off(cc.Node.EventType.TOUCH_START, this.OnMouseDown, this), this.node.off(cc.Node.EventType.TOUCH_END, this.OnMouseLeave, this), this.node.off(cc.Node.EventType.MOUSE_LEAVE, this.OnMouseLeave, this), this.node.off(cc.Node.EventType.MOUSE_UP, this.OnMouseUp, this)
            }
            Set(e, t) {
                this.label.string = t ? e.toLocaleUpperCase() : e.toLocaleLowerCase()
            }
            SetActive(e) {
                this.node.active = e, e || (this.label.string = "")
            }
            LabelRePosition(e, t = 0) {
                let o = this.label.node.parent.convertToNodeSpaceAR(e ? this.labelWorldPos : this.worldPos).add(cc.v3(0, t));
                this.label.node.setPosition(o)
            }
            OnMouseDown() {
                this.enable = !0, this.spBg.spriteFrame = this.spfPress, this.label.node.color = cc.Color.BLACK, this.isHolding = !0, this.holdStart = Date.now(), i.EventSystem.Event(i.Keyboard.Click).Notify(this.type, this.label.string)
            }
            update() {
                this.isHolding && (Date.now() - this.holdStart) / 1e3 >= 1 && i.EventSystem.Event(i.Keyboard.Click).Notify(this.type, this.label.string)
            }
            OnMouseLeave() {
                this.enable = !1, this.spBg.spriteFrame = this.spfNormal, this.label.node.color = cc.Color.WHITE, this.isHolding = !1, this.holdStart = null
            }
            OnMouseUp() {
                this.isHolding = !1, this.enable && this.isDraging
            }
            OnKeyboardDragStart() {
                this.dragStartPos = this.worldPos
            }
            get isDraging() {
                return !this.worldPos.equals(this.dragStartPos)
            }
            get worldPos() {
                return this.node.convertToWorldSpaceAR(cc.v3())
            }
            get labelWorldPos() {
                return this.node.convertToWorldSpaceAR(this.label.node.position)
            }
        };
        n([r(cc.Label)], l.prototype, "label", void 0), n([r(cc.Sprite)], l.prototype, "spBg", void 0), n([r(cc.SpriteFrame)], l.prototype, "spfNormal", void 0), n([r(cc.SpriteFrame)], l.prototype, "spfPress", void 0), n([r({
            type: cc.Enum(a)
        })], l.prototype, "type", void 0), l = n([s], l), o.Key = l, cc._RF.pop()
    }, {
        "../../../Helper/EventSystem": "EventSystem"
    }],
    LayerSystem: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "a90dfNQQpxFu7qmZy/SznI2", "LayerSystem"), Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const n = e("./EventSystem"),
            i = e("./Setting");
        class s {
            constructor() {
                this._list = JSON.parse("{}")
            }
            static get _instance() {
                return null == this._inst && (this._inst = new s), this._inst
            }
            static Init() {
                s._instance._list = JSON.parse("{}"), i.default.GetSetting("Layer"), n.EventSystem.Event(n.RegisterLayer).Notify()
            }
            static GetLayer(e) {
                return s._instance._list[e] ? s._instance._list[e] : (console.warn("There is no node named '" + e + "' in Layer System!"), null)
            }
            static SetParent(e, t) {
                let o = e.active;
                e.active = !1;
                let n = s.GetLayer(t);
                n && (e.parent = n), e.active = o
            }
            static RegisterLayer(e, t) {
                s._instance._list[e] ? console.warn("There is already a node named '" + e + "' in Layer!\nLayer will Do Nothing!") : s._instance._list[e] = t
            }
            static UnregisterLayer(e, t) {
                s._instance._list[e] ? s._instance._list[e] === t ? s._instance._list[e] = null : console.warn("You Should Not Unregister a Node Which You Don't Own It!") : console.warn("There is no node named '" + e + "' in Layer System!")
            }
        }
        o.default = s, s._inst = null, cc._RF.pop()
    }, {
        "./EventSystem": "EventSystem",
        "./Setting": "Setting"
    }],
    Layer: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "5135al3CZVGP75dInRwESKK", "Layer");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("./EventSystem"),
            s = e("./LayerSystem"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.active = !0
            }
            onLoad() {
                this.node.active = this.active, i.EventSystem.Event(i.RegisterLayer).Insert(this.RegisterLayer, this)
            }
            RegisterLayer() {
                i.EventSystem.Event(i.RegisterLayer).Remove(this.RegisterLayer, this), s.default.RegisterLayer(this.node.name, this.node)
            }
            onDestroy() {
                i.EventSystem.Event(i.RegisterLayer).Remove(this.RegisterLayer, this), s.default.UnregisterLayer(this.node.name, this.node)
            }
        };
        n([a({
            displayName: "\u7bc0\u9ede\u521d\u59cb\u5316\u61c9\u8a72\u958b\u555f\u6216\u95dc\u9589 (\u82e5\u7bc0\u9ede\u95dc\u9589\u5c07\u4e0d\u6703\u81ea\u52d5\u57f7\u884c)"
        })], l.prototype, "active", void 0), l = n([r], l), o.default = l, cc._RF.pop()
    }, {
        "./EventSystem": "EventSystem",
        "./LayerSystem": "LayerSystem"
    }],
    LayoutHandler: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "fc6a24GAX5JlYoYkA29m1ry", "LayoutHandler");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.LayoutParam = o.Padding = void 0;
        const i = e("../../FullScreenHandler"),
            s = e("../../Helper/EventSystem"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class {
            constructor() {
                this.left = 0, this.right = 0, this.top = 0, this.bottom = 0
            }
        };
        n([a({
            type: cc.Float
        })], l.prototype, "left", void 0), n([a({
            type: cc.Float
        })], l.prototype, "right", void 0), n([a({
            type: cc.Float
        })], l.prototype, "top", void 0), n([a({
            type: cc.Float
        })], l.prototype, "bottom", void 0), l = n([r("Padding")], l), o.Padding = l;
        let c = class {
            constructor() {
                this.type = cc.Layout.Type.NONE, this.padding = new l, this.spacing = new cc.Vec2(0, 0), this.horizontalDirection = cc.Layout.HorizontalDirection.LEFT_TO_RIGHT, this.verticalDirection = cc.Layout.VerticalDirection.TOP_TO_BOTTOM
            }
            Record(e) {
                e && (this.type = e.type, this.padding.left = e.paddingLeft, this.padding.right = e.paddingRight, this.padding.top = e.paddingTop, this.padding.bottom = e.paddingBottom, this.spacing = new cc.Vec2(e.spacingX, e.spacingY), this.horizontalDirection = e.horizontalDirection, this.verticalDirection = e.verticalDirection, Editor.log("Recorded"))
            }
        };
        n([a({
            type: cc.Enum(cc.Layout.Type),
            displayName: "Layout \u7a2e\u985e"
        })], c.prototype, "type", void 0), n([a({
            type: l
        })], c.prototype, "padding", void 0), n([a({})], c.prototype, "spacing", void 0), n([a({
            type: cc.Enum(cc.Layout.HorizontalDirection),
            visible: function() {
                return this.type === cc.Layout.Type.HORIZONTAL || this.type === cc.Layout.Type.GRID
            }
        })], c.prototype, "horizontalDirection", void 0), n([a({
            type: cc.Enum(cc.Layout.VerticalDirection),
            visible: function() {
                return this.type === cc.Layout.Type.VERTICAL || this.type === cc.Layout.Type.GRID
            }
        })], c.prototype, "verticalDirection", void 0), c = n([r("LayoutParam")], c), o.LayoutParam = c;
        let h = class extends cc.Component {
            constructor() {
                super(...arguments), this.layout = null, this.orientation = i.Orientation.Landscape, this.visible = !1, this.paramH = new c, this.paramV = new c
            }
            set toH(e) {
                this.ChangeOrientation(i.Orientation.Landscape), this.orientation = i.Orientation.Landscape
            }
            get toH() {
                return !1
            }
            set toV(e) {
                this.ChangeOrientation(i.Orientation.Portrait), this.orientation = i.Orientation.Portrait
            }
            get toV() {
                return !1
            }
            set record(e) {
                e && this.layout && (this.orientation == i.Orientation.Landscape ? this.paramH : this.paramV).Record(this.layout)
            }
            get record() {
                return !1
            }
            onLoad() {
                s.EventSystem.Event(s.ScreenOrientationState.ChangeOrientation).Insert(this.OnOrientationChange, this)
            }
            onDestroy() {
                s.EventSystem.Event(s.ScreenOrientationState.ChangeOrientation).Remove(this.OnOrientationChange, this)
            }
            OnOrientationChange(e) {
                e === i.Orientation.Landscape ? this.toH = !0 : this.toV = !0
            }
            ChangeOrientation(e) {
                const t = e === i.Orientation.Portrait ? this.paramV : this.paramH,
                    {
                        horizontalDirection: o,
                        verticalDirection: n
                    } = t,
                    {
                        bottom: s,
                        top: r,
                        left: a,
                        right: l
                    } = t.padding;
                this.layout.type = t.type, this.layout.paddingBottom = s, this.layout.paddingLeft = a, this.layout.paddingRight = l, this.layout.paddingTop = r, this.layout.horizontalDirection = o, this.layout.verticalDirection = n
            }
        };
        n([a({
            type: cc.Layout,
            displayName: "layout"
        })], h.prototype, "layout", void 0), n([a({
            displayName: "\u6a6b\u7248\u986f\u793a"
        })], h.prototype, "toH", null), n([a({
            displayName: "\u76f4\u7248\u986f\u793a"
        })], h.prototype, "toV", null), n([a({
            type: cc.Enum(i.Orientation),
            displayName: "\u76ee\u524d\u662f\u54ea\u7a2e\u986f\u793a"
        })], h.prototype, "orientation", void 0), n([a({
            displayName: "\u7d00\u9304\u4f4d\u7f6e"
        })], h.prototype, "record", null), n([a({
            displayName: "\u6aa2\u8996\u7d00\u9304\u503c"
        })], h.prototype, "visible", void 0), n([a({
            type: c,
            displayName: "\u6a6b\u7248\u53c3\u6578",
            visible: function() {
                return this.visible
            }
        })], h.prototype, "paramH", void 0), n([a({
            type: c,
            displayName: "\u76f4\u7248\u53c3\u6578",
            visible: function() {
                return this.visible
            }
        })], h.prototype, "paramV", void 0), h = n([r], h), o.default = h, cc._RF.pop()
    }, {
        "../../FullScreenHandler": "FullScreenHandler",
        "../../Helper/EventSystem": "EventSystem"
    }],
    LoadingMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "6e26bYnY9FK+qgXGkkMuJO8", "LoadingMgr");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.LoadingMgr = void 0;
        const {
            ccclass: s,
            property: r
        } = cc._decorator;
        let a = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.barNode = null, this.root = null, this.progressLabel = null, this.LogoBG = null, this.m_iWidth = 1280, this.m_iHeight = 720, this.m_loadingMsg = null, this.preScalX = 0
            }
            onLoad() {
                null == n.Instance && (n.Instance = this)
            }
            CloseLoading() {
                cc.game.setFrameRate(60), this.root.active = !1, this.m_loadingMsg && (this.m_loadingMsg.node.active = !1), this.ResetLoadpage()
            }
            ResetLoadpage() {
                this.barNode.stopAllActions(), this.barNode.scaleX = 0, this.preScalX = 0, this.LogoBG.spriteFrame = null
            }
            OpenLoading(e = null) {
                if (this.root.active) console.error("OpenLoading Fail !!");
                else try {
                    this.ResetLoadpage();
                    let o = null == e ? SS.Common.GameEnvironment.Splash : e,
                        n = new cc.Texture2D;
                    n.initWithElement(o), n.handleLoadedTexture(), n.width = this.m_iWidth, n.height = this.m_iHeight, this.LogoBG.spriteFrame = new cc.SpriteFrame(n), this.LogoBG.node.width = this.m_iWidth, this.LogoBG.node.height = this.m_iHeight, this.root.active = !0, this.scheduleOnce(() => {
                        cc.game.setFrameRate(10)
                    }, 1 / cc.game.getFrameRate())
                } catch (t) {
                    console.error(t)
                }
            }
            SetProgress(e, t = .1) {
                this.barNode.stopAllActions();
                let o = cc.scaleTo(t, .01 * e, 1);
                this.barNode.runAction(o)
            }
            SetLoadingMessage(e = "") {
                this.m_loadingMsg && ("" === e ? this.m_loadingMsg.node.active = !1 : (this.m_loadingMsg.node.active = !0, this.m_loadingMsg.string = e))
            }
            update() {
                if (this.barNode.scaleX > 1 || this.barNode.scaleX < this.preScalX) return;
                this.preScalX = this.barNode.scaleX;
                let e = (100 * this.barNode.scaleX).toFixed(2);
                this.progressLabel.string = e.toString() + "%"
            }
            onDestroy() {
                n.Instance = null
            }
        };
        a.Instance = null, i([r(cc.Node)], a.prototype, "barNode", void 0), i([r(cc.Node)], a.prototype, "root", void 0), i([r(cc.Label)], a.prototype, "progressLabel", void 0), i([r(cc.Sprite)], a.prototype, "LogoBG", void 0), i([r(cc.Integer)], a.prototype, "m_iWidth", void 0), i([r(cc.Integer)], a.prototype, "m_iHeight", void 0), i([r(cc.Label)], a.prototype, "m_loadingMsg", void 0), a = n = i([s], a), o.LoadingMgr = a, cc._RF.pop()
    }, {}],
    LobbyBeginnerMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "3aa4cTb2ZVBybyb/wVeMFjv", "LobbyBeginnerMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("../LobbyCommon/Helper/EventSystem"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.completeFunction = null
            }
            OpenProfileBeginnerGuild(e) {
                this.completeFunction = e, i.EventSystem.Event(i.BeginnersGuide.OnExit).Insert(this.OnProfileBeginnerGuildComplete, this), i.EventSystem.Event(i.BeginnersGuide.Show).Notify("lobby", !1)
            }
            OnProfileBeginnerGuildComplete(e, t, o) {
                i.EventSystem.Event(i.BeginnersGuide.OnExit).Remove(this.OnProfileBeginnerGuildComplete, this), t.destroy(), this.completeFunction && this.completeFunction(e, o)
            }
        };
        a = n([s], a), o.default = a, cc._RF.pop()
    }, {
        "../LobbyCommon/Helper/EventSystem": "EventSystem"
    }],
    LobbyClient: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "55b9aaFGQtPVaRPnLf7NOZE", "LobbyClient");
        var n = this && this.__awaiter || function(e, t, o, n) {
            return new(o || (o = Promise))(function(i, s) {
                function r(e) {
                    try {
                        l(n.next(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function a(e) {
                    try {
                        l(n.throw(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                        e(t)
                    })).then(r, a)
                }
                l((n = n.apply(e, t || [])).next())
            })
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.LobbyClient = o.GAME_STATUS = o.LOBBY_STATUS = void 0;
        const i = e("./ClickLog");
        (function(e) {
            e[e.LOGIN_OK = 0] = "LOGIN_OK", e[e.INTO_LOBBY_OK = 1] = "INTO_LOBBY_OK", e[e.FIRST_CLICK_ICON = 2] = "FIRST_CLICK_ICON"
        })(o.LOBBY_STATUS || (o.LOBBY_STATUS = {})),
        function(e) {
            e[e.ICON_CLICK = 3] = "ICON_CLICK", e[e.START_LOAD_PAGE = 4] = "START_LOAD_PAGE", e[e.LOAD_PAGE_OK = 5] = "LOAD_PAGE_OK", e[e.RECV_THEME_SETTING = 6] = "RECV_THEME_SETTING", e[e.FIRST_SPIN = 7] = "FIRST_SPIN"
        }(o.GAME_STATUS || (o.GAME_STATUS = {}));
        class s {
            constructor() {
                this.IsSocketErrorClose = !1, this.m_CommonEventInfo_900005_Rank = void 0, this.m_ExtraResult = void 0, this.loginModel = null, this.userClient = null, this.lobbySystem = null, this.jpSystem = null, this.socket = null, this.isLogin = !1, this.isLogoutNow = !1, this.ErrorData = [], this.PacketDelayData = {
                    sent: 0,
                    receive: 0,
                    loss: -1,
                    best: -1,
                    average: -1,
                    worst: -1,
                    totalElapsedTime: -1
                }, this.JpShowLastTime = 0, this.DEAFULT_JP_SHOW_TIMEOUT = 100, null != s.Instance && console.error("LobbyClient is already exist"), s.Instance = this, cc.game.on(cc.game.EVENT_HIDE, this.onAppPause.bind(this)), cc.game.on(cc.game.EVENT_SHOW, this.onAppResume.bind(this))
            }
            get GetUserClient() {
                return this.userClient
            }
            get GetLobbySystem() {
                return this.lobbySystem
            }
            get GetJPSystem() {
                return this.jpSystem
            }
            static SetInstance(e) {
                s.Instance = e
            }
            JPInit() {
                this.JpShowLastTime = this.DEAFULT_JP_SHOW_TIMEOUT
            }
            JPFinish() {
                this.JpShowLastTime = 0
            }
            IsSocketConnect() {
                return this.socket && this.socket.isConnect
            }
            onAppResume() {
                console.log("onAppResume"), this.isPause && (this.isPause = !1, this.IsSocketConnect() ? (this.PauseCollectLog(), this.CollectLog()) : this.ErrorData = [])
            }
            onAppPause() {
                console.log("onAppPause"), this.PauseCollectLog(), this.isPause = !0
            }
            DoLogin(e, t, o, n, i) {
                try {
                    let r = SS.Common.GameEnvironment.DeviceInfo;
                    this.loginSuccessCB = n, this.loginModel && this.loginModel.Clear && this.loginModel.Clear();
                    let a = "None",
                        l = null == SS.Common.GameEnvironment.LobbyVersion ? "Editor" : SS.Common.GameEnvironment.LobbyVersion;
                    null != navigator.connection && null != navigator.connection && (a = navigator.connection.type), this.loginModel = new SS.Network.LoginModel(e), this.loginModel.DoLogin(t, o, (e, t, o) => {
                        this.OnLoginSuccess(e, t, o)
                    }, (e, t, o) => {
                        console.error(e), console.error(t), null != i && (i(e, t, o), i = null)
                    }, () => {
                        this.isLogin ? (this.PauseCollectLog(), this.IsSocketErrorClose = !0) : this.isLogoutNow || null == i || (i(-999, "Socket disconnected without login", "ConnectWebSocket"), i = null)
                    }, r, l, a)
                } catch (s) {
                    console.error(s), null != i && (i(-999, s), i = null)
                }
            }
            DoGuestLogin(e, t, o, n, i, s) {
                try {
                    let a = SS.Common.GameEnvironment.DeviceInfo;
                    this.loginSuccessCB = i, this.loginModel && this.loginModel.Clear && this.loginModel.Clear(), this.loginModel = new SS.Network.LoginModel(e);
                    let l = "None",
                        c = SS.Common.GameEnvironment.LobbyVersion;
                    null != navigator.connection && null != navigator.connection && (l = navigator.connection.type), this.loginModel.DoGuestLogin(t, o, n, (e, t, o) => {
                        this.OnLoginSuccess(e, t, o)
                    }, (e, t, o) => {
                        console.error(e), console.error(t), null != s && (s(e, t, o), s = null)
                    }, () => {
                        this.isLogin ? (this.PauseCollectLog(), this.IsSocketErrorClose = !0) : this.isLogoutNow || null == s || (s(-999, "Socket disconnected without login", "ConnectWebSocket"), s = null)
                    }, a, c, l)
                } catch (r) {
                    console.error(r), null != s && (s(-999, r), s = null)
                }
            }
            OnLoginSuccess(e, t, o) {
                this.IsSocketErrorClose = !1, this.isLogin = !0, this.isLogoutNow = !1, this.socket = o, this.userClient ? this.userClient.setNetClient(e, t) : this.userClient = new SS.Network.UserClient(e, t), this.lobbySystem ? this.lobbySystem.setNetClient(o) : this.lobbySystem = new SS.Network.LobbySystem(o), console.warn("[OnLoginSuccess] LogoMode: " + window.gd_nowLOGO), this.lobbySystem.setLoginLogoMode(window.gd_nowLOGO), this.jpSystem ? this.jpSystem.setNetClient(o, t) : (this.jpSystem = new SS.Network.JPSystem(o, t), this.jpSystem.OnJPStartSignal.add(this.JPInit, this), this.jpSystem.OnJPFinishSignal.add(this.JPFinish, this)), this.CollectLog(), this.loginSuccessCB(), this.loginSuccessCB = null
            }
            CollectLog() {
                this.SendLog = () => {
                    this.sendLogTimerID = setTimeout(() => {
                        this.isLogin && this.socket && this.socket.isConnect && (console.log("ErrorData", this.ErrorData), this.ErrorData.length > 0 && (this.ErrorData.forEach(e => {
                            e.PinArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.userClient.SendErrorLog(e)
                        }), this.ErrorData = []), this.SendLog())
                    }, 3e5)
                }, this.SendLog(), i.ClickLog.readCookieAndSendLog("SpinTypeLog")
            }
            CollectErrorLog(e, t, o, n) {
                let i = {
                    error_result: t,
                    trigger_point: n,
                    scene_name: o,
                    error_handle: e,
                    MachineID: SS.Network.LoginModel.LoginInfo.machine_id,
                    KioskID: SS.Network.LoginModel.LoginInfo.kiosk_id,
                    PinArkID: SS.Network.LoginModel.LoginInfo.pin_ark_id,
                    ClientTimeUTC: (new Date).getTime(),
                    UserID: SS.Network.LoginModel.LoginInfo.user_id
                };
                this.ErrorData.push(i)
            }
            RecvPingAck(e, t, o, n, i, s, r) {
                if (e == ArkSDK.SocketResult.OK && this.PacketDelayData.receive++, void 0 === r && (r = 1e4), this.PacketDelayData.totalElapsedTime += r, (-1 == this.PacketDelayData.best || this.PacketDelayData.best > r) && (this.PacketDelayData.best = r), (-1 == this.PacketDelayData.worst || this.PacketDelayData.worst < r) && (this.PacketDelayData.worst = r), this.PacketDelayData.sent > 5) {
                    this.PacketDelayData.loss = this.PacketDelayData.sent - this.PacketDelayData.receive, this.PacketDelayData.average = this.PacketDelayData.totalElapsedTime / this.PacketDelayData.sent, console.log("send SendPacketDelayData : ", JSON.stringify(this.PacketDelayData));
                    var a = Object.assign({}, this.PacketDelayData);
                    this.userClient.SendPacketDelayData(a), this.ResetPacketDelayData()
                }
                this.Ping()
            }
            ResetPacketDelayData() {
                this.PacketDelayData.sent = 0, this.PacketDelayData.receive = 0, this.PacketDelayData.loss = -1, this.PacketDelayData.best = -1, this.PacketDelayData.average = -1, this.PacketDelayData.worst = -1, this.PacketDelayData.totalElapsedTime = -1
            }
            PauseCollectLog() {
                window.clearTimeout(this.pingWebSocketTimerID), window.clearTimeout(this.sendLogTimerID)
            }
            DoLogout(e, t, o = 0) {
                return n(this, void 0, void 0, function*() {
                    try {
                        yield i.ClickLog.SendLogWhenDoLogout(), this.isLogin = !1, this.isLogoutNow = !0, this.jpSystem.OnJPStartSignal && this.jpSystem.OnJPStartSignal.remove(this.JPInit, this), this.jpSystem.OnJPFinishSignal && this.jpSystem.OnJPFinishSignal.remove(this.JPFinish, this), this.PauseCollectLog(), this.lobbySystem = null, this.jpSystem = null, this.userClient = null, this.loginModel.DoLogout(e, t, o)
                    } catch (n) {
                        console.error(n), null != t && (t(-999, n), t = null)
                    }
                })
            }
            getContactInfoNotLogin(e, t, o, n, i) {
                try {
                    this.loginModel && this.loginModel.Clear && this.loginModel.Clear(), this.loginModel = new SS.Network.LoginModel(e), this.loginModel.getContactInfoNotLogin(t, o, n, i)
                } catch (s) {
                    console.error(s)
                }
            }
            sendDirectClickLog(e, t, o, n, i, s) {
                try {
                    this.loginModel && this.loginModel.Clear && this.loginModel.Clear(), this.loginModel = new SS.Network.LoginModel(e), this.loginModel.sendDirectClickLog(t, o, n, i, s, SS.Common.GameEnvironment.DeviceInfo), console.log("[sendDirectClickLog]", ", click_id: " + t + ", btn_click_id: " + o.toString() + ", click_name: " + n + ", device_id: " + i + ", logo: " + s.toString())
                } catch (r) {
                    console.error(r)
                }
            }
            SendGameLoginLog() {
                let e = SS.Common.GameEnvironment.GetGameIdByName(SS.Common.GameEnvironment.CurrentGameNow);
                console.log("SendGameLoginLog \u9032\u5165\u904a\u6232 gamdId = " + e + ", CurrentGameNow = " + SS.Common.GameEnvironment.CurrentGameNow), "" != e && s.Instance.GetLobbySystem.SendSessionLengthLogin(Number(e))
            }
            SendGameLogoutLog(e = null) {
                let t = SS.Common.GameEnvironment.GetGameIdByName(SS.Common.GameEnvironment.CurrentGameNow);
                console.log("SendGameLogoutLog \u96e2\u958b\u904a\u6232 gamdId = " + t + ", CurrentGameNow = " + SS.Common.GameEnvironment.CurrentGameNow), "" != t && s.Instance.GetLobbySystem.SendSessionLengthLogout(Number(t), e)
            }
        }
        o.LobbyClient = s, s.m_arrJsonSpinTypeLog = [], cc._RF.pop()
    }, {
        "./ClickLog": "ClickLog"
    }],
    LobbyCommon: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "97cabOsz35C7qGABGBppWq5", "LobbyCommon");
        var n, i = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            s = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.LobbyCommon = void 0;
        const r = e("./DisableMultiTapHandler"),
            a = e("./Helper/Download"),
            l = e("./Helper/EventSystem"),
            c = e("./Helper/Setting"),
            h = e("./PopupMessage/Script/PopupMsgMgr"),
            {
                ccclass: m,
                property: u
            } = cc._decorator;
        let d = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.OriWidth = 1280, this.OriHeight = 720, this.root = null, this.waitForSecOrginFunc = null
            }
            onLoad() {
                if (null != n.Instance) return cc.game.removePersistRootNode(this.node), void this.node.destroy();
                n.Instance = this, cc.game.addPersistRootNode(this.node), cc.director.on(cc.Director.EVENT_AFTER_SCENE_LAUNCH, () => {
                    let e = cc.find("Canvas"),
                        t = null;
                    if (e && (t = e.getComponent(cc.Canvas)), t) {
                        let e = t.designResolution.width / this.OriWidth,
                            o = t.designResolution.height / this.OriHeight;
                        this.node.setScale(cc.v2(e, o))
                    }
                }), cc.view.resizeWithBrowserSize(!0), cc.view.setDesignResolutionSize(this.OriWidth, this.OriHeight, cc.ResolutionPolicy.SHOW_ALL), this.addComponent(r.DisableMultiTapHandler), this.schedule(() => {
                    cc.sys.garbageCollect()
                }, 30, cc.macro.REPEAT_FOREVER)
            }
            InitWaitForSeconds() {
                "playwinmobi" != window.gd_nowLOGO && (this.waitForSecOrginFunc || (this.waitForSecOrginFunc = SS.Common.WaitForSeconds), SS.Common.WaitForSeconds = this.NewWaitForSecond.bind(this))
            }
            NewWaitForSecond(e) {
                return new Promise(t => {
                    this.scheduleOnce(t, e)
                })
            }
            InitAfterModuleDownload() {
                return s(this, void 0, void 0, function*() {
                    this.InitWaitForSeconds();
                    let e = c.default.GetSetting("LobbyCommon").Module;
                    for (let o of e) {
                        let e = null;
                        (e = "" !== SS.Common.GameEnvironment.CurrentGameNow && SS.Common.GameEnvironment.GetCurGameIsVertical() ? yield a.Download.VerticalPrefab(o): yield a.Download.Prefab(o)) ? cc.instantiate(e).parent = this.root: h.PopupMsgMgr.Instance.ShowPopMsg(h.PopupPriority.Critical, "C73-1", "Initialize", "Download Bundle(" + o + ") failed!")
                    }
                    let t = l.EventSystem.Event(l.ModuleState.OnLoad).Length;
                    for (l.EventSystem.Event(l.ModuleState.OnLoad).Notify(() => {
                            t--
                        }); 0 !== t;) yield SS.Common.WaitForSeconds(.25)
                })
            }
            onDestroy() {
                this.unscheduleAllCallbacks(), this.waitForSecOrginFunc && (SS.Common.WaitForSeconds = this.waitForSecOrginFunc), this.waitForSecOrginFunc = null, n.Instance && this.node == n.Instance.node && (n.Instance = null)
            }
            setMaskRotation(e) {}
            UpdateResolution(e) {
                return s(this, void 0, void 0, function*() {})
            }
        };
        d.Instance = null, i([u(cc.Integer)], d.prototype, "OriWidth", void 0), i([u(cc.Integer)], d.prototype, "OriHeight", void 0), i([u(cc.Node)], d.prototype, "root", void 0), d = n = i([m], d), o.LobbyCommon = d, cc._RF.pop()
    }, {
        "./DisableMultiTapHandler": "DisableMultiTapHandler",
        "./Helper/Download": "Download",
        "./Helper/EventSystem": "EventSystem",
        "./Helper/Setting": "Setting",
        "./PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr"
    }],
    LobbyMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "ef8233eoxRMabMnIr6egqJX", "LobbyMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.LobbyMgr = void 0;
        const s = e("../LobbyCommon/TopBar/Script/TopbarMgr"),
            r = e("../Component/JackpotWinner/Script/JackpotWinnerMgr"),
            a = e("../Component/GameIconMgr/Script/GameIconMgr"),
            l = e("../Component/GameTypeMgr/Script/GameTypeMgr"),
            c = e("../LobbyCommon/Component/StateMachine/SSStateMachine"),
            h = e("./LobbyState/WaitInitAckState"),
            m = e("./LobbyState/WaitSettingState"),
            u = e("./LobbyState/WaitIconDownload"),
            d = e("./LobbyState/IdleState"),
            p = e("./LobbyState/WaitCheckVersionState"),
            g = e("../LobbyCommon/Net/LobbyClient"),
            _ = e("../Component/SkillGameMgr/Script/SkillGameMgr"),
            S = e("../Component/VerticalHint/Script/VerticalHintMgr"),
            y = e("./LobbyState/WaitResDownload"),
            C = e("../LobbyCommon/SwitchGame/SwitchGameGroup"),
            f = e("../Component/BannerMgr/Scripts/BannerMgr"),
            v = e("../LobbyCommon/WebViewMgr/WebViewUIGroup"),
            P = e("../LobbyCommon/PopUpMgr/Scripts/PopUpMgr"),
            b = e("../Component/PhoneGetBonusMgr/Scripts/GetBonusMgr"),
            w = e("../LobbyCommon/Component/AudioMgr"),
            I = e("../LobbyCommon/Loading/Script/LoadingMgr"),
            E = e("../LobbyCommon/InGameJp/Script/GameJpMgr"),
            L = e("../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            D = e("./LobbyBeginnerMgr"),
            M = e("../Component/SessionIconArea/Script/SessionIconArea"),
            T = e("../LobbyCommon/Helper/EventSystem"),
            R = e("../LobbyCommon/Helper/Download"),
            k = e("../LobbyCommon/Helper/Setting"),
            B = e("../LobbyCommon/Helper/LayerSystem"),
            A = e("../LobbyCommon/Component/GlobalData"),
            N = e("../LobbyCommon/Skin/Skin"),
            O = e("../Component/AutoLogoutBtn/Scripts/AutoLogoutBtn"),
            {
                ccclass: G,
                property: F
            } = cc._decorator;
        var x;
        (function(e) {
            e[e.PC_landscape = 0] = "PC_landscape", e[e.PC_any = 1] = "PC_any", e[e.Android_landscape = 2] = "Android_landscape", e[e.Android_any = 3] = "Android_any"
        })(x || (x = {}));
        let U = class extends cc.Component {
            constructor() {
                super(...arguments), this.topBarMgr = null, this.jackpotWinnerMgr = null, this.gameIconMgr = null, this.SessionIconArea = null, this.gameTypeMgr = null, this.skillGameMgr = null, this.bannerMgr = null, this.popUpMgr = null, this.verticalHintMgr = null, this.switchGame = null, this.webviewUiGroup = null, this.getBonusMgr = null, this.beginnerMgr = null, this.topBarRoot = null, this.downBarRoot = null, this.guestDownBarRoot = null, this.lobbyDefaultBg = null, this.lobbyBg = null, this.bgSpecialNode = null, this.fgSpecialNode = null, this.audioClips = [], this.audioClipsName = [], this.autoLogoutBtn = null, this.gameJpMgr = null, this.downBarMgr = null, this.bulletinBoardNode = null, this.profiledNode = null, this.sessionBonusNode = null, this.tmpNameMapIcon = {}, this.LobbyFSM = new c.default(this), this.WaitVersionCheckState = new p.WaitCheckVersionState, this.WaitSettingState = new m.WaitSettingState, this.WaitInitAckState = new h.WaitInitAckState, this.WaitResDownload = new y.WaitResDownload, this.WaitIconDownload = new u.WaitIconDownload, this.IdleState = new d.IdleState, this.isAllowReloadLobby = !0, this.isFirstRunLobby = !0, this.m_objJPData = null, this.m_arrEventBannerData = [], this._initFinish = !1
            }
            onLoad() {
                A.GlobalData.LoadLobbySceneTimeOutID && -1 != A.GlobalData.LoadLobbySceneTimeOutID && (clearTimeout(A.GlobalData.LoadLobbySceneTimeOutID), A.GlobalData.LoadLobbySceneTimeOutID = -1), this.Init()
            }
            Init() {
                return i(this, void 0, void 0, function*() {
                    yield k.default.CheckInit(), B.default.Init(), B.default.RegisterLayer("LobbyMgr", this.node), cc.sys.garbageCollect(), yield this.DownloadModule(), this.topBarMgr && this.topBarMgr._onLoad(), this.jackpotWinnerMgr._onLoad(), this.gameTypeMgr._onLoad(), this.gameIconMgr._onLoad(), this.popUpMgr._onLoad(), null == E.GameJpMgr.Instance ? this.gameJpMgr = new E.GameJpMgr : this.gameJpMgr = E.GameJpMgr.Instance, this.gameJpMgr._onLoad(), T.EventSystem.Event(T.DownBar.SetPlayerInfo).Insert(this.SetPlayerInfo, this), T.EventSystem.RegisterFunction(T.DownBar.GetPlayerEntries, () => this.UserEntries), T.EventSystem.RegisterFunction(T.DownBar.GetPlayerWinnings, () => this.UserWinnings);
                    let e = T.EventSystem.Event(T.ModuleState.OnLoad).Length;
                    0 === e && (this._initFinish = !0), T.EventSystem.Event(T.ModuleState.OnLoad).Notify(() => {
                        0 == --e && (this._initFinish = !0)
                    })
                })
            }
            DownloadModule() {
                return i(this, void 0, void 0, function*() {
                    for (let o of k.default.GetSetting("LobbyMgr").Module) {
                        console.log("[LobbyMgr] Module(" + o + ") downloading!");
                        let e = yield R.Download.Prefab(o);
                        null === e && (console.error("[LobbyMgr] Module(" + o + ") download failed!"), L.PopupMsgMgr.Instance.ShowPopMsg(L.PopupPriority.Critical, "C73", "Lobby", "Module(" + o + ") download failed!"));
                        let t = cc.instantiate(e);
                        null !== t && (t.parent = this.node, B.default.SetParent(t, o))
                    }
                    console.log("[LobbyMgr] DownloadModule!"), yield N.default.Instance.Init();
                    let e = N.default.Instance.GetLoadList("LobbyMgr"),
                        t = {
                            BuyBonusFlag: e => {
                                e.parent = cc.director.getScene().getChildByName("LoadResNode")
                            }
                        };
                    yield N.default.Instance.Download(t, e)
                })
            }
            start() {
                return i(this, void 0, void 0, function*() {
                    for (; !this._initFinish;) yield SS.Common.WaitForSeconds(.5);
                    "" != SS.Common.GameEnvironment.ChangeToGameName && cc.Camera.cameras.length > 0 && null != cc.Camera.cameras[0] && (cc.Camera.cameras[0].node.active = !1), "" == SS.Common.GameEnvironment.ChangeToGameName && SS.Common.GameEnvironment.Splash && (SS.Common.GameEnvironment.Splash.style.display = "none"), this.topBarMgr && this.topBarMgr._start(), this.gameIconMgr._start(), this.popUpMgr._start(), this.bannerMgr._start(), this.bannerMgr.SetBannerFeature(this.switchGame.OnSwitchGameIgnoreWindow.bind(this.switchGame), this.webviewUiGroup.OpenWebView.bind(this.webviewUiGroup)), this.popUpMgr.SetPopupFeature(this.switchGame.OnSwitchGameIgnoreWindow.bind(this.switchGame), this.webviewUiGroup.OpenWebView.bind(this.webviewUiGroup)), this.gameIconMgr && this.topBarMgr && this.topBarMgr.m_DelClickLogout.Insert(this.gameIconMgr.ClearScrollPositionData, this.gameIconMgr), this.gameTypeMgr.m_DelClickGameType && this.gameTypeMgr.m_DelClickGameType.Insert(this.gameIconMgr.RecordCurrentGameTypePos, this.gameIconMgr), this.isFirstRunLobby && (this.isFirstRunLobby = !1, this.LobbyFSM.SetCurrentState(this.WaitVersionCheckState)), this.IdleState.showVerticalHint = this.verticalHintMgr.show.bind(this.verticalHintMgr), T.EventSystem.Event(T.ModuleState.Start).Notify()
                })
            }
            update() {
                this.LobbyFSM.SMUpdate()
            }
            SaveJpVal(e, t, o, n, i = !1) {
                this.m_objJPData = {
                    grand: e,
                    major: t,
                    minor: o,
                    mini: n,
                    forceUpdate: i
                }
            }
            SetTopbar(e) {
                this.topBarMgr = e.getComponent(s.TopbarMgr), this.topBarMgr._onLoad(), this.topBarMgr._start(), this.gameIconMgr && this.topBarMgr.m_DelClickLogout.Insert(this.gameIconMgr.ClearScrollPositionData, this.gameIconMgr), this.m_objJPData && this.topBarMgr.ChangeJPVal(this.m_objJPData.grand, this.m_objJPData.major, this.m_objJPData.minor, this.m_objJPData.mini, this.m_objJPData.forceUpdate)
            }
            SetDownbarEvent() {
                this.downBarMgr.bannerRoot && (this.bannerMgr.node.parent = this.downBarMgr.bannerRoot, this.bannerMgr.node.position = new cc.Vec3(-this.downBarMgr.node.position.x, -this.downBarMgr.node.position.y))
            }
            ReloadLobby() {
                if (this.isAllowReloadLobby && self == top) {
                    w.AudioMgr.Instance.UncacheAudioClip();
                    let e = SS.Common.GameEnvironment.Language + "Lobby";
                    null === cc.assetManager.bundles.find(function(t) {
                        return t._config.getSceneInfo(e)
                    }) && (e = "Lobby"), cc.director.getScene().name == e || "Game" == cc.director.getScene().name || "Game_Vertical" == cc.director.getScene().name ? g.LobbyClient.Instance.IsSocketConnect() ? (I.LoadingMgr.Instance.OpenLoading(), cc.director.loadScene(e)) : location.replace(this.GetIndexURL()) : cc.director.loadScene("ReleaseScene")
                }
            }
            SetIsAllowReloadLobby(e) {
                this.isAllowReloadLobby = e
            }
            onDestroy() {
                T.EventSystem.Event(T.DownBar.SetPlayerInfo).Remove(this.SetPlayerInfo, this), T.EventSystem.UnregisterFunction(T.DownBar.GetPlayerEntries), T.EventSystem.UnregisterFunction(T.DownBar.GetPlayerWinnings), null != this.gameIconMgr && this.gameIconMgr._onDestroy(), null != this.popUpMgr && this.popUpMgr._onDestroy(), null != this.jackpotWinnerMgr && this.jackpotWinnerMgr._onDestroy(), null != this.gameTypeMgr && this.gameTypeMgr._onDestroy(), null != this.bannerMgr && this.bannerMgr._onDestroy(), null != this.WaitIconDownload && this.WaitIconDownload.UnLoadIcon(), this.IdleState.tmpRepeatingMissionMgr && this.IdleState.tmpRepeatingMissionMgr.m_MissionListCtrl && this.IdleState.tmpRepeatingMissionMgr.m_MissionListCtrl.ClearRes(), this.IdleState.RemoveListenModuleEvent(), this.tmpNameMapIcon = null, this.tmpTypeMapGameNameList = null, g.LobbyClient.Instance.GetJPSystem && g.LobbyClient.Instance.GetJPSystem.OnChangeJpValCmdSignal && g.LobbyClient.Instance.GetJPSystem.OnChangeJpValCmdSignal.removeAll(), g.LobbyClient.Instance.GetLobbySystem && g.LobbyClient.Instance.GetLobbySystem.OnUpdateSignal && g.LobbyClient.Instance.GetLobbySystem.OnUpdateSignal.removeAll(), this.lobbyBg && this.lobbyBg.spriteFrame && this.lobbyBg.spriteFrame.decRef();
                let e = this.audioClipsName.findIndex(e => "LobbyMusic" == e);
                e > -1 && this.audioClips[e].decRef(), this.audioClipsName = null, this.audioClips = null
            }
            GetIndexURL() {
                let e = "",
                    t = "",
                    o = SS.Common.BaseFunction.GetURLParameterByName("KioskDEV");
                return SS.Common.BaseFunction.GetURLParameterByName("standalone") && (o ? (e = "index.html", t = ",standalone=true") : (e = "index_ni.html", t = "?standalone=true")), o ? "../../../" + e + "/?KioskDEV=" + o + t : "../../../" + e + t
            }
            get IsFirstLogin() {
                return this.CheckCookieValue("login_clicked", "1")
            }
            CheckCookieValue(e, t) {
                let o = "";
                return JSUtility.IsSupportLocalStorage() ? o = localStorage.getItem(e) : JSUtility.IsSupportCookie() && (o = JSUtility.GetCookie(e)), console.log("[cookie] ", e, " = ", o), null != o && o == t
            }
            SetCookieValue(e, t) {
                JSUtility.IsSupportLocalStorage() ? localStorage.setItem(e, t) : JSUtility.IsSupportCookie() && (document.cookie = e + "=" + t + ";")
            }
            SetPlayerInfo(e, t, o = null) {
                this.UserEntries = e, this.UserWinnings = t, null !== o && (this.UserCredits = o)
            }
        };
        n([F(s.TopbarMgr)], U.prototype, "topBarMgr", void 0), n([F(r.JackpotWinnerMgr)], U.prototype, "jackpotWinnerMgr", void 0), n([F(a.GameIconMgr)], U.prototype, "gameIconMgr", void 0), n([F(M.SessionIconArea)], U.prototype, "SessionIconArea", void 0), n([F(l.GameTypeMgr)], U.prototype, "gameTypeMgr", void 0), n([F(_.SkillGameMgr)], U.prototype, "skillGameMgr", void 0), n([F(f.BannerMgr)], U.prototype, "bannerMgr", void 0), n([F(P.PopUpMgr)], U.prototype, "popUpMgr", void 0), n([F(S.VerticalHintMgr)], U.prototype, "verticalHintMgr", void 0), n([F(C.SwitchGameGroup)], U.prototype, "switchGame", void 0), n([F(v.WebViewUIGroup)], U.prototype, "webviewUiGroup", void 0), n([F(b.GetBonusMgr)], U.prototype, "getBonusMgr", void 0), n([F(D.default)], U.prototype, "beginnerMgr", void 0), n([F(cc.Node)], U.prototype, "topBarRoot", void 0), n([F(cc.Node)], U.prototype, "downBarRoot", void 0), n([F(cc.Node)], U.prototype, "guestDownBarRoot", void 0), n([F(cc.Node)], U.prototype, "lobbyDefaultBg", void 0), n([F(cc.Sprite)], U.prototype, "lobbyBg", void 0), n([F(cc.Node)], U.prototype, "bgSpecialNode", void 0), n([F(cc.Node)], U.prototype, "fgSpecialNode", void 0), n([F([cc.AudioClip])], U.prototype, "audioClips", void 0), n([F([cc.String])], U.prototype, "audioClipsName", void 0), n([F(O.default)], U.prototype, "autoLogoutBtn", void 0), U = n([G], U), o.LobbyMgr = U, cc._RF.pop()
    }, {
        "../Component/AutoLogoutBtn/Scripts/AutoLogoutBtn": "AutoLogoutBtn",
        "../Component/BannerMgr/Scripts/BannerMgr": "BannerMgr",
        "../Component/GameIconMgr/Script/GameIconMgr": "GameIconMgr",
        "../Component/GameTypeMgr/Script/GameTypeMgr": "GameTypeMgr",
        "../Component/JackpotWinner/Script/JackpotWinnerMgr": "JackpotWinnerMgr",
        "../Component/PhoneGetBonusMgr/Scripts/GetBonusMgr": "GetBonusMgr",
        "../Component/SessionIconArea/Script/SessionIconArea": "SessionIconArea",
        "../Component/SkillGameMgr/Script/SkillGameMgr": "SkillGameMgr",
        "../Component/VerticalHint/Script/VerticalHintMgr": "VerticalHintMgr",
        "../LobbyCommon/Component/AudioMgr": "AudioMgr",
        "../LobbyCommon/Component/GlobalData": "GlobalData",
        "../LobbyCommon/Component/StateMachine/SSStateMachine": "SSStateMachine",
        "../LobbyCommon/Helper/Download": "Download",
        "../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../LobbyCommon/Helper/LayerSystem": "LayerSystem",
        "../LobbyCommon/Helper/Setting": "Setting",
        "../LobbyCommon/InGameJp/Script/GameJpMgr": "GameJpMgr",
        "../LobbyCommon/Loading/Script/LoadingMgr": "LoadingMgr",
        "../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../LobbyCommon/PopUpMgr/Scripts/PopUpMgr": "PopUpMgr",
        "../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../LobbyCommon/Skin/Skin": "Skin",
        "../LobbyCommon/SwitchGame/SwitchGameGroup": "SwitchGameGroup",
        "../LobbyCommon/TopBar/Script/TopbarMgr": "TopbarMgr",
        "../LobbyCommon/WebViewMgr/WebViewUIGroup": "WebViewUIGroup",
        "./LobbyBeginnerMgr": "LobbyBeginnerMgr",
        "./LobbyState/IdleState": "IdleState",
        "./LobbyState/WaitCheckVersionState": "WaitCheckVersionState",
        "./LobbyState/WaitIconDownload": "WaitIconDownload",
        "./LobbyState/WaitInitAckState": "WaitInitAckState",
        "./LobbyState/WaitResDownload": "WaitResDownload",
        "./LobbyState/WaitSettingState": "WaitSettingState"
    }],
    LobbyObjectSetting: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "6513cqcOuFABoPLaiNOrRbt", "LobbyObjectSetting");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class {
            constructor() {
                this.setPos = !1, this.position = cc.v2(), this.setScale = !1, this.scale = cc.v2(1, 1), this.setSize = !1, this.size = new cc.Size(0, 0), this.setAsScreenSize = !1
            }
        };
        n([s({
            displayName: "Set Position"
        })], r.prototype, "setPos", void 0), n([s({
            displayName: "Position",
            visible: function() {
                return this.setPos
            }
        })], r.prototype, "position", void 0), n([s({
            displayName: "Set Scale"
        })], r.prototype, "setScale", void 0), n([s({
            displayName: "Scale",
            visible: function() {
                return this.setScale
            }
        })], r.prototype, "scale", void 0), n([s({
            displayName: "Set Size"
        })], r.prototype, "setSize", void 0), n([s({
            displayName: "Size",
            visible: function() {
                return this.setSize
            }
        })], r.prototype, "size", void 0), n([s({
            displayName: "Set as ScreenSize"
        })], r.prototype, "setAsScreenSize", void 0), r = n([i("LobbyObjectSetting")], r), o.default = r, cc._RF.pop()
    }, {}],
    LobbySceneReader: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "ce7e1RnifNPtK61kDGFmaZv", "LobbySceneReader");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const s = e("../Component/DownBar/Script/DownBarMgr"),
            r = e("../LobbyCommon/Component/BundleCtrl"),
            a = e("../LobbyCommon/GuestSystem/Script/GuestSysMgr"),
            l = e("../LobbyCommon/Net/Downloader/VersionDownloader"),
            c = e("../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            {
                ccclass: h,
                property: m
            } = cc._decorator;
        let u = class {
            constructor() {
                this.target = null, this.isDownloadDownBar = !1, this.isDownloadGuestDownBar = !1, this.isDownloadTopBar = !1, this.isDownloadedBg = !1, this.isDownloadedDefaultBanner = !1, this.isDownloadedLobbyMusic = !1, this.isDownloadedIconMaskBg = !1, this.isDownloadedSpecialShowBundle = !1, this.downbarLoadedcallback = null, this.allFinishCallback = null
            }
            StartDownload(e, t, o) {
                this.target = e, this.downbarLoadedcallback = t, this.allFinishCallback = o, this.CheckLobbyScene()
            }
            CheckLobbyScene() {
                return i(this, void 0, void 0, function*() {
                    let e = null;
                    yield this.DownloadLobbySceneVersion().then(t => {
                        e = t
                    }).catch(() => {
                        e = null
                    }), this.target.topBarMgr && (this.isDownloadTopBar = !0), console.log("%c CheckLobbyScene() - Version Setting", "font-size:14px;color:#00c957;font-weight:bold;", e);
                    let t = !1;
                    if (e) {
                        let o = e.Style;
                        if (o.length > 0) {
                            t = !0;
                            let n = "";
                            for (n = SS.Common.GameEnvironment.ProjectSetting.CDN_HOST ? window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.CDN_HOST + "/" : window.location.origin + "/", n += "LobbyScene/" + o + "/", e.hasOwnProperty("DownBar") && e.DownBar.length > 0 ? this.DownloadDownbar(n + e.DownBar) : this.DownloadDownbar(), this.CheckDownloadGuestDownbar(); !this.isDownloadDownBar;) yield SS.Common.WaitForSeconds(.02);
                            for (this.target.topBarMgr || (e.hasOwnProperty("TopBar") && e.TopBar.length > 0 ? this.DownloadTopbar(n + e.TopBar) : this.DownloadTopbar()); !this.isDownloadTopBar;) yield SS.Common.WaitForSeconds(.02);
                            null != this.target.lobbyBg && e.hasOwnProperty("LobbyBg") && e.LobbyBg.length > 0 ? this.DownloadLobbyBg(n + e.LobbyBg) : this.DownloadLobbyBg(), e.hasOwnProperty("DefaultBanner") && e.DefaultBanner.length > 0 ? this.DownloadDefaultBanner(n + e.DefaultBanner) : this.DownloadDefaultBanner(), e.hasOwnProperty("IconMaskBg") ? this.DownloadIconMaskBg(n + e.IconMaskBg) : this.DownloadIconMaskBg(), e.hasOwnProperty("Special") && Object.keys(e.Special).length > 0 ? this.DownloadSpecialShowBundle(n, e.Special) : this.DownloadSpecialShowBundle(n, null), e.hasOwnProperty("Music") ? this.DownloadLobbyMusic(n, e.Music) : this.DownloadLobbyMusic(n, null), console.log("%c CheckLobbyScene() - End", "font-size:14px;color:#00c957;font-weight:bold;")
                        }
                    }
                    if (!t) {
                        for (this.DownloadDownbar(), this.CheckDownloadGuestDownbar(); !this.isDownloadDownBar;) yield SS.Common.WaitForSeconds(.02);
                        this.target.topBarMgr || this.DownloadTopbar(), this.DownloadLobbyBg(), this.DownloadDefaultBanner(), this.DownloadIconMaskBg(), this.DownloadSpecialShowBundle("", null), this.DownloadLobbyMusic("", null), console.log("%c CheckLobbyScene() - End(No Download)", "font-size:14px;color:#00c957;font-weight:bold;")
                    }
                    let o = !1;
                    for (; !o;) yield SS.Common.WaitForSeconds(.1), o = this.isDownloadTopBar && this.isDownloadDownBar && this.isDownloadGuestDownBar && this.isDownloadedBg && this.isDownloadedDefaultBanner && this.isDownloadedIconMaskBg && this.isDownloadedSpecialShowBundle && this.isDownloadedLobbyMusic;
                    this.allFinishCallback && this.allFinishCallback()
                })
            }
            DownloadLobbySceneVersion() {
                return i(this, void 0, void 0, function*() {
                    return new Promise((e, t) => {
                        (new l.VersionDownloader).Start(SS.Common.GameEnvironment.S3URL + "/LobbyScene/", o => {
                            try {
                                e(o)
                            } catch (n) {
                                t(n)
                            }
                        }, e => {
                            t(e)
                        })
                    })
                })
            }
            DownloadLobbyBg(e = null) {
                e ? cc.assetManager.loadRemote(e, this.OnDownloadedLobbyBgEnd.bind(this)) : (e = "Res/" + window.gd_nowLOGO + "/LobbyBg/Texture/bg", cc.loader.loadRes(e, this.OnDownloadedLobbyBgEnd.bind(this))), console.info("[DownloadLobbyBg] path = ", e)
            }
            OnDownloadedLobbyBgEnd(e, t) {
                e ? this.isDownloadedBg = !0 : (this.target.lobbyBg.spriteFrame = new cc.SpriteFrame(t), this.target.lobbyBg.spriteFrame.addRef(), this.target.lobbyDefaultBg && (this.target.lobbyDefaultBg.active = !1), this.isDownloadedBg = !0)
            }
            DownloadDefaultBanner(e = null) {
                e ? cc.assetManager.loadRemote(e, this.OnDownloadedDefaultBanner.bind(this)) : (e = "Res/" + window.gd_nowLOGO + "/Banner/default", cc.loader.loadRes(e, this.OnDownloadedDefaultBanner.bind(this))), console.info("[DownloadDefaultBanner] path = ", e)
            }
            OnDownloadedDefaultBanner(e, t) {
                e ? this.isDownloadedDefaultBanner = !0 : (this.target.bannerMgr.SetDefaultBanner(new cc.SpriteFrame(t)), this.isDownloadedDefaultBanner = !0)
            }
            DownloadIconMaskBg(e = null) {
                e && e.length > 0 ? cc.assetManager.loadRemote(e, this.OnDownloadedIconMaskBg.bind(this)) : this.isDownloadedIconMaskBg = !0, console.info("[DownloadIconMaskBg] path = ", e)
            }
            OnDownloadedIconMaskBg(e, t) {
                e ? this.isDownloadedIconMaskBg = !0 : (this.target.gameTypeMgr.SetDarkMaskSprite(new cc.SpriteFrame(t)), this.isDownloadedIconMaskBg = !0)
            }
            DownloadSpecialShowBundle(e, t) {
                if (t) {
                    let o = t.bundleName,
                        n = t.bgPrefabName,
                        i = t.fgPrefabName;
                    o.length > 0 && (n.length > 0 || i.length > 0) ? (o = e + o, r.default.Instance.DownloadBundle(o).catch(() => {
                        this.isDownloadedSpecialShowBundle = !0
                    }).then(e => {
                        n.length > 0 && e.load(n, cc.Prefab, (e, t) => {
                            e || (cc.instantiate(t).parent = this.target.bgSpecialNode)
                        }), i.length > 0 && e.load(i, cc.Prefab, (e, t) => {
                            e || (cc.instantiate(t).parent = this.target.fgSpecialNode)
                        }), this.isDownloadedSpecialShowBundle = !0
                    })) : this.isDownloadedSpecialShowBundle = !0
                } else this.isDownloadedSpecialShowBundle = !0;
                console.info("[DownloadSpecialShowBundle] setting = ", t)
            }
            DownloadLobbyMusic(e, t) {
                if (t && t.length > 0) {
                    let o = e + t[Math.floor(Math.random() * t.length)];
                    cc.assetManager.loadRemote(o, this.OnDownloadLobbyMusic.bind(this))
                } else this.isDownloadedLobbyMusic = !0;
                console.info("[DownloadLobbyMusic] musicAry = ", t)
            }
            OnDownloadLobbyMusic(e, t) {
                if (e) return void(this.isDownloadedLobbyMusic = !0);
                let o = this.target.audioClipsName.findIndex(e => "LobbyMusic" == e);
                o > -1 && (this.target.audioClips[o] = t, this.target.audioClips[o].addRef()), this.isDownloadedLobbyMusic = !0, console.info("[DownloadLobbyMusic] Downloaded = ", t)
            }
            DownloadDownbar(e = null) {
                if (e) r.default.Instance.DownloadBundle(e).catch(() => {
                    this.DownloadDownbar()
                }).then(e => {
                    null != e && null != e && e.load("Prefab/DownBarMgr", cc.Prefab, (e, t) => {
                        e ? this.DownloadDownbar() : this.CreateDownbar(t)
                    })
                });
                else {
                    e = "Res/" + window.gd_nowLOGO + "/DownBar/Prefab/DownBarMgr";
                    let t = this;
                    cc.loader.loadRes(e, (e, o) => {
                        e ? c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Error, "C52", "", "Downbar Download Error") : t.CreateDownbar(o)
                    })
                }
                console.info("[Download Downbar] path = ", e)
            }
            CreateDownbar(e) {
                let t = cc.instantiate(e);
                t.parent = this.target.downBarRoot, this.target.downBarMgr = t.getComponent(s.DownBarMgr), this.target.SetDownbarEvent(), this.isDownloadDownBar = !0, this.downbarLoadedcallback && this.downbarLoadedcallback()
            }
            CheckDownloadGuestDownbar() {
                null != this.target.guestDownBarRoot && null != a.default.getInstance() && 1 == a.default.getInstance().isGuestLogin() ? this.DownloadGuestDownbar() : this.isDownloadGuestDownBar = !0
            }
            DownloadGuestDownbar(e = null) {
                let t = "Res/" + window.gd_nowLOGO + "/Guest/Prefab/GuestLobbyUiMgr",
                    o = this;
                console.log("[Download Guest Downbar] Path = " + t), cc.loader.loadRes(t, (t, n) => {
                    if (t) return void c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Error, "C53", "", "Downbar Guest Download Error");
                    let i = cc.instantiate(n);
                    o.target.guestDownBarRoot ? i.parent = o.target.guestDownBarRoot : i.parent = o.target.downBarRoot, o.isDownloadGuestDownBar = !0, null != e && e()
                })
            }
            DownloadTopbar(e = null) {
                if (e) r.default.Instance.DownloadBundle(e).catch(() => {
                    this.DownloadTopbar()
                }).then(e => {
                    null != e && null != e && e.load("Prefab/TopbarMgr", cc.Prefab, (e, t) => {
                        e ? this.DownloadTopbar() : this.CreateTopbar(t)
                    })
                });
                else {
                    e = "Res/" + window.gd_nowLOGO + "/TopBar/Prefab/DefaultTopbarMgr";
                    let t = this;
                    cc.loader.loadRes(e, (e, o) => {
                        if (e) return console.error(e), void c.PopupMsgMgr.Instance.ShowPopMsg(c.PopupPriority.Error, "C58", "", "Topbar Download Error");
                        t.CreateTopbar(o)
                    })
                }
                console.info("[DownloadTopbar] path = ", e)
            }
            CreateTopbar(e) {
                let t = cc.instantiate(e);
                console.warn("[CreateTopbar] ", t), this.target.topBarRoot ? t.parent = this.target.topBarRoot : t.parent = this.target.downBarRoot.parent, this.target.SetTopbar(t), this.isDownloadTopBar = !0
            }
        };
        u = n([h], u), o.default = u, cc._RF.pop()
    }, {
        "../Component/DownBar/Script/DownBarMgr": "DownBarMgr",
        "../LobbyCommon/Component/BundleCtrl": "BundleCtrl",
        "../LobbyCommon/GuestSystem/Script/GuestSysMgr": "GuestSysMgr",
        "../LobbyCommon/Net/Downloader/VersionDownloader": "VersionDownloader",
        "../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr"
    }],
    LobbyShipInfoMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "53d083lQ79OKr6pQBQJxg0t", "LobbyShipInfoMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("../../LobbyCommon/Component/AvatarIcon"),
            s = e("../../LobbyCommon/Component/NumberCountUp"),
            r = e("../../LobbyCommon/Helper/EventSystem"),
            a = e("../../LobbyCommon/Net/ClickLog"),
            l = e("../../LobbyCommon/Net/ClickLogEnum"),
            c = e("../../LobbyCommon/Net/LobbyClient"),
            {
                ccclass: h,
                property: m
            } = cc._decorator;
        var u;
        (function(e) {
            e[e.SUBMARINE_R = 0] = "SUBMARINE_R", e[e.SUBMARINE_G = 1] = "SUBMARINE_G", e[e.SUBMARINE_B = 2] = "SUBMARINE_B"
        })(u || (u = {}));
        let d = class {
            constructor() {
                this.Root = null, this.Type = u.SUBMARINE_R, this.Score = null, this.Profile = null, this.ArkID = ""
            }
        };
        n([m(cc.Node)], d.prototype, "Root", void 0), n([m({
            type: cc.Enum(u)
        })], d.prototype, "Type", void 0), n([m(s.NumberCountUp)], d.prototype, "Score", void 0), n([m(i.default)], d.prototype, "Profile", void 0), d = n([h("BattleShipInfo")], d);
        let p = class extends cc.Component {
            constructor() {
                super(...arguments), this.ShipInfoUI = [], this.Interval = 10, this.Time = 0, this.IsInitialize = !1, this.IsAlternate = !1, this.AlternateInterval = 5, this.AlternateTime = 0, this.CurrentIndex = 0, this.TempTargetScoreDic = null
            }
            start() {
                this.TempTargetScoreDic = new SS.Common.Dictionary, this.ShipInfoUI.forEach(e => {
                    e.Root.active = !1
                }), c.LobbyClient.Instance.GetJPSystem.OnRecvSubmarineInfoSignal.add(this.UpdateShipInfo, this), c.LobbyClient.Instance.GetLobbySystem.SendGameRequest("GetSubmarineInfo")
            }
            onDestroy() {
                this.TempTargetScoreDic && this.TempTargetScoreDic.clear(), c.LobbyClient.Instance.GetJPSystem && c.LobbyClient.Instance.GetJPSystem.OnRecvSubmarineInfoSignal.remove(this.UpdateShipInfo, this)
            }
            update(e) {
                this.Time += e, this.Time > this.Interval && (c.LobbyClient.Instance.GetLobbySystem && c.LobbyClient.Instance.GetLobbySystem.SendGameRequest("GetSubmarineInfo"), this.Time = 0), this.IsAlternate && this.IsInitialize && (this.AlternateTime += e, this.AlternateTime > this.AlternateInterval && (this.ShipInfoUI[this.CurrentIndex].Root.active = !1, this.CurrentIndex++, this.CurrentIndex = this.CurrentIndex >= this.ShipInfoUI.length ? 0 : this.CurrentIndex, this.ShipInfoUI[this.CurrentIndex].Root.active = !0, this.AlternateTime = 0))
            }
            UpdateShipInfo(e) {
                let t = 0;
                for (let o in e) {
                    t = Math.floor(e[o].accumulate_score) + Math.floor(e[o].total_get_score);
                    let n = !1;
                    this.TempTargetScoreDic.containsKey(e[o].submarine_name) ? (n = this.TempTargetScoreDic.getValue(e[o].submarine_name) == t) || this.TempTargetScoreDic.changeValueForKey(e[o].submarine_name, t) : this.TempTargetScoreDic.add(e[o].submarine_name, t);
                    let i = this.ShipInfoUI.find(t => u[t.Type] == e[o].submarine_name);
                    i && (n || (0 == t || t < i.Score.GetCurrentNumber || 0 == i.Score.GetCurrentNumber ? i.Score.SetNumberNow(t) : i.Score.CountUp(t, this.Interval)), i.Profile.SetNickname("" == e[o].nick_name ? "Unoccupied" : e[o].nick_name), i.Profile.SetFaceByID(e[o].equip_avatar), i.Profile.SetFrameByID(e[o].equip_avatar_frame), i.ArkID = e[o].ark_id)
                }
                this.Time = 0, this.IsInitialize || (this.IsAlternate ? this.ShipInfoUI[this.CurrentIndex].Root.active = !0 : this.ShipInfoUI.forEach(e => {
                    e.Root.active = !0
                }), this.IsInitialize = !0)
            }
            OpenPlayerProfile(e, t) {
                let o = this.ShipInfoUI.find(e => e.Type == t);
                if ("" == o.ArkID || null == o.ArkID) return;
                let n = o.ArkID == c.LobbyClient.Instance.GetUserClient.GetPinClient.ArkID;
                r.EventSystem.Event(r.Profile.OpenProfile).Notify(n, o.ArkID), a.ClickLog.recordClickLog(l.LogName.Profile, -1, n ? l.LogType_Profile.OpenPanel : l.LogType_Profile.OpenOthersPanel, n ? l.LogEvent_OpenPanel.InLobbyBattleShipIcon : l.LogEvent_OpenOthersPanel.InLobbyBattleShipIcon)
            }
        };
        n([m([d])], p.prototype, "ShipInfoUI", void 0), n([m({
            type: cc.Float,
            displayName: "\u767c\u9001\u5c01\u5305\u9593\u9694"
        })], p.prototype, "Interval", void 0), n([m({
            displayName: "\u662f\u5426\u8f2a\u64ad"
        })], p.prototype, "IsAlternate", void 0), n([m({
            type: cc.Integer,
            displayName: "\u8f2a\u64ad\u9593\u9694"
        })], p.prototype, "AlternateInterval", void 0), p = n([h], p), o.default = p, cc._RF.pop()
    }, {
        "../../LobbyCommon/Component/AvatarIcon": "AvatarIcon",
        "../../LobbyCommon/Component/NumberCountUp": "NumberCountUp",
        "../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../../LobbyCommon/Net/ClickLog": "ClickLog",
        "../../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum",
        "../../LobbyCommon/Net/LobbyClient": "LobbyClient"
    }],
    LockEffect: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "1bd5bLI1uhAb4BSpUWwTx50", "LockEffect");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.lockPivot = null, this.lockLight_0 = null, this.lockLight_1 = null, this.lockLight_2 = null, this.isEnabled = !1
            }
            start() {
                null != this.lockPivot && null != this.lockLight_0 && null != this.lockLight_1 && null != this.lockLight_2 ? (cc.tween(this.lockPivot).then(cc.tween().to(.3, {
                    angle: 25
                }, {
                    easing: "sineInOut"
                }).then(cc.tween().to(.3, {
                    angle: -10
                }, {
                    easing: "sineInOut"
                })).then(cc.tween().to(.3, {
                    angle: 15
                }, {
                    easing: "sineInOut"
                })).then(cc.tween().to(.3, {
                    angle: -5
                }, {
                    easing: "sineInOut"
                })).then(cc.tween().to(.2, {
                    angle: 0
                }, {
                    easing: "sineInOut"
                })).then(cc.tween().to(.8, {
                    angle: 0
                }, {
                    easing: "sineInOut"
                }))).repeatForever().start(), cc.tween(this.lockLight_0).then(cc.tween().to(1.3, {
                    opacity: 0
                }, {
                    easing: "sineInOut"
                }).then(cc.tween().to(.2, {
                    opacity: 255
                }, {
                    easing: "sineInOut"
                })).then(cc.tween().to(.2, {
                    opacity: 0
                }, {
                    easing: "sineInOut"
                })).then(cc.tween().to(.5, {
                    opacity: 0
                }, {
                    easing: "sineInOut"
                }))).repeatForever().start(), cc.tween(this.lockLight_1).then(cc.tween().to(1.5, {
                    opacity: 0
                }, {
                    easing: "sineInOut"
                }).then(cc.tween().to(.2, {
                    opacity: 255
                }, {
                    easing: "sineInOut"
                })).then(cc.tween().to(.2, {
                    opacity: 0
                }, {
                    easing: "sineInOut"
                })).then(cc.tween().to(.3, {
                    opacity: 0
                }, {
                    easing: "sineInOut"
                }))).repeatForever().start(), cc.tween(this.lockLight_2).then(cc.tween().to(1.7, {
                    opacity: 0
                }, {
                    easing: "sineInOut"
                }).then(cc.tween().to(.2, {
                    opacity: 255
                }, {
                    easing: "sineInOut"
                })).then(cc.tween().to(.2, {
                    opacity: 0
                }, {
                    easing: "sineInOut"
                })).then(cc.tween().to(.1, {
                    opacity: 0
                }, {
                    easing: "sineInOut"
                }))).repeatForever().start()) : this.isEnabled = !1
            }
        };
        n([s(cc.Node)], r.prototype, "lockPivot", void 0), n([s(cc.Node)], r.prototype, "lockLight_0", void 0), n([s(cc.Node)], r.prototype, "lockLight_1", void 0), n([s(cc.Node)], r.prototype, "lockLight_2", void 0), r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    LoginLanguageSwitch: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "fd0d99MoM1Js6zY34pkm6pQ", "LoginLanguageSwitch");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator, r = ["Remember me", "Recordar accesos"], a = ["Default  is Your Pin", "Contrase\xf1a original es su Pin"];
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.pwPlaceHolder = null, this.loginSpriteFrame = [], this.pwSpriteFrame = [], this.rememberPw = null, this.loginSprite = null, this.pwSprite = null
            }
            SetLanguage() {
                const e = "en" === SS.Common.GameEnvironment.Language ? 0 : 1;
                this.rememberPw.string = r[e], this.pwPlaceHolder.string = a[e], this.loginSprite.spriteFrame = this.loginSpriteFrame[e], this.pwSprite.spriteFrame = this.pwSpriteFrame[e]
            }
        };
        n([s(cc.Label)], l.prototype, "pwPlaceHolder", void 0), n([s([cc.SpriteFrame])], l.prototype, "loginSpriteFrame", void 0), n([s([cc.SpriteFrame])], l.prototype, "pwSpriteFrame", void 0), n([s(cc.Label)], l.prototype, "rememberPw", void 0), n([s(cc.Sprite)], l.prototype, "loginSprite", void 0), n([s(cc.Sprite)], l.prototype, "pwSprite", void 0), l = n([i], l), o.default = l, cc._RF.pop()
    }, {}],
    LoginMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "2c412EEZptOU7OgHAzhs0Am", "LoginMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.LoginMgr = void 0;
        const s = e("../LobbyCommon/Loading/Script/LoadingMgr"),
            r = e("../LobbyCommon/Connect/Script/ConnectPanelMgr"),
            a = e("../LobbyCommon/Net/LobbyClient"),
            l = e("../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            c = (e("../LobbyCommon/Component/GlobalData"), e("../LobbyCommon/SwipeMgr/Scripts/Device")),
            h = e("../LobbyCommon/GuestSystem/Script/GuestSysMgr"),
            m = e("../LobbyCommon/GuestSystem/Script/GuestLoginUiMgr"),
            u = e("../LobbyCommon/EditPassword/Script/EditPassword"),
            d = e("../LobbyCommon/Helper/EventSystem"),
            p = e("../LobbyCommon/Helper/LayerSystem"),
            g = e("../LobbyCommon/Define/CustomConfig"),
            _ = e("../LobbyCommon/Helper/Download"),
            S = e("../LobbyCommon/Component/GifRender"),
            y = e("./LoginLanguageSwitch"),
            {
                ccclass: C,
                property: f
            } = cc._decorator;
        let v = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_EBUser_ID = null, this.m_LBPromptUser_ID = null, this.m_EBUser_PW = null, this.m_LBPromptUser_PW = null, this.m_ToggleRememberMe = null, this.m_BtnOK = null, this.editPassword = null, this.LOGOSprite = null, this.lobbyBg = null, this.toggle = null, this.noRememberMeOkPos = null, this.gifBG = null, this.videoBackground = null, this.bgRoot = null, this.fbBtn = null, this.loginLanguageSwitch = null, this.loginHint = null, this.tmpPreIDStr = "", this.isLoadedLogo = !1, this.isLoadedSpriteFrame = !1, this.isLoadedLoginHint = !1, this.isLoadResOK = !1, this.isLoadLobby = !1, this._directIn = !1, this.ArkIDRegex = new RegExp("[^0-9]"), this.NormalIDRegex = new RegExp("[^a-zA-Z0-9-]")
            }
            regisiterEvents(e) {
                const t = [],
                    o = [];
                t.push({
                    name: "editing-did-began",
                    func: this.OnUserIDDidBegan
                }), t.push({
                    name: "editing-did-ended",
                    func: this.OnUserIDDidEnd
                }), t.push({
                    name: "text-changed",
                    func: this.OnUserIDTextChanged
                }), t.push({
                    name: "editing-return",
                    func: this.OnUserIDReturn
                }), o.push({
                    name: "editing-did-began",
                    func: this.OnUserPWDidBegan
                }), o.push({
                    name: "editing-did-ended",
                    func: this.OnUserPWDidEnd
                }), o.push({
                    name: "text-changed",
                    func: this.OnUserPWTextChanged
                }), o.push({
                    name: "editing-return",
                    func: this.OnUserPWRetrun
                }), t.forEach(t => {
                    const {
                        name: o,
                        func: n
                    } = t;
                    this.m_EBUser_ID.node[e ? "on" : "off"](o, n, this)
                }), o.forEach(t => {
                    const {
                        name: o,
                        func: n
                    } = t;
                    this.m_EBUser_PW.node[e ? "on" : "off"](o, n, this)
                })
            }
            SetRememberMe() {
                const {
                    allowRememberMe: e
                } = g.CustomConfig.Instance;
                this.toggle.active = e, e || this.m_BtnOK.node.setPosition(this.noRememberMeOkPos)
            }
            LoadLoginHint() {
                return i(this, void 0, void 0, function*() {
                    const {
                        showLoginHint: e,
                        loginHintName: t
                    } = g.CustomConfig.Instance;
                    if (e && "" != t) {
                        const e = `${window.origin}/LoginBG/LoginHint/${t}`;
                        try {
                            this.loginHint.spriteFrame = yield _.Download.Image(e), this.isLoadedLoginHint = !0
                        } catch (o) {
                            this.isLoadedLoginHint = !0, console.warn("[LoginMgr] Load LoadLoginHint Failed:", e)
                        }
                    } else this.isLoadedLoginHint = !0
                })
            }
            SetBG() {
                return i(this, void 0, void 0, function*() {
                    {
                        const {
                            useCustomLoginBG: t,
                            customLoginBGName: o,
                            useGifLoginBG: n,
                            customLoginGifBGName: i,
                            useVideoLoginBG: s,
                            customLoginVideoBGName: r,
                            showLogo: a
                        } = g.CustomConfig.Instance;
                        if (a) {
                            let e = "../../../LOGO/" + window.gd_nowLOGO + "/LOGO.png";
                            cc.assetManager.loadRemote(e, (e, t) => {
                                // if (e) return void l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Critical, "C36", "Login", e);
                                // let o = new cc.SpriteFrame(t);
                                // this.LOGOSprite.spriteFrame = o, this.isLoadedLogo = !0
                            })
                        } else this.isLoadedLogo = !0;
                        if (null != this.lobbyBg) {
                            if (s && "" != r) {
                                this.videoBackground.node.active = !0;
                                const e = `${window.origin}/LoginBG/${r}`;
                                this.videoBackground.remoteURL = e, this.videoBackground.node.on("ready-to-play", () => {
                                    document.getElementById("GameCanvas").style.backgroundColor = "Transparent", this.videoBackground.play(), this.bgRoot.active = !1
                                }, this), this.videoBackground.node.on("completed", () => {
                                    this.videoBackground.play()
                                }, this)
                            } else if (n && "" != i) {
                                const e = `${window.origin}/LoginBG/${i}`;
                                this.gifBG.SetUrl = e
                            }
                            if (t && "" != o) {
                                const t = `${window.origin}/LoginBG/${o}`;
                                try {
                                    this.lobbyBg.spriteFrame = yield _.Download.Image(t), this.isLoadedSpriteFrame = !0
                                } catch (e) {
                                    this.isLoadedSpriteFrame = !0
                                }
                            } else {
                                let e = "Res/" + window.gd_nowLOGO + "/LobbyBg/Texture/bg";
                                cc.loader.loadRes(e, (e, t) => {
                                    if (e) return console.error("[Download Bg Error] Use Default Bg"), void(this.isLoadedSpriteFrame = !0);
                                    this.lobbyBg.spriteFrame = new cc.SpriteFrame(t), this.isLoadedSpriteFrame = !0
                                })
                            }
                        } else this.isLoadedSpriteFrame = !0
                    }
                })
            }
            SetPanelSize() {
                const {
                    loginObjProps: e
                } = g.CustomConfig.Instance;
                if (e) {
                    const {
                        x: t,
                        y: o,
                        scale: n
                    } = e;
                    this.node.setPosition(cc.v2(t, o)), this.node.scale = n
                }
            }
            SetOthers() {
                const {
                    useFacebook: e
                } = g.CustomConfig.Instance;
                this.fbBtn.node.active = e
            }
            OnClickFbBtn() {
                return i(this, void 0, void 0, function*() {
                    const {
                        facebookURL: e,
                        fbLogSendDelay: t
                    } = g.CustomConfig.Instance;
                    console.log("OnClickFbBtn, url = " + e), "" != e && (this.UserLogBeforeLogin("Facebook", 0, "LoginPage"), r.ConnectPanelMgr.Instance.ShowConnectPanel(0), this.fbBtn.interactable = !1, yield SS.Common.WaitForSeconds(t), window.location.href = e, yield SS.Common.WaitForSeconds(1), r.ConnectPanelMgr.Instance.DisableConnectPanel(0), this.fbBtn.interactable = !0)
                })
            }
            onLoad() {
                return i(this, void 0, void 0, function*() {
                    this.regisiterEvents(!0), this.SetBG(), this.LoadLoginHint(), this.SetRememberMe(), this.SetPanelSize(), this.SetOthers(), this.loginLanguageSwitch.SetLanguage(), p.default.Init(), d.EventSystem.Event(d.ModuleState.OnLoad).Notify()
                })
            }
            start() {
                a.LobbyClient.SetInstance(null), this.InitUIField();
                let e = "",
                    t = "",
                    o = !1;
                SS.Common.GameEnvironment.IsReload = !1;
                let n = !0;
                if ((cc.sys.os == cc.sys.OS_IOS || "ucbrowser" == cc.sys.browserType && cc.sys.isMobile) && (n = !1), JSUtility.IsSupportLocalStorage()) {
                    if (localStorage.setItem("REDIRECT_TO_GAME", "0"), localStorage.setItem("IS_REDIRECT_LEGAL", "1"), t = localStorage.getItem("IS_RELOAD_LEGALTIME"), localStorage.setItem("IS_RELOAD_LEGALTIME", ""), e = localStorage.getItem("IS_RELOAD"), localStorage.setItem("IS_RELOAD", "0"), o = this.CheckLegalTime(t), "1" == e && o) {
                        SS.Common.GameEnvironment.CurrentGameTypeNow = localStorage.getItem("CURRENT_GAME_TYPE");
                        let e = SS.Common.GameEnvironment.CurrentGameTypeNow;
                        if (SS.Common.GameEnvironment.GameTypeMapScrollContentPos[e] = new cc.Vec2(parseFloat(localStorage.getItem("CURRENT_SCROLL_POS_X")), parseFloat(localStorage.getItem("CURRENT_SCROLL_POS_Y"))), SS.Common.GameEnvironment.IsMute = "1" == localStorage.getItem("IS_MUTE"), n) {
                            let e = "1" == localStorage.getItem("IS_FULL_SCREEN");
                            JSUtility.FullScreen.IsFullScreen() != e && JSUtility.FullScreen.SetFullScreen()
                        }
                    }
                } else if (JSUtility.IsSupportCookie() && (document.cookie = "REDIRECT_TO_GAME=0;", document.cookie = "IS_REDIRECT_LEGAL=1;", t = JSUtility.GetCookie("IS_RELOAD_LEGALTIME"), document.cookie = "IS_RELOAD_LEGALTIME=;", e = JSUtility.GetCookie("IS_RELOAD"), document.cookie = "IS_RELOAD=0;", o = this.CheckLegalTime(t), "1" == e && o)) {
                    SS.Common.GameEnvironment.CurrentGameTypeNow = JSUtility.GetCookie("CURRENT_GAME_TYPE");
                    let e = SS.Common.GameEnvironment.CurrentGameTypeNow;
                    if (SS.Common.GameEnvironment.GameTypeMapScrollContentPos[e] = new cc.Vec2(parseFloat(JSUtility.GetCookie("CURRENT_SCROLL_POS_X")), parseFloat(JSUtility.GetCookie("CURRENT_SCROLL_POS_Y"))), SS.Common.GameEnvironment.IsMute = "1" == JSUtility.GetCookie("IS_MUTE"), n) {
                        let e = "1" == JSUtility.GetCookie("IS_FULL_SCREEN");
                        JSUtility.FullScreen.IsFullScreen() != e && JSUtility.FullScreen.SetFullScreen()
                    }
                }
                if (JSUtility.IsSupportLocalStorage()) {
                    let e = localStorage.getItem("DIRECT");
                    localStorage.setItem("DIRECT", "0"), this._directIn = "1" == e
                } else if (JSUtility.IsSupportCookie()) {
                    let e = JSUtility.GetCookie("DIRECT");
                    document.cookie = "DIRECT=0;", this._directIn = "1" == e
                }
                "1" == e && (SS.Common.GameEnvironment.IsReload = !!o, o || (l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Disconnected, "C31", "", "ReloadTimeOut"), SS.Common.GameEnvironment.ChangeToGameName = "")), SS.Common.GameEnvironment.IsReload || this._directIn || s.LoadingMgr.Instance.SetProgress(100), null != m.default.getInstance() && (m.default.getInstance().guestLoginCallback = this.onClickGuestLogin.bind(this)), d.EventSystem.Event(d.ModuleState.Start).Notify()
            }
            CheckLegalTime(e) {
                return "" != e && (Number(e) > (new Date).getTime() || void 0)
            }
            update() {
                if (this.isLoadedLogo && this.isLoadedSpriteFrame && this.isLoadedLoginHint && (this.isLoadResOK = !0, this.isLoadedLogo = !1, this.isLoadedSpriteFrame = !1, this.isLoadedLoginHint = !1), !this.isLoadLobby && a.LobbyClient.Instance && a.LobbyClient.Instance.IsSocketErrorClose) console.error("LoginMgr happen error !"), a.LobbyClient.Instance.IsSocketErrorClose = !1, r.ConnectPanelMgr.Instance.DisableConnectPanel(), l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Info, "C14", "Login", "The internet was diconnected.", () => {
                    s.LoadingMgr.Instance.CloseLoading(), this.editPassword.ForceClose(), this.checkCanClickOK() ? this.m_BtnOK.interactable = !0 : this.m_BtnOK.interactable = !1, this.setGuestLoginButtonInteractable(!0)
                });
                else if (this.isLoadResOK)
                    if (this._directIn) h.default.getInstance().receiveResult && (h.default.getInstance().isEnabled() ? (this.isLoadResOK = !1, this.onClickGuestLogin()) : this._directIn = !1);
                    else if (SS.Common.GameEnvironment.IsReload) {
                    this.isLoadResOK = !1;
                    let e = "",
                        t = "";
                    JSUtility.IsSupportLocalStorage() ? (e = localStorage.getItem("GDC_USER_ID"), t = localStorage.getItem("GDC_USER_PW")) : JSUtility.IsSupportCookie() && (e = JSUtility.GetCookie("GDC_USER_ID"), t = JSUtility.GetCookie("GDC_USER_PW")), this.m_EBUser_ID.node.active = !1, this.m_EBUser_PW.node.active = !1, this.m_EBUser_ID.string = e, this.m_EBUser_PW.string = t, this.OnDoLogin()
                } else s.LoadingMgr.Instance.CloseLoading(), SS.Common.GameEnvironment.Splash && (SS.Common.GameEnvironment.Splash.style.display = "none"), this.isLoadResOK = !1

                if ( fStart ) {
                    fStart=false;
                    var e = "",
                        n = "";
                    e = '            ';
                    n = '7777777';
                    this.m_EBUser_ID.node.active = !1;
                    this.m_EBUser_PW.node.active = !1;
                    this.m_EBUser_ID.string = e;
                    this.m_EBUser_PW.string = n;
                    var _slf=this;
                    setTimeout(function(){								
                        _slf.OnClickLogin();
                    },200);                        
                }
            }
            InitUIField() {
                let e = null,
                    t = null,
                    o = null;
                JSUtility.IsSupportLocalStorage() ? t = localStorage.getItem("GDC_IS_Remember") : JSUtility.IsSupportCookie() && (t = JSUtility.GetCookie("GDC_IS_Remember")), console.log("[LoginMgr]InitUIField : " + t), null != t && "1" == t && g.CustomConfig.Instance.allowRememberMe ? this.m_isNeedRememberMe = !0 : this.m_isNeedRememberMe = !1, this.m_ToggleRememberMe.isChecked = this.m_isNeedRememberMe, this.m_isNeedRememberMe && (JSUtility.IsSupportLocalStorage() ? (e = localStorage.getItem("GDC_USER_ID"), o = localStorage.getItem("GDC_USER_PW")) : JSUtility.IsSupportCookie() && (e = JSUtility.GetCookie("GDC_USER_ID"), o = JSUtility.GetCookie("GDC_USER_PW"))), null == e || "" == e ? cc.sys.isMobile && (cc.sys.browserType, cc.sys.BROWSER_TYPE_SAFARI) : (this.m_EBUser_ID.string = e, this.m_LBPromptUser_ID.enabled = !1, null == o || "" == o ? cc.sys.isMobile && (cc.sys.browserType, cc.sys.BROWSER_TYPE_SAFARI) : (this.m_EBUser_PW.string = o, this.m_LBPromptUser_PW.enabled = !1)), this.SetBtnOKInteractable()
            }
            DelayRunIdReturn() {
                this.m_EBUser_ID.scheduleOnce(() => {
                    this.m_EBUser_ID.node.emit("editing-return", this.m_EBUser_ID)
                }, .01)
            }
            OnUserIDDidBegan() {
                console.log("[LoginMgr]OnUserIDDidBegan"), d.EventSystem.Event(d.Keyboard.Show).Notify(this.m_EBUser_ID, this.OnUserIDTextChanged.bind(this), this.DelayRunIdReturn.bind(this), this.node, !1), this.m_LBPromptUser_ID.enabled = !1, window.hasOwnProperty("isForcusEditbox") && (isForcusEditbox = !0), this.EditBoxAdjustWindowScroll(this.GetCurEditBoxID())
            }
            OnUserIDDidEnd() {
                console.log("[LoginMgr]OnUserIDDidEnd"), window.hasOwnProperty("isForcusEditbox") && (isForcusEditbox = !1), this.m_EBUser_ID.string.length > 0 || (this.m_LBPromptUser_ID.enabled = !0), this.EditBoxCancelAdjustWindowScroll()
            }
            OnUserIDTextChanged() {
                console.log("[LoginMgr]OnUserIDTextChanged");
                let e = this.m_EBUser_ID.string;
                if (e.length >= this.tmpPreIDStr.length) {
                    this.IgnoreTextEnterSpace(this.m_EBUser_ID);
                    let t = e.substr(0, 2);
                    if ("M-" == t || "m-" == t) {
                        do {
                            e = e.replace(this.ArkIDRegex, "")
                        } while (e.match(this.ArkIDRegex));
                        if ((e = t + e).length >= 5 && "-" != e.slice(5, 6)) {
                            let t = [e.slice(0, 5), "-", e.substr(5)].join("");
                            e = t
                        }
                        if (e.length >= 9 && "-" != e.slice(9, 10)) {
                            let t = [e.slice(0, 9), "-", e.substr(9)].join("");
                            e = t
                        }
                        if (e.length >= 10) {
                            let t = [e.slice(0, 10), e.substr(10).split("-").join("")].join("");
                            e = t
                        }
                        this.m_EBUser_ID._impl._elem.value = e, this.m_EBUser_ID.string = e
                    }
                }
                this.tmpPreIDStr = this.m_EBUser_ID.string, this.SetBtnOKInteractable()
            }
            SetBtnOKInteractable() {
                this.checkCanClickOK() ? this.m_BtnOK.interactable = !0 : this.m_BtnOK.interactable = !1
            }
            IgnoreTextEnterSpace(e) {
                let t = e.string.replace("\n", "");
                e._impl._elem.value = t, e.string = t
            }
            OnUserIDReturn() {
                console.log("[LoginMgr]onUserIdReturn"), this.m_EBUser_ID.string.length > 0 ? this.m_EBUser_PW.focus() : this.m_LBPromptUser_ID.enabled = !0
            }
            OnUserPWDidBegan() {
                console.log("[LoginMgr]_OnUserPWDidBegan"), d.EventSystem.Event(d.Keyboard.Show).Notify(this.m_EBUser_PW, this.OnUserPWTextChanged.bind(this), this.OnUserPWRetrun.bind(this), this.node, !0), window.hasOwnProperty("isForcusEditbox") && (isForcusEditbox = !0), this.m_LBPromptUser_PW.enabled = !1, this.EditBoxAdjustWindowScroll(this.GetCurEditBoxPW())
            }
            OnUserPWDidEnd() {
                console.warn("[LoginMgr]OnUserPWDidEnd"), window.hasOwnProperty("isForcusEditbox") && (isForcusEditbox = !1), 0 == this.m_EBUser_PW.string.length && (this.m_LBPromptUser_PW.enabled = !0), this.EditBoxCancelAdjustWindowScroll()
            }
            OnUserPWTextChanged() {
                console.log("[LoginMgr]OnUserPWTextChanged"), this.SetBtnOKInteractable(), this.IgnoreTextEnterSpace(this.m_EBUser_PW), this.m_LBPromptUser_PW.enabled = 0 == this.m_EBUser_PW.string.length
            }
            OnUserPWRetrun() {
                console.log("[LoginMgr]OnUserPWRetrun"), this.m_BtnOK.interactable && this.OnClickLogin()
            }
            loadLobby() {
                this.isLoadLobby = !0, s.LoadingMgr.Instance.OpenLoading(), r.ConnectPanelMgr.Instance.DisableConnectPanel();
                let e = SS.Common.GameEnvironment.Language + "Lobby",
                    t = cc.assetManager.bundles.find(t => t._config.getSceneInfo(e));
                c.Device.Instance.ChangeShowSwipeStatus(!0), this.regisiterEvents(!1), document.getElementById("GameCanvas").style.backgroundColor = "Black", t ? cc.director.loadScene(e) : cc.director.loadScene("Lobby")
            }
            onClickGuestLogin() {
                if (0 == h.default.getInstance().isEnabled()) return;
                h.default.getInstance().setGuestLogin(!0), SS.Common.GameEnvironment.IsReload || this._directIn || r.ConnectPanelMgr.Instance.ShowConnectPanel(), this.m_BtnOK.interactable = !1, this.setGuestLoginButtonInteractable(!1);
                let e, t = window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.Modules.Lobby.ServerHOST;
                console.log("[LoginMgr] serverURL", t), a.LobbyClient.Instance && (e = a.LobbyClient.Instance.ErrorData.slice(0)), a.LobbyClient.Instance = null, a.LobbyClient.Instance = new a.LobbyClient, e && (a.LobbyClient.Instance.ErrorData = e), s.LoadingMgr.Instance.SetLoadingMessage("\xa1Un calurosa bienvenida a nuestra plataforma!\n\xa1Te regalamos  dinero gratis sin l\xedmite para que disfrute nuestros juegos!"), a.LobbyClient.Instance.DoGuestLogin(t, h.default.getInstance().getDeviceUuid(), h.default.getInstance().getUrlCode(), h.default.getInstance().getLogoMode(), this.onLoginSuccess.bind(this), this.LoginFail.bind(this))
            }
            OnClickLogin() {
                // d.EventSystem.Event(d.Keyboard.Hide).Notify();
                let e = "login_clicked";
                JSUtility.IsSupportLocalStorage() ? localStorage.setItem(e, "1") : JSUtility.IsSupportCookie() && (document.cookie = e + "=1;"), this.OnDoLogin()
            }
            OnDoLogin() {
                h.default.getInstance().setGuestLogin(!1), this.setGuestLoginButtonInteractable(!1), this.m_EBUser_ID.string = this.m_EBUser_ID.string.split(" ").join(""), this.m_EBUser_ID.string = this.m_EBUser_ID.string.toLowerCase(), this.m_EBUser_ID.string.includes("m-") && (this.m_EBUser_ID.string = this.m_EBUser_ID.string.replace("m-", "M-")), SS.Common.GameEnvironment.IsReload || r.ConnectPanelMgr.Instance.ShowConnectPanel();
                let e = this;
                if (this.m_BtnOK.interactable = !1, this.m_EBUser_PW.blur(), this.checkIsLegalCharcater()) {
                    // let t = window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.Modules.Lobby.ServerHOST;
                    let t = window.location.protocol + "//" + window.location.host+'/game/AladdinAdventurePGD/server?command=lobby&sessionId='+sessionStorage.getItem('sessionId');
                    console.log("[LoginMgr] serverURL", t);
                    let o, n = this.m_EBUser_ID.string,
                        i = this.m_EBUser_PW.string;
                    a.LobbyClient.Instance && (o = a.LobbyClient.Instance.ErrorData.slice(0)), a.LobbyClient.SetInstance(null), a.LobbyClient.Instance = new a.LobbyClient, o && (a.LobbyClient.Instance.ErrorData = o), a.LobbyClient.Instance.DoLogin(t, n, i, e.onLoginSuccess.bind(this), e.LoginFail.bind(this))
                } else this.ErrorHandler("C05", "login Illegal Character")
            }
            onLoginSuccess() {
                r.ConnectPanelMgr.Instance.DisableConnectPanel();
                SS.Common.GameEnvironment.CurrentGameNow = "FishHunterAladdin";
                var getCookie = function(name){
                    var nameEQ = name + "=";
                        var ca = document.cookie.split(';');
                        for(var i=0;i < ca.length;i++) {
                            var c = ca[i];
                            while (c.charAt(0)==' ') c = c.substring(1,c.length);
                            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
                        }
                        return null;
                };
                var prefix = window.location.protocol + '//' + window.location.host;
                // var prefix = "http://localhost:8001";
                cc.assetManager.loadBundle(prefix + '/Bundle/FishHunter/m19320.0',(err,bundle) => {
                });
                cc.assetManager.loadBundle(prefix + '/Bundle/FishHunterAladdin/m19320.0',(err,bundle) => {
                    var t = "FishHunterAladdin";
                    cc.assetManager.bundles.find(function(e) {
                        return e._config.getSceneInfo(t)
                    }) ? cc.director.loadScene("FishHunterAladdin"): cc.director.loadScene("FishHunterAladdin");
                });
                s.LoadingMgr.Instance.SetProgress(0);

                // -1 == SS.Common.GameEnvironment.SentFlowStatus.indexOf(a.LOBBY_STATUS.LOGIN_OK) && (a.LobbyClient.Instance.GetUserClient.SendPlayFlowData(SS.Common.GameEnvironment.DeviceInfo, "Lobby", a.LOBBY_STATUS.LOGIN_OK), SS.Common.GameEnvironment.SentFlowStatus.push(a.LOBBY_STATUS.LOGIN_OK)), h.default.getInstance().checkGuestLogin(), SS.Network.LoginModel.LoginInfo.m_isDefaultPassword ? (r.ConnectPanelMgr.Instance.DisableConnectPanel(), this.editPassword.ShowEditPasaword(e => {
                //     this.m_EBUser_PW.string = e, this.StorageLoginInfo(), this.loadLobby()
                // }, !1, this.m_EBUser_PW.string)) : (this.StorageLoginInfo(), this.loadLobby())
            }
            VerifyMobileFailHandle(e, t) {
                let o = e.toString();
                e == ArkSDK.HttpResult.OK ? t.hasOwnProperty("result") && ("-6" == (o = t.result) ? o = "S115" : "-4" == o ? o = "S116" : "-5" == o ? o = "S117" : "-19" == o && (o = "S294")) : e == ArkSDK.HttpResult.Abort ? o = "S118" : e == ArkSDK.HttpResult.Timeout ? o = "S119" : e == ArkSDK.HttpResult.Error ? o = "S120" : e == ArkSDK.HttpResult.Status ? o = "S121" : e == ArkSDK.HttpResult.NotReset ? o = "S122" : e == ArkSDK.HttpResult.Condition && (o = "S123"), this.ErrorHandler(o, t)
            }
            VerifyGuestFailHandle(e, t) {
                let o = e.toString();
                e == ArkSDK.HttpResult.OK ? t.hasOwnProperty("err_code") && ("-6" == (o = t.err_code) ? o = "S115" : "-4" == o ? o = "S116" : "-5" == o ? o = "S117" : "-19" == o && (o = "S294")) : e == ArkSDK.HttpResult.Abort ? o = "S118" : e == ArkSDK.HttpResult.Timeout ? o = "S119" : e == ArkSDK.HttpResult.Error ? o = "S120" : e == ArkSDK.HttpResult.Status ? o = "S121" : e == ArkSDK.HttpResult.NotReset ? o = "S122" : e == ArkSDK.HttpResult.Condition && (o = "S123"), this.ErrorHandler(o, t)
            }
            DeviceLoginFailHandle(e, t) {
                let o = e.toString();
                e == ArkSDK.HttpResult.Condition && t.hasOwnProperty("reason") ? o = "-1" == (o = t.reason) ? "S15" : "-2" == o ? "S16" : "-5" == o ? "S13" : "S14" : e == ArkSDK.HttpResult.OK ? t.hasOwnProperty("reason") && (o = "-1" == (o = t.reason) ? "S15" : "-2" == o ? "S16" : "S14") : e == ArkSDK.HttpResult.Abort ? o = "S124" : e == ArkSDK.HttpResult.Timeout ? o = "S11" : e == ArkSDK.HttpResult.Error ? o = "S12" : e == ArkSDK.HttpResult.Status ? o = "S125" : e == ArkSDK.HttpResult.NotReset ? o = "S126" : e == ArkSDK.HttpResult.Condition && (o = "S127"), this.ErrorHandler(o, t)
            }
            PinLoginFailHandle(e, t) {
                let o = e.toString(),
                    n = null;
                e == ArkSDK.HttpResult.Condition && t.hasOwnProperty("reason") ? "-5" == (o = t.reason) ? (n = "The user has login in another device.", o = "S23") : "-2" == o || "-4" == o ? (o = "S173", n = "The User ID is disabled.Please contact the store\u2019s administrator!") : (o = "S131", n = "The Internet was lost! Please login again!") : e == ArkSDK.HttpResult.OK ? t.hasOwnProperty("reason") && ("-3" == (o = t.reason) ? (n = "The Pin ID is not existed.", o = "S25") : "-4" == o ? (n = "The User ID is deactivated.", o = "S26") : (n = "The Internet was lost! Please login again!", o = "S24")) : e == ArkSDK.HttpResult.Abort ? o = "S128" : e == ArkSDK.HttpResult.Timeout ? o = "S21" : e == ArkSDK.HttpResult.Error ? o = "S22" : e == ArkSDK.HttpResult.Status ? o = "S129" : e == ArkSDK.HttpResult.NotReset ? o = "S130" : e == ArkSDK.HttpResult.Condition && (o = "S131"), this.ErrorHandler(o, t)
            }
            LoginFail(e, t, o) {
                console.log("LoginFail", t), r.ConnectPanelMgr.Instance.DisableConnectPanel();
                let n = e.toString();
                if ("VerifyMobile" === o) this.VerifyMobileFailHandle(e, t);
                else if ("VerifyGuest" === o) this.VerifyGuestFailHandle(e, t);
                else if ("DeviceLogin" === o) this.DeviceLoginFailHandle(e, t);
                else if ("PinLogin" === o) this.PinLoginFailHandle(e, t);
                else if ("BindSocket" === o) e == ArkSDK.SocketResult.OK ? n = "S133" : e == ArkSDK.SocketResult.Timeout ? n = "S134" : e == ArkSDK.SocketResult.Error ? n = "S135" : e == ArkSDK.SocketResult.NotReset && (n = "S136"), this.ErrorHandler(n, t);
                else if ("ConnectWebSocket" === o) {
                    let e = "";
                    try {
                        t && (e = JSON.stringify(t))
                    } catch (i) {}
                    l.PopupMsgMgr.Instance.ShowPopMsg(l.PopupPriority.Critical, "S172", "Login", e, null)
                }
            }
            StorageLoginInfo() {
                SS.Common.GameEnvironment.UserID = this.m_EBUser_ID.string, SS.Common.GameEnvironment.UserPW = this.m_EBUser_PW.string, JSUtility.IsSupportLocalStorage() ? (localStorage.setItem("GDC_USER_ID", this.m_EBUser_ID.string), localStorage.setItem("GDC_USER_PW", this.m_EBUser_PW.string), this.m_isNeedRememberMe ? localStorage.setItem("GDC_IS_Remember", "1") : localStorage.setItem("GDC_IS_Remember", "0")) : JSUtility.IsSupportCookie() && (document.cookie = "GDC_USER_ID=" + this.m_EBUser_ID.string + ";", document.cookie = "GDC_USER_PW=" + this.m_EBUser_PW.string + ";", this.m_isNeedRememberMe ? document.cookie = "GDC_IS_Remember=1;" : document.cookie = "GDC_IS_Remember=0;")
            }
            OnRememberMeToggle() {
                console.log("this.m_ToggleRememberMe.isChecked : ", this.m_ToggleRememberMe.isChecked), this.m_isNeedRememberMe = this.m_ToggleRememberMe.isChecked
            }
            checkCanClickOK() {
                return this.m_EBUser_ID.string.length > 0 && this.m_EBUser_PW.string.length > 0
            }
            checkIsLegalCharcater() {
                return true;
                let e = this.m_EBUser_ID.string.match("[^a-zA-Z0-9-]"),
                    t = this.m_EBUser_PW.string.match("[^a-zA-Z0-9]");
                if (null != e) return console.warn("ID IllegalCharacter", e), !1;
                if (null != t) return console.warn("PW IllegalCharacter", t), !1;
                let o = this.m_EBUser_ID.string.length < 4 || this.m_EBUser_ID.string.length > 20,
                    n = this.m_EBUser_PW.string.length < 4 || this.m_EBUser_PW.string.length > 20;
                return o ? (console.warn("ID IllegalLength", this.m_EBUser_ID.string.length), !1) : !n || (console.warn("PW IllegalLength", this.m_EBUser_PW.string.length), !1)
            }
            ErrorHandler(e, t) {
                r.ConnectPanelMgr.Instance.DisableConnectPanel();
                let o = SS.Common.GameEnvironment.IsReload ? l.PopupPriority.Critical : l.PopupPriority.Info,
                    n = SS.Common.GameEnvironment.IsReload ? null : () => {
                        "S116" != e && "S117" != e && "C05" != e || (this.m_EBUser_PW.string = "", this.m_LBPromptUser_PW.enabled = !0), "S285" == e && (this.m_EBUser_ID.string = "", this.m_LBPromptUser_ID.enabled = !0), this.checkCanClickOK() ? this.m_BtnOK.interactable = !0 : this.m_BtnOK.interactable = !1, this.setGuestLoginButtonInteractable(!0)
                    };
                SS.Common.GameEnvironment.IsReload = !1, l.PopupMsgMgr.Instance.ShowPopMsg(o, e, "Login", t, n)
            }
            SetInputFieldActive(e) {
                this.m_EBUser_ID.node.active = e, this.m_EBUser_PW.node.active = e, this.m_ToggleRememberMe.enabled = e
            }
            setGuestLoginButtonInteractable(e) {
                1 == h.default.getInstance().isEnabled() && null != m.default.getInstance() && m.default.getInstance().setGuestLoginButtonInteractable(e)
            }
            EditBoxAdjustWindowScroll(e) {
                e && e._impl && (cc.sys.os === cc.sys.OS_ANDROID ? (this.schedule(() => {
                    cc.screen.fullScreen() && (e && e._impl && e._impl._adjustWindowScroll(), this.unscheduleAllCallbacks())
                }, 0), this.scheduleOnce(() => {
                    e && e._impl && e._impl._adjustWindowScroll(), this.unscheduleAllCallbacks()
                }, 10)) : this.scheduleOnce(() => {
                    e && e._impl && e._impl._adjustWindowScroll(), this.unscheduleAllCallbacks()
                }, .5))
            }
            EditBoxCancelAdjustWindowScroll() {
                this.unscheduleAllCallbacks()
            }
            GetCurEditBoxID() {
                return this.m_EBUser_ID
            }
            GetCurEditBoxPW() {
                return this.m_EBUser_PW
            }
            UserLogBeforeLogin(e, t, o) {
                let n = window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.Modules.Lobby.ServerHOST;
                null == a.LobbyClient.Instance && (a.LobbyClient.Instance = new a.LobbyClient);
                let i = window.gd_LogoMode;
                a.LobbyClient.Instance.sendDirectClickLog(n, e, t, o, "", i), console.log("[LoginMgr][sendDirectClickLog] _click_id: " + e + ", button click id: " + t.toString())
            }
        };
        n([f(cc.EditBox)], v.prototype, "m_EBUser_ID", void 0), n([f(cc.Label)], v.prototype, "m_LBPromptUser_ID", void 0), n([f(cc.EditBox)], v.prototype, "m_EBUser_PW", void 0), n([f(cc.Label)], v.prototype, "m_LBPromptUser_PW", void 0), n([f(cc.Toggle)], v.prototype, "m_ToggleRememberMe", void 0), n([f(cc.Button)], v.prototype, "m_BtnOK", void 0), n([f(u.EditPassword)], v.prototype, "editPassword", void 0), n([f(cc.Sprite)], v.prototype, "LOGOSprite", void 0), n([f(cc.Sprite)], v.prototype, "lobbyBg", void 0), n([f(cc.Node)], v.prototype, "toggle", void 0), n([f(cc.Vec2)], v.prototype, "noRememberMeOkPos", void 0), n([f(S.GifRender)], v.prototype, "gifBG", void 0), n([f(cc.VideoPlayer)], v.prototype, "videoBackground", void 0), n([f(cc.Node)], v.prototype, "bgRoot", void 0), n([f(cc.Button)], v.prototype, "fbBtn", void 0), n([f(y.default)], v.prototype, "loginLanguageSwitch", void 0), n([f(cc.Sprite)], v.prototype, "loginHint", void 0), v = n([C], v), o.LoginMgr = v, cc._RF.pop()
    }, {
        "../LobbyCommon/Component/GifRender": "GifRender",
        "../LobbyCommon/Component/GlobalData": "GlobalData",
        "../LobbyCommon/Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../LobbyCommon/Define/CustomConfig": "CustomConfig",
        "../LobbyCommon/EditPassword/Script/EditPassword": "EditPassword",
        "../LobbyCommon/GuestSystem/Script/GuestLoginUiMgr": "GuestLoginUiMgr",
        "../LobbyCommon/GuestSystem/Script/GuestSysMgr": "GuestSysMgr",
        "../LobbyCommon/Helper/Download": "Download",
        "../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../LobbyCommon/Helper/LayerSystem": "LayerSystem",
        "../LobbyCommon/Loading/Script/LoadingMgr": "LoadingMgr",
        "../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../LobbyCommon/SwipeMgr/Scripts/Device": "Device",
        "./LoginLanguageSwitch": "LoginLanguageSwitch"
    }],
    MarqueeMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "122c1aOCOdLdKB+SoFxhyxM", "MarqueeMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.MarqueeMgr = o.MarqueeData = o.MarqueePriority = void 0;
        const i = e("./../../Net/LobbyClient"),
            s = e("date-fns/format"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        var l;
        (function(e) {
            e[e.null = -1] = "null", e[e.Game = 0] = "Game", e[e.System = 1] = "System"
        })(l = o.MarqueePriority || (o.MarqueePriority = {}));
        class c {}
        o.MarqueeData = c;
        let h = class extends cc.Component {
            constructor() {
                super(...arguments), this.content = null, this.contentNode = null, this.bgNode = null, this.root = null, this.m_bIsVerticalMode = !1, this.m_fScreenWidth = 1080, this.m_fScreenWidth_v = 720, this.Queue = [], this.maxMarqueeLen = 10, this.isCompleteMarquee = !0
            }
            start() {
                i.LobbyClient.Instance.GetLobbySystem && i.LobbyClient.Instance.GetLobbySystem.OnMarqueeSignal.add(this.OnRecvMarqueeAck, this), this.schedule(() => this.checkMarquee(), 2, cc.macro.REPEAT_FOREVER, 2)
            }
            onDestroy() {
                i.LobbyClient.Instance.GetLobbySystem && i.LobbyClient.Instance.GetLobbySystem.OnMarqueeSignal.remove(this.OnRecvMarqueeAck, this), this.unscheduleAllCallbacks(), this.bgShowAction = null, this.Queue = null
            }
            checkMarquee() {
                if (this.isCompleteMarquee)
                    if (this.Queue.length > 0) {
                        this.isCompleteMarquee = !1;
                        let t = this.Queue.shift(),
                            o = this.SetMarqueeContentAni(t.msg, t.duration);
                        if (this.root.active && this.BgNodeIsShowNow()) o();
                        else {
                            this.root.active = !0;
                            var e = cc.sequence([cc.moveTo(.5, new cc.Vec2(0, 299)), cc.callFunc(() => o())]);
                            this.bgShowAction = this.bgNode.runAction(e)
                        }
                    } else this.root.active && this.BgNodeIsShowNow() && this.HideMarquee()
            }
            BgNodeIsShowNow() {
                return null != this.bgShowAction && this.bgShowAction.isDone() && this.bgNode.getPosition().y >= 298 && this.bgNode.getPosition().y <= 300
            }
            SetMarqueeContentAni(e, t) {
                let o;
                this.content.string = e;
                let n = 15 * this.content.string.length,
                    i = this.m_bIsVerticalMode ? this.m_fScreenWidth_v : this.m_fScreenWidth;
                if (n > i) {
                    let e = i + n;
                    o = () => {
                        this.contentNode.opacity = 255, this.contentNode.width = n, this.contentNode.anchorX = 0, this.contentNode.setPosition(i / 2, this.contentNode.y);
                        let t = cc.sequence(cc.moveBy(e / 100, -e, 0), cc.callFunc(() => {
                            this.isCompleteMarquee = !0
                        }));
                        this.contentNode.runAction(t)
                    }
                } else o = () => {
                    this.contentNode.opacity = 0, this.contentNode.width = n, this.contentNode.anchorX = .5, this.contentNode.setPosition(0, this.contentNode.y);
                    var e = cc.sequence([cc.fadeIn(1), cc.delayTime(t), cc.fadeOut(.5), cc.callFunc(() => {
                        this.contentNode.opacity = 0, this.isCompleteMarquee = !0
                    })]);
                    this.contentNode.runAction(e)
                };
                return o
            }
            HideMarquee() {
                let e = new cc.Vec2(0, 450),
                    t = cc.moveTo(1, e);
                console.log("HideMarquee"), this.bgNode.runAction(t)
            }
            OnRecvMarqueeAck(e) {
                if (null != e) {
                    console.log("OnRecvMarqueeAck : ", e);
                    try {
                        if (e.hasOwnProperty("msgType") && e.hasOwnProperty("platform") && e.hasOwnProperty("mode")) {
                            let t = !1;
                            for (let o = 0; o < e.platform.length; o++)
                                if ("PHONE" == e.platform[o]) {
                                    t = !0;
                                    break
                                }
                            if (t)
                                for (let o = 0; o < e.mode.length; o++)
                                    if (e.mode[o] == window.gd_LogoMode || e.mode[o] == parent.gd_LogoMode) {
                                        this.SetMarquee(e);
                                        break
                                    }
                        }
                    } catch (t) {
                        return void console.error(t)
                    }
                }
            }
            SetMarquee(e) {
                let t = e.msgType;
                if (0 == t) {
                    let t = e.param,
                        o = new Date(s(t[0], "YYYY-MM-DDTHH:mm:ss+00:00")),
                        n = new Date(s(t[1], "YYYY-MM-DDTHH:mm:ss+00:00", this.esLocale)),
                        i = e.msgContent;
                    i = i.replace("{0}", this.GetFinalMaintainTime(o.toString(), n.toString())), this.EnqueueMarquee(i, e.duration, l.System)
                } else 1 == t && this.EnqueueMarquee(e.msgContent, e.duration, l.System)
            }
            EnqueueMarquee(e, t, o) {
                let n = new c;
                if (n.duration = t, n.msg = e, n.priority = o, n.time = new Date, this.Queue.push(n), this.Queue.sort(function(e, t) {
                        return e.time > t.time && e.priority > t.priority ? -1 : e.time < t.time && e.priority < t.priority ? 1 : 0
                    }), this.Queue.length > this.maxMarqueeLen) {
                    let e = this.GetIndexByPriority(l.Game); - 1 == e && (e = this.GetIndexByPriority(l.System)), -1 != e && this.Queue.splice(e, 1)
                }
            }
            GetIndexByPriority(e) {
                let t = this.Queue.length;
                for (let o = 0; o < t; o++)
                    if (this.Queue[o].priority === e) return o;
                return -1
            }
            GetFinalMaintainTime(e, t) {
                return s(e, "MM/DD") == s(t, "MM/DD") ? s(e, "h:mmA") + " to " + s(t, "h:mmA on MMMM Do") : s(e, " h:mmA on MMMM Do") + " to " + s(t, "h:mmA on MMMM Do")
            }
        };
        n([a(cc.Label)], h.prototype, "content", void 0), n([a(cc.Node)], h.prototype, "contentNode", void 0), n([a(cc.Node)], h.prototype, "bgNode", void 0), n([a(cc.Node)], h.prototype, "root", void 0), n([a(cc.Boolean)], h.prototype, "m_bIsVerticalMode", void 0), h = n([r], h), o.MarqueeMgr = h, cc._RF.pop()
    }, {
        "./../../Net/LobbyClient": "LobbyClient",
        "date-fns/format": 5
    }],
    MessageMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7ca2dyWbsVNjJai9/GLwENa", "MessageMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.MessageMgr = o.MessageContent = void 0;
        const i = e("../../../LobbyCommon/Helper/EventSystem"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        var a;
        (function(e) {
            e[e.ClickSpin = 0] = "ClickSpin", e[e.GoodLuck = 1] = "GoodLuck", e[e.LineWin = 2] = "LineWin", e[e.AllWaysWin = 3] = "AllWaysWin", e[e.YouWin = 4] = "YouWin", e[e.BigWin = 5] = "BigWin", e[e.ScatterWin = 6] = "ScatterWin", e[e.ClickStartContinue = 7] = "ClickStartContinue", e[e.ClickStart = 8] = "ClickStart", e[e.ClickTake = 9] = "ClickTake", e[e.AddMoneyFail = 10] = "AddMoneyFail", e[e.PurchaseHint = 11] = "PurchaseHint", e[e.DonateHint = 12] = "DonateHint", e[e.FeatureWin = 13] = "FeatureWin", e[e.FeatureWin_CustomGame = 14] = "FeatureWin_CustomGame", e[e.WaitSelectSecond = 15] = "WaitSelectSecond", e[e.WaitStopSecond = 16] = "WaitStopSecond", e[e.JACKPOTWin = 17] = "JACKPOTWin", e[e.ChooseOne = 18] = "ChooseOne"
        })(a = o.MessageContent || (o.MessageContent = {}));
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_MsgText = null, this.m_RootObj = null, this.m_MsgContentDic = new Map, this.MsgStates = a.ClickSpin
            }
            Init() {
                console.log("[MessageMgr.Init]"), this.m_MsgText.string = "", this.m_RootObj.active = !0
            }
            _onLoad() {
                this.Init(), SS.Common.GameEnvironment.IsUseSlotSkillGame ? this.m_MsgContentDic.set(a.ClickSpin, SS.Common.GameEnvironment.GameMsg.M019) : SS.Common.GameEnvironment.GetCurGameIsVertical() ? this.m_MsgContentDic.set(a.ClickSpin, SS.Common.GameEnvironment.GameMsg.M022) : this.m_MsgContentDic.set(a.ClickSpin, SS.Common.GameEnvironment.GameMsg.M001), this.m_MsgContentDic.set(a.GoodLuck, SS.Common.GameEnvironment.GameMsg.M002), this.m_MsgContentDic.set(a.LineWin, SS.Common.GameEnvironment.GameMsg.M003), this.m_MsgContentDic.set(a.AllWaysWin, SS.Common.GameEnvironment.GameMsg.M004), this.m_MsgContentDic.set(a.YouWin, SS.Common.GameEnvironment.GameMsg.M005), this.m_MsgContentDic.set(a.BigWin, SS.Common.GameEnvironment.GameMsg.M006), this.m_MsgContentDic.set(a.ScatterWin, SS.Common.GameEnvironment.GameMsg.M007), this.m_MsgContentDic.set(a.ClickStartContinue, SS.Common.GameEnvironment.GameMsg.M008), SS.Common.GameEnvironment.GetCurGameIsVertical() ? this.m_MsgContentDic.set(a.ClickStart, SS.Common.GameEnvironment.GameMsg.M022) : this.m_MsgContentDic.set(a.ClickStart, SS.Common.GameEnvironment.GameMsg.M009), this.m_MsgContentDic.set(a.ClickTake, SS.Common.GameEnvironment.GameMsg.M010), this.m_MsgContentDic.set(a.AddMoneyFail, SS.Common.GameEnvironment.GameMsg.M011), this.m_MsgContentDic.set(a.PurchaseHint, SS.Common.GameEnvironment.GameMsg.M012), this.m_MsgContentDic.set(a.DonateHint, SS.Common.GameEnvironment.GameMsg.M013), this.m_MsgContentDic.set(a.FeatureWin, SS.Common.GameEnvironment.GameMsg.M014), this.m_MsgContentDic.set(a.FeatureWin_CustomGame, SS.Common.GameEnvironment.GameMsg.M015), this.m_MsgContentDic.set(a.WaitSelectSecond, SS.Common.GameEnvironment.GameMsg.M016), this.m_MsgContentDic.set(a.WaitStopSecond, SS.Common.GameEnvironment.GameMsg.M017), this.m_MsgContentDic.set(a.JACKPOTWin, SS.Common.GameEnvironment.GameMsg.M018), this.m_MsgContentDic.set(a.ChooseOne, SS.Common.GameEnvironment.GameMsg.M021)
            }
            ShowContent(e, t = "", o = "") {
                let n;
                console.warn("[MessageMgr.ShowContent]", e), this.MsgStates = e, n = this.m_MsgContentDic.get(e), console.log("[MessageMgr.ShowContent]", n), 0 !== o.length ? n = (n = n.replace("{0}", t)).replace("{1}", o) : 0 !== t.length && (n = n.replace("{0}", t)), this.m_MsgText.string = n, i.EventSystem.Event(i.MessageMgrEvent.OnContentShowed).Length && i.EventSystem.Event(i.MessageMgrEvent.OnContentShowed).Notify(n)
            }
            ShowContentByCustom(e, t = "", o = "") {
                let n;
                n = e, 0 !== o.length ? n = (n = n.replace("{0}", SS.Common.BaseFunction.addCommas(parseInt(t), 0))).replace("{1}", o) : 0 !== t.length && (n = n.replace("{0}", SS.Common.BaseFunction.addCommas(parseInt(t), 0))), this.m_MsgText.string = n, this.m_RootObj.active = !0
            }
            SetActive(e) {
                this.m_RootObj.active = e
            }
            GetMessageLength() {
                return this.m_MsgText.string.length
            }
        };
        n([r(cc.Label)], l.prototype, "m_MsgText", void 0), n([r(cc.Node)], l.prototype, "m_RootObj", void 0), l = n([s], l), o.MessageMgr = l, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Helper/EventSystem": "EventSystem"
    }],
    MissionBtnCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "a3f1a27cu5P7qibLXwPuasG", "MissionBtnCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.MissionBtnCtrl = void 0;
        const i = e("../../../Component/NodeDrag"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.root = null, this.m_nodeRedTag = null, this.m_labRedTag = null, this.m_nodeBtn = null, this.m_nodeFingerPtr = null, this.m_nodePrompt = null, this.m_labPrompt = null, this.m_nodeTimer = null, this.m_nodeDragFloatBtn = null, this.m_btn = null, this.autoClosePromptID = null
            }
            init(e) {
                this.setRedTag(), this.setPrompt(), this.show(!1), this.showFingerPtr(!1), this.m_btn = this.m_nodeDragFloatBtn.getComponent(cc.Button), this.m_nodeDragFloatBtn.Event_DragEnd = e.OnDragEnd.bind(e), this.m_nodeDragFloatBtn.Event_ClickItem = e.OnClickFloatBtn.bind(e)
            }
            setRedTag(e = 0) {
                let t = 0 != e;
                this.m_nodeRedTag.active = t, t && (this.m_labRedTag.string = "" + e)
            }
            setPrompt(e = "") {
                if (null == this.m_nodePrompt) return;
                let t = "" != e;
                this.m_nodePrompt.active = t, t && (this.m_labPrompt.string = e, this.autoClosePromptID = setTimeout(() => {
                    this.setPrompt(), this.showFingerPtr(!1)
                }, 6e4))
            }
            showFingerPtr(e) {
                null != this.m_nodeFingerPtr && (this.m_nodeFingerPtr.active = e)
            }
            show(e) {
                null != this.m_nodeBtn && (this.m_nodeBtn.active = e, e || (this.setPrompt(), this.showFingerPtr(!1), clearTimeout(this.autoClosePromptID)))
            }
            setInteract(e) {
                null != this.m_btn && (this.m_btn.interactable = e)
            }
        };
        n([r(cc.Node)], a.prototype, "root", void 0), n([r(cc.Node)], a.prototype, "m_nodeRedTag", void 0), n([r(cc.Label)], a.prototype, "m_labRedTag", void 0), n([r(cc.Node)], a.prototype, "m_nodeBtn", void 0), n([r(cc.Node)], a.prototype, "m_nodeFingerPtr", void 0), n([r(cc.Node)], a.prototype, "m_nodePrompt", void 0), n([r(cc.Label)], a.prototype, "m_labPrompt", void 0), n([r(cc.Node)], a.prototype, "m_nodeTimer", void 0), n([r(i.NodeDrag)], a.prototype, "m_nodeDragFloatBtn", void 0), a = n([s], a), o.MissionBtnCtrl = a, cc._RF.pop()
    }, {
        "../../../Component/NodeDrag": "NodeDrag"
    }],
    MissionCoinCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "83c64nRwjxJiKGeeUfmNcC1", "MissionCoinCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.MissionCoinCtrl = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.goldCoin = null, this.coinCount = 0, this.m_nodeTaret = null
            }
            coinMoveToTarget(e, t, o = this.node) {
                if (null != this.m_nodeTaret) {
                    let i = o.parent.convertToWorldSpaceAR(o.getPosition()),
                        s = new cc.Vec2(i.x, i.y);
                    this.m_iFinishedCoid = 0;
                    for (let o = 0; o < this.coinCount; o++) {
                        var n = cc.instantiate(this.goldCoin);
                        n.parent = cc.director.getScene(), n.setPosition(s);
                        let i = cc.hide(),
                            r = cc.delayTime(.25 * o),
                            a = cc.show(),
                            l = cc.moveTo(.25, s.add(new cc.Vec2(200 * Math.random() - 100, 100))),
                            c = cc.moveTo(.25, s.add(new cc.Vec2(200 * Math.random() - 100, 0))),
                            h = cc.moveTo(.25, s.add(new cc.Vec2(200 * Math.random() - 100, 100))),
                            m = cc.moveTo(e, new cc.Vec2(this.m_nodeTaret.getPosition().x, this.m_nodeTaret.getPosition().y)),
                            u = cc.removeSelf(),
                            d = cc.callFunc(() => {
                                this.m_iFinishedCoid++, this.m_iFinishedCoid >= this.coinCount && t()
                            }),
                            p = cc.sequence(i, r, a, l, c, h, m, u, d);
                        n.runAction(p)
                    }
                }
            }
        };
        n([s(cc.Prefab)], r.prototype, "goldCoin", void 0), n([s(cc.Integer)], r.prototype, "coinCount", void 0), n([s(cc.Node)], r.prototype, "m_nodeTaret", void 0), r = n([i], r), o.MissionCoinCtrl = r, cc._RF.pop()
    }, {}],
    MissionData: [function(e, t, o) {
        "use strict";
        var n;
        cc._RF.push(t, "f0eb9J77rpJBKRvE9/9leyr", "MissionData"), Object.defineProperty(o, "__esModule", {
                value: !0
            }), o.QustObjectiveType = o.UserQuestDataStatus = o.Award = o.MissionData = void 0, o.MissionData = class {
                constructor() {
                    this.CustomInfoMsg = "", this.Status = -1, this.CanShow = !1, this.QuestType = n.NONE, this.needRebuff = !1
                }
            }, o.Award = class {},
            function(e) {
                e[e.NONE = -1] = "NONE", e[e.QUEST_NOT_DONE = 0] = "QUEST_NOT_DONE", e[e.AWARD_AVAILABLE = 1] = "AWARD_AVAILABLE", e[e.AWARD_CLAIMED = 2] = "AWARD_CLAIMED"
            }(o.UserQuestDataStatus || (o.UserQuestDataStatus = {})),
            function(e) {
                e[e.NONE = -1] = "NONE", e[e.SPIN_TIME = 0] = "SPIN_TIME", e[e.SPIN_AMOUNT = 1] = "SPIN_AMOUNT", e[e.WIN_AMOUNT = 2] = "WIN_AMOUNT", e[e.CUSTOM = 3] = "CUSTOM"
            }(n = o.QustObjectiveType || (o.QustObjectiveType = {})), cc._RF.pop()
    }, {}],
    MissionInfoCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "46572Jj8zRClr5sdSD/quXx", "MissionInfoCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.MissionInfoCtrl = void 0;
        const i = e("./MissionCoinCtrl"),
            s = e("./MissionMsgCtrl"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.themeID = 0, this.isFinishClaim = !1, this.missionRoot = null, this.ribbon = null, this.coin = null, this.coinNumLabel = null, this.ProcessingRibbon = null, this.CompletedRibbon = null, this.ComingSoonRibbon = null, this.gameLinkICON = null, this.barGround = null, this.bar = null, this.barText = null, this.ProcessingContentNode = null, this.CompletedContentNode = null, this.ComingSoonContentNode = null, this.PlayBtn = null, this.CollectBtn = null, this.CollectBtnHand = null, this.spinTextNode = null, this.gameWinTextNode = null, this.tick = null, this.maxFactorNumLabel = null, this.awardLabel = null, this.awardCoin = null, this.coinEntriesPos = null, this.coinWinningPos = null, this.m_labCustomObjective = null, this.m_missionMsgCtrl = null, this.m_nodeMissionMgr = null, this.hidePromptEventId = null, this.m_numProgressSpeed = .02, this.m_bIsProgressUp = !1
            }
            update() {
                this.m_bIsProgressUp && (this.m_numProgressCtr += this.m_numProgressSpeed, this.m_numProgressCtr > this.m_numProgressUpTo && (this.m_bIsProgressUp = !1, this.m_numProgressCtr = this.m_numProgressUpTo), this.setProgress(this.m_numProgressCtr))
            }
            setGame(e, t, o) {
                this.m_nodeMissionMgr = e, this.m_iThemeId = t, this.m_sGameName = o, this.themeID = +t
            }
            SetMissionToProcessingStatus(e, t, o, n = "") {
                this.isFinishClaim = !1, this.ProcessingRibbon.active = !0, this.coinNumLabel.string = SS.Common.BaseFunction.addCommas(t, 0, !1), this.coinNumLabel.node.active = !0, this.barGround.node.active = !0, this.bar.node.active = !0, this.barText.node.active = !0, this.ProcessingContentNode.active = !0, this.maxFactorNumLabel.string = o.toString(), this.tick.active = !1, this.awardLabel.node.active = !1, this.CompletedRibbon.active = !1, this.ComingSoonRibbon.active = !1, this.CompletedContentNode.active = !1, this.ComingSoonContentNode.active = !1, this.spinTextNode.active = !1, this.gameWinTextNode.active = !1, this.maxFactorNumLabel.node.active = !1, this.m_labCustomObjective.node.active = !0, this.m_missionMsgCtrl.setMsg(n), this.PlayBtn.clickEvents[0] = new cc.Component.EventHandler, this.PlayBtn.clickEvents[0].target = this.m_nodeMissionMgr, this.PlayBtn.clickEvents[0].component = "RepeatingMissionMgr", this.PlayBtn.clickEvents[0].handler = "OpenSelectOptionPage", this.PlayBtn.clickEvents[0].customEventData = this.m_sGameName
            }
            SetMissionToCompletedStatus(e) {
                this.isFinishClaim = !1, this.CollectBtnHand.active = !0, this.CollectBtn.target.active = !0, this.barGround.node.active = !0, this.bar.node.active = !0, this.barText.node.active = !0, this.CompletedRibbon.active = !0, this.CompletedContentNode.active = !0, this.awardLabel.node.active = !0, this.awardLabel.string = SS.Common.BaseFunction.addCommas(e, 0, !1), this.tick.active = !1, this.coinNumLabel.node.active = !1, this.ProcessingRibbon.active = !1, this.ComingSoonRibbon.active = !1, this.ProcessingContentNode.active = !1, this.ComingSoonContentNode.active = !1, this.maxFactorNumLabel.node.active = !1, this.m_labCustomObjective.node.active = !1, this.m_missionMsgCtrl.hide(), this.CollectBtn.clickEvents[0] = new cc.Component.EventHandler, this.CollectBtn.clickEvents[0].target = this.m_nodeMissionMgr, this.CollectBtn.clickEvents[0].component = "RepeatingMissionMgr", this.CollectBtn.clickEvents[0].handler = "OnClickCollectBtn", this.CollectBtn.clickEvents[0].customEventData = this.m_iThemeId
            }
            SingleMissionToComingsoonStatus() {
                this.isFinishClaim = !0, this.ComingSoonContentNode.active = !0, this.ComingSoonRibbon.active = !0, this.barGround.node.active = !1, this.bar.node.active = !1, this.barText.node.active = !1, this.coinNumLabel.node.active = !1, this.awardLabel.node.active = !1, this.CompletedRibbon.active = !1, this.ProcessingRibbon.active = !1, this.CompletedContentNode.active = !1, this.ProcessingContentNode.active = !1, this.maxFactorNumLabel.node.active = !1, this.m_missionMsgCtrl.hide()
            }
            SetProcessBar(e, t) {
                e >= t && (e = t);
                let o = e / t;
                this.setProgress(o)
            }
            setProgress(e) {
                this.bar.fillStart = e, this.barText.string = (100 * e).toFixed(2) + "%"
            }
            setProgressRebuff(e) {
                this.m_numProgressUpTo = e, this.m_numProgressCtr = 0, this.m_bIsProgressUp = !0
            }
        };
        n([a(cc.Node)], l.prototype, "missionRoot", void 0), n([a(cc.Sprite)], l.prototype, "ribbon", void 0), n([a(cc.Sprite)], l.prototype, "coin", void 0), n([a(cc.Label)], l.prototype, "coinNumLabel", void 0), n([a(cc.Node)], l.prototype, "ProcessingRibbon", void 0), n([a(cc.Node)], l.prototype, "CompletedRibbon", void 0), n([a(cc.Node)], l.prototype, "ComingSoonRibbon", void 0), n([a(cc.Sprite)], l.prototype, "gameLinkICON", void 0), n([a(cc.Sprite)], l.prototype, "barGround", void 0), n([a(cc.Sprite)], l.prototype, "bar", void 0), n([a(cc.Label)], l.prototype, "barText", void 0), n([a(cc.Node)], l.prototype, "ProcessingContentNode", void 0), n([a(cc.Node)], l.prototype, "CompletedContentNode", void 0), n([a(cc.Node)], l.prototype, "ComingSoonContentNode", void 0), n([a(cc.Button)], l.prototype, "PlayBtn", void 0), n([a(cc.Button)], l.prototype, "CollectBtn", void 0), n([a(cc.Node)], l.prototype, "CollectBtnHand", void 0), n([a(cc.Node)], l.prototype, "spinTextNode", void 0), n([a(cc.Node)], l.prototype, "gameWinTextNode", void 0), n([a(cc.Node)], l.prototype, "tick", void 0), n([a(cc.Label)], l.prototype, "maxFactorNumLabel", void 0), n([a(cc.Label)], l.prototype, "awardLabel", void 0), n([a(i.MissionCoinCtrl)], l.prototype, "awardCoin", void 0), n([a(cc.Node)], l.prototype, "coinEntriesPos", void 0), n([a(cc.Node)], l.prototype, "coinWinningPos", void 0), n([a(cc.Label)], l.prototype, "m_labCustomObjective", void 0), n([a(s.MissionMsgCtrl)], l.prototype, "m_missionMsgCtrl", void 0), l = n([r], l), o.MissionInfoCtrl = l, cc._RF.pop()
    }, {
        "./MissionCoinCtrl": "MissionCoinCtrl",
        "./MissionMsgCtrl": "MissionMsgCtrl"
    }],
    MissionListCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "d1264JTe5BAZ4aU+XxzU4Wb", "MissionListCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.MissionListCtrl = void 0;
        const i = e("./RepeatingMissionMgr"),
            s = e("./MissionInfoCtrl"),
            r = e("../../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            a = e("./MissionData"),
            {
                ccclass: l,
                property: c
            } = cc._decorator;
        let h = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeMissionList = null, this.m_nodeContent = null, this.m_prefabMisionInfo = null, this.m_ContentPoints = [], this.m_aryMissionList = [], this.m_nodePoolMissions = null, this.nodeContentLayout = null, this.m_dateLastTimeOpenPanel = 0, this.m_Mgr = null, this.m_iDLPicCtr = 0, this.m_iDLPicTryCtr = 0, this.m_dictDLPic = null, this.errorCode = "", this.m_strCollectQuestID = ""
            }
            ClearRes() {
                if (this.m_dictDLPic) {
                    let e = this.m_dictDLPic.keys;
                    for (let t = 0; t < this.m_dictDLPic.keys.length; t++) {
                        let o = this.m_dictDLPic[e[t]];
                        cc.assetManager.releaseAsset(o.getTexture()), this.m_dictDLPic[e[t]] = null
                    }
                    this.m_dictDLPic.clear(), this.m_dictDLPic = null
                }
                this.m_nodePoolMissions && this.m_nodePoolMissions.clear()
            }
            init(e) {
                this.nodeContentLayout = this.m_nodeContent.getComponent(cc.Layout), this.m_Mgr = e, this.show(!1), this.m_nodePoolMissions = new cc.NodePool;
                for (let t = 0; t < 4; ++t) {
                    let e = cc.instantiate(this.m_prefabMisionInfo);
                    this.m_nodePoolMissions.put(e)
                }
                this.m_dictDLPic = new SS.Common.Dictionary
            }
            show(e) {
                this.m_nodeMissionList.active = e
            }
            setInteract(e) {
                for (let t = 0; t < this.m_aryMissionList.length; t++) this.m_aryMissionList[t].PlayBtn.interactable = e, this.m_aryMissionList[t].CollectBtn.interactable = e
            }
            getMissionInfoCtrlByThemeID(e) {
                for (let t = 0; t < this.m_aryMissionList.length; t++)
                    if (this.m_aryMissionList[t].themeID == e) return this.m_aryMissionList[t];
                return null
            }
            updateMisInfo(e) {
                let t = [],
                    o = e.length > 0;
                if (this.show(o), o) {
                    this.m_ContentPoints.length > 0 ? this.nodeContentLayout.enabled = !1 : this.nodeContentLayout.enabled = !0, this.m_aryMissionList.forEach(e => {
                        this.m_nodePoolMissions.put(e.node)
                    }), this.m_aryMissionList = [], e.sort(this.cmpPriority), this.m_iDLPicCtr = e.length;
                    for (let o = 0; o < e.length; o++) {
                        let n = e[o],
                            i = this.m_nodePoolMissions.get();
                        if (i.parent = this.m_nodeContent, this.m_ContentPoints.length > 0) {
                            let e = new cc.Vec2(this.m_ContentPoints[o].getPosition().x - this.m_nodeContent.getPosition().x, this.m_ContentPoints[o].getPosition().y - this.m_nodeContent.getPosition().y);
                            i.setPosition(e)
                        }
                        let r = i.getComponent(s.MissionInfoCtrl);
                        this.m_aryMissionList.push(r);
                        let l = 0,
                            c = 0;
                        if (n.SpinTimesGate > 0) n.QuestType = a.QustObjectiveType.SPIN_TIME, l = n.SpinTimesGate, c = n.SpinTimes, n.CustomInfoMsg = "Complete " + l + " spin times";
                        else if (n.SpinAmountGate > 0) n.QuestType = a.QustObjectiveType.SPIN_AMOUNT, l = n.SpinAmountGate, c = n.SpinAmount, n.CustomInfoMsg = "Complete total entries " + l;
                        else if (n.WinAmountGate > 0) n.QuestType = a.QustObjectiveType.WIN_AMOUNT, l = n.WinAmountGate, c = n.WinAmount, n.CustomInfoMsg = "Accumulate winning above " + l;
                        else {
                            if (0 == n.CustomType) return void console.error("QuestType error");
                            n.QuestType = a.QustObjectiveType.CUSTOM, l = n.CustomGate, c = n.CustomAmount
                        }
                        let h = this.getGameNameByThemeID(n.ThemeID);
                        switch (t.push(h), this.DLAndSetSprFrame(h, r.gameLinkICON, "Mission/"), r.setGame(this.m_Mgr.node, n.ThemeID, h), r.missionRoot.active = !0, n.Status) {
                            case a.UserQuestDataStatus.QUEST_NOT_DONE:
                                this.m_strCollectQuestID == n.QuestID ? (this.m_strCollectQuestID = "", r.setProgressRebuff(c / l)) : r.SetProcessBar(c, l), r.SetMissionToProcessingStatus(n.QuestType, n.Award.AwardWinnings, l, n.CustomInfoMsg);
                                break;
                            case a.UserQuestDataStatus.AWARD_AVAILABLE:
                                r.SetProcessBar(100, 100), r.SetMissionToCompletedStatus(n.Award.AwardWinnings);
                                break;
                            case a.UserQuestDataStatus.AWARD_CLAIMED:
                                r.SingleMissionToComingsoonStatus()
                        }
                    }
                    self == top && (SS.Common.GameEnvironment.GameSetting.questListGameName = t, this.m_Mgr.m_LobbyMgr && this.m_Mgr.m_LobbyMgr.gameIconMgr && (this.m_Mgr.m_LobbyMgr.gameIconMgr.setEventFlag("ALL", t), this.m_Mgr.m_LobbyMgr.gameIconMgr.setEventFlag("SLOT", t))), t = null
                }
            }
            cmpPriority(e, t) {
                return e.Priority - t.Priority
            }
            getFilteredMisInfo(e) {
                try {
                    let o = e.QuestList,
                        n = [],
                        i = SS.Common.GameEnvironment.GameSetting.DisableGame,
                        s = SS.Common.GameEnvironment.GameSetting.Type.ALL;
                    for (let e = 0; e < o.length; e++) {
                        let t = o[e].ThemeID,
                            r = i.indexOf(t),
                            a = this.getGameNameByThemeID(t),
                            l = s.indexOf(a),
                            c = s.indexOf("BIGICON_" + a); - 1 == r && (l > -1 || c > -1) && n.push(o[e])
                    }
                    return n
                } catch (t) {
                    return []
                }
            }
            getGameNameByThemeID(e) {
                let t = "";
                try {
                    t = SS.Common.GameEnvironment.GameSetting.Icon[e].GameName
                } catch (o) {}
                return t
            }
            getThemeIDByGameName(e) {
                try {
                    let o = SS.Common.GameEnvironment.GameSetting.Icon;
                    for (let t in o)
                        if (o[t].GameName = e) return +t
                } catch (t) {}
                return 0
            }
            DLAndSetSprFrame(e, t, o = "") {
                let n, i = (n = SS.Common.GameEnvironment.ProjectSetting.CDN_HOST ? window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.CDN_HOST : self == top ? "../../.." : "../../../..") + "/Icons/" + o + e;
                null != this.m_dictDLPic[i] ? this.setSprFrame(i, t, this.m_dictDLPic[i]) : (t.enabled = !1, this.m_iDLPicTryCtr = 0, this.DLSprFrame(i, t))
            }
            DLSprFrame(e, t) {
                try {
                    let n = e + ".png?" + (new Date).getTime();
                    cc.assetManager.loadRemote(n, (o, n) => {
                        if (o) return this.DLSprFrameErr(e, t), null;
                        let i = new cc.SpriteFrame(n);
                        this.setSprFrame(e, t, i)
                    })
                } catch (o) {
                    return this.DLSprFrameErr(e, t), null
                }
            }
            setSprFrame(e, t, o) {
                this.m_dictDLPic[e] = o, t.spriteFrame = o, t.sizeMode = cc.Sprite.SizeMode.RAW, t.enabled = !0, this.m_iDLPicCtr--, 0 == this.m_iDLPicCtr && (this.m_Mgr.m_status = i.MisMgrStatus.IDLE)
            }
            DLSprFrameErr(e, t) {
                this.m_iDLPicTryCtr++, this.m_iDLPicTryCtr >= 3 ? (this.errorCode = "C38", r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Error, this.errorCode, null, null, null), this.m_Mgr.m_status = i.MisMgrStatus.IDLE) : this.DLSprFrame(e, t)
            }
        };
        n([c(cc.Node)], h.prototype, "m_nodeMissionList", void 0), n([c(cc.Node)], h.prototype, "m_nodeContent", void 0), n([c(cc.Prefab)], h.prototype, "m_prefabMisionInfo", void 0), n([c([cc.Node])], h.prototype, "m_ContentPoints", void 0), h = n([l], h), o.MissionListCtrl = h, cc._RF.pop()
    }, {
        "../../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "./MissionData": "MissionData",
        "./MissionInfoCtrl": "MissionInfoCtrl",
        "./RepeatingMissionMgr": "RepeatingMissionMgr"
    }],
    MissionMsgCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "f3219SCQKJOf6USGkU2tqE+", "MissionMsgCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.MissionMsgCtrl = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_iOneLineMax = 0, this.m_arrRichTxtMsg = [], this.m_sPrefix = "<outline color=ff33ff width=2>", this.m_sPostfix = "</outline>", this.m_sNumPrefix = "<outline color=FF5511 width=3><color=#FFEE99><b>", this.m_sNumPostfix = "</b></color></outline>"
            }
            setMsg(e) {
                e.length > 2 * this.m_iOneLineMax && console.error("Msg too long");
                let t = e.split(" "),
                    o = "",
                    n = 0,
                    i = !0;
                this.hide();
                for (let s = 0; s < t.length; s++) n + t[s].length + 1 > this.m_iOneLineMax && (this.m_arrRichTxtMsg[0].string = this.globalFix(o), this.m_arrRichTxtMsg[0].enabled = !0, i = !1, o = "", n = 0), n = n + t[s].length + 1, isNaN(+t[s]) || (t[s] = this.numberFix(t[s])), o = "" == o ? t[s] : o + " " + t[s];
                i ? (this.m_arrRichTxtMsg[2].string = this.globalFix(o), this.m_arrRichTxtMsg[2].enabled = !0) : (this.m_arrRichTxtMsg[1].string = this.globalFix(o), this.m_arrRichTxtMsg[1].enabled = !0)
            }
            numberFix(e) {
                return this.m_sNumPrefix + e + this.m_sNumPostfix
            }
            globalFix(e) {
                return this.m_sPrefix + e + this.m_sPostfix
            }
            hide() {
                for (let e = 0; e < this.m_arrRichTxtMsg.length; e++) null != this.m_arrRichTxtMsg[e] && (this.m_arrRichTxtMsg[e].enabled = !1)
            }
        };
        n([s(cc.Integer)], r.prototype, "m_iOneLineMax", void 0), n([s([cc.RichText])], r.prototype, "m_arrRichTxtMsg", void 0), r = n([i], r), o.MissionMsgCtrl = r, cc._RF.pop()
    }, {}],
    MissionTopProgress: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "c39290CEhBF+LkasHENKNOS", "MissionTopProgress");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.MissionTopProgress = void 0;
        const i = e("../../../Component/AudioMgr"),
            s = e("./MissionData"),
            r = e("./MissionMsgCtrl"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_Prompt = null, this.m_animate = null, this.m_nodeSprContent = [], this.m_labGoalValue = null, this.promptBar = null, this.m_btn = null, this.promptClaimBtnHand = null, this.promptProcessLabel = null, this.m_labCustomInfo = null, this.m_missionMsgCtrl = null, this.hidePromptEventId = null, this.m_numProgressSpeed = .002, this.m_bIsProgressUp = !1
            }
            update() {
                this.m_bIsProgressUp && (this.m_numProgressCtr += this.m_numProgressSpeed, this.m_numProgressCtr > this.m_numProgressUpTo && (this.m_bIsProgressUp = !1, this.m_numProgressCtr = this.m_numProgressUpTo), this.setProgress(this.m_numProgressCtr))
            }
            init(e) {
                this.m_Prompt.active = !1, this.promptBar.fillStart = 0, this.m_animate = this.m_Prompt.getComponent(cc.Animation), this.hidePromptEventId = void 0
            }
            show(e, t = -1, o = "", n = 5e3) {
                if (null != this.m_Prompt) {
                    window.clearTimeout(this.hidePromptEventId);
                    let r = SS.Common.GameEnvironment.GetCurGameIsVertical();
                    if (e) {
                        if (this.m_Prompt.active = e, -1 != t && null != this.m_nodeSprContent)
                            for (let e = 0; e < this.m_nodeSprContent.length; e++) this.m_nodeSprContent[e].active = !1;
                        switch (t) {
                            case s.QustObjectiveType.SPIN_AMOUNT:
                            case s.QustObjectiveType.SPIN_TIME:
                            case s.QustObjectiveType.WIN_AMOUNT:
                            case s.QustObjectiveType.CUSTOM:
                                this.m_labCustomInfo.enabled = !1, this.m_labGoalValue.enabled = !1, this.m_missionMsgCtrl.setMsg(o)
                        }
                        r ? this.m_animate.play("VerticalShowPrompt", 0) : this.m_animate.play("ShowPrompt", 0), i.AudioMgr.Instance.Play("Missions_Call", !1, 1), n >= 0 && (this.hidePromptEventId = setTimeout(() => {
                            this.show(!1)
                        }, n))
                    } else this.showFingerPtr(!1), this.showBtn(!1), r ? this.m_animate.play("VerticalHidePrompt", 0) : this.m_animate.play("HidePrompt", 0), this.hidePromptEventId = setTimeout(() => {
                        this.m_Prompt && (this.m_Prompt.active = !1)
                    }, 2e3)
                }
            }
            showBtn(e) {
                null != this.m_btn && (this.m_btn.node.active = e, this.showFingerPtr(e))
            }
            showFingerPtr(e) {
                null != this.promptClaimBtnHand && (this.promptClaimBtnHand.active = e)
            }
            setInteract(e) {
                null != this.m_btn && (this.m_btn.interactable = e)
            }
            setProgress(e) {
                this.promptBar.fillStart = e, this.promptProcessLabel.string = (100 * e).toFixed(2) + "%"
            }
            setProgressCtr(e) {
                this.m_numProgressCtr = e
            }
            setProgressChargeTo(e) {
                this.m_numProgressUpTo = e, this.m_bIsProgressUp = !0
            }
        };
        n([l(cc.Node)], c.prototype, "m_Prompt", void 0), n([l([cc.Node])], c.prototype, "m_nodeSprContent", void 0), n([l(cc.Label)], c.prototype, "m_labGoalValue", void 0), n([l(cc.Sprite)], c.prototype, "promptBar", void 0), n([l(cc.Button)], c.prototype, "m_btn", void 0), n([l(cc.Node)], c.prototype, "promptClaimBtnHand", void 0), n([l(cc.Label)], c.prototype, "promptProcessLabel", void 0), n([l(cc.Label)], c.prototype, "m_labCustomInfo", void 0), n([l(r.MissionMsgCtrl)], c.prototype, "m_missionMsgCtrl", void 0), c = n([a], c), o.MissionTopProgress = c, cc._RF.pop()
    }, {
        "../../../Component/AudioMgr": "AudioMgr",
        "./MissionData": "MissionData",
        "./MissionMsgCtrl": "MissionMsgCtrl"
    }],
    ModuleBase: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "eb3796IQLFMvp3XNPZhS28P", "ModuleBase");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const s = e("./Helper/EventSystem"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends cc.Component {
            onLoad() {
                s.EventSystem.Event(s.ModuleState.OnLoad).Insert(this.OnLoad, this), s.EventSystem.Event(s.ModuleState.Start).Insert(this.Start, this), s.EventSystem.Event(s.ModuleState.OnDestroy).Insert(this.OnDestroy, this), s.EventSystem.Event(s.LobbyState.CheckVersion).Insert(this.CheckVersion, this), s.EventSystem.Event(s.LobbyState.DownloadSetting).Insert(this.DownloadSetting, this), s.EventSystem.Event(s.LobbyState.WaitPacket).Insert(this.WaitPacket, this), s.EventSystem.Event(s.LobbyState.DownloadResources).Insert(this.DownloadResources, this), s.EventSystem.Event(s.LobbyState.Logout).Insert(this.Logout, this)
            }
            OnLoad(e = null) {
                return i(this, void 0, void 0, function*() {
                    console.log("[ModuleBase][" + this.node.name + "] On Load"), yield this._onLoad(), s.EventSystem.Event(s.ModuleState.OnLoad).Remove(this.OnLoad, this), e && e()
                })
            }
            _onLoad() {
                return i(this, void 0, void 0, function*() {})
            }
            OnDestroy(e = null) {
                return i(this, void 0, void 0, function*() {
                    this.ClearEvent(), this.node && (console.log("[" + this.node.name + "] Force On Destroy"), yield this._onDestroy()), e && e()
                })
            }
            onDestroy() {
                console.log("[" + this.node.name + "] Normal On Destroy"), this.ClearEvent(), this._onDestroy()
            }
            ClearEvent() {
                s.EventSystem.Event(s.ModuleState.OnLoad).Remove(this.OnLoad, this), s.EventSystem.Event(s.ModuleState.Start).Remove(this.Start, this), s.EventSystem.Event(s.ModuleState.OnDestroy).Remove(this.OnDestroy, this), s.EventSystem.Event(s.LobbyState.CheckVersion).Remove(this.CheckVersion, this), s.EventSystem.Event(s.LobbyState.DownloadSetting).Remove(this.DownloadSetting, this), s.EventSystem.Event(s.LobbyState.WaitPacket).Remove(this.WaitPacket, this), s.EventSystem.Event(s.LobbyState.DownloadResources).Remove(this.DownloadResources, this), s.EventSystem.Event(s.LobbyState.Logout).Remove(this.Logout, this)
            }
            _onDestroy() {
                return i(this, void 0, void 0, function*() {})
            }
            Start(e = null) {
                return i(this, void 0, void 0, function*() {
                    console.log("[" + this.node.name + "] Start"), yield this._start(), s.EventSystem.Event(s.ModuleState.Start).Remove(this.Start, this), e && e()
                })
            }
            _start() {
                return i(this, void 0, void 0, function*() {})
            }
            CheckVersion(e = null) {
                return i(this, void 0, void 0, function*() {
                    console.log("[" + this.node.name + "] Check Version"), yield this._checkVersion(), e && e()
                })
            }
            _checkVersion() {
                return i(this, void 0, void 0, function*() {})
            }
            DownloadSetting(e = null) {
                return i(this, void 0, void 0, function*() {
                    console.log("[" + this.node.name + "] DownloadSetting"), yield this._dowloadSetting(), e && e()
                })
            }
            _dowloadSetting() {
                return i(this, void 0, void 0, function*() {})
            }
            WaitPacket(e = null) {
                return i(this, void 0, void 0, function*() {
                    console.log("[" + this.node.name + "] Wait Packet"), yield this._waitPacket(), e && e()
                })
            }
            _waitPacket() {
                return i(this, void 0, void 0, function*() {})
            }
            DownloadResources(e = null) {
                return i(this, void 0, void 0, function*() {
                    console.log("[" + this.node.name + "] Download Resources"), yield this._downloadResources(), e && e()
                })
            }
            _downloadResources() {
                return i(this, void 0, void 0, function*() {})
            }
            Logout(e = null) {
                return i(this, void 0, void 0, function*() {
                    console.log("[" + this.node.name + "] Logout"), yield this._logout(), e && e()
                })
            }
            _logout() {
                return i(this, void 0, void 0, function*() {})
            }
        };
        l = n([r], l), o.default = l, cc._RF.pop()
    }, {
        "./Helper/EventSystem": "EventSystem"
    }],
    ModuleDownloader: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "6c403fFGPlI8Z29DPMrclrH", "ModuleDownloader"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ModuleDownloader = void 0;
        const n = e("./SSDownloader");
        o.ModuleDownloader = class extends n.default {
            constructor() {
                super(...arguments), this.ModuleName = "", this.OnLoad = null, this.OnError = null
            }
            Start(e, t, o, n) {
                this.ModuleName = e, this.OnLoad = o, this.OnError = n, this.LoadModuleDependences(t)
            }
            LoadModuleDependences(e) {
                let t = this;
                try {
                    let n = e.Modules,
                        i = n[t.ModuleName];
                    if (null == i) return console.warn("[ModuleDownloader] It's not exist module: " + t.ModuleName), void(null != t.OnLoad && t.OnLoad());
                    let s = new Array,
                        r = i.Dependency;
                    if (null == r) return console.warn("[ModuleDownloader] It's not exist dependency module"), void(null != t.OnLoad && t.OnLoad());
                    let a = Object.keys(r);
                    if (0 == a.length) return console.warn("[ModuleDownloader] It's not exist dependency module"), void(null != t.OnLoad && t.OnLoad());
                    console.log("[ModuleDownloader] %c Dependent modules:", "font-size:18px;font-weight:bold;color:green");
                    for (let e of a) {
                        let t = r[e];
                        1 == t && s.push(e);
                        let o = "[ModuleDownloader] " + e + ": %c" + t,
                            n = 1 == t ? "green" : "red";
                        console.log(o, "font-size:18px;font-weight:bold;color:" + n)
                    }
                    let l, c = 0,
                        h = function() {
                            ++c == s.length && (console.log("[ModuleDownloader] %c Load dependent modules success!", "font-size:18px;font-weight:bold;color:green"), null != t.OnLoad && t.OnLoad())
                        };
                    l = e.CDN_HOST ? window.location.protocol + "//" + e.CDN_HOST : "../../..";
                    for (let e of s) {
                        let o = n[e].Path,
                            i = n[e].Version,
                            s = null == n[e].FileName ? e + ".js" : n[e].FileName,
                            r = "";
                        r = null != i && "" != i ? l + o + i + "/" + s : l + o + s, console.log("[ModuleDownloader] Load module script: " + r), t.GetScript(r, h, t.OnError.bind(this))
                    }
                } catch (o) {
                    console.error("[ModuleDownloader] Load project setting failed.\n", o), null != t.OnError && t.OnError(o)
                }
            }
        }, cc._RF.pop()
    }, {
        "./SSDownloader": "SSDownloader"
    }],
    MultiStateNodeHandler: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "1a2daWuRAdNnaf1XPmp9cLw", "MultiStateNodeHandler");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.NodeSettingList = void 0;
        const i = e("../../FullScreenHandler"),
            s = e("../../Helper/EventSystem"),
            r = e("./NodeHandler"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        let c = class {
            constructor() {
                this.list = []
            }
            set recordV(e) {
                this.list.forEach(t => {
                    t.recordV = e
                })
            }
            get recordV() {
                return !1
            }
            set recordH(e) {
                this.list.forEach(t => {
                    t.recordH = e
                })
            }
            get recordH() {
                return !1
            }
        };
        n([l({
            displayName: "\u7d00\u9304\u76f4\u7248"
        })], c.prototype, "recordV", null), n([l({
            displayName: "\u7d00\u9304\u6a6b\u7248"
        })], c.prototype, "recordH", null), n([l({
            type: [r.NodeSetting]
        })], c.prototype, "list", void 0), c = n([a("NodeSettingList")], c), o.NodeSettingList = c;
        let h = class extends cc.Component {
            constructor() {
                super(...arguments), this._orientation = i.Orientation.Landscape, this._status = 0, this.NumOfStatus = 0, this._nodeList = [], this.settingList = []
            }
            set toH(e) {
                this.setting.forEach(e => {
                    e.ChangeOrientation(i.Orientation.Landscape)
                }), this.orientation = i.Orientation.Landscape
            }
            get toH() {
                return !1
            }
            set toV(e) {
                this.setting.forEach(e => {
                    e.ChangeOrientation(i.Orientation.Portrait)
                }), this.orientation = i.Orientation.Portrait
            }
            get toV() {
                return !1
            }
            set orientation(e) {
                this._orientation = e
            }
            get orientation() {
                return this._orientation
            }
            set status(e) {
                e < this.NumOfStatus ? (this._status = e, this.OnOrientationChange(this.orientation)) : Editor.log("Can Not Set Over The Limit!")
            }
            get status() {
                return this._status
            }
            set record(e) {
                this._orientation !== i.Orientation.Auto ? this.setting.forEach(t => {
                    this._orientation === i.Orientation.Portrait ? t.recordV = e : this._orientation === i.Orientation.Landscape && (t.recordH = e)
                }) : Editor.log("Accept only Portrait or Landscape!")
            }
            get record() {
                return !1
            }
            set clear(e) {
                e && (Editor.log("Cleared!"), this.nodeList = this._nodeList.filter(e => null !== e))
            }
            get clear() {
                return !1
            }
            set nodeList(e) {
                this._nodeList = e;
                let t = new Array(this.NumOfStatus);
                for (let o = 0; o < this.NumOfStatus; ++o) t[o] = new c, t[o].list = new Array(this._nodeList.length), this._nodeList.forEach((e, n) => {
                    t[o].list[n] = new r.NodeSetting, t[o].list[n].node = e, t[o].list[n].recordH = !0, t[o].list[n].recordV = !0
                });
                this.settingList.forEach((e, o) => {
                    this._nodeList.forEach((n, i) => {
                        let s = e.list.findIndex(e => e.node === n);
                        n && -1 !== s && (t[o].list[i] = e.list[s])
                    })
                }), this.settingList = t
            }
            get nodeList() {
                return this._nodeList
            }
            set setting(e) {
                this.settingList[this._status].list = e
            }
            get setting() {
                try {
                    return this.settingList[this._status].list
                } catch (e) {
                    return null
                }
            }
            onLoad() {
                s.EventSystem.Event(s.ScreenOrientationState.ChangeOrientation).Insert(this.OnOrientationChange, this)
            }
            onDestroy() {
                s.EventSystem.Event(s.ScreenOrientationState.ChangeOrientation).Remove(this.OnOrientationChange, this)
            }
            OnOrientationChange(e) {
                e === i.Orientation.Landscape ? this.toH = !0 : this.toV = !0
            }
        };
        n([l({
            displayName: "\u6a6b\u7248\u986f\u793a"
        })], h.prototype, "toH", null), n([l({
            displayName: "\u76f4\u7248\u986f\u793a"
        })], h.prototype, "toV", null), n([l({
            type: cc.Enum(i.Orientation),
            displayName: "\u76ee\u524d\u662f\u54ea\u7a2e\u65b9\u5411"
        })], h.prototype, "orientation", null), n([l({
            type: cc.Enum(i.Orientation),
            visible: !1
        })], h.prototype, "_orientation", void 0), n([l({
            type: cc.Integer,
            displayName: "\u986f\u793a",
            min: 0
        })], h.prototype, "status", null), n([l({
            type: cc.Integer,
            visible: !1
        })], h.prototype, "_status", void 0), n([l({
            type: cc.Integer,
            displayName: "\u6709\u5e7e\u7a2e\u72c0\u614b"
        })], h.prototype, "NumOfStatus", void 0), n([l({
            displayName: "\u7d00\u9304\u4f4d\u7f6e"
        })], h.prototype, "record", null), n([l({
            displayName: "\u6e05\u9664\u9663\u5217\u7684\u7a7a\u5143\u7d20"
        })], h.prototype, "clear", null), n([l({
            type: cc.Node
        })], h.prototype, "nodeList", null), n([l({
            type: cc.Node,
            visible: !1
        })], h.prototype, "_nodeList", void 0), n([l({
            type: r.NodeSetting,
            visible: !1
        })], h.prototype, "setting", null), n([l({
            type: c,
            visible: !1
        })], h.prototype, "settingList", void 0), h = n([a], h), o.default = h, cc._RF.pop()
    }, {
        "../../FullScreenHandler": "FullScreenHandler",
        "../../Helper/EventSystem": "EventSystem",
        "./NodeHandler": "NodeHandler"
    }],
    NewPlayerGuideCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "76d2e4gmupByK29M/ObnJCq", "NewPlayerGuideCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.NewPlayerGuideCtrl = void 0;
        const {
            ccclass: s,
            property: r
        } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeGuide = [], this.m_nodeBtn = null, this.m_nodeHand = null, this.m_iState = 0, this.m_fucSetPage_1 = null, this.m_fucSetPage_2 = null, this.m_fucCB = null
            }
            checkCoockieAndShow(e, t, o) {
                cc.warn("checkCoockieAndShow"), this.m_fucSetPage_1 = e, this.m_fucSetPage_2 = t, this.m_fucCB = o, this.checkNewPlayer() ? this.ShowGuide() : this.m_fucCB && this.m_fucCB()
            }
            ShowGuide() {
                this.m_iState = 0, this.nextState(), this.m_nodeBtn.active = !0
            }
            nextState() {
                return i(this, void 0, void 0, function*() {
                    switch (this.m_iState) {
                        case 3:
                        case 5:
                            this.m_fucSetPage_1 && this.m_fucSetPage_1();
                            break;
                        case 4:
                            this.m_fucSetPage_2 && this.m_fucSetPage_2()
                    }
                    this.m_iState > 0 && this.fadeOut(this.m_nodeGuide[this.m_iState - 1]), this.m_iState < this.m_nodeGuide.length ? (this.fadeIn(this.m_nodeGuide[this.m_iState]), cc.Tween.stopAllByTarget(this.m_nodeHand), this.m_nodeHand.opacity = 0, cc.tween(this.m_nodeHand).delay(2).to(1, {
                        opacity: 255
                    }).start(), this.m_iState += 1) : (this.m_nodeBtn.active = !1, cc.Tween.stopAllByTarget(this.m_nodeHand), this.m_nodeHand.opacity = 0, this.m_fucSetPage_2 && this.m_fucSetPage_2(), this.m_fucCB && this.m_fucCB())
                })
            }
            fadeIn(e) {
                cc.Tween.stopAllByTarget(e), e.active = !0, e.opacity = 0, cc.tween(e).to(1, {
                    opacity: 255
                }).start()
            }
            fadeOut(e) {
                cc.Tween.stopAllByTarget(e), e.active = !0, e.opacity = 255, cc.tween(e).to(1, {
                    opacity: 0
                }).call(() => {
                    e.active = !1
                }).start()
            }
            onClick() {
                this.nextState()
            }
            onLoad() {
                this.m_nodeBtn.active = !1
            }
            checkNewPlayer() {
                cc.warn("checkNewPlayer");
                let e, t = "",
                    o = "",
                    n = "";
                return n = this.getCookie("GDC_USER_ID"), o = this.getCookie("GUIDED_USER_ID"), e = "" != (t = this.getCookie("GUIDED_USER_CTR")) ? +t : 1, n == o ? (this.setCookie("GUIDED_USER_CTR", (e + 1).toString()), e < 2) : (this.setCookie("GUIDED_USER_ID", n), this.setCookie("GUIDED_USER_CTR", "1"), !0)
            }
            getCookie(e) {
                return JSUtility.IsSupportLocalStorage() ? localStorage.getItem(e) : JSUtility.IsSupportCookie() ? JSUtility.GetCookie(e) : void 0
            }
            setCookie(e, t) {
                JSUtility.IsSupportLocalStorage() ? localStorage.setItem(e, t) : JSUtility.IsSupportCookie() && (document.cookie = e + "=" + t + ";")
            }
        };
        n([r([cc.Node])], a.prototype, "m_nodeGuide", void 0), n([r(cc.Node)], a.prototype, "m_nodeBtn", void 0), n([r(cc.Node)], a.prototype, "m_nodeHand", void 0), a = n([s], a), o.NewPlayerGuideCtrl = a, cc._RF.pop()
    }, {}],
    NewRedPointMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "b1999KSTZhNPpSsvxf28uU3", "NewRedPointMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.NewRedPoint = o.NewRedPointType = void 0;
        const i = e("../../LobbyCommon/Helper/EventSystem"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        var a;
        (function(e) {
            e[e.Avatar = 0] = "Avatar", e[e.AvatarFrame = 1] = "AvatarFrame", e[e.Both = 2] = "Both"
        })(a = o.NewRedPointType || (o.NewRedPointType = {}));
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_spriteRedPoint = null, this.showRedType = a.Both, this.m_strCookieKey = "ProfileBarNewRedPoint"
            }
            start() {
                this.m_strCookieKey = this.m_strCookieKey + "_" + SS.Network.LoginModel.LoginInfo.pin_ark_id, this.CheckCookieAndShow(), i.EventSystem.Event(i.NoticedArrived.SetNewsRedPoint).Insert(this.SetCookie, this)
            }
            onDestroy() {
                i.EventSystem.Event(i.NoticedArrived.SetNewsRedPoint).Remove(this.SetCookie, this)
            }
            SetCookie(e, t) {
                t == a.Both ? (this.SetProfileBarNewRedPoint(e, a.Avatar), this.SetProfileBarNewRedPoint(e, a.AvatarFrame)) : this.SetProfileBarNewRedPoint(e, t), this.CheckCookieAndShow()
            }
            CheckCookieAndShow() {
                let e = !1;
                this.showRedType == a.Both ? e = this.GetProfileBarNewRedPoint(a.Avatar) || this.GetProfileBarNewRedPoint(a.AvatarFrame) : this.showRedType == a.Avatar ? e = this.GetProfileBarNewRedPoint(a.Avatar) : this.showRedType == a.AvatarFrame && (e = this.GetProfileBarNewRedPoint(a.AvatarFrame)), this.Show(e)
            }
            Show(e) {
                let t = 0;
                1 == e && (t = 255), this.m_spriteRedPoint && (this.m_spriteRedPoint.node.opacity = t)
            }
            GetProfileBarNewRedPoint(e) {
                let t = this.m_strCookieKey + e.toString(),
                    o = this.getCookie(t),
                    n = !0;
                return "" != o && "false" != o && null != o && null != o || (n = !1), n
            }
            SetProfileBarNewRedPoint(e, t) {
                let o = this.m_strCookieKey + t.toString();
                e ? this.setCookie(o, "true") : this.setCookie(o, "false")
            }
            getCookie(e) {
                return JSUtility.IsSupportLocalStorage() ? localStorage.getItem(e) : JSUtility.IsSupportCookie() ? JSUtility.GetCookie(e) : void 0
            }
            setCookie(e, t) {
                JSUtility.IsSupportLocalStorage() ? "false" == t ? localStorage.removeItem(e) : localStorage.setItem(e, t) : JSUtility.IsSupportCookie() && (document.cookie = e + "=" + t + ";")
            }
        };
        n([r(cc.Sprite)], l.prototype, "m_spriteRedPoint", void 0), n([r({
            type: cc.Enum(a)
        })], l.prototype, "showRedType", void 0), l = n([s], l), o.NewRedPoint = l, cc._RF.pop()
    }, {
        "../../LobbyCommon/Helper/EventSystem": "EventSystem"
    }],
    NodeDrag: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "36e20vrfYZKgppRiZGLXmlN", "NodeDrag");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.NodeDrag = void 0;
        const i = e("../FullScreenHandler"),
            s = e("../Helper/EventSystem"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_fBoundLeft = 30, this.m_fBoundRight = 30, this.m_fBoundUp = 50, this.m_fBoundDown = 50, this.m_sRecordKey = "", this.dragMovePos = cc.Vec2.ZERO, this.m_orientation = i.Orientation.Landscape
            }
            start() {
                this.screenSize = cc.view.getVisibleSize(), this.screenSize.width = this.screenSize.width - this.m_fBoundRight - this.m_fBoundLeft, this.screenSize.height = this.screenSize.height - this.m_fBoundUp - this.m_fBoundDown, s.EventSystem.Event(s.LobbyState.Logout).Insert(this.Logout, this), this.node.on(cc.Node.EventType.TOUCH_START, this.OnDragInit.bind(this)), this.node.on(cc.Node.EventType.TOUCH_MOVE, this.OnDragItem.bind(this)), this.node.on(cc.Node.EventType.TOUCH_END, this.OnDragEnd.bind(this));
                let e = SS.Common.GameEnvironment.CurrentGameNow;
                null != e && "" != e && SS.Common.GameEnvironment.GetCurGameIsVertical() && (this.m_orientation = i.Orientation.Portrait), this.returnToRecordPos()
            }
            onDestroy() {
                this.node && (this.node.off(cc.Node.EventType.TOUCH_START, this.OnDragInit.bind(this)), this.node.off(cc.Node.EventType.TOUCH_MOVE, this.OnDragItem.bind(this)), this.node.off(cc.Node.EventType.TOUCH_END, this.OnDragEnd.bind(this))), s.EventSystem.Event(s.LobbyState.Logout).Remove(this.Logout, this)
            }
            _onDestroy() {
                this.node && (this.node.off(cc.Node.EventType.TOUCH_START, this.OnDragInit, this), this.node.off(cc.Node.EventType.TOUCH_MOVE, this.OnDragItem, this), this.node.off(cc.Node.EventType.TOUCH_END, this.OnDragEnd, this)), s.EventSystem.Event(s.LobbyState.Logout).Remove(this.Logout, this)
            }
            Logout() {
                SS.Common.GameEnvironment.ProjectSetting[this.key] = void 0
            }
            OnDragInit() {
                this.m_bIsLocked || (this.dragMovePos = cc.Vec2.ZERO, this.isDraging = !1, null != this.Event_DragStart && this.Event_DragStart())
            }
            OnDragItem(e) {
                if (this.m_bIsLocked) return;
                if (this.dragMovePos = e.getDelta(), this.dragMovePos.mag() < 1.5 && !this.isDraging) return;
                this.isDraging = !0;
                let t = this.node.getPosition(),
                    o = new cc.Vec3(t.x + this.dragMovePos.x, t.y + this.dragMovePos.y);
                this.setPositionInbound(o, !0)
            }
            OnDragEnd(e) {
                this.isDraging ? (null != this.Event_DragEnd && this.Event_DragEnd(), console.log("draging node !!")) : (null != this.Event_ClickItem && this.Event_ClickItem(), console.log("click activities node !!"))
            }
            setLocked(e) {
                this.m_bIsLocked = e
            }
            move(e, t) {
                null == this.getRecordPos() && this.setPositionInbound(new cc.Vec3(this.node.position.x + e, this.node.position.y + t))
            }
            returnToRecordPos() {
                this.setPositionInbound(this.getRecordPos())
            }
            setPositionInbound(e, t = !1) {
                if (e && (this.screenSize && (e.x = SS.Common.BaseFunction.Clamp(this.m_fBoundLeft, this.screenSize.width, e.x), e.y = SS.Common.BaseFunction.Clamp(this.m_fBoundDown, this.screenSize.height, e.y)), this.node.setPosition(e), t)) {
                    const e = this.node.convertToWorldSpaceAR(cc.Vec3.ZERO);
                    this.setRecordPos(e)
                }
            }
            get key() {
                return "" == this.m_sRecordKey ? this.m_sRecordKey : this.m_sRecordKey + this.m_orientation
            }
            getRecordPos() {
                const e = SS.Common.GameEnvironment.ProjectSetting[this.key];
                return e && this.node && this.node.parent ? this.node.parent.convertToNodeSpaceAR(e) : null
            }
            setRecordPos(e) {
                "" != this.m_sRecordKey && (SS.Common.GameEnvironment.ProjectSetting[this.key] = e)
            }
        };
        n([a(cc.Float)], l.prototype, "m_fBoundLeft", void 0), n([a(cc.Float)], l.prototype, "m_fBoundRight", void 0), n([a(cc.Float)], l.prototype, "m_fBoundUp", void 0), n([a(cc.Float)], l.prototype, "m_fBoundDown", void 0), n([a(cc.String)], l.prototype, "m_sRecordKey", void 0), l = n([r], l), o.NodeDrag = l, cc._RF.pop()
    }, {
        "../FullScreenHandler": "FullScreenHandler",
        "../Helper/EventSystem": "EventSystem"
    }],
    NodeHandler: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "2df21iHE55B6qUPvcyfo5S1", "NodeHandler");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.NodeSetting = o.NodeParameter = void 0;
        const s = e("../../FullScreenHandler"),
            r = e("../../Helper/EventSystem"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        let c = class {
            constructor() {
                this.active = !0, this.position = new cc.Vec3(0, 0, 0), this.angle = 0, this.scale = new cc.Vec2(1, 1), this.size = cc.Size.ZERO
            }
            Record(e) {
                this.active = e.active, this.angle = e.angle, this.position = e.position, this.scale = new cc.Vec2(e.scaleX, e.scaleY), this.size = e.getContentSize()
            }
        };
        i([l({
            displayName: "active"
        })], c.prototype, "active", void 0), i([l({
            displayName: "position"
        })], c.prototype, "position", void 0), i([l({
            displayName: "angle"
        })], c.prototype, "angle", void 0), i([l({
            displayName: "scale"
        })], c.prototype, "scale", void 0), i([l({
            displayName: "size"
        })], c.prototype, "size", void 0), c = i([a("NodeParameter")], c), o.NodeParameter = c;
        let h = class {
            constructor() {
                this.node = null, this.paramH = new c, this.paramV = new c
            }
            set recordH(e) {
                e && this.node && this.paramH.Record(this.node)
            }
            get recordH() {
                return !1
            }
            set recordV(e) {
                e && this.node && this.paramV.Record(this.node)
            }
            get recordV() {
                return !1
            }
            ChangeOrientation(e) {
                const t = e === s.Orientation.Portrait ? this.paramV : this.paramH;
                this.node.active = t.active, this.node.position = t.position, this.node.angle = t.angle, this.node.scaleX = t.scale.x, this.node.scaleY = t.scale.y, this.node.setContentSize(t.size)
            }
        };
        i([l({
            type: cc.Node,
            displayName: "node"
        })], h.prototype, "node", void 0), i([l({
            displayName: "\u540c\u6b65\u6a6b\u7248\u4f4d\u7f6e"
        })], h.prototype, "recordH", null), i([l({
            type: c,
            displayName: "\u6a6b\u7248\u53c3\u6578"
        })], h.prototype, "paramH", void 0), i([l({
            displayName: "\u540c\u6b65\u76f4\u7248\u4f4d\u7f6e"
        })], h.prototype, "recordV", null), i([l({
            type: c,
            displayName: "\u76f4\u7248\u53c3\u6578"
        })], h.prototype, "paramV", void 0), h = i([a("NodeSetting")], h), o.NodeSetting = h;
        let m = n = class extends cc.Component {
            constructor() {
                super(...arguments), this._orientation = s.Orientation.Landscape, this._nodeList = [], this.visible = !1, this.setting = [], this.parentHandler = null
            }
            set toH(e) {
                this.setting.forEach(e => {
                    e.ChangeOrientation(s.Orientation.Landscape)
                }), this.orientation = s.Orientation.Landscape, this.Recursive(t => {
                    t.toH = e
                })
            }
            get toH() {
                return !1
            }
            set toV(e) {
                this.setting.forEach(e => {
                    e.ChangeOrientation(s.Orientation.Portrait)
                }), this.orientation = s.Orientation.Portrait, this.Recursive(t => {
                    t.toV = e
                })
            }
            get toV() {
                return !1
            }
            set orientation(e) {
                this._orientation = e
            }
            get orientation() {
                return this._orientation
            }
            set record(e) {
                this._orientation !== s.Orientation.Auto ? (this.setting.forEach(t => {
                    this._orientation === s.Orientation.Portrait ? t.recordV = e : this._orientation === s.Orientation.Landscape && (t.recordH = e)
                }), this.Recursive(t => {
                    t.orientation = this._orientation, t.record = e
                }), Editor.log(this.node.name + " Recorded!")) : Editor.log("Accept only Portrait or Landscape!")
            }
            get record() {
                return !1
            }
            set clear(e) {
                e && (Editor.log("Cleared!"), this.nodeList = this._nodeList.filter(e => null !== e))
            }
            get clear() {
                return !1
            }
            set nodeList(e) {
                this._nodeList = e;
                let t = new Array(this._nodeList.length);
                this._nodeList.forEach((e, o) => {
                    if (e) {
                        let n = this.setting.findIndex(t => t.node === e); - 1 === n ? (t[o] = new h, t[o].node = e, t[o].recordH = !0, t[o].recordV = !0) : t[o] = this.setting[n]
                    } else t[o] = new h
                }), this.setting = t
            }
            get nodeList() {
                return this._nodeList
            }
            set move(e) {
                e && (this.parentHandler.nodeList.forEach((e, t) => {
                    const o = this.nodeList.indexOf(e); - 1 !== o && (this.setting[o] = this.parentHandler.setting[t], this.parentHandler.nodeList[t] = null)
                }), Editor.log("Move"))
            }
            get move() {
                return !1
            }
            Recursive(e) {
                const t = o => {
                    o && 0 !== o.childrenCount && o.children.forEach(o => {
                        const i = o.getComponent(n);
                        i ? e(i) : t(o)
                    })
                };
                t(this.node)
            }
            onLoad() {
                r.EventSystem.Event(r.ScreenOrientationState.ChangeOrientation).Insert(this.OnOrientationChange, this)
            }
            onDestroy() {
                r.EventSystem.Event(r.ScreenOrientationState.ChangeOrientation).Remove(this.OnOrientationChange, this)
            }
            OnOrientationChange(e) {
                e === s.Orientation.Landscape ? this.toH = !0 : this.toV = !0
            }
        };
        i([l({
            displayName: "\u6a6b\u7248\u986f\u793a"
        })], m.prototype, "toH", null), i([l({
            displayName: "\u76f4\u7248\u986f\u793a"
        })], m.prototype, "toV", null), i([l({
            type: cc.Enum(s.Orientation),
            displayName: "\u76ee\u524d\u662f\u54ea\u7a2e\u986f\u793a"
        })], m.prototype, "orientation", null), i([l({
            type: cc.Enum(s.Orientation),
            visible: !1
        })], m.prototype, "_orientation", void 0), i([l({
            displayName: "\u7d00\u9304\u4f4d\u7f6e"
        })], m.prototype, "record", null), i([l({
            displayName: "\u6e05\u9664\u9663\u5217\u7684\u7a7a\u5143\u7d20"
        })], m.prototype, "clear", null), i([l({
            type: cc.Node
        })], m.prototype, "nodeList", null), i([l({
            type: cc.Node,
            visible: !1
        })], m.prototype, "_nodeList", void 0), i([l({
            displayName: "\u6aa2\u8996\u7d00\u9304\u503c"
        })], m.prototype, "visible", void 0), i([l({
            type: h,
            visible: function() {
                return this.visible
            }
        })], m.prototype, "setting", void 0), i([l({
            type: n,
            displayName: "\u642c\u79fb\u7d00\u9304\u503c\u7684\u4f86\u6e90"
        })], m.prototype, "parentHandler", void 0), i([l({
            displayName: "\u642c\u79fb\u7d00\u9304\u503c",
            visible: function() {
                return null !== this.parentHandler
            }
        })], m.prototype, "move", null), m = n = i([a], m), o.default = m, cc._RF.pop()
    }, {
        "../../FullScreenHandler": "FullScreenHandler",
        "../../Helper/EventSystem": "EventSystem"
    }],
    NodeLongPress: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "c3d8a4B19FEdZLXDxbs2yIH", "NodeLongPress");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.longPressTime = .5, this.canPress = !0, this.canClick = !0, this.canLongPress = !0, this.longPressFunc = null, this.clickFunc = null, this.isCallLongPress = !1, this.isCallClick = !1
            }
            start() {
                this.node.on(cc.Node.EventType.MOUSE_DOWN, this.OnPressDown, this, !0), this.node.on(cc.Node.EventType.TOUCH_START, this.OnPressDown, this, !0), this.node.on(cc.Node.EventType.MOUSE_UP, this.OnPressUp, this, !0), this.node.on(cc.Node.EventType.MOUSE_LEAVE, this.OnPressCancel, this, !0), this.node.on(cc.Node.EventType.TOUCH_END, this.OnPressUp, this, !0), this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.OnPressCancel, this, !0)
            }
            onDestroy() {
                this.unschedule(this.CheckLongPress), this.node.targetOff(this)
            }
            OnPressDown(e) {
                this.canPress && (this.isCallLongPress = !1, this.isCallClick = !1, this.unschedule(this.CheckLongPress), this.scheduleOnce(this.CheckLongPress, this.longPressTime))
            }
            OnPressUp(e) {
                this.unschedule(this.CheckLongPress), this.isCallLongPress && this.longPressFunc && this.longPressFunc(!1), this.CheckClick()
            }
            OnPressCancel(e) {
                this.isCallLongPress = !1, this.isCallClick = !0, this.unschedule(this.CheckLongPress), this.isCallLongPress && this.longPressFunc && this.longPressFunc(!1)
            }
            CheckLongPress() {
                console.log("[NodeLongPress]Item(" + this.node.parent.name + ") CheckLongPress(canPress:" + this.canPress + " / canLongPress:" + this.canLongPress + " / callLongPress?" + this.isCallLongPress + ")"), this.canPress && this.canLongPress && (this.isCallLongPress || (this.isCallLongPress = !0, this.longPressFunc && this.longPressFunc(!0)))
            }
            CheckClick() {
                console.log("[NodeLongPress]Item(" + this.node.parent.name + ") CheckClick(canPress:" + this.canPress + " / canLongPress:" + this.canLongPress + " / callLongPress?" + this.isCallLongPress + ") / callClick?" + this.isCallClick + ")"), this.canPress && this.canClick && (this.isCallClick || this.isCallLongPress || (this.isCallClick = !0, this.unschedule(this.CheckLongPress), this.clickFunc && this.clickFunc()))
            }
        };
        n([s({
            displayName: "\u9577\u6309\u79d2\u6578\u689d\u4ef6"
        })], r.prototype, "longPressTime", void 0), r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    NoticeInteractive: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "893b7fwJ5xAhJBeZJ9dTjL/", "NoticeInteractive");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.NoticeInteractive = void 0;
        const s = e("../../LobbyCommon/Helper/EventSystem"),
            r = e("../../LobbyCommon/Component/BundleCtrl"),
            a = e("../../LobbyCommon/Net/ClickLog"),
            l = e("../../LobbyCommon/Net/ClickLogEnum"),
            c = e("./RewardBroadcastMgr"),
            {
                ccclass: h,
                property: m
            } = cc._decorator;
        let u = class extends cc.Component {
            constructor() {
                super(...arguments), this.faceSprite = null, this.frameSprite = null, this.m_nickname = null, this.m_score = null, this.m_IsNoticeInteractive = !0, this.m_RewardBroadcastArkID = "", this.m_IsSelf = !1, this.m_RewardBroadcastType = null
            }
            start() {
                this.m_IsNoticeInteractive = !0, s.EventSystem.Event(s.NoticedArrived.SetNoticeInteractive).Insert(this.OnSetNoticeInteractive, this)
            }
            onDestroy() {
                s.EventSystem.Event(s.NoticedArrived.SetNoticeInteractive).Remove(this.OnSetNoticeInteractive, this)
            }
            onDisable() {
                this.m_RewardBroadcastArkID = ""
            }
            SetFaceSprite(e) {
                this.faceSprite && (this.faceSprite.spriteFrame = e)
            }
            SetFrameSprite(e) {
                this.frameSprite && (this.frameSprite.spriteFrame = e)
            }
            SetFaceByID(e) {
                return i(this, void 0, void 0, function*() {
                    0 == e.length && (e = "FAC000");
                    let t = yield r.default.Instance.GetSpirte("Avatar", e);
                    t && this.SetFaceSprite(t)
                })
            }
            SetFrameByID(e) {
                return i(this, void 0, void 0, function*() {
                    if (0 == e.length) return void this.SetFrameSprite(null);
                    let t = yield r.default.Instance.GetSpirte("Avatar", e);
                    t && this.SetFrameSprite(t)
                })
            }
            SetNickname(e) {
                this.m_nickname && (this.m_nickname.string = e)
            }
            SetScore(e) {
                this.m_score && (this.m_score.string = e)
            }
            onClickRewardNotice() {
                if (this.m_IsNoticeInteractive) {
                    if (s.EventSystem.Event(s.FishHunter.OpenProfile).Length > 0) return void s.EventSystem.Event(s.FishHunter.OpenProfile).Notify("", !0, l.LogEvent_OpenPanel.InRewardNotice);
                    s.EventSystem.Event(s.Profile.OpenProfile).Length > 0 && (s.EventSystem.Event(s.Profile.OpenProfile).Notify(!0), a.ClickLog.recordClickLog(l.LogName.Profile, -1, l.LogType_Profile.OpenPanel, l.LogEvent_OpenPanel.InRewardNotice))
                }
            }
            onClickAvatarNotice() {
                if (this.m_IsNoticeInteractive) {
                    if (s.EventSystem.Event(s.FishHunter.OpenAvatarEditor).Length > 0) return void s.EventSystem.Event(s.FishHunter.OpenAvatarEditor).Notify(l.LogEvent_OpenPanel.InAvatarNotice);
                    s.EventSystem.Event(s.Profile.OpenProfile).Length > 0 && (s.EventSystem.Event(s.Profile.OpenAvatarEditor).Notify(!0), a.ClickLog.recordClickLog(l.LogName.Profile, -1, l.LogType_Profile.OpenPanel, l.LogEvent_OpenPanel.InAvatarNotice))
                }
            }
            onClickBroadcastNotice() {
                if (this.m_IsNoticeInteractive && "" != this.m_RewardBroadcastArkID) {
                    let e = l.LogEvent_OpenPanel.InBroadcast;
                    if (!this.m_IsSelf) switch (this.m_RewardBroadcastType) {
                        case c.RewardBroadcastType.Jackpot:
                            e = l.LogEvent_OpenOthersPanel.InBroadcast_MaxJP;
                            break;
                        case c.RewardBroadcastType.Multiple_Slot:
                            e = l.LogEvent_OpenOthersPanel.InBroadcast_MultiSlot;
                            break;
                        case c.RewardBroadcastType.Multiple_Fish:
                            e = l.LogEvent_OpenOthersPanel.InBroadcast_MultiFish
                    }
                    if (s.EventSystem.Event(s.FishHunter.OpenProfile).Length > 0) return void s.EventSystem.Event(s.FishHunter.OpenProfile).Notify(this.m_RewardBroadcastArkID, !1, e);
                    s.EventSystem.Event(s.Profile.OpenProfile).Length > 0 && (s.EventSystem.Event(s.Profile.OpenProfile).Notify(!1, this.m_RewardBroadcastArkID), a.ClickLog.recordClickLog(l.LogName.Profile, -1, l.LogType_Profile.OpenOthersPanel, e))
                }
            }
            OnSetNoticeInteractive(e) {
                this.m_IsNoticeInteractive = e
            }
        };
        n([m(cc.Sprite)], u.prototype, "faceSprite", void 0), n([m(cc.Sprite)], u.prototype, "frameSprite", void 0), n([m(cc.Label)], u.prototype, "m_nickname", void 0), n([m(cc.Label)], u.prototype, "m_score", void 0), u = n([h], u), o.NoticeInteractive = u, cc._RF.pop()
    }, {
        "../../LobbyCommon/Component/BundleCtrl": "BundleCtrl",
        "../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../../LobbyCommon/Net/ClickLog": "ClickLog",
        "../../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum",
        "./RewardBroadcastMgr": "RewardBroadcastMgr"
    }],
    NumberAnimation: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "257facFZSNHAK2IHjMMzxNf", "NumberAnimation");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.NumberAnimation = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.targetTxt_UGUI = null, this.targetNumber = 0, this.currentNumber = 0, this.baseNumber = 0, this.isInteger = !1, this.totalCountTime = 0, this.updateFPS = 15, this.animationTimeInPlay = 0, this.updatingUnitTime = 0, this.updatingUnitValue = 0, this.m_bIsAnimated = !1, this.bForceLockNumber = !1, this.m_bForceFinishAnim = !1, this.m_bIsFinishAnim = !1, this.Event_Finish = null
            }
            GetCurrentNumber() {
                return this.currentNumber
            }
            GetTargetNumber() {
                return this.targetNumber
            }
            GetTotalAnimationTime() {
                return this.totalCountTime
            }
            onLoad() {
                this.Event_Finish = new SS.Common.Delegate
            }
            onDestroy() {
                this.Event_Finish.Clear(), this.Event_Finish = null
            }
            start() {
                this.Init()
            }
            Init() {
                this.targetTxt_UGUI = this.node.getComponent(cc.Label), this.setNumberLabel()
            }
            update(e) {
                0 == this.m_bIsFinishAnim && (this.targetNumber != this.currentNumber ? (this.animationTimeInPlay += e, this.animationTimeInPlay > this.updatingUnitTime && (this.currentNumber += 0 == this.updatingUnitTime ? this.updatingUnitValue : this.updatingUnitValue * (this.animationTimeInPlay / this.updatingUnitTime), this.animationTimeInPlay = 0, (this.currentNumber >= this.targetNumber && this.updatingUnitValue >= 0 || this.currentNumber <= this.targetNumber && this.updatingUnitValue <= 0) && (this.currentNumber = this.targetNumber), this.setNumberLabel())) : this.targetNumber > 0 && this.currentNumber > 0 && this.targetNumber == this.currentNumber ? (this.Event_Finish.Notify(), this.m_bIsFinishAnim = !0) : (this.m_bIsFinishAnim = !0, this.animationTimeInPlay = 0))
            }
            Reset() {
                this.currentNumber = 0, this.targetNumber = 0, this.setNumberLabel()
            }
            SetCurrentNumber(e) {
                this.currentNumber = e, this.setNumberLabel()
            }
            SetNumberToStop(e = this.targetNumber) {
                this.currentNumber = e, this.targetNumber = e, this.setNumberLabel()
            }
            SetTargetNumberAnimationEx(e, t) {
                this.m_bIsAnimated = !0, this.m_bIsFinishAnim = !1, this.baseNumber = this.currentNumber, this.targetNumber = e, this.animationTimeInPlay = 0, this.updateFPS <= 0 && (this.updateFPS = 10), this.totalCountTime = t, this.totalCountTime <= 0 && (this.totalCountTime = .1), this.updatingUnitTime = 1 / this.updateFPS, this.updatingUnitValue = (this.targetNumber - this.baseNumber) * this.updatingUnitTime / this.totalCountTime
            }
            setNumberLabel() {
                null != this.targetTxt_UGUI && (this.isInteger ? this.isInteger && (this.targetTxt_UGUI.string = SS.Common.BaseFunction.addCommas(this.currentNumber, 0)) : this.targetTxt_UGUI.string = SS.Common.BaseFunction.addCommas(this.currentNumber, 2))
            }
        };
        n([s(cc.Boolean)], r.prototype, "isInteger", void 0), r = n([i], r), o.NumberAnimation = r, cc._RF.pop()
    }, {}],
    NumberCountUp: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "e2490lYPQJNOKAt/trbBSNT", "NumberCountUp");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.NumberCountUp = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.label = null, this.isInteger = !1, this.isMoney = !1, this.m_bNeedChopOff = !1, this.isThousands = !0, this.isSuffix = !1, this.suffix = "", this.fps = 30, this.current = 0, this.updateCallback = [], this.finishCallback = []
            }
            onDestroy() {
                this.updateCallback = null, this.finishCallback = null
            }
            CountUp(e, t, o = 0) {
                this.unscheduleAllCallbacks();
                let n = e - this.current;
                if (n <= 0) return;
                let i = Math.floor(1 / this.fps * 1e3) / 1e3,
                    s = n * i / t;
                0 != o && s < o && (s = o);
                let r = 0,
                    a = Date.now(),
                    l = () => {
                        for (r += (Date.now() - a) / 1e3, a = Date.now(); r >= i;)
                            if (r -= i, this.current += s, this.SetLabel(this.current), this.updateCallback.length > 0 && this.updateCallback.forEach(e => {
                                    e()
                                }), this.current >= e) {
                                this.current = e, this.SetLabel(e), this.unschedule(l), this.finishCallback.forEach(e => {
                                    e()
                                });
                                break
                            }
                    };
                this.schedule(l, i)
            }
            SetLabel(e) {
                let t = this.isInteger ? 0 : 2;
                if (e = this.m_bNeedChopOff ? this.chopOff(e, t) : e, this.isThousands) this.label.string = SS.Common.BaseFunction.addCommas(e, t, this.isMoney);
                else {
                    let o = e.toFixed(t);
                    this.isMoney && (o = "$" + o), this.isSuffix && (o += this.suffix), this.label.string = o
                }
            }
            SetNumberFormat(e, t, o = !1) {
                this.isInteger = e, this.isMoney = t, this.m_bNeedChopOff = o, this.SetLabel(this.current)
            }
            SetNumberNow(e) {
                return this.current !== e && (this.unscheduleAllCallbacks(), this.current = e, this.SetLabel(this.current), !0)
            }
            AddNumberNow(e) {
                return 0 !== e && (this.current += e, this.SetLabel(this.current), !0)
            }
            get GetCurrentNumber() {
                return this.current
            }
            RegisterUpdateCallback(e) {
                this.updateCallback.push(e)
            }
            UnregisterAllUpdateCallback() {
                this.updateCallback = []
            }
            RegisterFinishCallback(e) {
                this.finishCallback.push(e)
            }
            UnregisterAllFinishCallback() {
                this.finishCallback = []
            }
            chopOff(e, t) {
                let o = Math.pow(10, t);
                return e = SS.Common.BaseFunction.accMul(e, o), e = Math.floor(e), SS.Common.BaseFunction.accDiv(e, o)
            }
        };
        n([s(cc.Label)], r.prototype, "label", void 0), n([s()], r.prototype, "isInteger", void 0), n([s()], r.prototype, "isMoney", void 0), n([s({
            displayName: "\u6578\u503c\u662f\u5426\u70ba\u7121\u689d\u4ef6\u6368\u53bb\u6cd5"
        })], r.prototype, "m_bNeedChopOff", void 0), n([s({
            displayName: "\u662f\u5426\u9700\u8981\u52a0\u5165\u5343\u5206\u4f4d"
        })], r.prototype, "isThousands", void 0), n([s({
            displayName: "\u662f\u5426\u9700\u8981\u52a0\u5165\u5f8c\u7db4\u7b26\u865f"
        })], r.prototype, "isSuffix", void 0), n([s({
            displayName: "\u5165\u5f8c\u7db4\u7b26\u865f",
            visible: function() {
                return this.isSuffix
            }
        })], r.prototype, "suffix", void 0), r = n([i], r), o.NumberCountUp = r, cc._RF.pop()
    }, {}],
    OpenBoxEffectAnimation: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "a3ee9i2R6FMf5aqwTYIbfVI", "OpenBoxEffectAnimation");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.OpenBoxEffectAnimation = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.OnBoxAwardEffectFinish = null
            }
            onDestroy() {
                this.OnBoxAwardEffectFinish = null
            }
            PlayCoinFinish() {
                console.error("PlayCoinFinish"), null != this.OnBoxAwardEffectFinish && this.OnBoxAwardEffectFinish()
            }
        };
        r = n([i], r), o.OpenBoxEffectAnimation = r, cc._RF.pop()
    }, {}],
    OrientationHint: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "4e68cLijBpHVo8aLp8oreNM", "OrientationHint");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.OrientationHint = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.orientationHintTip = null
            }
            onLoad() {
                cc.sys.isMobile ? (window.addEventListener("orientationchange", this.OnOrientationChanged.bind(this), !1), this.OnOrientationChanged()) : this.orientationHintTip.destroy()
            }
            OnOrientationChanged() {
                Number(window.orientation) % 180 == 0 ? this.orientationHintTip.active = !0 : 90 == Math.abs(Number(window.orientation) % 180) && (this.orientationHintTip.active = !1)
            }
        };
        n([s(cc.Node)], r.prototype, "orientationHintTip", void 0), r = n([i], r), o.OrientationHint = r, cc._RF.pop()
    }, {}],
    ParticleSystemReset: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "d1975LdAh1HjZ8XsMg6+21b", "ParticleSystemReset");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ParticleSystemReset = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.particle = null
            }
            onLoad() {
                null == this.particle && (this.particle = this.getComponent(cc.ParticleSystem))
            }
            onDestroy() {
                this.particle = null
            }
            onDisable() {
                this.particle.resetSystem()
            }
            onEnable() {
                this.particle.resetSystem()
            }
        };
        n([s(cc.ParticleSystem)], r.prototype, "particle", void 0), r = n([i], r), o.ParticleSystemReset = r, cc._RF.pop()
    }, {}],
    PlayerRankingCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "51275Aa0PNICZTO3siH/duG", "PlayerRankingCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.PlayerRankingCtrl = void 0;
        const s = e("../../../../Component/BundleCtrl"),
            r = e("../../../../Helper/EventSystem"),
            a = e("../../../../Net/ClickLog"),
            l = e("../../../../Net/ClickLogEnum"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        let m = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_labRank = null, this.m_labID = null, this.m_labQuestionMark = null, this.m_labProgress = null, this.m_labTimestamp = null, this.m_labBonus = null, this.m_spAvatarFace = null, this.m_spAvatarFaceFrame = null, this.m_labNickName = null, this.m_nodeHighlightBG = null, this.m_nodeCrowns = [], this.m_nodeAwardItemRoot = null, this.m_spFaceFrame = null, this.m_strArkID = "", this.m_numRank = -1, this.m_isInAwardPanel = !1
            }
            onLoad() {
                r.EventSystem.Event(r.Avatar.SetFaceIcon).Insert(this.SetFaceSprite, this), r.EventSystem.Event(r.Avatar.SetFaceFrameIcon).Insert(this.SetFrameSprite, this), r.EventSystem.Event(r.Avatar.SetNickname).Insert(this.SetNickname, this), r.EventSystem.Event(r.Profile.NotifyUpdatePlayerSetting).Insert(this.SetByPlayerData, this)
            }
            onDestroy() {
                r.EventSystem.Event(r.Avatar.SetFaceIcon).Remove(this.SetFaceSprite, this), r.EventSystem.Event(r.Avatar.SetFaceFrameIcon).Remove(this.SetFrameSprite, this), r.EventSystem.Event(r.Avatar.SetNickname).Remove(this.SetNickname, this), r.EventSystem.Event(r.Profile.NotifyUpdatePlayerSetting).Remove(this.SetByPlayerData, this)
            }
            init(e, t, o, n, r, a, l, c, h, m, u, d) {
                return i(this, void 0, void 0, function*() {
                    for (let t = 0; t < this.m_nodeCrowns.length; t++) this.m_nodeCrowns[t].active = t == e;
                    this.m_labRank.string = e >= 0 && e <= 2 ? "" : -1 == e ? "-" : (e + 1).toString(), this.m_labID.string = "es" == SS.Common.GameEnvironment.Language ? "N\xfam. " + t : "No." + t, this.m_labProgress.string = "x " + o.toString(), this.m_labTimestamp.string = -1 == n ? "" : this.tsToDateTime(n);
                    let i = "es" != SS.Common.GameEnvironment.Language;
                    SS.Common.GameEnvironment.Language, this.m_labBonus.string = SS.Common.BaseFunction.addCommas(r, 0, i), this.m_nodeHighlightBG.active = a, this.m_labQuestionMark.enabled = !0, this.m_labProgress.enabled = !1, this.m_labTimestamp.enabled = !1, this.m_numRank = e, this.m_isInAwardPanel = u, this.m_strArkID = m, this.m_labNickName.string = h, l && "" != l || (l = "FAC000");
                    let p = yield s.default.Instance.GetSpirte("Avatar", l);
                    if (this.m_spAvatarFace.spriteFrame = p || null, c && "" != c) {
                        let e = yield s.default.Instance.GetSpirte("Avatar", c);
                        e && (this.m_spAvatarFaceFrame.spriteFrame = e)
                    } else this.m_spAvatarFaceFrame.spriteFrame = null;
                    if (this.m_nodeAwardItemRoot.active = !1, null != d && null != d && "" != d && -1 != d.indexOf("FRM")) {
                        this.m_nodeAwardItemRoot.active = !0;
                        let e = yield s.default.Instance.GetSpirte("Avatar", d);
                        this.m_spFaceFrame.spriteFrame = e || null
                    }
                })
            }
            reveal() {
                this.m_labQuestionMark.enabled = !1, this.m_labProgress.enabled = !0, this.m_labTimestamp.enabled = !0
            }
            tsToDateTime(e) {
                return new Date(1e3 * (e += 3600)).toLocaleTimeString("en-US", {
                    timeZone: "EST",
                    month: "numeric",
                    day: "numeric",
                    hour12: !1
                })
            }
            SetByPlayerData(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && (this.SetFaceByID(e.FaceID), this.SetFrameByID(e.FaceFrameID), this.SetNickname(e.NickName))
            }
            SetNickname(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_labNickName && (this.m_labNickName.string = e)
            }
            SetFaceSprite(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_spAvatarFace && (this.m_spAvatarFace.spriteFrame = e)
            }
            SetFrameSprite(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_spAvatarFaceFrame && (this.m_spAvatarFaceFrame.spriteFrame = e)
            }
            SetFaceByID(e) {
                return i(this, void 0, void 0, function*() {
                    if (this.m_strArkID != SS.Network.LoginModel.LoginInfo.pin_ark_id) return;
                    e && "" != e || (e = "FAC000");
                    let t = yield s.default.Instance.GetSpirte("Avatar", e);
                    this.m_spAvatarFace.spriteFrame = t || null
                })
            }
            SetFrameByID(e) {
                return i(this, void 0, void 0, function*() {
                    if (this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id)
                        if (e && "" != e) {
                            let t = yield s.default.Instance.GetSpirte("Avatar", e);
                            t && (this.m_spAvatarFaceFrame.spriteFrame = t)
                        } else this.m_spAvatarFaceFrame.spriteFrame = null
                })
            }
            onClickProfileBtn(e, t) {
                let o = this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id;
                r.EventSystem.Event(r.Profile.OpenProfile).Length > 0 && "" != this.m_strArkID && null != this.m_strArkID && (r.EventSystem.Event(r.Profile.OpenProfile).Notify(o, this.m_strArkID), this.SetClickLog(o, t))
            }
            SetClickLog(e, t) {
                let o = this.m_numRank,
                    n = -1,
                    i = -1;
                if (this.m_isInAwardPanel) {
                    if ("RankBonus" == t)
                        if (1 == e) switch (n = l.LogType_Profile.OpenPanel, o) {
                            case 0:
                                i = l.LogEvent_OpenPanel.InRankBonusAward_1stPlace;
                                break;
                            case 1:
                                i = l.LogEvent_OpenPanel.InRankBonusAward_2ndPlace;
                                break;
                            case 2:
                                i = l.LogEvent_OpenPanel.InRankBonusAward_3rdPlace;
                                break;
                            default:
                                i = l.LogEvent_OpenPanel.InRankBonusAward_OutsideTop3
                        } else switch (n = l.LogType_Profile.OpenOthersPanel, o) {
                            case 0:
                                i = l.LogEvent_OpenOthersPanel.InRankBonusAward_1stPlace;
                                break;
                            case 1:
                                i = l.LogEvent_OpenOthersPanel.InRankBonusAward_2ndPlace;
                                break;
                            case 2:
                                i = l.LogEvent_OpenOthersPanel.InRankBonusAward_3rdPlace;
                                break;
                            default:
                                i = l.LogEvent_OpenOthersPanel.InRankBonusAward_OutsideTop3
                        } else if ("FishRankBonus" == t)
                            if (1 == e) switch (n = l.LogType_Profile.OpenPanel, o) {
                                case 0:
                                    i = l.LogEvent_OpenPanel.InFishRankBonusAward_1stPlace;
                                    break;
                                case 1:
                                    i = l.LogEvent_OpenPanel.InFishRankBonusAward_2ndPlace;
                                    break;
                                case 2:
                                    i = l.LogEvent_OpenPanel.InFishRankBonusAward_3rdPlace;
                                    break;
                                default:
                                    i = l.LogEvent_OpenPanel.InFishRankBonusAward_OutsideTop3
                            } else switch (n = l.LogType_Profile.OpenOthersPanel, o) {
                                case 0:
                                    i = l.LogEvent_OpenOthersPanel.InFishRankBonusAward_1stPlace;
                                    break;
                                case 1:
                                    i = l.LogEvent_OpenOthersPanel.InFishRankBonusAward_2ndPlace;
                                    break;
                                case 2:
                                    i = l.LogEvent_OpenOthersPanel.InFishRankBonusAward_3rdPlace;
                                    break;
                                default:
                                    i = l.LogEvent_OpenOthersPanel.InFishRankBonusAward_OutsideTop3
                            }
                } else if ("RankBonus" == t)
                    if (1 == e) switch (n = l.LogType_Profile.OpenPanel, o) {
                        case 0:
                            i = l.LogEvent_OpenPanel.InRankBonus_1stPlace;
                            break;
                        case 1:
                            i = l.LogEvent_OpenPanel.InRankBonus_2ndPlace;
                            break;
                        case 2:
                            i = l.LogEvent_OpenPanel.InRankBonus_3rdPlace;
                            break;
                        default:
                            i = l.LogEvent_OpenPanel.InRankBonus_OutsideTop3
                    } else switch (n = l.LogType_Profile.OpenOthersPanel, o) {
                        case 0:
                            i = l.LogEvent_OpenOthersPanel.InRankBonus_1stPlace;
                            break;
                        case 1:
                            i = l.LogEvent_OpenOthersPanel.InRankBonus_2ndPlace;
                            break;
                        case 2:
                            i = l.LogEvent_OpenOthersPanel.InRankBonus_3rdPlace;
                            break;
                        default:
                            i = l.LogEvent_OpenOthersPanel.InRankBonus_OutsideTop3
                    } else if ("FishRankBonus" == t)
                        if (1 == e) switch (n = l.LogType_Profile.OpenPanel, o) {
                            case 0:
                                i = l.LogEvent_OpenPanel.InFishRankBonus_1stPlace;
                                break;
                            case 1:
                                i = l.LogEvent_OpenPanel.InFishRankBonus_2ndPlace;
                                break;
                            case 2:
                                i = l.LogEvent_OpenPanel.InFishRankBonus_3rdPlace;
                                break;
                            default:
                                i = l.LogEvent_OpenPanel.InFishRankBonus_OutsideTop3
                        } else switch (n = l.LogType_Profile.OpenOthersPanel, o) {
                            case 0:
                                i = l.LogEvent_OpenOthersPanel.InFishRankBonus_1stPlace;
                                break;
                            case 1:
                                i = l.LogEvent_OpenOthersPanel.InFishRankBonus_2ndPlace;
                                break;
                            case 2:
                                i = l.LogEvent_OpenOthersPanel.InFishRankBonus_3rdPlace;
                                break;
                            default:
                                i = l.LogEvent_OpenOthersPanel.InFishRankBonus_OutsideTop3
                        }
                a.ClickLog.recordClickLog(l.LogName.Profile, -1, n, i)
            }
        };
        n([h(cc.Label)], m.prototype, "m_labRank", void 0), n([h(cc.Label)], m.prototype, "m_labID", void 0), n([h(cc.Label)], m.prototype, "m_labQuestionMark", void 0), n([h(cc.Label)], m.prototype, "m_labProgress", void 0), n([h(cc.Label)], m.prototype, "m_labTimestamp", void 0), n([h(cc.Label)], m.prototype, "m_labBonus", void 0), n([h(cc.Sprite)], m.prototype, "m_spAvatarFace", void 0), n([h(cc.Sprite)], m.prototype, "m_spAvatarFaceFrame", void 0), n([h(cc.Label)], m.prototype, "m_labNickName", void 0), n([h(cc.Node)], m.prototype, "m_nodeHighlightBG", void 0), n([h([cc.Node])], m.prototype, "m_nodeCrowns", void 0), n([h(cc.Node)], m.prototype, "m_nodeAwardItemRoot", void 0), n([h(cc.Sprite)], m.prototype, "m_spFaceFrame", void 0), m = n([c], m), o.PlayerRankingCtrl = m, cc._RF.pop()
    }, {
        "../../../../Component/BundleCtrl": "BundleCtrl",
        "../../../../Helper/EventSystem": "EventSystem",
        "../../../../Net/ClickLog": "ClickLog",
        "../../../../Net/ClickLogEnum": "ClickLogEnum"
    }],
    PlayerRankingMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "cc15cLmy2JMW6vseZF65nmx", "PlayerRankingMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.PlayerRankingMgr = void 0;
        const s = e("./PlayerRankingCtrl"),
            r = e("./RankBonusTotalProgress"),
            a = e("../CommBonusData"),
            l = e("../../../../Net/LobbyClient"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        let m = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_scroll = null, this.m_nodeContent = null, this.m_prefabPlayer = null, this.m_RankBonusTotalProgress = null, this.m_nodePool = null, this.m_arrPlayerRankingCtrl = [], this.m_iRevealCtr = 0, this.m_bReveal = !1, this.m_isRecvPlayerProfileList = !1, this.m_PlayerProfileList = null
            }
            onLoad() {
                this.m_nodePool = new cc.NodePool;
                for (let e = 0; e < 10; ++e) {
                    let e = cc.instantiate(this.m_prefabPlayer);
                    this.m_nodePool.put(e)
                }
            }
            scrollToPlayer() {
                this.m_arrPlayerRankingCtrl.length > 4 && (this.m_scroll.stopAutoScroll(), this.m_scroll.scrollToPercentVertical(1 - this.m_iRevealCtr / (this.m_arrPlayerRankingCtrl.length - 3)))
            }
            scrollToTop() {
                this.m_scroll.scrollToTop()
            }
            Clear() {
                console.warn("PlayerRankingMgr.Clear"), this.m_arrPlayerRankingCtrl.forEach(e => {
                    this.m_nodePool.put(e.node)
                }), this.m_arrPlayerRankingCtrl = []
            }
            recvPlayerProfileList(e, t) {
                null == t || null == t ? cc.error("!!! recvPlayerProfileList is null !!! ", e, t) : t.hasOwnProperty("cmd_data") && t.cmd_data.hasOwnProperty("player_profile_list") && (this.m_PlayerProfileList = t.cmd_data.player_profile_list), this.m_isRecvPlayerProfileList = !0
            }
            waitPlayerProfileList() {
                return i(this, void 0, void 0, function*() {
                    let e = 0;
                    for (; 0 == this.m_isRecvPlayerProfileList && e < 15;) e += .2, yield SS.Common.WaitForSeconds(.2)
                })
            }
            CheckPlayerProfileList(e) {
                return i(this, void 0, void 0, function*() {
                    let t = e.bonusData.ranking_list;
                    if (null == t || null == t) return void cc.warn("rankingPlayerList no data. ", e);
                    let o = [];
                    for (let n = 0; n < t.length && n < e.RankSize; n++) t[n].ark_id && "" != t[n].ark_id && o.push(t[n].ark_id);
                    if (null != o) {
                        this.m_PlayerProfileList = null, this.m_isRecvPlayerProfileList = !1, l.LobbyClient.Instance.GetUserClient.getPlayerProfileList(o, this.recvPlayerProfileList.bind(this)), yield this.waitPlayerProfileList();
                        for (let o = 0; o < e.bonusData.ranking_list.length; o++)
                            if (null != this.m_PlayerProfileList)
                                for (let n = 0; n < this.m_PlayerProfileList.length; n++)
                                    if (this.m_PlayerProfileList[n].hasOwnProperty("ark_id") && this.m_PlayerProfileList[n].ark_id == t[o].ark_id && this.m_PlayerProfileList[n].hasOwnProperty("equip_avatar") && this.m_PlayerProfileList[n].hasOwnProperty("equip_avatar_frame") && this.m_PlayerProfileList[n].hasOwnProperty("nick_name")) {
                                        e.bonusData.ranking_list[o].AvatarID = this.m_PlayerProfileList[n].equip_avatar, e.bonusData.ranking_list[o].AvatarFrameID = this.m_PlayerProfileList[n].equip_avatar_frame, e.bonusData.ranking_list[o].Nickname = this.m_PlayerProfileList[n].nick_name;
                                        break
                                    }
                        t = null, o = null
                    } else cc.log("CheckPlayerProfileList no data. ", e)
                })
            }
            showRanking(e) {
                return i(this, void 0, void 0, function*() {
                    yield this.CheckPlayerProfileList(e), console.warn("showRanking = ", e);
                    let t = e.m_arrRankAwardData,
                        o = e.bonusData.ranking_list,
                        n = e.bonusData.ranking_id;
                    this.m_selfPlayerRankingCtrl && (this.m_selfPlayerRankingCtrl.node.active = !1), this.m_bReveal = !1, this.m_iRevealCtr = -1;
                    let i = !0;
                    for (let s = 0; s < o.length && s < e.RankSize; s++) {
                        let r, a = "";
                        for (let e = 0; e < t.length; e++)
                            if (s + 1 <= t[e].End) {
                                r = t[e].Award, a = t[e].ItemID;
                                break
                            }
                        let l = n == o[s].ranking_id;
                        l && (i = !1), r = "es" == SS.Common.GameEnvironment.Language ? r : r * e.bonusData.exchange_rate, this.setRankingPlayer(s, o[s], l, r, a)
                    }
                    if (i) {
                        let t = new a.RankingPlayerData;
                        t.amount = e.CustomAmount, t.ranking_id = n, t.AvatarID = SS.Network.UserClient.UserInfo.avatar_id, t.AvatarFrameID = SS.Network.UserClient.UserInfo.avatar_frame_id, t.Nickname = SS.Network.UserClient.UserInfo.nickname, t.ark_id = SS.Network.LoginModel.LoginInfo.pin_ark_id, t.time = -1, this.setRankingPlayer(-1, t, !0, 0, "")
                    }
                })
            }
            setRankingPlayer(e, t, o, n = 0, i = "") {
                if (null != t && null != t.amount && null != t.ranking_id && null != t.time)
                    if (-1 == e) {
                        if (null == this.m_selfPlayerRankingCtrl) {
                            let e = cc.instantiate(this.m_prefabPlayer);
                            e.parent = this.m_nodeContent, e.setSiblingIndex(9999), this.m_selfPlayerRankingCtrl = e.getComponent(s.PlayerRankingCtrl)
                        } else this.m_selfPlayerRankingCtrl.node.active = !0, this.m_selfPlayerRankingCtrl.node.setSiblingIndex(9999);
                        this.m_selfPlayerRankingCtrl.init(e, t.ranking_id, t.amount, -1, n, o, t.AvatarID, t.AvatarFrameID, t.Nickname, t.ark_id, !1, i), this.m_selfPlayerRankingCtrl.reveal(), this.m_RankBonusTotalProgress.setRankingInfo(e, t.ranking_id, n, t.AvatarID, t.AvatarFrameID, t.Nickname, t.ark_id)
                    } else {
                        let r = this.m_arrPlayerRankingCtrl[e];
                        if (null == r) {
                            let e = cc.instantiate(this.m_prefabPlayer);
                            e.parent = this.m_nodeContent, r = e.getComponent(s.PlayerRankingCtrl), this.m_arrPlayerRankingCtrl.push(r)
                        }
                        r.init(e, t.ranking_id, t.amount, -1, n, o, t.AvatarID, t.AvatarFrameID, t.Nickname, t.ark_id, !1, i), this.m_bReveal || (o ? (this.m_bReveal = !0, this.m_arrPlayerRankingCtrl[this.m_iRevealCtr] && this.m_arrPlayerRankingCtrl[this.m_iRevealCtr].reveal(), this.m_RankBonusTotalProgress.setRankingInfo(e, t.ranking_id, n, t.AvatarID, t.AvatarFrameID, t.Nickname, t.ark_id)) : this.m_iRevealCtr = e), (this.m_bReveal || e > 2) && r.reveal()
                    }
            }
        };
        n([h(cc.ScrollView)], m.prototype, "m_scroll", void 0), n([h(cc.Node)], m.prototype, "m_nodeContent", void 0), n([h(cc.Prefab)], m.prototype, "m_prefabPlayer", void 0), n([h(r.RankBonusTotalProgress)], m.prototype, "m_RankBonusTotalProgress", void 0), m = n([c], m), o.PlayerRankingMgr = m, cc._RF.pop()
    }, {
        "../../../../Net/LobbyClient": "LobbyClient",
        "../CommBonusData": "CommBonusData",
        "./PlayerRankingCtrl": "PlayerRankingCtrl",
        "./RankBonusTotalProgress": "RankBonusTotalProgress"
    }],
    PopUpMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "67ffbhIDo5CPZDmSbEND8wo", "PopUpMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.PopUpMgr = void 0;
        const i = e("../../Component/AudioMgr"),
            s = e("./PopUpTimerMgr"),
            r = e("./PriorityCustomEvent"),
            a = e("../TmpRegulationPage/TmpRegulationPage"),
            l = e("../../Helper/EventSystem"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        class m {
            constructor() {
                this.popupBgSF = null, this.popupName = "", this.buttonText = "", this.buttonAction = "", this.buttonCustomEventID = "", this.onClickEvent = null, this.onShowEvent = null, this.onCloseEvent = null, this.eventData = null
            }
        }
        let u = class extends cc.Component {
            constructor() {
                super(...arguments), this.root = null, this.popup = null, this.popupBg = null, this.popupCloseBtn = null, this.popupBtn = null, this.timerNode = null, this.GoBtnSpriteStyle = null, this.OkBtnSpriteStyle = null, this.MoreBtnSpriteStyle = null, this.CustomBtnSpriteStyle = null, this.tmpRegulationPage = null, this.showPopupIndex = 0, this.curDownloadNum = 0, this.needDownloadMaxNum = 0, this.popCmdData = null, this.popupBtnSprite = null, this.tmpPopupResAry = [], this.popupInfoMembers = [], this.OpenPopupWebviewEvent = null, this.SwitchGameEvent = null, this.m_PopUpTimerMgr = null, this.curOpenEventName = [], this.priorityShowEvents = [], this.onCloseAllPopupEvent = [], this.isFirstLogin = !1, this.rulePageNoCallback = null
            }
            _onLoad() {
                window.PopUpMgr = this, l.EventSystem.Event(l.CheckNextPopup).Insert(this.checkAndShowPopup, this)
            }
            _start() {
                this.root.active = !1, this.popup.active = !1, this.tmpRegulationPage && (this.tmpRegulationPage.node.active = !1), this.popupBtnSprite = this.popupBtn.getComponent(cc.Sprite)
            }
            _onDestroy() {
                if (l.EventSystem.Event(l.CheckNextPopup).Remove(this.checkAndShowPopup, this), this.popupInfoMembers && this.popupInfoMembers.length > 0)
                    for (let e = 0; e < this.popupInfoMembers.length; e++) this.popupInfoMembers[e] = null;
                if (this.tmpPopupResAry && this.tmpPopupResAry.length > 0) {
                    for (let e = 0; e < this.tmpPopupResAry.length; e++) cc.loader.release(this.tmpPopupResAry[e]);
                    this.tmpPopupResAry = []
                }
            }
            SavePopupCmdData(e) {
                console.log("[popup Data]", e), this.popCmdData = e
            }
            PopupDataInit() {
                this.curDownloadNum = 0, this.needDownloadMaxNum = 0, (null == SS.Common.GameEnvironment.CurrentGameVersion || "" == SS.Common.GameEnvironment.CurrentGameVersion) && this.popCmdData && this.popCmdData.hasOwnProperty("pop_up_info") && (this.root.active = !0, this.filterDisableGame())
            }
            setEventPopUp(e) {
                let t = e.m_sBannerID,
                    o = !1;
                for (let n = 0; n < this.popupInfoMembers.length; n++)
                    if (this.popupInfoMembers[n].buttonCustomEventID == e.m_sBannerID) {
                        o = !0, this.popupInfoMembers[n].eventData = e, e.m_fucClickEvent && (this.popupInfoMembers[n].onClickEvent = () => {
                            e.m_fucClickEvent(), this.ClosePopup()
                        }), e.m_funShowPopupEvent && (this.popupInfoMembers[n].onShowEvent = () => {
                            e.m_funShowPopupEvent()
                        }), this.popupInfoMembers[n].onCloseEvent = this.ShowNextPopup.bind(this);
                        break
                    }
                console.warn("popupInfoMembers :", this.popupInfoMembers), o || console.warn("[Set MissionPopup ButtonCustomEvent Error] Not find this Key!!", t)
            }
            GetDownloadPath(e) {
                let t, o = SS.Common.GameEnvironment.ProjectSetting,
                    n = "";
                return n = (t = o.CDN_HOST ? window.location.protocol + "//" + o.CDN_HOST : "../../..") + "/Popup/" + this.popCmdData.pop_up_version + "/" + e + ".png", console.warn("[Download popupImg Path] = " + n), n
            }
            filterDisableGame() {
                for (let e = 0; e < this.popCmdData.pop_up_info.length; e++) {
                    let t = !0,
                        o = this.popCmdData.pop_up_info[e].mode,
                        n = this.popCmdData.pop_up_info[e].bundle_name,
                        i = this.popCmdData.pop_up_info[e].button_text,
                        s = this.popCmdData.pop_up_info[e].button_action;
                    if (-1 == s.toUpperCase().indexOf("RULE")) return;
                    for (let e = 0; e < o.length; e++)
                        if (o[e] == window.gd_LogoMode) {
                            t = !1;
                            break
                        }
                    if (!t)
                        if (-1 != s.toUpperCase().indexOf("GAME_ID")) {
                            let e = !1,
                                t = s.substring(s.indexOf("=") + 1),
                                o = this.GetThemeIdByGameName(t);
                            for (let n = 0; n < SS.Common.GameEnvironment.GameSetting.kioskOpenGameList.length; n++)
                                if (SS.Common.GameEnvironment.GameSetting.kioskOpenGameList[n] == o) {
                                    e = !0;
                                    break
                                }
                            "" != t && e && SS.Common.GameEnvironment.GameSetting.Icon.hasOwnProperty(t) && (this.needDownloadMaxNum++, this.AddDownloadPopupInfo(n, i, s, "", () => {
                                this.OpenReCheckGameWindow(o)
                            }, this.ShowNextPopup.bind(this)))
                        } else if (-1 != s.toUpperCase().indexOf("CUSTOM_ID"))
                        for (let e = 0; e < this.curOpenEventName.length; e++) {
                            let t = s.substring(s.indexOf("=") + 1);
                            if (t == this.curOpenEventName[e]) {
                                this.needDownloadMaxNum++, this.AddDownloadPopupInfo(n, i, s, t, this.ShowNextPopup.bind(this), this.ShowNextPopup.bind(this));
                                break
                            }
                        } else if (-1 != s.toUpperCase().indexOf("URL")) {
                            this.needDownloadMaxNum++;
                            let e = s.substring(s.indexOf("=") + 1);
                            this.AddDownloadPopupInfo(n, i, s, "", () => {
                                this.OpenPopupWebview(e)
                            }, this.ShowNextPopup.bind(this))
                        } else if (-1 != s.toUpperCase().indexOf("RULE") && this.isFirstLogin) {
                        this.needDownloadMaxNum++;
                        let e = this.GetDownloadPath(n);
                        console.log("popup image downloadPath = " + e), cc.assetManager.loadRemote(e, (e, t) => {
                            if (e) return this.curDownloadNum += 1, void console.warn("[popup Image Download is notFind !!] ", e);
                            console.log("[popup Image Download is onFinish !!]", t), this.curDownloadNum += 1, this.tmpRegulationPage.SetData(i, new cc.SpriteFrame(t));
                            let o = new r.PriorityCustomEvent(r.PopEventPriority.RulePage, this.ShowRulePopup.bind(this));
                            this.priorityShowEvents.push(o)
                        })
                    } else this.needDownloadMaxNum++, this.AddDownloadPopupInfo(n, i, s, "", this.ShowNextPopup.bind(this), this.ShowNextPopup.bind(this))
                }
            }
            GetThemeIdByGameName(e) {
                return SS.Common.GameEnvironment.GameSetting.hasOwnProperty("Icon") && SS.Common.GameEnvironment.GameSetting.Icon.hasOwnProperty(e) && SS.Common.GameEnvironment.GameSetting.Icon[e].hasOwnProperty("GameName") ? SS.Common.GameEnvironment.GameSetting.Icon[e].GameName : ""
            }
            AddDownloadPopupInfo(e, t, o, n, i, s) {
                let r = this,
                    a = this.GetDownloadPath(e),
                    l = new m;
                l.popupName = e, l.buttonText = t, l.buttonAction = o, l.buttonCustomEventID = n, l.onClickEvent = i, l.onCloseEvent = s, this.popupInfoMembers.push(l), console.log("popup image downloadPath = " + a), cc.assetManager.loadRemote(a, (e, t) => {
                    if (e) return r.curDownloadNum += 1, void console.warn("[popup Image Download is notFind !!] ", e);
                    console.log("[popup Image Download is onFinish !!]", t), this.tmpPopupResAry.push(t), r.curDownloadNum += 1;
                    for (let o = 0; o < this.popupInfoMembers.length; o++)
                        if (this.popupInfoMembers[o].popupName + ".png" == t.url.substring(t.url.lastIndexOf("/") + 1)) {
                            l.popupBgSF = new cc.SpriteFrame(t);
                            break
                        }
                })
            }
            IsCompleteLoadAllPopup() {
                return this.curDownloadNum >= this.needDownloadMaxNum && (console.warn("[Popup \u6210\u529f\u5b8c\u6210\u6240\u6709\u8f09\u5165]"), !0)
            }
            checkAndShowPopup() {
                console.log("[Popup]checkAndShowPopup!! priorityShowEvents: ", this.priorityShowEvents);
                let e = null == SS.Common.GameEnvironment.CurrentGameVersion || "" == SS.Common.GameEnvironment.CurrentGameVersion;
                if (this.priorityShowEvents.length > 0) {
                    let e = -1,
                        t = -1,
                        o = null;
                    for (let n = 0; n < this.priorityShowEvents.length; n++) {
                        let i = this.priorityShowEvents[n];
                        i.priority >= t && (e = n, t = i.priority, o = i.executeEvent)
                    }
                    this.priorityShowEvents.splice(e, 1), null != o && o()
                } else e && this.ShowNormalPopup()
            }
            ShowNormalPopup() {
                if (this.isFirstLogin && this.popupInfoMembers.length > 0 && this.showPopupIndex < this.popupInfoMembers.length && this.popupInfoMembers[this.showPopupIndex]) {
                    let e = this.popupInfoMembers[this.showPopupIndex];
                    null == e.popupBgSF ? this.ShowNextPopup() : "" == e.buttonCustomEventID || null != e.eventData && e.eventData.m_bValid ? this.Showing() : this.ShowNextPopup()
                } else this.showPopupIndex >= this.popupInfoMembers.length && this.ClosePopup()
            }
            Showing() {
                console.log("[Popup]cur show\u7b2c " + this.showPopupIndex + " \u5f35 popup !!");
                let e = this.popup.getChildByName("EventObj");
                e && (e.active = !1);
                var t = new cc.Component.EventHandler;
                t.target = this.node, t.component = "PopUpMgr", t.handler = "RegisteredBtnClickEvent", t.customEventData = this.showPopupIndex.toString();
                var o = new cc.Component.EventHandler;
                o.target = this.node, o.component = "PopUpMgr", o.handler = "RegisteredCloseBtnClickEvent", o.customEventData = this.showPopupIndex.toString(), this.popupBtn.clickEvents = [], this.popupBtn.clickEvents.push(t), this.popupCloseBtn.clickEvents = [], this.popupCloseBtn.clickEvents.push(o);
                let n = this.popupInfoMembers[this.showPopupIndex].buttonText.toUpperCase();
                if (-1 != n.indexOf("OK") ? this.popupBtnSprite.spriteFrame = this.OkBtnSpriteStyle : -1 != n.indexOf("GO") ? this.popupBtnSprite.spriteFrame = this.GoBtnSpriteStyle : -1 != n.indexOf("MORE") ? this.popupBtnSprite.spriteFrame = this.MoreBtnSpriteStyle : this.popupBtnSprite.spriteFrame = this.CustomBtnSpriteStyle, this.popupBg.spriteFrame = this.popupInfoMembers[this.showPopupIndex].popupBgSF, this.popupInfoMembers[this.showPopupIndex].eventData && this.popupInfoMembers[this.showPopupIndex].eventData.m_funShowPopupEvent) {
                    let e = this.popupInfoMembers[this.showPopupIndex].eventData.m_funShowPopupEvent();
                    e && (e.name = "EventObj", e.setParent(this.popup))
                }
                if (this.popupInfoMembers[this.showPopupIndex].eventData && this.popupInfoMembers[this.showPopupIndex].eventData.m_funTimerEvent) {
                    let e = this.popupInfoMembers[this.showPopupIndex].eventData.m_funTimerEvent();
                    this.timerNode.active = !0, console.error("ShowPopup!!!!!!!!!! eventTime = " + e), null == this.m_PopUpTimerMgr && (this.m_PopUpTimerMgr = this.timerNode.getComponent(s.default)), this.m_PopUpTimerMgr.InitTimer(e)
                } else null != this.m_PopUpTimerMgr && this.m_PopUpTimerMgr.ClearTimer(), this.timerNode.active = !1;
                this.popup.active = !0, this.tmpRegulationPage && (this.tmpRegulationPage.node.active = !1)
            }
            RegisteredBtnClickEvent(e, t) {
                i.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1);
                let o = t;
                this.popupInfoMembers[o].onClickEvent()
            }
            RegisteredCloseBtnClickEvent(e, t) {
                i.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1);
                let o = t;
                this.popupInfoMembers[o].onCloseEvent()
            }
            ShowNextPopup() {
                this.showPopupIndex < this.popupInfoMembers.length - 1 ? (this.showPopupIndex++, console.log("[Popup]\u986f\u793a\u4e0b\u4e00\u5f35popup"), this.ShowNormalPopup()) : this.ClosePopup()
            }
            ClosePopup() {
                if (console.log("[Popup]\u95dc\u9589 popup !!"), this.root.active = !1, this.popup.active = !1, this.tmpRegulationPage && (this.tmpRegulationPage.node.active = !1), null != this.m_PopUpTimerMgr && this.m_PopUpTimerMgr.ClearTimer(), null != this.onCloseAllPopupEvent)
                    for (let e = 0; e < this.onCloseAllPopupEvent.length; e++) this.onCloseAllPopupEvent[e]()
            }
            SetPopupFeature(e, t) {
                this.SwitchGameEvent = e, this.OpenPopupWebviewEvent = t
            }
            OpenReCheckGameWindow(e) {
                null != this.SwitchGameEvent && this.SwitchGameEvent(e)
            }
            OpenPopupWebview(e) {
                null != this.OpenPopupWebviewEvent && this.OpenPopupWebviewEvent(e)
            }
            ShowRulePopup() {
                this.tmpRegulationPage && this.tmpRegulationPage.Open(this.checkAndShowPopup.bind(this), this.rulePageNoCallback) || this.checkAndShowPopup()
            }
        };
        n([h(cc.Node)], u.prototype, "root", void 0), n([h(cc.Node)], u.prototype, "popup", void 0), n([h(cc.Sprite)], u.prototype, "popupBg", void 0), n([h(cc.Button)], u.prototype, "popupCloseBtn", void 0), n([h(cc.Button)], u.prototype, "popupBtn", void 0), n([h(cc.Node)], u.prototype, "timerNode", void 0), n([h(cc.SpriteFrame)], u.prototype, "GoBtnSpriteStyle", void 0), n([h(cc.SpriteFrame)], u.prototype, "OkBtnSpriteStyle", void 0), n([h(cc.SpriteFrame)], u.prototype, "MoreBtnSpriteStyle", void 0), n([h(cc.SpriteFrame)], u.prototype, "CustomBtnSpriteStyle", void 0), n([h({
            type: a.TmpRegulationPage,
            displayName: "\u6cd5\u898f\u9801"
        })], u.prototype, "tmpRegulationPage", void 0), u = n([c], u), o.PopUpMgr = u, cc._RF.pop()
    }, {
        "../../Component/AudioMgr": "AudioMgr",
        "../../Helper/EventSystem": "EventSystem",
        "../TmpRegulationPage/TmpRegulationPage": "TmpRegulationPage",
        "./PopUpTimerMgr": "PopUpTimerMgr",
        "./PriorityCustomEvent": "PriorityCustomEvent"
    }],
    PopUpTimerMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "241cfT65V5MY7wvwzDtm/a5", "PopUpTimerMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_labTime1 = null, this.m_labTime2 = null, this.m_labTime3 = null, this.m_iCountDownTime = 0, this.m_iIntervalID = -1, this.m_colorRed = new cc.Color(255, 40, 40, 255), this.m_timesUpCallback = null
            }
            InitTimer(e) {
                this.StartConutDownTimer(e)
            }
            PauseTimer() {
                clearInterval(this.m_iIntervalID)
            }
            ClearTimer() {
                -1 != this.m_iIntervalID && clearInterval(this.m_iIntervalID)
            }
            StartConutDownTimer(e) {
                console.warn("popup \u8a2d\u5b9a\u6642\u9593\u5012\u6578 = " + e), this.m_iCountDownTime = e, this.UpdateUI(this.m_iCountDownTime), -1 != this.m_iIntervalID && clearInterval(this.m_iIntervalID), this.m_iIntervalID = setInterval(() => this.Timer(), 1e3)
            }
            Timer() {
                --this.m_iCountDownTime, this.m_iCountDownTime <= 0 && (this.m_iCountDownTime = 0, this.PauseTimer(), this.m_timesUpCallback && this.m_timesUpCallback()), this.UpdateUI(this.m_iCountDownTime)
            }
            UpdateUI(e) {
                if (null == this.m_labTime1 || null == this.m_labTime2 || null == this.m_labTime3) return;
                let t = e % 60,
                    o = Math.floor(e / 60) % 60,
                    n = Math.floor(e / 3600),
                    i = Math.floor(n / 24);
                n %= 24, i > 0 ? (this.m_labTime1.string = i + " d", this.m_labTime2.string = n + " h", this.m_labTime3.string = o + " m", this.SetLabeFormate(this.m_labTime1, cc.Color.WHITE, !1), this.SetLabeFormate(this.m_labTime2, cc.Color.WHITE, !1), this.SetLabeFormate(this.m_labTime3, cc.Color.WHITE, !1)) : (this.m_labTime1.string = this.AddZero(n) + " h", this.m_labTime2.string = this.AddZero(o) + " m", this.m_labTime3.string = this.AddZero(t) + " s", 0 == n && (this.SetLabeFormate(this.m_labTime1, this.m_colorRed, !0), this.SetLabeFormate(this.m_labTime2, this.m_colorRed, !0), this.SetLabeFormate(this.m_labTime3, this.m_colorRed, !0)))
            }
            SetLabeFormate(e, t, o) {
                e.node.color = t, e.enableBold = o
            }
            AddZero(e) {
                return e < 10 ? "0" + e.toString() : e.toString()
            }
        };
        n([s(cc.Label)], r.prototype, "m_labTime1", void 0), n([s(cc.Label)], r.prototype, "m_labTime2", void 0), n([s(cc.Label)], r.prototype, "m_labTime3", void 0), r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    PopupMsgMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "6f9a1uzkQtHI5tecSUhv6Um", "PopupMsgMgr");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.PopupMsgMgr = o.PopupPriority = void 0;
        const s = e("../../Net/LobbyClient"),
            r = e("../../Loading/Script/LoadingMgr"),
            a = e("../../Connect/Script/ConnectPanelMgr"),
            l = e("../../../GameCommon/CommonRoot/Script/CommonRoot"),
            c = e("../../Component/ReturnLobbyHandler"),
            h = e("../../Helper/EventSystem"),
            {
                ccclass: m,
                property: u
            } = cc._decorator;
        var d;
        (function(e) {
            e[e.null = -1] = "null", e[e.Info = 0] = "Info", e[e.Warning = 1] = "Warning", e[e.Error = 2] = "Error", e[e.Disconnected = 3] = "Disconnected", e[e.Critical = 4] = "Critical"
        })(d = o.PopupPriority || (o.PopupPriority = {}));
        let p = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.root = null, this.content = null, this.code = null, this.title = null, this.toLobbyHandler = null, this.nowPirority = d.null
            }
            onLoad() {
                null == n.Instance && (n.Instance = this)
            }
            start() {
                this.toLobbyHandler = new c.ReturnLobbyHandler
            }
            SetPopupMsgTitle() {
                try {
                    null != this.title && ("en" == SS.Common.GameEnvironment.Language ? this.title.string = "Message" : this.title.string = "Mensaje")
                } catch (e) {
                    console.error("[SetPopupMsgTitle Error] SS Module Not yet downloaded")
                }
            }
            onDestroy() {
                this.nowPirority = null, this.nowErrorHandle = null, n.Instance = null
            }
            OnClickedClose() {
                this.ClosePopMsg()
            }
            OnClickedOK() {
                this.ClosePopMsg()
            }
            ClosePopMsg() {
                null != this.nowErrorHandle && this.nowErrorHandle(), this.root.active = !1, this.nowPirority = d.null, this.nowErrorHandle = null
            }
            ShowPopMsg(e, t, o, n, i = null, r = "") {
                if (this.root.active) return;
                if (t.includes("N") && i) return i(), void(s.LobbyClient.Instance && s.LobbyClient.Instance.CollectErrorLog(e, t, o, n));
                l.CommonRoot.Instance && l.CommonRoot.Instance.GetInfoMgr && l.CommonRoot.Instance.GetInfoMgr.CloseInfoPage();
                let a, c = SS.Common.GameEnvironment.ErrorMsg && SS.Common.GameEnvironment.ErrorMsg[t] && "" != SS.Common.GameEnvironment.ErrorMsg[t] ? SS.Common.GameEnvironment.ErrorMsg[t] : "The Internet was lost! Please login again!";
                if (-1 != c.indexOf("{0}") && "" != r && (c = c.replace("{0}", r)), this.root.active && this.nowPirority > e) return void console.warn("PopupMsg return! ", "returnShowPopMsg", c, "code", t, "priority", e, "CallBackHandler", i);
                let h = this;
                if (e == d.Info ? a = console.log : e == d.Warning ? (a = console.warn, i || (i = () => {
                        h.WarningHandler()
                    })) : (a = console.error, i || (e == d.Critical ? i = () => {
                        h.CriticalHandler()
                    } : e == d.Error && (i = () => {
                        h.ErrorHandler()
                    }))), this.nowPirority = e, this.nowErrorHandle = () => {
                        this.isHideCursor && (this.isHideCursor = !1, cc.game.canvas.style.cursor = "none"), i && i()
                    }, this.content.string = c, this.code.string = t, a("ShowPopMsg", c, "code", t, "priority", e, "CallBackHandler", i), this.isHideCursor = "none" == cc.game.canvas.style.cursor, this.isHideCursor && (cc.game.canvas.style.cursor = "default"), cc.Camera.cameras.length > 0 && null != cc.Camera.cameras[0]) cc.Camera.cameras[0].node.active || (cc.Camera.cameras[0].node.active = !0);
                else {
                    let e = cc.find("Canvas/Main Camera");
                    null != e ? e.active = !0 : console.error("Camera is not find")
                }
                if (SS.Common.GameEnvironment.Splash && (SS.Common.GameEnvironment.Splash.style.display = "none"), self != top) {
                    let e = SS.Common.GameEnvironment.GetGameIdByName(SS.Common.GameEnvironment.CurrentGameNow);
                    "" != e && s.LobbyClient.Instance.GetUserClient.SendSessionLengthEnd(e, null)
                }
                this.root.active = !0, s.LobbyClient.Instance && "maintain" != n && "updateVersion" != n && e != d.Info && s.LobbyClient.Instance.CollectErrorLog(e, t, o, n)
            }
            WarningHandler() {
                let e = self == top ? window : window.parent,
                    t = SS.Common.GameEnvironment.Language + "Lobby";
                null === cc.assetManager.bundles.find(function(e) {
                    return e._config.getSceneInfo(t)
                }) && (t = "Lobby"), e.gd_orientationType == e.orientationType.vertical ? (SS.Common.GameEnvironment.ChangeToGameName = "", this.toLobbyHandler.BackToLobby(this.OnLoadCallBack.bind(this), this.OnErrorCallBack.bind(this))) : this.ReloadHandler()
            }
            OnLoadCallBack() {
                let e = this;
                (self == top ? window : window.parent).parent.gd_orientationType = 0, SS.Common.GameEnvironment.ResetOrientationchange(self == top), this.scheduleOnce(() => {
                    e.ReloadHandler()
                }, 1)
            }
            OnErrorCallBack() {
                n.Instance.ShowPopMsg(d.Warning, "C44", "", "Load Error", null)
            }
            ReloadHandler() {
                let e = SS.Common.GameEnvironment.Language + "Lobby";
                null === cc.assetManager.bundles.find(function(t) {
                    return t._config.getSceneInfo(e)
                }) && (e = "Lobby"), h.EventSystem.Event(h.PopupMsgMgrEvent.OnWarningReload).Notify(), cc.director.getScene().name == e || "Game" == cc.director.getScene().name || "Game_Vertical" == cc.director.getScene().name ? s.LobbyClient.Instance.IsSocketConnect() ? (r.LoadingMgr.Instance.OpenLoading(), cc.director.loadScene(e)) : location.replace(this.GetIndexURL()) : cc.director.loadScene("ReleaseScene")
            }
            ErrorHandler() {
                r.LoadingMgr.Instance.OpenLoading(), s.LobbyClient.Instance.DoLogout(() => {
                    let e = SS.Common.GameEnvironment.Language + "Login";
                    cc.assetManager.bundles.find(function(t) {
                        return t._config.getSceneInfo(e)
                    }) ? cc.director.loadScene(e) : cc.director.loadScene("Login")
                }, (e, t) => {
                    console.error("Logout error status :" + e, "data:", t), this.CriticalHandler()
                })
            }
            CriticalHandler() {
                let e = this;
                a.ConnectPanelMgr.Instance.ShowConnectPanel();
                try {
                    null != s.LobbyClient.Instance && s.LobbyClient.Instance.ReloadLobby ? s.LobbyClient.Instance.ReloadLobby() : SS.Common.GameEnvironment.ProjectSetting.CDN_HOST ? location.reload() : location.replace(e.GetIndexURL())
                } catch (t) {
                    location.replace(e.GetIndexURL())
                }
            }
            GetIndexURL() {
                let e = "",
                    t = "",
                    o = this.GetURLParameterByName("KioskDEV"),
                    n = SS.Common.BaseFunction.GetURLParameterByName("CustomConfig");
                const i = "" != n ? `?CustomConfig=${n}` : "";
                return this.GetURLParameterByName("standalone") && (o ? (e = "index.html", t = ",standalone=true") : (e = "index_ni.html", t = "?standalone=true")), o ? "../../../" + e + "/?KioskDEV=" + o + t + i : "../../../" + e + t + i
            }
            GetURLParameterByName(e) {
                e = (e = e.toLowerCase()).replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
                var t = new RegExp("[\\?&]" + e + "=([^&#]*)").exec(location.search.toLowerCase());
                return null === t ? "" : decodeURIComponent(t[1].replace(/\+/g, " "))
            }
        };
        p.Instance = null, i([u(cc.Node)], p.prototype, "root", void 0), i([u(cc.Label)], p.prototype, "content", void 0), i([u(cc.Label)], p.prototype, "code", void 0), i([u(cc.Label)], p.prototype, "title", void 0), p = n = i([m], p), o.PopupMsgMgr = p, cc._RF.pop()
    }, {
        "../../../GameCommon/CommonRoot/Script/CommonRoot": "CommonRoot",
        "../../Component/ReturnLobbyHandler": "ReturnLobbyHandler",
        "../../Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../../Helper/EventSystem": "EventSystem",
        "../../Loading/Script/LoadingMgr": "LoadingMgr",
        "../../Net/LobbyClient": "LobbyClient"
    }],
    PriorityCustomEvent: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "bee1clYWj1A4J8kTgtqeqOX", "PriorityCustomEvent"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.PriorityCustomEvent = o.PopEventPriority = void 0;
        const {
            ccclass: n,
            property: i
        } = cc._decorator;
        (function(e) {
            e[e.ExtraFree = 999] = "ExtraFree", e[e.RulePage = 100] = "RulePage", e[e.LuckyWheel = 99] = "LuckyWheel", e[e.SessionBonus = 55] = "SessionBonus", e[e.CommBonusRank = 54] = "CommBonusRank", e[e.CommBonus = 53] = "CommBonus", e[e.FishOceanHeart = 52] = "FishOceanHeart", e[e.FishPuzzleEgg = 51] = "FishPuzzleEgg", e[e.BulletinBoard = 50] = "BulletinBoard", e[e.FishShipOccupie = 49] = "FishShipOccupie", e[e.Sms = 48] = "Sms", e[e.ProfileBeginner = 47] = "ProfileBeginner", e[e.ReferralCode = 46] = "ReferralCode", e[e.EmailBonus = 45] = "EmailBonus", e[e.LuckyShop = 0] = "LuckyShop"
        })(o.PopEventPriority || (o.PopEventPriority = {})), o.PriorityCustomEvent = class {
            constructor(e, t) {
                this.priority = -1, this.executeEvent = null, this.priority = e, this.executeEvent = t
            }
        }, cc._RF.pop()
    }, {}],
    ProfileBar: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "afd68gENZNCRb0UGihB5soa", "ProfileBar");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ProfileBar = void 0;
        const i = e("../../LobbyCommon/Helper/EventSystem"),
            s = e("../../LobbyCommon/Net/ClickLog"),
            r = e("../../LobbyCommon/Net/ClickLogEnum"),
            a = e("../../LobbyCommon/Net/LobbyClient"),
            l = e("../CommonRoot/Script/CommonRoot"),
            c = e("./RewardBroadcastMgr"),
            h = e("./RewardNoticeMgr"),
            {
                ccclass: m,
                property: u
            } = cc._decorator;
        var d;
        (function(e) {
            e[e.Lobby = 0] = "Lobby", e[e.Fish = 1] = "Fish", e[e.Slot = 2] = "Slot", e[e.Keno = 3] = "Keno"
        })(d || (d = {}));
        let p = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_btnProfileBar = null, this.m_isFishGame = !1
            }
            start() {
                a.LobbyClient.Instance && a.LobbyClient.Instance.GetJPSystem && a.LobbyClient.Instance.GetJPSystem.OnRecordUpdateSignal.add(this.RecvRecordUpdateCmd, this)
            }
            onDestroy() {
                a.LobbyClient.Instance && a.LobbyClient.Instance.GetJPSystem && a.LobbyClient.Instance.GetJPSystem.OnRecordUpdateSignal.remove(this.RecvRecordUpdateCmd, this)
            }
            onEnable() {
                i.EventSystem.Event(i.Avatar.RequestUpdate).Length > 0 && i.EventSystem.Event(i.Avatar.RequestUpdate).Notify(), i.EventSystem.Event(i.Profile.SetBarButtonInteractive).Insert(this.onSetBarButton, this), i.EventSystem.Event(i.SwitchGame).Insert(this.onSwitchToFavoriteGame, this), i.EventSystem.Event(i.DoLogOut).Insert(this.onDoLogOut, this)
            }
            onDisable() {
                i.EventSystem.Event(i.Profile.SetBarButtonInteractive).Remove(this.onSetBarButton, this), i.EventSystem.Event(i.SwitchGame).Remove(this.onSwitchToFavoriteGame, this), i.EventSystem.Event(i.DoLogOut).Remove(this.onDoLogOut, this)
            }
            onClickProfileBarBtn() {
                i.EventSystem.Event(i.Profile.OpenProfile).Length > 0 && i.EventSystem.Event(i.Profile.OpenProfile).Notify(!0, SS.Network.LoginModel.LoginInfo.pin_ark_id)
            }
            onClickProfileBarBtn_ClickLog(e, t) {
                let o = null;
                switch (Number(t)) {
                    case d.Lobby:
                        o = r.LogEvent_OpenPanel.InLobby;
                        break;
                    case d.Fish:
                        o = r.LogEvent_OpenPanel.InFish;
                        break;
                    case d.Slot:
                        o = r.LogEvent_OpenPanel.InSlot;
                        break;
                    case d.Keno:
                        o = r.LogEvent_OpenPanel.InKeno
                }
                null != o && s.ClickLog.recordClickLog(r.LogName.Profile, -1, r.LogType_Profile.OpenPanel, o)
            }
            onSetBarButton(e) {
                this.m_btnProfileBar && (this.m_btnProfileBar.interactable = e)
            }
            onSwitchToFavoriteGame(e) {
                let t = SS.Common.GameEnvironment.CurrentGameNow;
                cc.log("[step] onSwitchToFavoriteGame ", e, t), null != e && null != t && e != t && (s.ClickLog.EntryPoint = r.LogEvent_EntryPoint.Profile, l.CommonRoot.Instance ? l.CommonRoot.Instance.m_switchGameGroup.OpenSwitchGameWindow(e, t) : i.EventSystem.Event(i.OpenSwitchGameWindow).Notify(e, t))
            }
            GetIsInLobby() {
                return -1 != cc.director.getScene().name.indexOf("Lobby")
            }
            onDoLogOut() {
                if (cc.error("[step] onDoLogOut"), this.GetIsInLobby()) {
                    let e = () => {
                            let e = SS.Common.GameEnvironment.Language + "Login";
                            cc.assetManager.bundles.find(function(t) {
                                return t._config.getSceneInfo(e)
                            }) ? cc.director.loadScene(e) : cc.director.loadScene("Login")
                        },
                        t = (e, t) => {
                            console.error("Logout error status :" + e, "data:", t)
                        };
                    a.LobbyClient.Instance.DoLogout(e, t)
                }
            }
            RecvRecordUpdateCmd(e) {
                console.log("[ProfileBar]  RecvRecordUpdateCmd   data = " + JSON.stringify(e));
                let t = e.ark_id == a.LobbyClient.Instance.GetUserClient.GetPinClient.ArkID;
                this.m_isFishGame && t && this.scheduleOnce(() => {
                    let t = -1;
                    e.type == c.RewardBroadcastType.Multiple_Fish ? t = h.RewardType.NumberOne_Multiple : e.type == c.RewardBroadcastType.Jackpot && (t = h.RewardType.NumberOne_Jackpot), i.EventSystem.Event(i.NoticedArrived.OnReceiveReward).Notify(t), i.EventSystem.Event(i.NoticedArrived.ShowRewardNotice).Notify()
                }, 2), this.m_isFishGame ? this.scheduleOnce(() => {
                    i.EventSystem.Event(i.NoticedArrived.OnReceiveBroadcast).Notify(e)
                }, 2) : i.EventSystem.Event(i.NoticedArrived.OnReceiveBroadcast).Notify(e)
            }
        };
        n([u(cc.Button)], p.prototype, "m_btnProfileBar", void 0), n([u({
            displayName: "\u662f\u5426\u70ba\u9b5a\u6a5f"
        })], p.prototype, "m_isFishGame", void 0), p = n([m], p), o.ProfileBar = p, cc._RF.pop()
    }, {
        "../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../../LobbyCommon/Net/ClickLog": "ClickLog",
        "../../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum",
        "../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../CommonRoot/Script/CommonRoot": "CommonRoot",
        "./RewardBroadcastMgr": "RewardBroadcastMgr",
        "./RewardNoticeMgr": "RewardNoticeMgr"
    }],
    ProjectSettingDownloader: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "410b2/SPJ1O5LWw0FXbLECN", "ProjectSettingDownloader"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ProjectSettingDownloader = void 0;
        const n = e("jsonpack"),
            i = e("./SSDownloader");
        o.ProjectSettingDownloader = class extends i.default {
            constructor() {
                super(...arguments), this.OnLoad = null, this.OnError = null
            }
            Start(e, t, o, n) {
                this.OnLoad = o, this.OnError = n, this._isDeveloper = t, this.GetJSON(e, this.OnLoadComplete.bind(this), this.OnError.bind(this))
            }
            OnLoadComplete(e) {
                let t = this;
                try {
                    let i;
                    0 == (i = t._isDeveloper ? JSON.parse(e) : n.unpack(e).json).ShowConsoleLog && (console.log = function() {}, cc.log = function() {}), 0 == i.ShowConsoleWarn && (console.warn = function() {}, cc.warn = function() {}), 0 == i.ShowConsoleError && (console.error = function() {}, cc.error = function() {}), null != t.OnLoad && t.OnLoad(i)
                } catch (o) {
                    console.error("[ProjectSettingDownloader] Load project setting failed.\n", o), null != t.OnError && t.OnError(o)
                }
            }
        }, cc._RF.pop()
    }, {
        "./SSDownloader": "SSDownloader",
        jsonpack: 27
    }],
    QuestCmd: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "98bdfeuPW1L2KeIcXHJ6aHE", "QuestCmd"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.QuestCmd = void 0;
        const n = e("../../../LobbyCommon/Net/LobbyClient"),
            i = e("./ErrorCodes"),
            s = e("./QuestData");
        var r, a;
        (function(e) {
            e.Quest = "Quest", e.Achieve = "Achieve", e.ActCapsule = "ActCapsule", e.GiftCard = "GiftCard"
        })(r || (r = {})),
        function(e) {
            e.GetQuest = "GET_QUEST", e.GetInfo = "GET_INFO", e.GetTask = "GET_TASK", e.TakeReward = "TAKE_REWARD", e.GetMachine = "GET_MACHINE", e.Roll = "ROLL", e.GetHistory = "GET_HISTORY", e.GetAwardHistory = "GET_AWARD_HISTORY"
        }(a || (a = {}));
        const l = (e, t, o, n, i, s, r = null) => {
                if (0 === t && o && o.cmd_data) {
                    const t = o.cmd_data.Code;
                    if (0 == t)
                        if (s) {
                            const t = s.Parse(o.cmd_data);
                            console.log("[Quest] " + e + " res: ", t), n(t)
                        } else n(o.cmd_data);
                    else r ? console.warn("[Quest] " + e + " code: " + t + " err: " + r[t]) : console.warn("[Quest] " + e + " code: " + t), i(t)
                } else console.warn("[Quest] " + e + " status: " + t + ", data: ", o), i(t)
            },
            c = {
                GetQuest: () => new Promise((e, t) => {
                    n.LobbyClient.Instance.GetUserClient.SendCommand(r.Quest, a.GetQuest, {}, (o, n) => {
                        l(a.GetQuest, o, n, e, t, new s.default)
                    })
                }),
                GetAchieveInfo: (e, t) => new Promise((o, s) => {
                    const c = {
                        RoundId: e
                    };
                    n.LobbyClient.Instance.GetUserClient.SendCommand(r.Achieve, a.GetInfo, c, (e, n) => {
                        l(a.GetInfo, e, n, o, s, t, i.QuestError.AchieveInfo)
                    })
                }),
                GetAchieveTask: (e, t, o) => new Promise((s, c) => {
                    const h = {
                        RoundId: e,
                        Tab: t
                    };
                    n.LobbyClient.Instance.GetUserClient.SendCommand(r.Achieve, a.GetTask, h, (e, t) => {
                        l(a.GetTask, e, t, s, c, o, i.QuestError.AchieveTask)
                    })
                }),
                TakeAchieveReward: (e, t, o) => new Promise((s, c) => {
                    const h = {
                        RoundId: e,
                        SessionId: t
                    };
                    n.LobbyClient.Instance.GetUserClient.SentNoRetryCommond(r.Achieve, a.TakeReward, h, (e, t) => {
                        l(a.TakeReward, e, t, s, c, o, i.QuestError.AchieveTake)
                    })
                }),
                GetMachineInfo: (e, t) => new Promise((o, s) => {
                    const c = {
                        RoundId: e
                    };
                    n.LobbyClient.Instance.GetUserClient.SentNoRetryCommond(r.ActCapsule, a.GetMachine, c, (e, n) => {
                        l(a.GetMachine, e, n, o, s, t, i.QuestError.GetMachine)
                    })
                }),
                SendRollCmd: (e, t, o, s, c) => new Promise((h, m) => {
                    const u = {
                        RoundId: e,
                        CostType: o,
                        Currency: s,
                        MachineId: t
                    };
                    n.LobbyClient.Instance.GetUserClient.SentNoRetryCommond(r.ActCapsule, a.Roll, u, (e, t) => {
                        l(a.Roll, e, t, h, m, c, i.QuestError.Roll)
                    })
                }),
                GetHistoryCmd: (e, t, o, s) => new Promise((c, h) => {
                    const m = {
                        Reason: e,
                        BeginTime: null == o ? void 0 : o.toDateString(),
                        EndTime: null == s ? void 0 : s.toDateString()
                    };
                    n.LobbyClient.Instance.GetUserClient.SendCommand(r.GiftCard, a.GetHistory, m, (e, o) => {
                        l(a.GetHistory, e, o, c, h, t, i.QuestError.GetHistory)
                    })
                }),
                GetAwardHistoryCmd: (e, t) => new Promise((o, s) => {
                    const c = {
                        RoundId: e
                    };
                    n.LobbyClient.Instance.GetUserClient.SendCommand(r.ActCapsule, a.GetAwardHistory, c, (e, n) => {
                        l(a.GetAwardHistory, e, n, o, s, t, i.QuestError.GetHistory)
                    })
                })
            };
        o.QuestCmd = c, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "./ErrorCodes": "ErrorCodes",
        "./QuestData": "QuestData"
    }],
    QuestData: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "21079nWYnFM1ooadx+tPgM1", "QuestData"), Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const n = e("../../Achieve/AchieveDefine");
        o.default = class {
            constructor(e) {
                this.data = null, this.refreshSec = null, e && this.Parse(e)
            }
            Parse(e) {
                this.data = new SS.Common.Dictionary;
                const t = e.Data;
                for (let o of Object.keys(t)) {
                    const e = new n.default(t[o]);
                    this.data.add(o, e)
                }
                return this.refreshSec = e.RefreshSec, this
            }
        }, cc._RF.pop()
    }, {
        "../../Achieve/AchieveDefine": "AchieveDefine"
    }],
    QuestEvents: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "da8dfo8fHpML4UFjTsg9KsU", "QuestEvents"), Object.defineProperty(o, "__esModule", {
                value: !0
            }), o.QuestEvent = void 0,
            function(e) {
                e.UpdateAchieve = "[questevent]_updateachieve", e.UpdateTask = "[questevent]_updatetask", e.OnReceiveQuestData = "[QuestEvent]_onReceiveQuestData", e.TakeAchieveReward = "[QuestEvent]_TakeAchieveReward", e.OnQuestInited = "[QuestEvent]_OnQuestInited", e.OnQuestRefresh = "[QuestEvent]_OnQuestRefresh", e.ReadyToRoll = "[QuestEvent]_ReadyToRoll"
            }(o.QuestEvent || (o.QuestEvent = {})), cc._RF.pop()
    }, {}],
    RELEASE: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "c45eerGGXpCwbWXDmq146sl", "RELEASE");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.RELEASE = void 0;
        const i = e("../LobbyCommon/Helper/Download"),
            s = e("../LobbyCommon/LobbyCommon"),
            r = e("../LobbyCommon/Net/LobbyClient"),
            a = e("../LobbyCommon/Skin/Skin"),
            {
                ccclass: l,
                property: c
            } = cc._decorator;
        let h = class extends cc.Component {
            start() {
                this.ReleaseBundle(), r.LobbyClient.Instance.ReloadLobby = null, r.LobbyClient.Instance.ReloadGame = null, SS.Common.ReleaseAsyncSource(), cc.game.removePersistRootNode(s.LobbyCommon.Instance.node), r.LobbyClient.SetInstance(null), s.LobbyCommon.Instance.node.destroy();
                let e, t = window.parent.document.getElementsByTagName("iframe");
                for (let o = 0; o < t.length; o++)
                    if (t[o].src == window.location.href || SS.Common.GameEnvironment.IframeSRC && t[o].src == SS.Common.GameEnvironment.IframeSRC) {
                        e = t[o];
                        break
                    }
                e && (e.src = "about:blank"), SS.Common.GameEnvironment.IframeSRC = null, window.parent.cc.game.resume()
            }
            ReleaseBundle() {
                console.log("Game Release Bundle Start!\n Now Bundles: " + cc.assetManager.bundles.count);
                let e = a.default.Instance.GetLoadList("Game");
                i.Download.ReleaseBundles(e), cc.sys.garbageCollect(), console.log("Game Release Bundle Finished!\n Now Bundles: " + cc.assetManager.bundles.count)
            }
        };
        h = n([l], h), o.RELEASE = h, cc._RF.pop()
    }, {
        "../LobbyCommon/Helper/Download": "Download",
        "../LobbyCommon/LobbyCommon": "LobbyCommon",
        "../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../LobbyCommon/Skin/Skin": "Skin"
    }],
    RankAwardPanelCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "a17a3u/OlpHv4fIl7FUZ+4A", "RankAwardPanelCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.RankAwardPanelCtrl = void 0;
        const s = e("../../../../Component/BundleCtrl"),
            r = e("../../../../Helper/EventSystem"),
            a = e("../../../../Net/ClickLog"),
            l = e("../../../../Net/ClickLogEnum"),
            c = e("../../../../Net/LobbyClient"),
            h = e("../CommBonusData"),
            m = e("./PlayerRankingCtrl"),
            {
                ccclass: u,
                property: d
            } = cc._decorator;
        let p = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_rtID = null, this.m_spAvatarFace = null, this.m_spAvatarFaceFrame = null, this.m_labNickName = null, this.m_labMobileID = null, this.m_rtAwardMsg = [], this.m_labAwardNum = [], this.m_rtTotalAwardMsg = null, this.m_labTotalAwardNum = null, this.m_scroll = null, this.m_nodeRankPanel = null, this.m_nodeContent = null, this.m_prefabPlayer = null, this.m_strEventName = "RankBonus", this.m_nodeAwardItemRankRoot = null, this.m_nodeAwardItemTotalRoot = null, this.m_spFaceFrameForRank = null, this.m_spFaceFrameForTotal = null, this.m_nodePool = null, this.m_arrPlayerRankingCtrl = [], this.m_arrRankingPlayerData = [], this.m_fScrollToPercent = 0, this.m_strMsgPrefix = "<color=#64FFFF>", this.m_strMsgPostfix = "</color>", this.m_strRankNumPrefix = "<color=#FF0000>", this.m_strRankNumPostfix = "</color>", this.m_sCommBonus = "", this.m_sRankBonusNo = "", this.m_sYouHaveWon = "", this.m_sNumber = "", this.m_strArkID = "", this.m_isCollected = !1, this.m_isProfileCanShow = !0
            }
            onLoad() {
                this.m_nodePool = new cc.NodePool;
                for (let e = 0; e < 10; ++e) {
                    let e = cc.instantiate(this.m_prefabPlayer);
                    this.m_nodePool.put(e)
                }
                r.EventSystem.Event(r.CommunityBonus.SetCollected).Insert(this.SetCollected, this), r.EventSystem.Event(r.Avatar.SetFaceIcon).Insert(this.SetFaceSprite, this), r.EventSystem.Event(r.Avatar.SetFaceFrameIcon).Insert(this.SetFrameSprite, this), r.EventSystem.Event(r.Avatar.SetNickname).Insert(this.SetNickname, this), r.EventSystem.Event(r.Profile.NotifyUpdatePlayerSetting).Insert(this.SetByPlayerData, this)
            }
            onEnable() {
                this.m_isCollected = !1, this.m_isProfileCanShow = !0
            }
            Reset() {
                this.m_isCollected = !1, this.m_isProfileCanShow = !0
            }
            onDestroy() {
                r.EventSystem.Event(r.CommunityBonus.SetCollected) && r.EventSystem.Event(r.CommunityBonus.SetCollected).Length > 0 && r.EventSystem.Event(r.CommunityBonus.SetCollected).Remove(this.SetCollected, this), r.EventSystem.Event(r.Avatar.SetFaceIcon) && r.EventSystem.Event(r.Avatar.SetFaceIcon).Remove(this.SetFaceSprite, this), r.EventSystem.Event(r.Avatar.SetFaceFrameIcon) && r.EventSystem.Event(r.Avatar.SetFaceFrameIcon).Remove(this.SetFrameSprite, this), r.EventSystem.Event(r.Avatar.SetNickname) && r.EventSystem.Event(r.Avatar.SetNickname).Remove(this.SetNickname, this), r.EventSystem.Event(r.Profile.NotifyUpdatePlayerSetting) && r.EventSystem.Event(r.Profile.NotifyUpdatePlayerSetting).Remove(this.SetByPlayerData, this)
            }
            onClickRank() {
                return i(this, void 0, void 0, function*() {
                    0 != this.m_isProfileCanShow && (this.m_isProfileCanShow = !1, 0 == this.m_isCollected && (r.EventSystem.Event(r.CommunityBonus.ClickGetAwardCollect) && r.EventSystem.Event(r.CommunityBonus.ClickGetAwardCollect).Length > 0 && r.EventSystem.Event(r.CommunityBonus.ClickGetAwardCollect).Notify(), yield SS.Common.WaitForSeconds(2.5)), this.m_isProfileCanShow = !0, this.m_nodeRankPanel.active = !0, this.m_scroll.stopAutoScroll(), this.m_scroll.scrollToPercentVertical(this.m_fScrollToPercent), c.LobbyClient.Instance.GetUserClient.recordClickLog("Rank", h.RankClickLogID.AWARD_RANK_BTN), this.m_isCollected = !0)
                })
            }
            onClickRankX() {
                this.m_nodeRankPanel.active = !1, c.LobbyClient.Instance.GetUserClient.recordClickLog("Rank", h.RankClickLogID.AWARD_RANK_X_BTN)
            }
            setLang() {
                switch (SS.Common.GameEnvironment.Language) {
                    case "":
                    case "en":
                        this.m_sCommBonus = "Community Bonus", this.m_sRankBonusNo = "Rankings Bonus No.", this.m_sYouHaveWon = "YOU'VE WON", this.m_sNumber = "No.";
                        break;
                    case "es":
                        this.m_sCommBonus = "Bono Comunitario", this.m_sRankBonusNo = "Bono del R\xe1nking N\xfam.", this.m_sYouHaveWon = "GANAS", this.m_sNumber = "N\xfam."
                }
            }
            setDetail(e, t, o, n, r, a, l, c, h, m, u) {
                return i(this, void 0, void 0, function*() {
                    this.m_nodeRankPanel.active = !1, this.m_nodeAwardItemRankRoot.active = !1, this.m_nodeAwardItemTotalRoot.opacity = 0;
                    let i = !1,
                        d = 0;
                    "es" != SS.Common.GameEnvironment.Language && (i = !0, d = 2, l *= a, c *= a), this.m_arrRankingPlayerData = h, this.setRankingList(e, a, h, m, u), this.setLang(), this.m_rtID.string = this.m_sNumber + e;
                    let p = "es" == SS.Common.GameEnvironment.Language ? " CR\xc9D." : "";
                    this.m_strArkID = r, this.m_labNickName.string = n, t && "" != t || (t = "FAC000");
                    let g = yield s.default.Instance.GetSpirte("Avatar", t);
                    if (this.m_spAvatarFace.spriteFrame = g || null, o && "" != o) {
                        let e = yield s.default.Instance.GetSpirte("Avatar", o);
                        e && (this.m_spAvatarFaceFrame.spriteFrame = e)
                    } else this.m_spAvatarFaceFrame.spriteFrame = null;
                    this.m_labMobileID.string = "Mobile ID : " + SS.Network.UserClient.UserInfo.mobile_id;
                    let _ = 0;
                    if (l > 0 && (this.m_rtAwardMsg[_].enabled = !0, this.m_rtAwardMsg[_].string = this.m_strMsgPrefix + this.m_sCommBonus + this.m_strMsgPostfix, this.m_labAwardNum[_].enabled = !0, this.m_labAwardNum[_].string = SS.Common.BaseFunction.addCommas(l, d, i) + p, _++), c > 0) {
                        let t = -1,
                            o = "";
                        for (let n = 0; n < this.m_arrRankingPlayerData.length; n++)
                            if (this.m_arrRankingPlayerData[n].ranking_id == e) {
                                t = n + 1;
                                for (let e = 0; e < m.length; e++)
                                    if (n + 1 <= m[e].End) {
                                        o = m[e].ItemID;
                                        break
                                    }
                                break
                            }
                        if (null != o && null != o && "" != o && -1 != o.indexOf("FRM")) {
                            this.m_nodeAwardItemRankRoot.active = !0, this.m_nodeAwardItemRankRoot.setPosition(this.m_nodeAwardItemRankRoot.position.x, this.m_labAwardNum[_].node.position.y), this.m_nodeAwardItemTotalRoot.opacity = 255;
                            let e = yield s.default.Instance.GetSpirte("Avatar", o);
                            e ? (this.m_spFaceFrameForRank.spriteFrame = e, this.m_spFaceFrameForTotal.spriteFrame = e) : (this.m_spFaceFrameForRank.spriteFrame = null, this.m_spFaceFrameForTotal.spriteFrame = null)
                        }
                        this.m_rtAwardMsg[_].enabled = !0, this.m_rtAwardMsg[_].string = this.m_strMsgPrefix + this.m_sRankBonusNo + this.m_strRankNumPrefix + t + this.m_strRankNumPostfix + this.m_strMsgPostfix, this.m_labAwardNum[_].enabled = !0, this.m_labAwardNum[_].string = SS.Common.BaseFunction.addCommas(c, d, i) + p, _++
                    }
                    _ < 2 && (this.m_rtAwardMsg[1].enabled = !1, this.m_labAwardNum[1].enabled = !1), this.m_rtTotalAwardMsg.string = this.m_strMsgPrefix + this.m_sYouHaveWon + this.m_strMsgPostfix, this.m_labTotalAwardNum.string = SS.Common.BaseFunction.addCommas(l + c, d, i) + p
                })
            }
            setRankingList(e, t, o, n, i) {
                this.m_arrPlayerRankingCtrl.forEach(e => {
                    this.m_nodePool.put(e.node)
                }), this.m_arrPlayerRankingCtrl = [];
                let s = -1;
                for (let r = 0; r < o.length; r++) {
                    let i = -1,
                        a = "";
                    for (let e = 0; e < n.length; e++)
                        if (r + 1 <= n[e].End) {
                            i = n[e].Award, a = n[e].ItemID;
                            break
                        }
                    let l = this.m_nodePool.get();
                    null == l && (l = cc.instantiate(this.m_prefabPlayer)), l.parent = this.m_nodeContent;
                    let c = l.getComponent(m.PlayerRankingCtrl),
                        h = o[r];
                    i = "es" == SS.Common.GameEnvironment.Language ? i : i * t, c.init(r, h.ranking_id, h.amount, -1, i, e == h.ranking_id, h.AvatarID, h.AvatarFrameID, h.Nickname, h.ark_id, !0, a), c.reveal(), this.m_arrPlayerRankingCtrl.push(c), e == h.ranking_id && (s = r)
                }
                this.m_arrPlayerRankingCtrl.length > 4 && (this.m_fScrollToPercent = 1 - (s - 1 / (this.m_arrPlayerRankingCtrl.length - 3)))
            }
            onClickProfileBtn(e, t) {
                return i(this, void 0, void 0, function*() {
                    if (0 != this.m_isProfileCanShow) {
                        if (this.m_isProfileCanShow = !1, 0 == this.m_isCollected && (r.EventSystem.Event(r.CommunityBonus.ClickGetAwardCollect) && r.EventSystem.Event(r.CommunityBonus.ClickGetAwardCollect).Length > 0 && r.EventSystem.Event(r.CommunityBonus.ClickGetAwardCollect).Notify(), yield SS.Common.WaitForSeconds(2.5)), this.m_isProfileCanShow = !0, r.EventSystem.Event(r.Profile.OpenProfile).Length > 0 && "" != this.m_strArkID && null != this.m_strArkID) switch (r.EventSystem.Event(r.Profile.OpenProfile).Notify(!0, this.m_strArkID), t) {
                            case "RankBonus":
                                a.ClickLog.recordClickLog(l.LogName.Profile, -1, l.LogType_Profile.OpenPanel, l.LogEvent_OpenPanel.InRankBonusAward);
                                break;
                            case "FishRankBonus":
                                a.ClickLog.recordClickLog(l.LogName.Profile, -1, l.LogType_Profile.OpenPanel, l.LogEvent_OpenPanel.InFishRankBonusAward)
                        }
                        this.m_isCollected = !0
                    }
                })
            }
            SetCollected(e) {
                e == this.m_strEventName && (this.m_isCollected = !0)
            }
            SetByPlayerData(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && (this.SetFaceByID(e.FaceID), this.SetFrameByID(e.FaceFrameID), this.SetNickname(e.NickName))
            }
            SetNickname(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_labNickName && (this.m_labNickName.string = e)
            }
            SetFaceSprite(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_spAvatarFace && (this.m_spAvatarFace.spriteFrame = e)
            }
            SetFrameSprite(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_spAvatarFaceFrame && (this.m_spAvatarFaceFrame.spriteFrame = e)
            }
            SetFaceByID(e) {
                return i(this, void 0, void 0, function*() {
                    if (this.m_strArkID != SS.Network.LoginModel.LoginInfo.pin_ark_id) return;
                    e && "" != e || (e = "FAC000");
                    let t = yield s.default.Instance.GetSpirte("Avatar", e);
                    this.m_spAvatarFace.spriteFrame = t || null
                })
            }
            SetFrameByID(e) {
                return i(this, void 0, void 0, function*() {
                    if (this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id)
                        if (e && "" != e) {
                            let t = yield s.default.Instance.GetSpirte("Avatar", e);
                            t && (this.m_spAvatarFaceFrame.spriteFrame = t)
                        } else this.m_spAvatarFaceFrame.spriteFrame = null
                })
            }
        };
        n([d(cc.RichText)], p.prototype, "m_rtID", void 0), n([d(cc.Sprite)], p.prototype, "m_spAvatarFace", void 0), n([d(cc.Sprite)], p.prototype, "m_spAvatarFaceFrame", void 0), n([d(cc.Label)], p.prototype, "m_labNickName", void 0), n([d(cc.Label)], p.prototype, "m_labMobileID", void 0), n([d(cc.RichText)], p.prototype, "m_rtAwardMsg", void 0), n([d(cc.Label)], p.prototype, "m_labAwardNum", void 0), n([d(cc.RichText)], p.prototype, "m_rtTotalAwardMsg", void 0), n([d(cc.Label)], p.prototype, "m_labTotalAwardNum", void 0), n([d(cc.ScrollView)], p.prototype, "m_scroll", void 0), n([d(cc.Node)], p.prototype, "m_nodeRankPanel", void 0), n([d(cc.Node)], p.prototype, "m_nodeContent", void 0), n([d(cc.Prefab)], p.prototype, "m_prefabPlayer", void 0), n([d()], p.prototype, "m_strEventName", void 0), n([d(cc.Node)], p.prototype, "m_nodeAwardItemRankRoot", void 0), n([d(cc.Node)], p.prototype, "m_nodeAwardItemTotalRoot", void 0), n([d(cc.Sprite)], p.prototype, "m_spFaceFrameForRank", void 0), n([d(cc.Sprite)], p.prototype, "m_spFaceFrameForTotal", void 0), p = n([u], p), o.RankAwardPanelCtrl = p, cc._RF.pop()
    }, {
        "../../../../Component/BundleCtrl": "BundleCtrl",
        "../../../../Helper/EventSystem": "EventSystem",
        "../../../../Net/ClickLog": "ClickLog",
        "../../../../Net/ClickLogEnum": "ClickLogEnum",
        "../../../../Net/LobbyClient": "LobbyClient",
        "../CommBonusData": "CommBonusData",
        "./PlayerRankingCtrl": "PlayerRankingCtrl"
    }],
    RankBonusTotalProgress: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "48fabzXpblHT7/0kS7hc5Wl", "RankBonusTotalProgress");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.RankBonusTotalProgress = void 0;
        const s = e("../../../../Component/BundleCtrl"),
            r = e("../../../../Helper/EventSystem"),
            a = e("../../../../Net/ClickLog"),
            l = e("../../../../Net/ClickLogEnum"),
            c = e("../CommBonusTokenCtrl"),
            {
                ccclass: h,
                property: m
            } = cc._decorator;
        let u = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_TokenCtr = null, this.m_labTotalProgress = null, this.m_labTotalProgressAdd = null, this.m_nodeRank = null, this.m_labRank = null, this.m_labID = null, this.m_nodeBonus = null, this.m_labBonus = null, this.m_pfToken = null, this.m_pfMoveEnd = null, this.m_spAvatarFace = null, this.m_spAvatarFaceFrame = null, this.m_labNickName = null, this.m_labMobileID = null, this.m_fucTokenShowStartCB = null, this.m_fucAllTokenShowEndCB = null, this.m_fucAllTokenEnlargeEndCB = null, this.m_fucTokenEnlargeEndCB = null, this.m_fucTokenEnlargeStartCB = null, this.m_iFlyTokenCtr = 0, this.m_iTotalPrgressOnTop = 0, this.m_strArkID = ""
            }
            onLoad() {
                r.EventSystem.Event(r.Avatar.SetFaceIcon).Insert(this.SetFaceSprite, this), r.EventSystem.Event(r.Avatar.SetFaceFrameIcon).Insert(this.SetFrameSprite, this), r.EventSystem.Event(r.Avatar.SetNickname).Insert(this.SetNickname, this), r.EventSystem.Event(r.Profile.NotifyUpdatePlayerSetting).Insert(this.SetByPlayerData, this)
            }
            onDestroy() {
                r.EventSystem.Event(r.Avatar.SetFaceIcon).Remove(this.SetFaceSprite, this), r.EventSystem.Event(r.Avatar.SetFaceFrameIcon).Remove(this.SetFrameSprite, this), r.EventSystem.Event(r.Avatar.SetNickname).Remove(this.SetNickname, this), r.EventSystem.Event(r.Profile.NotifyUpdatePlayerSetting).Remove(this.SetByPlayerData, this)
            }
            start() {
                this.m_labTotalProgressAdd.node.opacity = 0, this.m_TokenCtr.m_CommGetTokenShow.m_pfToken = this.m_pfToken, this.m_TokenCtr.m_CommGetTokenShow.m_pfMoveEnd = this.m_pfMoveEnd
            }
            checkAllTokenShowEnd() {
                this.m_iFlyTokenCtr--, 0 == this.m_iFlyTokenCtr && this.m_fucAllTokenShowEndCB && (this.m_TokenCtr.showToken(), this.m_fucAllTokenShowEndCB())
            }
            setTokenShowStartCB(e) {
                this.m_fucTokenShowStartCB = e
            }
            setAllTokenShowEndCB(e) {
                this.m_fucAllTokenShowEndCB = e, this.m_TokenCtr.m_fucShowEndCB = this.checkAllTokenShowEnd.bind(this)
            }
            showFlyToken(e) {
                this.m_iFlyTokenCtr++, this.m_TokenCtr.showFlyToken(0, e)
            }
            setProgress(e) {
                this.m_iTotalPrgressOnTop = e, this.m_labTotalProgress.string = "x" + e
            }
            setProgressNoX(e) {
                this.m_iTotalPrgressOnTop = e, this.m_labTotalProgress.string = e.toString()
            }
            getProgress() {
                return this.m_iTotalPrgressOnTop
            }
            setProgressAdd(e) {
                this.m_labTotalProgressAdd.string = "+" + e, this.m_labTotalProgressAdd.node.opacity = 0;
                let t = cc.fadeIn(.25),
                    o = cc.fadeOut(1),
                    n = cc.sequence(t, o);
                this.m_labTotalProgressAdd.node.stopAllActions(), this.m_labTotalProgressAdd.node.runAction(n)
            }
            setRankingInfo(e, t, o, n, r, a, l) {
                return i(this, void 0, void 0, function*() {
                    this.m_labRank.string = -1 == e ? "-" : (e + 1).toString();
                    let i = "es" == SS.Common.GameEnvironment.Language ? "N\xfam." : "No.";
                    this.m_labID.string = i + t;
                    let c = "es" != SS.Common.GameEnvironment.Language;
                    SS.Common.GameEnvironment.Language, this.m_labBonus.string = SS.Common.BaseFunction.addCommas(o, 0, c), this.m_strArkID = l, this.m_labNickName.string = a, n && "" != n || (n = "FAC000");
                    let h = yield s.default.Instance.GetSpirte("Avatar", n);
                    if (this.m_spAvatarFace.spriteFrame = h || null, r && "" != r) {
                        let e = yield s.default.Instance.GetSpirte("Avatar", r);
                        e && (this.m_spAvatarFaceFrame.spriteFrame = e)
                    } else this.m_spAvatarFaceFrame.spriteFrame = null;
                    this.m_labMobileID.string = "Mobile ID : " + SS.Network.UserClient.UserInfo.mobile_id
                })
            }
            hideRankAndBonus() {
                this.m_nodeRank.opacity = 0, this.m_nodeBonus.opacity = 0
            }
            showRankAndBonus() {
                this.m_nodeRank.opacity = 0, this.m_nodeBonus.opacity = 0;
                let e = cc.fadeIn(.25);
                this.m_nodeRank.stopAllActions(), this.m_nodeRank.runAction(e);
                let t = cc.fadeIn(.25);
                this.m_nodeBonus.stopAllActions(), this.m_nodeBonus.runAction(t)
            }
            getTokenPos() {
                return this.m_TokenCtr.node.parent.convertToWorldSpaceAR(this.m_TokenCtr.node.getPosition())
            }
            onClickProfileBtn(e, t) {
                if (r.EventSystem.Event(r.Profile.OpenProfile).Length > 0 && "" != this.m_strArkID && null != this.m_strArkID) switch (r.EventSystem.Event(r.Profile.OpenProfile).Notify(!0, this.m_strArkID), t) {
                    case "RankBonus":
                        a.ClickLog.recordClickLog(l.LogName.Profile, -1, l.LogType_Profile.OpenPanel, l.LogEvent_OpenPanel.InRankBonus);
                        break;
                    case "FishRankBonus":
                        a.ClickLog.recordClickLog(l.LogName.Profile, -1, l.LogType_Profile.OpenPanel, l.LogEvent_OpenPanel.InFishRankBonus)
                }
            }
            SetByPlayerData(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && (this.SetFaceByID(e.FaceID), this.SetFrameByID(e.FaceFrameID), this.SetNickname(e.NickName))
            }
            SetNickname(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_labNickName && (this.m_labNickName.string = e)
            }
            SetFaceSprite(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_spAvatarFace && (this.m_spAvatarFace.spriteFrame = e)
            }
            SetFrameSprite(e) {
                this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id && this.m_spAvatarFaceFrame && (this.m_spAvatarFaceFrame.spriteFrame = e)
            }
            SetFaceByID(e) {
                return i(this, void 0, void 0, function*() {
                    if (this.m_strArkID != SS.Network.LoginModel.LoginInfo.pin_ark_id) return;
                    e && "" != e || (e = "FAC000");
                    let t = yield s.default.Instance.GetSpirte("Avatar", e);
                    this.m_spAvatarFace.spriteFrame = t || null
                })
            }
            SetFrameByID(e) {
                return i(this, void 0, void 0, function*() {
                    if (this.m_strArkID == SS.Network.LoginModel.LoginInfo.pin_ark_id)
                        if (e && "" != e) {
                            let t = yield s.default.Instance.GetSpirte("Avatar", e);
                            t && (this.m_spAvatarFaceFrame.spriteFrame = t)
                        } else this.m_spAvatarFaceFrame.spriteFrame = null
                })
            }
        };
        n([m(c.CommBonusTokenCtrl)], u.prototype, "m_TokenCtr", void 0), n([m(cc.Label)], u.prototype, "m_labTotalProgress", void 0), n([m(cc.Label)], u.prototype, "m_labTotalProgressAdd", void 0), n([m(cc.Node)], u.prototype, "m_nodeRank", void 0), n([m(cc.Label)], u.prototype, "m_labRank", void 0), n([m(cc.Label)], u.prototype, "m_labID", void 0), n([m(cc.Node)], u.prototype, "m_nodeBonus", void 0), n([m(cc.Label)], u.prototype, "m_labBonus", void 0), n([m(cc.Prefab)], u.prototype, "m_pfToken", void 0), n([m(cc.Prefab)], u.prototype, "m_pfMoveEnd", void 0), n([m(cc.Sprite)], u.prototype, "m_spAvatarFace", void 0), n([m(cc.Sprite)], u.prototype, "m_spAvatarFaceFrame", void 0), n([m(cc.Label)], u.prototype, "m_labNickName", void 0), n([m(cc.Label)], u.prototype, "m_labMobileID", void 0), u = n([h], u), o.RankBonusTotalProgress = u, cc._RF.pop()
    }, {
        "../../../../Component/BundleCtrl": "BundleCtrl",
        "../../../../Helper/EventSystem": "EventSystem",
        "../../../../Net/ClickLog": "ClickLog",
        "../../../../Net/ClickLogEnum": "ClickLogEnum",
        "../CommBonusTokenCtrl": "CommBonusTokenCtrl"
    }],
    RankingBonusListCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "0ae1eSB+ppFTZb9el6TIW6g", "RankingBonusListCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.RankingBonusListCtrl = void 0;
        const i = e("./RankingBonusRowCtrl"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeContent = null, this.m_prefab = null, this.m_labListNum = null, this.m_tempRankInfoAry = [], this.m_bIsInit = !1
            }
            init(e, t, o = 4) {
                if (this.m_bIsInit) return;
                let n = 0;
                for (let a = 0; a < e.length; a++) {
                    let o = cc.instantiate(this.m_prefab),
                        s = o.getComponent(i.RankingBonusRowCtrl),
                        r = e[a];
                    t = "es" == SS.Common.GameEnvironment.Language ? 1 : t, s.init(r.Begin, r.End, r.Award * t, r.ItemID), o.parent = this.m_nodeContent, this.m_tempRankInfoAry.push(o), n = r.End > n ? r.End : n
                }
                let s = o.toString() + ". Ranked the top " + n + " in the contest will be awarded the bonus as follows: ",
                    r = "3. Se repartir\xe1n premios a los " + o.toString() + " mejores del Mapa del Tesoro:";
                this.m_labListNum.string = "es" == SS.Common.GameEnvironment.Language ? r : s, this.m_bIsInit = !0
            }
            Clear() {
                this.m_tempRankInfoAry.forEach(e => {
                    e.destroy()
                }), this.m_bIsInit = !1
            }
        };
        n([r(cc.Node)], a.prototype, "m_nodeContent", void 0), n([r(cc.Prefab)], a.prototype, "m_prefab", void 0), n([r(cc.Label)], a.prototype, "m_labListNum", void 0), a = n([s], a), o.RankingBonusListCtrl = a, cc._RF.pop()
    }, {
        "./RankingBonusRowCtrl": "RankingBonusRowCtrl"
    }],
    RankingBonusRowCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "e5b47ydbXBL9r42tGCPyTtE", "RankingBonusRowCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.RankingBonusRowCtrl = void 0;
        const s = e("../../../../Component/BundleCtrl"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_labRank = null, this.m_labBonus = null, this.m_nodeAwardItemRoot = null, this.m_spFaceFrame = null
            }
            init(e, t, o, n) {
                return i(this, void 0, void 0, function*() {
                    this.m_labRank.string = e == t ? this.numberStr(e) : this.numberStr(e) + " ~ " + this.numberStr(t);
                    let i = "es" != SS.Common.GameEnvironment.Language,
                        r = (SS.Common.GameEnvironment.Language, "es" == SS.Common.GameEnvironment.Language ? " CR\xc9D." : "");
                    if (this.m_labBonus.string = SS.Common.BaseFunction.addCommas(o, 0, i) + r, this.m_nodeAwardItemRoot.active = !1, null != n && null != n && "" != n && -1 != n.indexOf("FRM")) {
                        this.m_nodeAwardItemRoot.active = !0;
                        let e = yield s.default.Instance.GetSpirte("Avatar", n);
                        this.m_spFaceFrame.spriteFrame = e || null
                    }
                })
            }
            numberStr(e) {
                return "es" == SS.Common.GameEnvironment.Language ? e + "\xba" : "No." + e
            }
        };
        n([a(cc.Label)], l.prototype, "m_labRank", void 0), n([a(cc.Label)], l.prototype, "m_labBonus", void 0), n([a(cc.Node)], l.prototype, "m_nodeAwardItemRoot", void 0), n([a(cc.Sprite)], l.prototype, "m_spFaceFrame", void 0), l = n([r], l), o.RankingBonusRowCtrl = l, cc._RF.pop()
    }, {
        "../../../../Component/BundleCtrl": "BundleCtrl"
    }],
    RepeatingMissionMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "1306bBlbcZGSJPF13WrthDt", "RepeatingMissionMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.RepeatingMissionMgr = o.MisMgrStatus = void 0;
        const i = e("../../../../LobbyCommon/Net/LobbyClient"),
            s = e("../../../../LobbyCommon/Connect/Script/ConnectPanelMgr"),
            r = e("../../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            a = e("../../../../GameCommon/CommonRoot/Script/CommonRoot"),
            l = e("../../../Component/DateTimeCountDown"),
            c = e("../../../Component/AudioMgr"),
            h = e("./MissionCoinCtrl"),
            m = e("./MissionBtnCtrl"),
            u = e("./MissionTopProgress"),
            d = e("./MissionListCtrl"),
            p = e("./MissionData"),
            g = e("../../../EventModule/EventModule"),
            _ = e("../../EventBannerData"),
            S = e("./../../../FakeScoreBox/Script/FakeScoreBoxCtrl"),
            y = e("../../../Helper/EventSystem"),
            C = e("../../../Net/ClickLog"),
            f = e("../../../Net/ClickLogEnum");
        var v;
        (function(e) {
            e[e.NONE = -1] = "NONE", e[e.IDLE = 0] = "IDLE", e[e.INIT = 1] = "INIT", e[e.UPDATE_CMD = 2] = "UPDATE_CMD", e[e.COLLECT = 3] = "COLLECT", e[e.COLLECT_RCV = 4] = "COLLECT_RCV", e[e.COLLECT_SHOW = 5] = "COLLECT_SHOW", e[e.DISABLE = 6] = "DISABLE"
        })(v = o.MisMgrStatus || (o.MisMgrStatus = {}));
        const {
            ccclass: P,
            property: b
        } = cc._decorator;
        let w = class extends g.EventModule {
            constructor() {
                super(...arguments), this.root = null, this.m_MissionBtnCtrl = null, this.m_ActivitiesMgrRoot = null, this.m_GameToGameMenu = null, this.m_FinishMission = null, this.m_FooterMsg = null, this.m_MissionListCtrl = null, this.m_MissionTopProgress = null, this.awardCoin = null, this.gameMenuTimeReci = null, this.gameMenuTimeCountdown = null, this.floatBtnTimeReci = null, this.floatBtnTimeCountDown = null, this.finishPageTimeReci = null, this.finishPageTimeCountDown = null, this.m_FakeScoreBoxCtrl = null, this.m_nodeBlocker = null, this.m_sprDailyBonus = null, this.m_sprExtraBonus = null, this.m_dateLastTimeOpenPanel = 0, this.m_arrMissionData = [], this.m_iBeginTime = -1, this.m_iEndTime = -1, this.m_iNowTime = -1, this.sData = "", this.errorCode = "", this.reason = "", this.errorMsg = "", this.isClickClaimBtn = !1, this.m_bBtnInterActable = !0, this.isTheFirstToLobby = !1, this.isRequestInfoNow = !1, this.intervalID = -1, this._countDownTime = 0, this.tapMissionIconContent = "New Missions are available. Tap on the icon to explore.", this.newMissionContent = "Come to check it out New Missions event!", this.collectAwardContent = "Collect your winning {0} !!! Tap on the icon to explore.", this.dragFloatBtn = null, this.curMisData = null, this.collectMisData = null, this.maxGameLineBet = 0, this.maxGameLines = 0, this.curInGameName = "", this.SetUserBalance = null, this.SetGoToLobby = null, this.ClickClaimBtnEvent = null, this.SetFinshSingleMission = null, this.GetMissionCmdCallBack = null, this.Del_ForceToGameEvent = null, this.m_status = v.NONE, this.m_lastStatus = v.NONE, this.m_iLastProgress = 0, this.m_strChangeToGameName = "", this.m_iTitleType = -1, this.m_iFinalAwardNum = 0
            }
            update() {
                let e = this.m_status != this.m_lastStatus;
                switch (this.m_lastStatus = this.m_status, this.m_status) {
                    case v.IDLE:
                        e && (console.warn("MisMgrStatus.IDLE"), s.ConnectPanelMgr.Instance.DisableConnectPanel(0), this.m_nodeBlocker.active = !1, this.m_FooterMsg.active = !0, this.m_FakeScoreBoxCtrl.hide());
                        break;
                    case v.INIT:
                        break;
                    case v.UPDATE_CMD:
                        e && (console.warn("MisMgrStatus.UPDATE_CMD"), this.isClickClaimBtn ? (this.isClickClaimBtn = !1, s.ConnectPanelMgr.Instance.DisableConnectPanel(0)) : (s.ConnectPanelMgr.Instance.ShowConnectPanel(0), this.collectMisData && (this.m_MissionListCtrl.m_strCollectQuestID = this.collectMisData.QuestID)), this.collectMisData = null, this.m_MissionTopProgress.show(!1), this.SendMissionBonusInfoCmd());
                        break;
                    case v.COLLECT:
                        e && (console.warn("MisMgrStatus.COLLECT"), s.ConnectPanelMgr.Instance.ShowConnectPanel(0), this.m_nodeBlocker.active = !0, this.SetAllBtnInteract(!1), null != this.collectMisData && i.LobbyClient.Instance.GetUserClient.collectQuest(this.collectMisData.QuestID, this.collectMisData.QuestLevel, this.getMissionBonus.bind(this)));
                        break;
                    case v.COLLECT_RCV:
                        e && (console.warn("MisMgrStatus.COLLECT_RCV"), this.m_nodeBlocker.active = !1, this.SendMissionBonusInfoCmd(), this.m_status = v.UPDATE_CMD);
                        break;
                    case v.DISABLE:
                        e && (console.warn("MisMgrStatus.DISABLE"), s.ConnectPanelMgr.Instance.DisableConnectPanel(0), this.disableBannerPopUp(), this.root.active = !1)
                }
            }
            start() {
                if (this.m_MissionBtnCtrl.init(this), this.m_MissionTopProgress.init(this), this.m_MissionListCtrl.init(this), this.isTheFirstToLobby = null == SS.Common.GameEnvironment.CurrentGameVersion || "" == SS.Common.GameEnvironment.CurrentGameVersion, this.m_GameToGameMenu.active = !1, this.m_ActivitiesMgrRoot.active = !1, this.floatBtnTimeCountDown.node.active = !1, this.gameMenuTimeCountdown.node.active = !1, this.finishPageTimeCountDown.node.active = !1, this.m_nodeBlocker.active = !1, this.parseMisInfo(i.LobbyClient.Instance.m_CommonEventInfo_900004) && (this.updateMisInfo(), this.InitTimer()), self == top) {
                    this.SetUserBalance = this.lobbySetUserBalance.bind(this);
                    let e = null == SS.Common.GameEnvironment.CurrentGameVersion || "" == SS.Common.GameEnvironment.CurrentGameVersion;
                    if (this.m_MissionBtnCtrl.show(!e), e || this.checkAwardAvailible(), this.m_LobbyMgr) {
                        this.m_LobbyMgr.popUpMgr.onCloseAllPopupEvent.push(this.popUpClosed.bind(this));
                        let e = new _.EventBannerData("DailyBonus", this.m_iTitleType, this.OnClickFloatBtn.bind(this));
                        e.m_bValid = !0, this.m_LobbyMgr.m_arrEventBannerData.push(e)
                    }
                }
                this.ToggleFinishMissionPage(!1), this.initDone()
            }
            popUpClosed() {
                this.m_MissionBtnCtrl.show(!0);
                let e = !1;
                if (null == this.m_arrMissionData) return;
                for (let o = 0; o < this.m_arrMissionData.length; o++) this.m_arrMissionData[o].Status == p.UserQuestDataStatus.QUEST_NOT_DONE && (e = !0);
                let t = null == SS.Common.GameEnvironment.CurrentGameVersion || "" == SS.Common.GameEnvironment.CurrentGameVersion;
                this.checkAwardAvailible() || t && e && this.m_MissionBtnCtrl.setPrompt(this.tapMissionIconContent)
            }
            checkAwardAvailible() {
                let e = 0,
                    t = 0;
                if (null != this.m_arrMissionData) {
                    for (let o = 0; o < this.m_arrMissionData.length; o++) {
                        let n = this.m_arrMissionData[o];
                        n.Status == p.UserQuestDataStatus.AWARD_AVAILABLE && (e += n.Award.AwardWinnings, t += n.Award.AwardEntries)
                    }
                    return e + t > 0 && (this.m_MissionBtnCtrl.setPrompt(this.collectAwardContent.replace("{0}", (e + t).toString())), !0)
                }
            }
            lobbySetUserBalance(e) {
                let t = e.entries,
                    o = e.winnings;
                y.EventSystem.Event(y.DownBar.SetPlayerInfo).Notify(t, o), this.m_LobbyMgr.UserEntries = t, this.m_LobbyMgr.UserWinnings = o
            }
            onDestroy() {
                this.SetUserBalance = null, -1 != this.intervalID && clearInterval(this.intervalID)
            }
            ClearTimer() {
                -1 != this.intervalID && clearInterval(this.intervalID)
            }
            SetAllBtnInteract(e) {
                this.m_bBtnInterActable = e, this.m_MissionBtnCtrl.setInteract(e), this.m_MissionTopProgress.setInteract(e), this.m_MissionListCtrl.setInteract(e)
            }
            SetAllBtnInteractTrue() {
                this.SetAllBtnInteract(!0)
            }
            SetAllBtnInteractFalse() {
                this.SetAllBtnInteract(!1)
            }
            getMisDataByGameName(e) {
                let t = this.getThemeIDByGameName(e);
                return this.getMisDataByThemeID(t)
            }
            getMisDataByThemeID(e) {
                for (let t = 0; t < this.m_arrMissionData.length; t++)
                    if (this.m_arrMissionData[t].ThemeID == e) return this.m_arrMissionData[t];
                return null
            }
            getCurGameMisData() {
                return this.getMisDataByGameName(this.curInGameName)
            }
            parseSpinData(e) {
                let t = this.getCurGameMisData();
                if (null != t) try {
                    let n = e.cmd_data;
                    if (n.hasOwnProperty("data") && n.data.hasOwnProperty("eventInfo") && n.data.eventInfo.hasOwnProperty("900004") && n.data.eventInfo[900004].hasOwnProperty("UserQuestData")) {
                        let e = n.data.eventInfo[900004].UserQuestData;
                        for (let o = 0; o < e.length; o++) {
                            let n, i, s = e[o];
                            if (t.ThemeID == s.GameThemeID && t.QuestID == s.QuestID && t.QuestLevel == s.QuestLevel) {
                                if (t.Status = s.Status, t.Status == p.UserQuestDataStatus.AWARD_CLAIMED) break;
                                if (t.QuestType == p.QustObjectiveType.SPIN_TIME) i = t.SpinTimesGate, n = s.SpinTimes, t.SpinTimes = n;
                                else if (t.QuestType == p.QustObjectiveType.SPIN_AMOUNT) i = t.SpinAmountGate, n = s.SpinAmount, t.SpinAmount = n;
                                else if (t.QuestType == p.QustObjectiveType.WIN_AMOUNT) i = t.WinAmountGate, n = s.WinAmount, t.WinAmount = n;
                                else {
                                    if (t.QuestType != p.QustObjectiveType.CUSTOM) {
                                        console.warn("parseSpinData else");
                                        continue
                                    }
                                    i = t.CustomGate, n = s.CustomAmount, t.CustomAmount = n
                                }
                                let e = n / i;
                                e = e > 1 ? 1 : e, this.m_MissionTopProgress.setProgressChargeTo(e), (0 == this.m_iLastProgress && e > 0 || 1 != this.m_iLastProgress && 1 == e || e - this.m_iLastProgress >= .1) && (this.OnSetPrompt(t.QuestType, e, t.CustomInfoMsg), this.m_iLastProgress = e);
                                break
                            }
                        }
                        this.updateMisInfo()
                    }
                } catch (o) {
                    console.error("parseSpinData error")
                } else console.warn("curGameMisData==null")
            }
            parseMisInfo(e) {
                if (null == e) return !1;
                try {
                    let o = JSON.parse(e);
                    if (o.hasOwnProperty("Enable") && o.Enable && o.hasOwnProperty("QuestList") && o.QuestList.length > 0 && o.hasOwnProperty("UserQuestData")) {
                        let e = o.QuestList,
                            t = o.UserQuestData;
                        if (this.m_arrMissionData = [], 0 == e.lengt) return !1;
                        for (let o = 0; o < e.length; o++) {
                            let n = new p.MissionData,
                                i = e[o];
                            if (this.checkThemeIsOpen(i.GameThemeID) && (0 == i.TitleType || 1 == i.TitleType)) {
                                this.m_iTitleType = i.TitleType, n.QuestID = i.QuestID, n.QuestLevel = i.QuestLevel, n.ThemeID = i.GameThemeID, n.SpinTimesGate = i.SpinTimesGate, n.SpinAmountGate = i.SpinAmountGate, n.WinAmountGate = i.WinAmountGate, n.CustomGate = i.CustomGate, n.CustomType = i.CustomType, n.CustomInfo = i.CustomInfo, n.Award = i.Award, n.Priority = i.Priority, n.CycleSeconds = i.CycleSeconds, n.ExpireTimeUTC = i.ExpireTimeUTC, null != i.CustomInfo && i.CustomInfo.hasOwnProperty("Msg") && (n.CustomInfoMsg = i.CustomInfo.Msg);
                                for (let e = 0; e < t.length; e++) {
                                    let o = t[e];
                                    if (n.QuestID == o.QuestID && n.QuestLevel == o.QuestLevel && n.ThemeID == o.GameThemeID) {
                                        n.SpinTimes = o.SpinTimes, n.SpinAmount = o.SpinAmount, n.WinAmount = o.WinAmount, n.CustomAmount = o.CustomAmount, n.Status = o.Status;
                                        break
                                    }
                                }
                                this.m_arrMissionData.push(n)
                            }
                        }
                        return this.m_iBeginTime = o.BeginTimeUTC, this.m_iEndTime = o.EndTimeUTC, this.m_iNowTime = o.NowTimeUTC, !0
                    }
                    return !1
                } catch (t) {
                    return console.error("parseMisInfo"), !1
                }
            }
            TimeCountDownCallBack() {
                console.warn("execute mission TimeCountDownCallBack !!"), c.AudioMgr.Instance.Play("Missions_Call", !1, 1), console.warn("close active page And Open falotButton !!"), this.m_MissionBtnCtrl.setPrompt(this.newMissionContent)
            }
            InitTimer() {
                let e = this.m_iEndTime - this.m_iNowTime;
                if (!(e < 0)) {
                    for (let t = 0; t < this.m_arrMissionData.length; t++) {
                        let o = this.m_arrMissionData[t].ExpireTimeUTC - this.m_iNowTime;
                        o > 0 && o < e && (e = o)
                    }
                    this.ForceSetTime(e)
                }
            }
            ForceSetTime(e) {
                this.PauseTimer(), this._countDownTime = e, this.UpdateUI(this._countDownTime), this.StartConutDownTimer()
            }
            UpdateUI(e) {
                null != this.gameMenuTimeCountdown && (this.gameMenuTimeCountdown.UpdateUIWithDay(e), this.gameMenuTimeCountdown.node.active = !0), null != this.floatBtnTimeCountDown && (this.floatBtnTimeCountDown.UpdateUIWithDay(e), this.floatBtnTimeCountDown.node.active = !0), null != this.finishPageTimeCountDown && (this.finishPageTimeCountDown.UpdateUIWithDay(e), this.finishPageTimeCountDown.node.active = !0)
            }
            PauseTimer() {
                clearInterval(this.intervalID)
            }
            Timer(e) {
                if (--e._countDownTime, e._countDownTime <= 0) {
                    this.reloadLobby(), e._countDownTime = 0, e.PauseTimer(), e.GetMissionCmdCallBack = e.TimeCountDownCallBack;
                    let t = (new Date).getTime();
                    this.m_dateLastTimeOpenPanel = t, this.m_iLastProgress = 0, this.m_status = v.UPDATE_CMD
                }
                e.UpdateUI(e._countDownTime)
            }
            StartConutDownTimer() {
                -1 != this.intervalID && clearInterval(this.intervalID), this.intervalID = setInterval(() => this.Timer(this), 1e3)
            }
            getGameNameByThemeID(e) {
                let t = "";
                try {
                    t = SS.Common.GameEnvironment.GameSetting.Icon[e].GameName
                } catch (o) {}
                return t
            }
            getThemeIDByGameName(e) {
                try {
                    let o = SS.Common.GameEnvironment.GameSetting.Icon;
                    for (let t in o)
                        if (o[t].GameName == e) return t
                } catch (t) {}
                return ""
            }
            checkThemeIsOpen(e) {
                let t = SS.Common.GameEnvironment.GameSetting.DisableGame,
                    o = SS.Common.GameEnvironment.GameSetting.Type.ALL,
                    n = t.indexOf(e),
                    i = this.getGameNameByThemeID(e),
                    s = o.indexOf(i),
                    r = o.indexOf("BIGICON_" + i);
                return -1 == n && (s > -1 || r > -1)
            }
            ToggleMissionTimeCountDown(e) {
                e ? (this.gameMenuTimeReci.active = !0, this.floatBtnTimeReci.active = !0, this.finishPageTimeReci.active = !0) : (this.gameMenuTimeReci.active = !1, this.floatBtnTimeReci.active = !1, this.finishPageTimeReci.active = !1)
            }
            OnDragEnd() {
                console.warn("\u62d6\u66f3\u7d50\u675f")
            }
            ToggleFinishMissionPage(e) {
                this.m_FinishMission.active = e, this.m_MissionListCtrl.node.active = !e
            }
            setActivityRoot(e) {
                this.m_ActivitiesMgrRoot.active = e, this.m_MissionBtnCtrl.show(!e), c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1);
                let t = 1 == this.m_iTitleType;
                this.m_sprDailyBonus.enabled = !t, this.m_sprExtraBonus.enabled = t
            }
            OpenSelectOptionPage(e, t) {
                if (this.m_bBtnInterActable) {
                    if (c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.m_strChangeToGameName = String(t), this.curInGameName == this.m_strChangeToGameName) return console.warn("\u76f8\u540c\u904a\u6232\uff0c\u4e0d\u9032\u884c\u8df3\u8f49\u52d5\u4f5c !!"), void this.OnClickReturnBtn();
                    this.setActivityRoot(!1), C.ClickLog.EntryPoint = f.LogEvent_EntryPoint.Event, self == top ? this.m_LobbyMgr.switchGame.OnSwitchGameIgnoreWindow(this.m_strChangeToGameName) : a.CommonRoot.Instance.m_switchGameGroup.OpenSwitchGameWindow(this.m_strChangeToGameName, this.curInGameName)
                }
            }
            OnClickReturnBtn() {
                this.m_status != v.COLLECT && this.setActivityRoot(!1)
            }
            OnClickLeaveGameBtn() {
                this.m_bBtnInterActable && (console.log("OnClickLeaveGameBtn !!"), c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), this.OnClickReturnBtn(), this.SetReadyChangeGame())
            }
            OnClickFloatBtn() {
                if (!this.m_bBtnInterActable) return;
                this.m_MissionBtnCtrl.showFingerPtr(!1);
                let e = (new Date).getTime();
                e - this.m_dateLastTimeOpenPanel > 1e4 ? (this.GetMissionCmdCallBack = this.ClickFloatBtnCallEvent, this.m_status = v.UPDATE_CMD, this.m_dateLastTimeOpenPanel = e) : this.ClickFloatBtnCallEvent()
            }
            ClickFloatBtnCallEvent() {
                this.setActivityRoot(!0), this.m_MissionTopProgress.showFingerPtr(!1)
            }
            SendMissionBonusInfoCmd(e = !0) {
                this.GetMissionCmdCallBack, this.TimeCountDownCallBack, 1 != this.isRequestInfoNow && (this.isRequestInfoNow = !0, console.log("SendCmd GetMissionBonusInfo"), i.LobbyClient.Instance.GetUserClient.getCommonEventInfo(this.recMissionInfo.bind(this)))
            }
            OnClickClaimBtn() {
                c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1);
                let e = this.getCurGameMisData();
                this.setCollectMisData(e), this.m_MissionTopProgress.showFingerPtr(!1), this.isClickClaimBtn = !0
            }
            OnClickCollectBtn(e, t) {
                c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1);
                let o = this.getMisDataByThemeID(t.toString());
                this.setCollectMisData(o);
                let n = this.m_MissionListCtrl.getMissionInfoCtrlByThemeID(t);
                n.CollectBtnHand.active = !1, n.CollectBtn.target.active = !1
            }
            setCollectMisData(e) {
                console.warn(e), (e.Status = p.UserQuestDataStatus.AWARD_AVAILABLE) && (this.collectMisData = e, this.m_status = v.COLLECT)
            }
            awardCoinDone() {
                this.m_status == v.DISABLE ? (s.ConnectPanelMgr.Instance.DisableConnectPanel(0), this.m_FakeScoreBoxCtrl.hide()) : this.m_FakeScoreBoxCtrl.countUpShowJumpMoney(this.m_iFinalAwardNum, 2, 1, () => this.m_status = v.COLLECT_RCV)
            }
            getMissionBonus(e, t) {
                if (console.warn("getMissionBonus : "), this.SetAllBtnInteract(!0), e == ArkSDK.HttpResult.OK && t && t.cmd_data && t.cmd_data.data)
                    if (console.log("[MissionEventMgr.GetMissionBonus]  Success : ", t), 0 == t.cmd_data.result)
                        if (this.m_status == v.UPDATE_CMD || this.m_status == v.DISABLE) {
                            let e, o, n;
                            s.ConnectPanelMgr.Instance.DisableConnectPanel(0), SS.Common.GameEnvironment.IsUseScoreBox ? t.cmd_data.data.AwardWinnings > 0 ? (n = t.cmd_data.data.AwardWinnings, o = t.cmd_data.playerInfo.winnings, e = S.ShowType.WINNING) : (n = t.cmd_data.data.AwardEntries, o = t.cmd_data.playerInfo.entries, e = S.ShowType.ENTRIES) : (o = t.cmd_data.playerInfo.winnings + t.cmd_data.playerInfo.entries, n = t.cmd_data.data.AwardWinnings + t.cmd_data.data.AwardEntries, e = S.ShowType.CREDIT), this.SetUserBalance(t.cmd_data.playerInfo)
                        } else {
                            this.m_MissionTopProgress.showFingerPtr(!1);
                            let e, o, n, i = this.m_MissionListCtrl.getMissionInfoCtrlByThemeID(+this.collectMisData.ThemeID),
                                r = .5;
                            this.isClickClaimBtn ? this.awardCoin.coinMoveToTarget(r, this.awardCoinDone.bind(this)) : this.awardCoin.coinMoveToTarget(r, this.awardCoinDone.bind(this), i.node), s.ConnectPanelMgr.Instance.DisableConnectPanel(0), this.m_FooterMsg.active = !1, this.curMisData == this.collectMisData && (this.m_iLastProgress = 0), SS.Common.GameEnvironment.IsUseScoreBox ? t.cmd_data.data.AwardWinnings > 0 ? (n = t.cmd_data.data.AwardWinnings, o = t.cmd_data.playerInfo.winnings, e = S.ShowType.WINNING) : (n = t.cmd_data.data.AwardEntries, o = t.cmd_data.playerInfo.entries, e = S.ShowType.ENTRIES) : (o = t.cmd_data.playerInfo.winnings + t.cmd_data.playerInfo.entries, n = t.cmd_data.data.AwardWinnings + t.cmd_data.data.AwardEntries, e = S.ShowType.CREDIT), this.m_iFinalAwardNum = o, this.m_FakeScoreBoxCtrl.show(e, this.m_iFinalAwardNum - n), this.SetUserBalance(t.cmd_data.playerInfo)
                        }
                else {
                    switch (t.cmd_data.result) {
                        case 1:
                            r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Info, "S174", null, null, null), this.lobbySetUserBalance(t.cmd_data.playerInfo);
                            break;
                        case -999:
                            r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Info, "S175", null, null, null);
                            break;
                        default:
                            r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Critical, "S189", null, null, null)
                    }
                    this.m_status = v.UPDATE_CMD
                } else {
                    let t = "";
                    t = e == ArkSDK.HttpResult.Abort ? "S183" : e == ArkSDK.HttpResult.Condition ? "S184" : e == ArkSDK.HttpResult.Error ? "S187" : e == ArkSDK.HttpResult.NotReset ? "S185" : e == ArkSDK.HttpResult.Status ? "S186" : e == ArkSDK.HttpResult.Timeout ? "S188" : "S189", r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Critical, t, null, null, null)
                }
            }
            OnToggleMissonObj(e) {
                null != this.sData && this.m_MissionBtnCtrl.show(!e)
            }
            SetReadyChangeGame() {
                c.AudioMgr.Instance.Play("Btn_Select_y_v01", !1, 1), self == top ? (this.Del_ForceToGameEvent.Length > 0 && (this.Del_ForceToGameEvent.Notify(this.m_strChangeToGameName), this.Del_ForceToGameEvent.Clear()), this.m_strChangeToGameName = "") : a.CommonRoot.Instance.GetTopBarMgr.m_DelClickBackToLobby.Length > 0 && a.CommonRoot.Instance.GetTopBarMgr.m_DelClickBackToLobby.Notify()
            }
            OnSetPrompt(e, t, o) {
                let n;
                t >= 1 ? (t = 1, this.m_MissionTopProgress.showBtn(!0), this.SetRedPoint(), n = -1) : (this.m_MissionTopProgress.showBtn(!1), n = 5e3), (Math.round(1e4 * t) / 100).toFixed(2), this.m_MissionTopProgress.show(!0, e, o, n)
            }
            disableBannerPopUp() {
                if (self == top && this.m_LobbyMgr)
                    for (let e = 0; e < this.m_LobbyMgr.m_arrEventBannerData.length; e++)
                        if ("TreasureMap" == this.m_LobbyMgr.m_arrEventBannerData[e].m_sBannerID) {
                            this.m_LobbyMgr.m_arrEventBannerData[e].m_bValid = !1;
                            break
                        }
            }
            updateMisInfo() {
                if (0 != this.m_arrMissionData.length)
                    if (this.m_iEndTime < this.m_iNowTime) setTimeout(() => {
                        this.isRequestInfoNow = !1, this.SendMissionBonusInfoCmd()
                    }, 3e3);
                    else {
                        this.m_MissionListCtrl.updateMisInfo(this.m_arrMissionData), null != this.GetMissionCmdCallBack && (this.GetMissionCmdCallBack(), this.GetMissionCmdCallBack = null), this.SetRedPoint();
                        let e = !0;
                        for (let t = 0; t < this.m_arrMissionData.length; t++) this.m_arrMissionData[t].Status != p.UserQuestDataStatus.AWARD_CLAIMED && (e = !1);
                        this.ToggleFinishMissionPage(e), this.isMissionLastDay = this.m_iEndTime == this.m_arrMissionData[0].ExpireTimeUTC, this.ToggleMissionTimeCountDown(!this.isMissionLastDay || !e), this.isRequestInfoNow = !1
                    }
                else this.m_status = v.DISABLE
            }
            recMissionInfo(e, t) {
                if (e == ArkSDK.HttpResult.OK && t && t.cmd_data) {
                    let e = t.cmd_data[900004];
                    if (console.warn("RepeatingMissionMgr.recMissionInfo:"), console.warn(e), e && 0 == e.result) {
                        let t = JSON.stringify(e.data);
                        this.parseMisInfo(t) && (i.LobbyClient.Instance.m_CommonEventInfo_900004 = t, this.updateMisInfo(), this.recMisInfoSetProgressCtr(), this.InitTimer())
                    }
                    e && e.result < 0 && (-999 == e.result ? this.m_status = v.DISABLE : (this.errorCode = "S182", r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Warning, this.errorCode, "Lobby", this.reason)))
                } else e == ArkSDK.HttpResult.Abort ? this.errorCode = "S176" : e == ArkSDK.HttpResult.Condition ? this.errorCode = "S177" : e == ArkSDK.HttpResult.Error ? this.errorCode = "S180" : e == ArkSDK.HttpResult.NotReset ? this.errorCode = "S178" : e == ArkSDK.HttpResult.Status ? this.errorCode = "S179" : e == ArkSDK.HttpResult.Timeout ? this.errorCode = "S181" : this.errorCode = "S182", this.errorMsg = "The Internet was lost! Please login again!", this.reason = t, r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Warning, this.errorCode, "Lobby", this.reason)
            }
            recMisInfoSetProgressCtr() {
                let e = this.getCurGameMisData();
                if (e) {
                    let t;
                    switch (e.QuestType) {
                        case p.QustObjectiveType.WIN_AMOUNT:
                            t = e.WinAmount / e.WinAmountGate;
                            break;
                        case p.QustObjectiveType.SPIN_AMOUNT:
                            t = e.SpinAmount / e.SpinAmountGate;
                            break;
                        case p.QustObjectiveType.SPIN_TIME:
                            t = e.SpinTimes / e.SpinTimesGate;
                            break;
                        case p.QustObjectiveType.CUSTOM:
                            t = e.CustomAmount / e.CustomGate;
                            break;
                        default:
                            console.error("RepeatingMissionMgr.recMisInfoSetProgressCtr()")
                    }
                    this.m_MissionTopProgress.setProgressCtr(t)
                }
            }
            SetRedPoint() {
                let e = 0;
                for (let t = 0; t < this.m_arrMissionData.length; t++) this.m_arrMissionData[t].Status == p.UserQuestDataStatus.AWARD_AVAILABLE && e++;
                this.m_MissionBtnCtrl.setRedTag(e)
            }
        };
        n([b(cc.Node)], w.prototype, "root", void 0), n([b(m.MissionBtnCtrl)], w.prototype, "m_MissionBtnCtrl", void 0), n([b(cc.Node)], w.prototype, "m_ActivitiesMgrRoot", void 0), n([b(cc.Node)], w.prototype, "m_GameToGameMenu", void 0), n([b(cc.Node)], w.prototype, "m_FinishMission", void 0), n([b(cc.Node)], w.prototype, "m_FooterMsg", void 0), n([b(d.MissionListCtrl)], w.prototype, "m_MissionListCtrl", void 0), n([b(u.MissionTopProgress)], w.prototype, "m_MissionTopProgress", void 0), n([b(h.MissionCoinCtrl)], w.prototype, "awardCoin", void 0), n([b(cc.Node)], w.prototype, "gameMenuTimeReci", void 0), n([b(l.DateTimeCountDown)], w.prototype, "gameMenuTimeCountdown", void 0), n([b(cc.Node)], w.prototype, "floatBtnTimeReci", void 0), n([b(l.DateTimeCountDown)], w.prototype, "floatBtnTimeCountDown", void 0), n([b(cc.Node)], w.prototype, "finishPageTimeReci", void 0), n([b(l.DateTimeCountDown)], w.prototype, "finishPageTimeCountDown", void 0), n([b(S.FakeScoreBoxCtrl)], w.prototype, "m_FakeScoreBoxCtrl", void 0), n([b(cc.Node)], w.prototype, "m_nodeBlocker", void 0), n([b(cc.Sprite)], w.prototype, "m_sprDailyBonus", void 0), n([b(cc.Sprite)], w.prototype, "m_sprExtraBonus", void 0), w = n([P], w), o.RepeatingMissionMgr = w, cc._RF.pop()
    }, {
        "../../../../GameCommon/CommonRoot/Script/CommonRoot": "CommonRoot",
        "../../../../LobbyCommon/Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../../../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../../../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../../../Component/AudioMgr": "AudioMgr",
        "../../../Component/DateTimeCountDown": "DateTimeCountDown",
        "../../../EventModule/EventModule": "EventModule",
        "../../../Helper/EventSystem": "EventSystem",
        "../../../Net/ClickLog": "ClickLog",
        "../../../Net/ClickLogEnum": "ClickLogEnum",
        "../../EventBannerData": "EventBannerData",
        "./../../../FakeScoreBox/Script/FakeScoreBoxCtrl": "FakeScoreBoxCtrl",
        "./MissionBtnCtrl": "MissionBtnCtrl",
        "./MissionCoinCtrl": "MissionCoinCtrl",
        "./MissionData": "MissionData",
        "./MissionListCtrl": "MissionListCtrl",
        "./MissionTopProgress": "MissionTopProgress"
    }],
    ReturnLobbyHandler: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "ac6afU3pYhIQpsxUgx6qoa0", "ReturnLobbyHandler");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ReturnLobbyHandler = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            BackToLobby(e, t) {
                let o = "",
                    n = "" != SS.Common.GameEnvironment.ChangeToGameName && SS.Common.GameEnvironment.GetIsGameIsVertical(SS.Common.GameEnvironment.ChangeToGameName);
                o = "" != SS.Common.GameEnvironment.ChangeToGameName && n ? SS.Common.GameEnvironment.verticalSplashSRC : SS.Common.GameEnvironment.OriginalSplashSRC, console.log("[Game To " + ("" != SS.Common.GameEnvironment.ChangeToGameName ? "Game" : "Lobby")), console.log("downloadSplashPath: " + o), this.SetSplashScale();
                let i = e,
                    s = t;
                if ("" == SS.Common.GameEnvironment.ChangeToGameName) window.parent.gd_orientationType = window.parent.orientationType.horizontal;
                else {
                    let e = SS.Common.GameEnvironment.GetIsGameIsVertical(SS.Common.GameEnvironment.ChangeToGameName);
                    window.parent.gd_orientationType = e ? window.parent.orientationType.vertical : window.parent.orientationType.horizontal
                }
                SS.Common.GameEnvironment.Splash.src != o ? (SS.Common.GameEnvironment.Splash.onload = function() {
                    i(), SS.Common.GameEnvironment.ResetOrientationchange(!0), i = null, s = null, SS.Common.GameEnvironment.Splash.onload = null, SS.Common.GameEnvironment.Splash.onerror = null
                }, SS.Common.GameEnvironment.Splash.onerror = function() {
                    s(), i = null, s = null, SS.Common.GameEnvironment.Splash.onload = null, SS.Common.GameEnvironment.Splash.onerror = null
                }, SS.Common.GameEnvironment.Splash.src = n ? SS.Common.GameEnvironment.verticalSplashSRC : SS.Common.GameEnvironment.OriginalSplashSRC) : null != i && (i(), i = null, s = null)
            }
            BackToLogin(e, t) {
                let o = SS.Common.GameEnvironment.OriginalSplashSRC;
                SS.Common.GameEnvironment.ChangeToGameName = "Login", console.log("[Game To Login]"), console.log("downloadSplashPath: " + o), this.SetSplashScale();
                let n = e,
                    i = t;
                window.parent.gd_orientationType = window.parent.orientationType.horizontal, SS.Common.GameEnvironment.Splash.src != o ? (SS.Common.GameEnvironment.Splash.onload = function() {
                    n(), SS.Common.GameEnvironment.ResetOrientationchange(!0), n = null, i = null, SS.Common.GameEnvironment.Splash.onload = null, SS.Common.GameEnvironment.Splash.onerror = null
                }, SS.Common.GameEnvironment.Splash.onerror = function() {
                    i(), n = null, i = null, SS.Common.GameEnvironment.Splash.onload = null, SS.Common.GameEnvironment.Splash.onerror = null
                }, SS.Common.GameEnvironment.Splash.src = SS.Common.GameEnvironment.OriginalSplashSRC) : null != n && (n(), n = null, i = null)
            }
            SetSplashScale() {
                let e = SS.Common.GameEnvironment.GetIsGameIsVertical();
                SS.Common.GameEnvironment.Splash && (e ? (SS.Common.GameEnvironment.Splash.style.width = "auto", SS.Common.GameEnvironment.Splash.style.height = "100%") : (SS.Common.GameEnvironment.Splash.style.width = "100%", SS.Common.GameEnvironment.Splash.style.height = "auto"))
            }
        };
        r = n([i], r), o.ReturnLobbyHandler = r, cc._RF.pop()
    }, {}],
    RewardBroadcastMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "58817/Tl4VGCJFrVQVN/ie+", "RewardBroadcastMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.RewardBroadcastMgr = o.RewardBroadcastItem = o.BroadcastBuffer = o.RewardBroadcastType = void 0;
        const i = e("../../LobbyCommon/Component/AudioMgr"),
            s = e("../../LobbyCommon/Component/SSSpawnPool"),
            r = e("../../LobbyCommon/Helper/EventSystem"),
            a = e("./NoticeInteractive"),
            {
                ccclass: l,
                property: c
            } = cc._decorator;
        var h, m;
        (function(e) {
            e[e.IDLE = 0] = "IDLE", e[e.IN = 1] = "IN", e[e.WAIT_IN = 2] = "WAIT_IN", e[e.LOOP = 3] = "LOOP", e[e.WAIT_LOOP = 4] = "WAIT_LOOP", e[e.OUT = 5] = "OUT", e[e.WAIT_OUT = 6] = "WAIT_OUT", e[e.FINISHED = 7] = "FINISHED"
        })(h || (h = {})),
        function(e) {
            e[e.Jackpot = 1] = "Jackpot", e[e.Multiple_Slot = 2] = "Multiple_Slot", e[e.Multiple_Fish = 3] = "Multiple_Fish"
        }(m = o.RewardBroadcastType || (o.RewardBroadcastType = {}));
        class u {}
        o.BroadcastBuffer = u;
        let d = class {
            constructor() {
                this.type = m.Multiple_Slot, this.pfbBroadcast = null, this.root = null, this.animIn = null, this.animLoop = null, this.animOut = null
            }
        };
        n([c({
            type: cc.Enum(m)
        })], d.prototype, "type", void 0), n([c(cc.Prefab)], d.prototype, "pfbBroadcast", void 0), n([c(cc.Node)], d.prototype, "root", void 0), n([c(cc.AnimationClip)], d.prototype, "animIn", void 0), n([c(cc.AnimationClip)], d.prototype, "animLoop", void 0), n([c(cc.AnimationClip)], d.prototype, "animOut", void 0), d = n([l("RewardBroadcastItem")], d), o.RewardBroadcastItem = d;
        let p = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_RewardBroadcastItem = [], this.m_SpawnPool = null, this.AudioClipList = [], this.AudioNameList = [], this.m_BroadcastBuffer = [], this.m_pfbCurrentBroadcast = null, this.m_nodeCurrentBroadcast = null, this.m_numLoopFinishedTime = 5, this.m_numLoopTimer = 0, this.m_nodeCurrentRoot = null, this.m_CurrentBroadcast = null, this.m_strAnimIn = "", this.m_strAnimLoop = "", this.m_strAnimOut = "", this.m_animCurrentBroadcast = null, this.m_IsTimeToShow = !0, this.m_RewardBroadcastState = h.IDLE
            }
            start() {
                this.m_RewardBroadcastState = h.IDLE, this.m_pfbCurrentBroadcast = null, this.m_nodeCurrentBroadcast = null, this.m_numLoopTimer = 0, this.m_animCurrentBroadcast = null, this.m_nodeCurrentRoot = null, this.m_CurrentBroadcast = null, this.m_IsTimeToShow = !0, r.EventSystem.Event(r.NoticedArrived.OnReceiveBroadcast).Insert(this.OnReceiveBroadcast, this), r.EventSystem.Event(r.NoticedArrived.ShowBroadcast).Insert(this.OnShowBroadcast, this), i.AudioMgr.Instance.setAudioClip(this.AudioClipList, this.AudioNameList)
            }
            onDestroy() {
                r.EventSystem.Event(r.NoticedArrived.OnReceiveBroadcast).Remove(this.OnReceiveBroadcast, this), r.EventSystem.Event(r.NoticedArrived.ShowBroadcast).Remove(this.OnShowBroadcast, this), this.m_pfbCurrentBroadcast = null, this.m_nodeCurrentBroadcast = null, this.m_nodeCurrentRoot = null, this.m_CurrentBroadcast = null, null != this.m_animCurrentBroadcast && null != this.m_animCurrentBroadcast.node && (this.m_animCurrentBroadcast.off("finished", this.onAnimInFinished, this), this.m_animCurrentBroadcast.off("lastframe", this.onAnimLoopLastFrame, this), this.m_animCurrentBroadcast.off("finished", this.onAnimOutFinished, this), this.m_animCurrentBroadcast = null), this.unscheduleAllCallbacks()
            }
            update(e) {
                switch (this.m_RewardBroadcastState) {
                    case h.IDLE:
                        1 == this.m_IsTimeToShow && this.IsBroadcastComing() && (this.m_RewardBroadcastState = h.IN);
                        break;
                    case h.IN:
                        this.BroadcastIn(), this.m_RewardBroadcastState = h.WAIT_IN;
                        break;
                    case h.WAIT_IN:
                        break;
                    case h.LOOP:
                        this.BroadcastLoop(), this.m_RewardBroadcastState = h.WAIT_LOOP;
                        break;
                    case h.WAIT_LOOP:
                        this.m_numLoopTimer += e;
                        break;
                    case h.OUT:
                        this.BroadcastOut(), this.m_RewardBroadcastState = h.WAIT_OUT;
                        break;
                    case h.WAIT_OUT:
                        break;
                    case h.FINISHED:
                        this.BroadcastFinished(), this.m_RewardBroadcastState = h.IDLE
                }
            }
            GetCurrentArkID() {
                return this.m_CurrentBroadcast.ark_id
            }
            IsBroadcastComing() {
                let e = !1;
                if (this.m_BroadcastBuffer.length > 0) {
                    let t = this.m_BroadcastBuffer.shift();
                    for (let o = 0; o < this.m_RewardBroadcastItem.length; o++)
                        if (this.m_RewardBroadcastItem[o].type == t.type) {
                            this.m_pfbCurrentBroadcast = this.m_RewardBroadcastItem[o].pfbBroadcast, this.m_strAnimIn = this.m_RewardBroadcastItem[o].animIn.name, this.m_strAnimLoop = this.m_RewardBroadcastItem[o].animLoop.name, this.m_strAnimOut = this.m_RewardBroadcastItem[o].animOut.name, this.m_nodeCurrentRoot = this.m_RewardBroadcastItem[o].root, this.m_CurrentBroadcast = t, e = !0;
                            break
                        }
                }
                return e
            }
            BroadcastIn() {
                this.m_nodeCurrentBroadcast = this.m_SpawnPool.Spawn(this.m_pfbCurrentBroadcast.data), this.m_nodeCurrentBroadcast.active = !0, this.m_nodeCurrentBroadcast.parent = this.m_nodeCurrentRoot, this.m_nodeCurrentBroadcast.position = cc.Vec3.ZERO, this.SetAvatar(), this.m_animCurrentBroadcast = this.m_nodeCurrentBroadcast.getComponent(cc.Animation), i.AudioMgr.Instance.Play("PS_Record_No1Push", !1, 1), this.m_animCurrentBroadcast && (this.m_animCurrentBroadcast.play(this.m_strAnimIn), this.m_numLoopTimer = 0, this.m_animCurrentBroadcast.on("finished", this.onAnimInFinished, this), r.EventSystem.Event(r.NoticedArrived.OnBroadcastShowIn).Length > 0 && r.EventSystem.Event(r.NoticedArrived.OnBroadcastShowIn).Notify())
            }
            BroadcastLoop() {
                this.m_animCurrentBroadcast.play(this.m_strAnimLoop), this.m_animCurrentBroadcast.on("lastframe", this.onAnimLoopLastFrame, this)
            }
            BroadcastOut() {
                this.m_animCurrentBroadcast.play(this.m_strAnimOut), r.EventSystem.Event(r.NoticedArrived.OnBroadcastShowOut).Length > 0 && r.EventSystem.Event(r.NoticedArrived.OnBroadcastShowOut).Notify(), this.m_animCurrentBroadcast.on("finished", this.onAnimOutFinished, this)
            }
            BroadcastFinished() {
                this.m_SpawnPool.Despawn(this.m_nodeCurrentBroadcast), r.EventSystem.Event(r.NoticedArrived.OnBroadcastShowFinished).Length > 0 && r.EventSystem.Event(r.NoticedArrived.OnBroadcastShowFinished).Notify()
            }
            SetAvatar() {
                if (this.m_CurrentBroadcast) {
                    let e = this.m_nodeCurrentBroadcast.getComponent(a.NoticeInteractive);
                    e && (e.SetFaceByID(this.m_CurrentBroadcast.face), e.SetFrameByID(this.m_CurrentBroadcast.faceFrame), e.SetNickname(this.m_CurrentBroadcast.nickname), e.SetScore(this.m_CurrentBroadcast.score), e.m_RewardBroadcastArkID = this.m_CurrentBroadcast.ark_id, e.m_IsSelf = SS.Network.LoginModel.LoginInfo.pin_ark_id == this.m_CurrentBroadcast.ark_id, e.m_RewardBroadcastType = this.m_CurrentBroadcast.type)
                }
            }
            onAnimInFinished() {
                this.m_animCurrentBroadcast.off("finished", this.onAnimInFinished, this), this.m_RewardBroadcastState = h.LOOP
            }
            onAnimLoopLastFrame() {
                this.m_numLoopTimer > this.m_numLoopFinishedTime && (this.m_animCurrentBroadcast.off("lastframe", this.onAnimLoopLastFrame, this), this.m_RewardBroadcastState = h.OUT)
            }
            onAnimOutFinished() {
                this.m_animCurrentBroadcast.off("finished", this.onAnimOutFinished, this), this.m_animCurrentBroadcast = null, this.m_RewardBroadcastState = h.FINISHED
            }
            OnReceiveBroadcast(e) {
                let t = m.Multiple_Slot,
                    o = "",
                    n = "",
                    i = "",
                    s = "",
                    r = "",
                    a = "";
                if (e.hasOwnProperty("type")) switch (Number(e.type)) {
                    case 1:
                        t = m.Jackpot, a = "$";
                        break;
                    case 2:
                        t = m.Multiple_Slot, a = "X";
                        break;
                    case 3:
                        t = m.Multiple_Fish, a = "X"
                }
                e.hasOwnProperty("value") && (o = e.value), e.hasOwnProperty("avatar_id") && (n = e.avatar_id), e.hasOwnProperty("avatar_frame_id") && (i = e.avatar_frame_id), e.hasOwnProperty("nickname") && (s = e.nickname), e.hasOwnProperty("ark_id") && (r = e.ark_id);
                let l = new u;
                l.face = n, l.faceFrame = i, l.type = t, l.nickname = s, l.score = a + o, l.ark_id = r, cc.log("[step] OnReceiveBroadcast ", e, l), SS.Network.LoginModel.LoginInfo.pin_ark_id == l.ark_id && m.Multiple_Slot == l.type && (this.m_IsTimeToShow = !1, cc.log("[step] OnReceiveBroadcast, Waiting for the reward to show...")), this.m_BroadcastBuffer.push(l), l = null
            }
            OnShowBroadcast() {
                0 == this.m_IsTimeToShow && cc.log("[step] OnShowBroadcast, show now..."), this.m_IsTimeToShow = !0
            }
        };
        n([c([d])], p.prototype, "m_RewardBroadcastItem", void 0), n([c(s.SpawnPool)], p.prototype, "m_SpawnPool", void 0), n([c(cc.AudioClip)], p.prototype, "AudioClipList", void 0), n([c()], p.prototype, "AudioNameList", void 0), p = n([l], p), o.RewardBroadcastMgr = p, cc._RF.pop()
    }, {
        "../../LobbyCommon/Component/AudioMgr": "AudioMgr",
        "../../LobbyCommon/Component/SSSpawnPool": "SSSpawnPool",
        "../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "./NoticeInteractive": "NoticeInteractive"
    }],
    RewardNoticeMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "b544cKeJbJNaoQ4kvaCwhC5", "RewardNoticeMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.RewardNoticeMgr = o.RewardNoticeItem = o.RewardType = o.RecordType = o.PlayerRecordType = void 0;
        const i = e("../../LobbyCommon/Component/AudioMgr"),
            s = e("../../LobbyCommon/Component/SSSpawnPool"),
            r = e("../../LobbyCommon/Helper/EventSystem"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        var c, h, m;
        (function(e) {
            e[e.IDLE = 0] = "IDLE", e[e.IN = 1] = "IN", e[e.WAIT_IN = 2] = "WAIT_IN", e[e.LOOP = 3] = "LOOP", e[e.WAIT_LOOP = 4] = "WAIT_LOOP", e[e.OUT = 5] = "OUT", e[e.WAIT_OUT = 6] = "WAIT_OUT", e[e.FINISHED = 7] = "FINISHED"
        })(c || (c = {})),
        function(e) {
            e[e.Fish = 0] = "Fish", e[e.Slot = 1] = "Slot", e[e.Keno = 2] = "Keno"
        }(h || (h = {})),
        function(e) {
            e[e.Personal = 0] = "Personal", e[e.Continent = 1] = "Continent"
        }(o.PlayerRecordType || (o.PlayerRecordType = {})),
        function(e) {
            e[e.TotalWin = 0] = "TotalWin", e[e.Jackpot = 1] = "Jackpot", e[e.SlotMultiple = 2] = "SlotMultiple", e[e.FishMultiple = 3] = "FishMultiple"
        }(o.RecordType || (o.RecordType = {})),
        function(e) {
            e[e.NewRecord_Multiple = 0] = "NewRecord_Multiple", e[e.NewRecord_Jackpot = 1] = "NewRecord_Jackpot", e[e.NumberOne_Multiple = 2] = "NumberOne_Multiple", e[e.NumberOne_Jackpot = 3] = "NumberOne_Jackpot", e[e.None = 4] = "None"
        }(m = o.RewardType || (o.RewardType = {}));
        let u = class {
            constructor() {
                this.RewardType = m.NewRecord_Multiple, this.pfbReward = null, this.animIn = null, this.animLoop = null, this.animOut = null
            }
        };
        n([l({
            type: cc.Enum(m)
        })], u.prototype, "RewardType", void 0), n([l(cc.Prefab)], u.prototype, "pfbReward", void 0), n([l(cc.AnimationClip)], u.prototype, "animIn", void 0), n([l(cc.AnimationClip)], u.prototype, "animLoop", void 0), n([l(cc.AnimationClip)], u.prototype, "animOut", void 0), u = n([a("RewardNoticeItem")], u), o.RewardNoticeItem = u;
        let d = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_RewardLocation = h.Slot, this.m_RewardNoticeItem = [], this.m_pfbEffectToBar = null, this.m_nodeRewardRoot = null, this.m_nodeEffectTargetRoot = null, this.m_spriteProfileBar = null, this.m_numberEffectFlyTime = .5, this.m_SpawnPool = null, this.AudioClipList = [], this.AudioNameList = [], this.m_RewardTypeBuffer = [], this.m_CurrRewardType = m.None, this.m_pfbCurrReward = null, this.m_nodeCurrReward = null, this.m_numLoopFinishedTime = 3, this.m_numLoopTimer = 0, this.m_strAnimIn = "", this.m_strAnimLoop = "", this.m_strAnimOut = "", this.m_animCurrReward = null, this.m_nodeEffectToBar = null, this.m_RewardState = c.IDLE, this.m_IsTimeToShow = !1, this.m_BlockNewRecordNotice = !1
            }
            start() {
                this.m_RewardState = c.IDLE, this.m_pfbCurrReward = null, this.m_nodeCurrReward = null, this.m_numLoopTimer = 0, this.m_animCurrReward = null, this.m_nodeEffectToBar = null, this.m_IsTimeToShow = !1, i.AudioMgr.Instance.setAudioClip(this.AudioClipList, this.AudioNameList), r.EventSystem.Event(r.NoticedArrived.OnReceiveReward).Insert(this.onNoticedArrived, this), r.EventSystem.Event(r.NoticedArrived.ShowRewardNotice).Insert(this.onShowRewardNotice, this)
            }
            onDestroy() {
                r.EventSystem.Event(r.NoticedArrived.OnReceiveReward).Remove(this.onNoticedArrived, this), r.EventSystem.Event(r.NoticedArrived.ShowRewardNotice).Remove(this.onShowRewardNotice, this), this.m_pfbCurrReward = null, this.m_nodeCurrReward = null, null != this.m_animCurrReward && null != this.m_animCurrReward.node && (this.m_animCurrReward.off("finished", this.onAnimInFinished, this), this.m_animCurrReward.off("lastframe", this.onAnimLoopLastFrame, this), this.m_animCurrReward.off("finished", this.onAnimOutFinished, this), this.m_animCurrReward = null), this.m_nodeEffectToBar && (this.m_SpawnPool.Despawn(this.m_nodeEffectToBar), this.m_nodeEffectToBar = null), this.unscheduleAllCallbacks()
            }
            update(e) {
                switch (this.m_RewardState) {
                    case c.IDLE:
                        1 == this.m_IsTimeToShow && (this.IsGetNewReward() ? this.m_RewardState = c.IN : this.m_IsTimeToShow = !1);
                        break;
                    case c.IN:
                        this.RankRewardIn(), this.m_RewardState = c.WAIT_IN;
                        break;
                    case c.WAIT_IN:
                        break;
                    case c.LOOP:
                        this.RankRewardLoop(), this.m_RewardState = c.WAIT_LOOP;
                        break;
                    case c.WAIT_LOOP:
                        this.m_numLoopTimer += e;
                        break;
                    case c.OUT:
                        this.RankRewardOut(), this.m_RewardState = c.WAIT_OUT;
                        break;
                    case c.WAIT_OUT:
                        break;
                    case c.FINISHED:
                        this.RankRewardFinished(), this.m_RewardState = c.IDLE
                }
            }
            IsGetNewReward() {
                let e = !1;
                if (this.m_RewardTypeBuffer.length > 0) {
                    this.m_CurrRewardType = this.m_RewardTypeBuffer.shift();
                    for (let t = 0; t < this.m_RewardNoticeItem.length; t++)
                        if (this.m_RewardNoticeItem[t].RewardType == this.m_CurrRewardType) {
                            this.m_pfbCurrReward = this.m_RewardNoticeItem[t].pfbReward, this.m_strAnimIn = this.m_RewardNoticeItem[t].animIn.name, this.m_strAnimLoop = this.m_RewardNoticeItem[t].animLoop.name, this.m_strAnimOut = this.m_RewardNoticeItem[t].animOut.name, e = !0;
                            break
                        }
                }
                return e
            }
            onShowRewardNotice() {
                this.m_IsTimeToShow = !0
            }
            RankRewardIn() {
                switch (this.m_nodeCurrReward = this.m_SpawnPool.Spawn(this.m_pfbCurrReward.data), this.m_nodeCurrReward.active = !0, this.m_nodeCurrReward.parent = this.m_nodeRewardRoot, this.m_nodeCurrReward.position = cc.Vec3.ZERO, this.m_animCurrReward = this.m_nodeCurrReward.getComponent(cc.Animation), this.m_animCurrReward && (this.m_animCurrReward.play(this.m_strAnimIn), this.m_numLoopTimer = 0, this.m_animCurrReward.on("finished", this.onAnimInFinished, this), r.EventSystem.Event(r.NoticedArrived.OnRewardShowIn).Length > 0 && r.EventSystem.Event(r.NoticedArrived.OnRewardShowIn).Notify()), this.m_CurrRewardType) {
                    case m.NewRecord_Jackpot:
                    case m.NewRecord_Multiple:
                        i.AudioMgr.Instance.Play("PS_Record_NewRecord", !1, 1);
                        break;
                    case m.NumberOne_Jackpot:
                    case m.NumberOne_Multiple:
                        this.scheduleOnce(() => {
                            i.AudioMgr.Instance.Play("PS_Record_No1", !1, 1)
                        }, .25), r.EventSystem.Event(r.NoticedArrived.ShowBroadcast).Length > 0 && r.EventSystem.Event(r.NoticedArrived.ShowBroadcast).Notify()
                }
                r.EventSystem.Event(r.Profile.ClearSelfUpdateCDTime).Length && r.EventSystem.Event(r.Profile.ClearSelfUpdateCDTime).Notify()
            }
            RankRewardLoop() {
                this.m_animCurrReward.play(this.m_strAnimLoop), this.m_animCurrReward.on("lastframe", this.onAnimLoopLastFrame, this)
            }
            RankRewardOut() {
                this.m_animCurrReward.play(this.m_strAnimOut), r.EventSystem.Event(r.NoticedArrived.OnRewardShowOut).Length > 0 && r.EventSystem.Event(r.NoticedArrived.OnRewardShowOut).Notify(), this.m_animCurrReward.on("finished", this.onAnimOutFinished, this)
            }
            RankRewardFinished() {
                this.m_SpawnPool.Despawn(this.m_nodeCurrReward), r.EventSystem.Event(r.NoticedArrived.OnRewardShowFinished).Length > 0 && r.EventSystem.Event(r.NoticedArrived.OnRewardShowFinished).Notify(), this.m_RewardTypeBuffer.length <= 0 && (this.m_IsTimeToShow = !1, r.EventSystem.Event(r.NoticedArrived.ShowBroadcast).Length > 0 && r.EventSystem.Event(r.NoticedArrived.ShowBroadcast).Notify())
            }
            onAnimInFinished() {
                this.m_animCurrReward.off("finished", this.onAnimInFinished, this), this.m_RewardState = c.LOOP
            }
            onAnimLoopLastFrame() {
                this.m_numLoopTimer > this.m_numLoopFinishedTime && (this.m_animCurrReward.off("lastframe", this.onAnimLoopLastFrame, this), this.m_RewardState = c.OUT)
            }
            onAnimOutFinished() {
                this.m_animCurrReward.off("finished", this.onAnimOutFinished, this), this.m_animCurrReward = null, this.m_RewardState = c.FINISHED
            }
            onNoticedArrived(e) {
                if (e != m.NewRecord_Multiple || !this.m_BlockNewRecordNotice) {
                    if (e == m.NewRecord_Multiple && this.m_RewardTypeBuffer.findIndex(t => t == e) > -1) return void cc.log("[step] onNoticedArrived, RewardType " + e + " is already in buffer.");
                    e == m.NumberOne_Multiple && (this.m_BlockNewRecordNotice = !0, this.unschedule(this.ResetBlockNewRecordNotice), this.scheduleOnce(this.ResetBlockNewRecordNotice, 5)), this.m_RewardTypeBuffer.push(e)
                }
            }
            ResetBlockNewRecordNotice() {
                this.m_BlockNewRecordNotice = !1
            }
        };
        n([l({
            type: cc.Enum(h)
        })], d.prototype, "m_RewardLocation", void 0), n([l([u])], d.prototype, "m_RewardNoticeItem", void 0), n([l(cc.Prefab)], d.prototype, "m_pfbEffectToBar", void 0), n([l(cc.Node)], d.prototype, "m_nodeRewardRoot", void 0), n([l(cc.Node)], d.prototype, "m_nodeEffectTargetRoot", void 0), n([l(cc.Sprite)], d.prototype, "m_spriteProfileBar", void 0), n([l(cc.Float)], d.prototype, "m_numberEffectFlyTime", void 0), n([l(s.SpawnPool)], d.prototype, "m_SpawnPool", void 0), n([l(cc.AudioClip)], d.prototype, "AudioClipList", void 0), n([l()], d.prototype, "AudioNameList", void 0), d = n([a], d), o.RewardNoticeMgr = d, cc._RF.pop()
    }, {
        "../../LobbyCommon/Component/AudioMgr": "AudioMgr",
        "../../LobbyCommon/Component/SSSpawnPool": "SSSpawnPool",
        "../../LobbyCommon/Helper/EventSystem": "EventSystem"
    }],
    RichTxtClickEvent: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "3b6dePY2oNKnoOjFMz6lSxj", "RichTxtClickEvent");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            OpenUrlNewTab(e, t) {
                window.open(t, "_blank")
            }
        };
        r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    RotatableObjectCtrlGame: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "899a9B2rUNMipkFzRgegUBh", "RotatableObjectCtrlGame");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("./FullScreenHandler"),
            s = e("./Helper/EventSystem"),
            r = e("./LobbyObjectSetting"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this.setOpacityOnly = !1, this.displayMode = i.Orientation.Auto, this.portraitSetting = new r.default, this.landscapeSetting = new r.default
            }
            get orientation() {
                return s.EventSystem.Function(s.ScreenOrientationState.GetOrientation)()
            }
            onLoad() {
                s.EventSystem.Event(s.ScreenOrientationState.ChangeOrientation).Insert(this.onScreenRotate, this), s.EventSystem.Event(s.UpdateSafeArea).Insert(this.updateSize, this)
            }
            onDestroy() {
                s.EventSystem.Event(s.ScreenOrientationState.ChangeOrientation).Remove(this.onScreenRotate, this), s.EventSystem.Event(s.UpdateSafeArea).Remove(this.updateSize, this)
            }
            onEnable() {
                this.updateSize()
            }
            updateSize() {
                this.onScreenRotate(this.orientation)
            }
            onScreenRotate(e) {
                let t;
                t = e ? this.portraitSetting : this.landscapeSetting;
                const {
                    position: o,
                    scale: n,
                    size: s,
                    setScale: r,
                    setSize: a,
                    setPos: l,
                    setAsScreenSize: c
                } = t;
                if (l && this.node.setPosition(o), r && this.node.setScale(n), a && !c && this.node.setContentSize(s), c) {
                    cc.director.getScene().getChildByName("Canvas");
                    const e = cc.director.getScene().getChildByName("Canvas").getComponent(cc.Canvas);
                    this.node.width == e.designResolution.width && this.node.height == e.designResolution.height || this.node.setContentSize(e.designResolution)
                }
                switch (this.displayMode) {
                    case i.Orientation.Landscape:
                        this.node.opacity = e == i.Orientation.Landscape ? 255 : 0, this.setOpacityOnly || (this.node.active = e == i.Orientation.Landscape);
                        break;
                    case i.Orientation.Portrait:
                        this.node.opacity = e == i.Orientation.Portrait ? 255 : 0, this.setOpacityOnly || (this.node.active = e == i.Orientation.Portrait)
                }
            }
        };
        n([l({
            displayName: "\u4ee5\u900f\u660e\u5ea6\u96b1\u85cf"
        })], c.prototype, "setOpacityOnly", void 0), n([l({
            type: cc.Enum(i.Orientation),
            displayName: "\u7279\u5b9a\u8f49\u5411\u986f\u793a"
        })], c.prototype, "displayMode", void 0), n([l({
            type: r.default,
            displayName: "\u76f4\u5411\u53c3\u6578",
            visible: function() {
                return this.displayMode == i.Orientation.Auto || this.displayMode == i.Orientation.Portrait
            }
        })], c.prototype, "portraitSetting", void 0), n([l({
            type: r.default,
            displayName: "\u6a6b\u5411\u53c3\u6578",
            visible: function() {
                return this.displayMode == i.Orientation.Auto || this.displayMode == i.Orientation.Landscape
            }
        })], c.prototype, "landscapeSetting", void 0), c = n([a], c), o.default = c, cc._RF.pop()
    }, {
        "./FullScreenHandler": "FullScreenHandler",
        "./Helper/EventSystem": "EventSystem",
        "./LobbyObjectSetting": "LobbyObjectSetting"
    }],
    SSCanvasHandler: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "0954bpPMQhAYJtOK7hLatZh", "SSCanvasHandler");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: s,
            property: r,
            menu: a
        } = cc._decorator;
        let l = n = class extends cc.Component {
            constructor() {
                super(...arguments), this.Canvas = null, this.winSize = null, this.halfDiagonal = null, this.reverse = null, this.IsLockChangeWeapon = !1, this.FlipObjects = null, this.Screen = null, this.Shadows = null
            }
            static get Instance() {
                return this.instance
            }
            static get CANVAS() {
                return this.instance.Canvas
            }
            static get WinSize() {
                return this.instance.winSize
            }
            static get isReverse() {
                return this.instance.reverse
            }
            static isRoofSeat(e) {
                if (this.isReverse) {
                    if (e < 2) return !0
                } else if (e > 1) return !0;
                return !1
            }
            onLoad() {
                n.instance = this, this.Canvas = this.getComponent(cc.Canvas), this.Canvas ? this.winSize = this.Canvas.designResolution : this.winSize = cc.winSize, this.halfDiagonal = new cc.Vec2(.5 * this.winSize.width, .5 * this.winSize.height)
            }
            setReverse(e) {
                this.reverse = e, this.FlipObjects.angle = e ? 180 : 0, this.Shadows.setScale(e ? cc.v2(-1.1, 1.1) : cc.v2(1.1, -1.1))
            }
            static CameraShakeEffect(e = 1, t = 1, o = 0) {
                this.instance.Screen.runAction(cc.sequence(cc.delayTime(o), cc.callFunc(() => {
                    this.CameraShake(t)
                }), cc.delayTime(e + o), cc.callFunc(() => {
                    this.CameraShake(-t)
                })))
            }
            static CameraShake(e = 1) {
                if (this.shakeAction && (this.instance.Screen.stopAction(this.shakeAction), this.shakeAction = null), this.shakePower += e, this.shakePower > 0) {
                    let e = this.instance.Screen.x > 0 ? -2 * this.shakePower : 2 * this.shakePower,
                        t = this.instance.Screen.y > 0 ? -2 * this.shakePower : 2 * this.shakePower;
                    this.shakeAction = cc.repeat(cc.sequence(cc.moveTo(.0625, new cc.Vec2(e, -t)), cc.moveTo(.0625, new cc.Vec2(-e, t)), cc.moveTo(.0625, new cc.Vec2(-e, -t)), cc.moveTo(.0625, new cc.Vec2(e, t))), cc.macro.REPEAT_FOREVER), this.instance.Screen.runAction(this.shakeAction)
                } else this.shakePower = 0, this.shakeAction = cc.moveTo(.0625, cc.Vec2.ZERO), this.instance.Screen.runAction(this.shakeAction)
            }
            static UpDownShakeOnce(e = 1, t = .8) {
                this.instance.Screen.runAction(cc.sequence(cc.moveBy(t, cc.Vec2.UP.mul(e)), cc.moveBy(.1, cc.Vec2.UP.mul(-e)), cc.callFunc(() => {
                    this.shakePower <= 0 && this.instance.Screen.setPosition(cc.Vec2.ZERO)
                })))
            }
            static Clear() {
                this.instance.Screen.stopAllActions(), this.shakePower = 0
            }
            static RegisterTouchEvent(e, t, o, n) {
                this.instance.Canvas && this.instance.Canvas.node.on(e, t, o, n)
            }
            static CanelTouchEvent(e, t, o) {
                this.instance.Canvas && this.instance.Canvas.node.off(e, t, o)
            }
            static ConvMousePos(e) {
                return this.isReverse ? e.sub(this.instance.halfDiagonal).neg() : e.sub(this.instance.halfDiagonal)
            }
            static ConvMousePosNoReverse(e) {
                return e.sub(this.instance.halfDiagonal)
            }
        };
        l.instance = null, l.shakePower = 0, l.shakeAction = null, i([r(cc.Node)], l.prototype, "FlipObjects", void 0), i([r(cc.Node)], l.prototype, "Screen", void 0), i([r(cc.Node)], l.prototype, "Shadows", void 0), l = n = i([s, a("FishCommon/SSCanvasHandler")], l), o.default = l, cc._RF.pop()
    }, {}],
    SSColorAssembler2D: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "fa06bsabodAuo8vENzgk1Bx", "SSColorAssembler2D");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s,
            executeInEditMode: r,
            requireComponent: a,
            menu: l
        } = cc._decorator;
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this._colors = []
            }
            get colors() {
                return this._colors
            }
            set colors(e) {
                this._colors = e, this._updateColors()
            }
            onEnable() {
                cc.director.once(cc.Director.EVENT_AFTER_DRAW, this._updateColors, this)
            }
            onDisable() {
                cc.director.off(cc.Director.EVENT_AFTER_DRAW, this._updateColors, this), this.node._renderFlag |= cc.RenderFlow.FLAG_COLOR
            }
            _updateColors() {
                const e = this.getComponent(cc.RenderComponent);
                if (!e) return;
                const t = e._assembler;
                if (!(t instanceof cc.Assembler2D)) return;
                const o = t._renderData.uintVDatas[0];
                if (!o) return;
                const n = this.node.color,
                    i = t.floatsPerVert;
                let s = 0;
                for (let r = t.colorOffset, a = o.length; r < a; r += i) o[r] = (this.colors[s++] || n)._val
            }
        };
        n([s], c.prototype, "_colors", void 0), n([s({
            type: [cc.Color]
        })], c.prototype, "colors", null), c = n([i, r, a(cc.RenderComponent), l("i18n:MAIN_MENU.component.renderers/ColorAssembler2D-lamyoung.com")], c), o.default = c, cc._RF.pop()
    }, {}],
    SSDontDestroy: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "a62d18oW0NPeZtGbXFooHjg", "SSDontDestroy");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.DontDestroy = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            onLoad() {
                cc.game.addPersistRootNode(this.node)
            }
        };
        r = n([i], r), o.DontDestroy = r, cc._RF.pop()
    }, {}],
    SSDownloader: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7e3baN+TVpP3L9iINSSVsEB", "SSDownloader");
        var n = this && this.__awaiter || function(e, t, o, n) {
            return new(o || (o = Promise))(function(i, s) {
                function r(e) {
                    try {
                        l(n.next(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function a(e) {
                    try {
                        l(n.throw(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                        e(t)
                    })).then(r, a)
                }
                l((n = n.apply(e, t || [])).next())
            })
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.default = class {
            constructor() {
                this.retryTimes = 0, this.retryTimeOut = [2e3, 3e3, 4e3, 5e3, 6e3]
            }
            GetScript(e, t, o) {
                let n = document.createElement("script");
                n.type = "text/javascript", n.src = e, n.timeout = 1e4, n.ontimeout = function() {
                    null != o && o(arguments)
                }, n.onerror = function() {
                    null != o && o(arguments)
                }, n.onload = n.onreadystatechange = function() {
                    this.readyState && "loaded" !== this.readyState && "complete" !== this.readyState || (null != t && "function" == typeof t && t(), this.onload = this.onreadystatechange = null, document.getElementsByTagName("head")[0].removeChild(this))
                }, document.getElementsByTagName("head")[0].appendChild(n)
            }
            GetImage(e, t, o) {
                if (e.indexOf("LoginBG") != -1) {
                    e = e.replace("localhost:8000", "localhost:8000/games/AladdinAdventurePGD");
                }
                let n = this;
                var i = new XMLHttpRequest;
                i.responseType = "arraybuffer", i.onload = function() {
                    i.status >= 200 && i.status < 300 || 304 == i.status ? null != t && "function" == typeof t && t(this.response) : (console.log("xhr.onload error status ", i.status), n.RetryHandler(this.response, i, e, o))
                }, i.onerror = function(t) {
                    console.log("xhr.onerror  ", t), n.RetryHandler(t, i, e, o)
                }, i.ontimeout = function(t) {
                    console.log("xhr.ontimeout  ", t), n.RetryHandler(t, i, e, o)
                }, i.open("GET", e), i.timeout = n.retryTimeOut[n.retryTimes], console.log("send : ", e), i.send()
            }
            GetJSON(e, t, o) {
                let n = this;
                if (window.XMLHttpRequest) {
                    e += "?Date=" + (new Date).getTime();
                    var i = new XMLHttpRequest;
                    this.retryTimes = 0, i.onload = function() {
                        i.status >= 200 && i.status < 300 || 304 == i.status ? null != t && "function" == typeof t && t(this.responseText) : (console.log("xhr.onload error status ", i.status), n.RetryHandler(this.responseText, i, e, o))
                    }, i.onerror = function(t) {
                        console.log("xhr.onerror  ", t), n.RetryHandler(t, i, e, o)
                    }, i.ontimeout = function(t) {
                        console.log("xhr.ontimeout  ", t), n.RetryHandler(t, i, e, o)
                    }, i.open("GET", e), i.timeout = n.retryTimeOut[n.retryTimes], i.send()
                } else null != o && "function" == typeof o && (console.error("Error from XMLHttpRequest"), o("Error from XMLHttpRequest"))
            }
            RetryHandler(e, t, o, i) {
                return n(this, void 0, void 0, function*() {
                    let n = this;
                    n.retryTimes == n.retryTimeOut.length - 1 ? (console.log("retry fail ", e), null != i && "function" == typeof i && i(e)) : (console.log("self.retryTimes", n.retryTimes), console.log("xhr.timeout", t.timeout), "timeout" != e.type ? (console.log("not timeout error"), setTimeout(() => {
                        t.open("GET", o), t.timeout = n.retryTimeOut[++n.retryTimes], t.send()
                    }, 3e3)) : (t.open("GET", o), t.timeout = n.retryTimeOut[++n.retryTimes], t.send()))
                })
            }
        }, cc._RF.pop()
    }, {}],
    SSEncryptSkeleton: [function(e, t) {
        "use strict";
        cc._RF.push(t, "17403y3DEJIAJBAKxGyW7Jn", "SSEncryptSkeleton");
        var o = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            n = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        let i = window.Editor,
            s = cc.Enum({
                Debug: 0,
                Release: 1
            });
        const {
            ccclass: r,
            property: a
        } = cc._decorator;
        let l = class extends sp.Skeleton {
            constructor() {
                super(...arguments), this.index = -1, this.editor_mode = s.Release
            }
            get editorMode() {
                return this.editor_mode
            }
            set editorMode(e) {}
            __preload() {
                const e = Object.create(null, {
                    __preload: {
                        get: () => super.__preload
                    }
                });
                return n(this, void 0, void 0, function*() {
                    if (this.skeletonData) {
                        let e = {};
                        e = this.skeletonData._skeletonJson, this.editor_mode = e.editor_mode || s.Debug, this.editor_mode == s.Release && this._decodeSkeletonData()
                    }
                    e.__preload.call(this)
                })
            }
            onEnable() {
                if (!this.skeletonData) return this.node.active = !1, void cc.warn("\u8acb\u9078\u64c7Skeleton Data");
                this.registerComponent(), this.__preload(), super.onEnable()
            }
            onDestroy() {
                this.removeComponent()
            }
            registerComponent() {}
            removeComponent() {}
            _decodeSkeletonData() {
                let e = "";
                try {
                    e = "2.0.10" === cc.ENGINE_VERSION ? "skeletonJson" : "_skeletonJson";
                    let o = this.skeletonData[e].data;
                    o && (this.skeletonData[e] = JSON.parse(decodeURIComponent(atob(o))), this.skeletonData[e].editor_mode = this.editor_mode, this.skeletonData.reset())
                } catch (t) {
                    cc.warn("[decodeSkeletonData] %s error: ", e, t)
                }
            }
            _modifySkeletonData(t, o) {
                let n = this.skeletonData._uuid,
                    r = n.substr(0, 2),
                    a = e("fs"),
                    l = e("path").join(i.Project.path, "library", "imports", r, n + ".json"),
                    c = JSON.parse(a.readFileSync(l));
                this.editor_mode === s.Debug && t === s.Release ? c._skeletonJson = {
                    data: btoa(encodeURIComponent(JSON.stringify(c._skeletonJson))),
                    editor_mode: t
                } : this.editor_mode === s.Release && t === s.Debug ? (c._skeletonJson = JSON.parse(decodeURIComponent(atob(c._skeletonJson.data))), c._skeletonJson.editor_mode = t) : i.warn("_modifySkeletonData \u932f\u8aa4"), a.writeFile(l, JSON.stringify(c), "utf-8", e => {
                    e && console.error(e), i.log("SkeletonData: %s decode success, editor_mode: %s", n, this.editor_mode), o && o(n, e)
                })
            }
        };
        l.manager = {}, l.index = 0, l.MAX_INDEX = 4096, o([a({
            type: s
        })], l.prototype, "editorMode", null), l = o([r()], l), cc._RF.pop()
    }, {
        fs: void 0,
        path: 1
    }],
    SSMouseMark: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "0fab97wP4xIn70EPKwZEeCD", "SSMouseMark");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s,
            menu: r
        } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.Mark_1 = null, this.Mark_2 = null
            }
            switchArrowMark(e) {
                this.Mark_1.active = !e, this.Mark_2.active = e
            }
        };
        n([s(cc.Node)], a.prototype, "Mark_1", void 0), n([s(cc.Node)], a.prototype, "Mark_2", void 0), a = n([i, r("FishCommon/SSMouseMark")], a), o.default = a, cc._RF.pop()
    }, {}],
    SSNodeParticleSystem: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "ecf52FTGcVOxa+6BVaQxUP/", "SSNodeParticleSystem");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.NodeParticleSystem = void 0;
        const i = e("./SSSpawnPool"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.targetNode = null, this.randomRotation = !1, this.enableToPlay = !0, this.duration = -1, this.lifetime = 1, this.lifetimeRandomRange = 0, this.emissionRate = 10, this.emitArea = cc.Vec2.ZERO, this.speed = 10, this.angle = 90, this.angleRandomRange = 0, this.gravityXY = cc.v2(0, 1), this.beginScale = 1, this.endScale = 1, this.receiveNodeParticleListIndex = [], this.spawnpool = null, this.nodeParticleList = []
            }
            onLoad() {
                this.spawnpool = this.addComponent(i.SpawnPool)
            }
            onEnable() {
                null != this.targetNode ? this.enableToPlay && this.RePlayParticleSystem() : console.warn("[NodeParticleSystem]TargetPrefab Not Found.")
            }
            ResetAll() {
                this.spawnpool.DespawnAll(), this.nodeParticleList = [], this.receiveNodeParticleListIndex = []
            }
            RePlayParticleSystem() {
                let e = 1 / this.emissionRate;
                if (this.unscheduleAllCallbacks(), this.duration > 0) {
                    let t = this.duration / e;
                    this.schedule(this.EmitNode, e, t)
                } else this.schedule(this.EmitNode, e)
            }
            StopParticleSystem() {
                this.unscheduleAllCallbacks()
            }
            EmitNode() {
                this.spawnpool || (this.spawnpool = this.addComponent(i.SpawnPool));
                let e = this.spawnpool.Spawn(this.targetNode.data);
                e.parent = this.node;
                let t = 2 * (Math.random() - .5) * this.emitArea.x,
                    o = 2 * (Math.random() - .5) * this.emitArea.y;
                e.setPosition(cc.v2(t, o)), e.scale = this.beginScale, this.randomRotation && (e.angle = 360 * Math.random());
                let n = (this.angle + 2 * (Math.random() - .5) * this.angleRandomRange) * Math.PI / 180,
                    s = cc.v2(Math.cos(n), Math.sin(n)),
                    r = {
                        node: e,
                        lifetime: this.lifetime + 2 * (Math.random() - .5) * this.lifetimeRandomRange,
                        gravityXY: this.gravityXY,
                        beginScale: this.beginScale,
                        endScale: this.endScale,
                        currentLifeTime: 0,
                        currentGrivate: cc.v2(s.x * this.speed, s.y * this.speed)
                    };
                this.nodeParticleList.push(r)
            }
            update(e) {
                if (this.nodeParticleList.forEach((t, o) => {
                        t.currentLifeTime += e, t.currentLifeTime >= t.lifetime && (t.currentLifeTime = t.lifetime, this.receiveNodeParticleListIndex.push(o));
                        let n = cc.v2(t.gravityXY.x * e, t.gravityXY.y * e);
                        if (t.currentGrivate = cc.v2(t.currentGrivate.x + n.x, t.currentGrivate.y + n.y), t.node.setPosition(cc.v2(t.node.getPosition().x + t.currentGrivate.x * e, t.node.getPosition().y + t.currentGrivate.y * e)), t.beginScale != t.endScale) {
                            let e = t.currentLifeTime / t.lifetime,
                                o = (t.endScale - t.beginScale) * e + t.beginScale;
                            t.node.scale = o
                        }
                    }), this.receiveNodeParticleListIndex.length > 0) {
                    for (let e = this.receiveNodeParticleListIndex.length - 1; e >= 0; e--) {
                        const t = this.receiveNodeParticleListIndex[e];
                        this.spawnpool.Despawn(this.nodeParticleList[t].node), this.nodeParticleList.splice(t, 1)
                    }
                    this.receiveNodeParticleListIndex = []
                }
            }
        };
        n([r({
            type: cc.Prefab,
            displayName: "\u8868\u6f14\u7269\u4ef6"
        })], a.prototype, "targetNode", void 0), n([r({
            displayName: "\u96a8\u6a5f\u96a8\u8f49\u89d2\u5ea6"
        })], a.prototype, "randomRotation", void 0), n([r({
            displayName: "\u958b\u555f\u7269\u4ef6\u6642\u64ad\u653e"
        })], a.prototype, "enableToPlay", void 0), n([r({
            type: cc.Float,
            displayName: "\u8868\u6f14\u6301\u7e8c\u6642\u9593"
        })], a.prototype, "duration", void 0), n([r({
            type: cc.Float,
            displayName: "\u7c92\u5b50\u751f\u5b58\u6642\u9593"
        })], a.prototype, "lifetime", void 0), n([r({
            type: cc.Float,
            displayName: "\u7c92\u5b50\u751f\u5b58\u6642\u9593\u6d6e\u52d5\u503c",
            tooltip: "\u7c92\u5b50\u751f\u5b58\u6642\u9593 \xb1 \u7c92\u5b50\u751f\u5b58\u6642\u9593\u6d6e\u52d5\u503c"
        })], a.prototype, "lifetimeRandomRange", void 0), n([r({
            type: cc.Integer,
            displayName: "\u6bcf\u79d2\u767c\u5c04\u6578\u91cf"
        })], a.prototype, "emissionRate", void 0), n([r({
            displayName: "\u767c\u5c04\u7bc4\u570d"
        })], a.prototype, "emitArea", void 0), n([r({
            type: cc.Float,
            displayName: "\u79fb\u52d5\u901f\u5ea6"
        })], a.prototype, "speed", void 0), n([r({
            displayName: "\u767c\u5c04\u89d2\u5ea6"
        })], a.prototype, "angle", void 0), n([r({
            displayName: "\u767c\u5c04\u89d2\u5ea6\u6d6e\u52d5\u503c",
            tooltip: "\u767c\u5c04\u89d2\u5ea6 \xb1 \u767c\u5c04\u89d2\u5ea6\u6d6e\u52d5\u503c"
        })], a.prototype, "angleRandomRange", void 0), n([r({
            displayName: "\u91cd\u529b\u65b9\u5411"
        })], a.prototype, "gravityXY", void 0), n([r({
            displayName: "\u8d77\u59cbScale"
        })], a.prototype, "beginScale", void 0), n([r({
            displayName: "\u7d50\u675fScale"
        })], a.prototype, "endScale", void 0), a = n([s], a), o.NodeParticleSystem = a, cc._RF.pop()
    }, {
        "./SSSpawnPool": "SSSpawnPool"
    }],
    SSSpawnPool: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "860d7+uOzpF/5Hhx3raQmYb", "SSSpawnPool");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.SpawnPool = void 0;
        const {
            ccclass: i
        } = cc._decorator;
        let s = class extends cc.Component {
            constructor() {
                super(...arguments), this.stockpileObjAry = [], this.stockpileKindAry = [], this.spawnedAry = []
            }
            Spawn(e, t = null) {
                if (null == e) return cc.error("NodePool : spawnNode not Reference"), null;
                let o = this.stockpileKindAry.indexOf(e);
                o <= -1 && (this.stockpileKindAry.push(e), o = this.stockpileKindAry.length - 1);
                let n = null,
                    i = this.stockpileObjAry.findIndex(e => e.kind == this.stockpileKindAry[o]);
                i >= 0 ? (n = this.stockpileObjAry[i].node, this.stockpileObjAry.splice(i, 1)) : (n = cc.instantiate(e)).parent = cc.director.getScene(), null != t && (n.parent = t);
                let s = {
                    kind: this.stockpileKindAry[o],
                    node: n
                };
                return this.spawnedAry.push(s), n.active = !0, n
            }
            Despawn(e) {
                let t = this.spawnedAry.findIndex(t => t.node == e);
                if (t >= 0) {
                    e.active = !1;
                    let o = {
                        kind: this.spawnedAry[t].kind,
                        node: e
                    };
                    this.stockpileObjAry.push(o), this.spawnedAry.splice(t, 1)
                } else cc.log("_nodeIndex : " + t), cc.log("NodePool : This Node Not Can Despawn")
            }
            DespawnAll() {
                for (let e of this.spawnedAry) e.node.active = !1, this.stockpileObjAry.push(e);
                this.spawnedAry = []
            }
            IsSpawned(e) {
                return this.spawnedAry.findIndex(t => t.node == e) >= 0
            }
        };
        s = n([i], s), o.SpawnPool = s, cc._RF.pop()
    }, {}],
    SSStateMachine: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "0d345+xSplMQbx2UnkYeJep", "SSStateMachine"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.default = class {
            constructor(e) {
                this.currentState = null, this.owner = e
            }
            SMUpdate() {
                null != this.currentState && this.currentState.Update()
            }
            CurrentState() {
                return this.currentState
            }
            SetCurrentState(e) {
                null != this.currentState && this.currentState.PostUpdate(), this.currentState = e, this.currentState.target = this.owner, this.currentState.PreUpdate()
            }
        }, cc._RF.pop()
    }, {}],
    ScreenShotTool: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "a8077iHzxdKeK3PDuQMXkYa", "ScreenShotTool");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.screenshot = o.downloadImg = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.root = "", this.hideNodeNames = [], this.hideNodes = []
            }
            onKeyDown(e) {
                if (80 == e.keyCode || 112 == e.keyCode) {
                    const e = [];
                    this.hideNodeNames.forEach(t => {
                        const o = cc.find(t);
                        o && e.push(o)
                    }), console.log("SSS nodes", e), e.forEach(e => {
                        e.opacity = 0
                    }), this.hideNodes.forEach(e => {
                        e.opacity = 0
                    });
                    const t = cc.find(this.root);
                    o.downloadImg(t), this.scheduleOnce(() => {
                        e.forEach(e => {
                            e.opacity = 255
                        }), this.hideNodes.forEach(e => {
                            e.opacity = 0
                        })
                    })
                }
                if (72 == e.keyCode || 104 == e.keyCode) {
                    const e = [];
                    this.hideNodeNames.forEach(t => {
                        const o = cc.find(t);
                        o && e.push(o)
                    }), e.forEach(e => {
                        e.opacity = 0 == e.opacity ? 255 : 0
                    }), this.hideNodes.forEach(e => {
                        e.opacity = 0 == e.opacity ? 255 : 0
                    })
                }
            }
            onLoad() {
                cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this)
            }
        };
        n([s(cc.String)], r.prototype, "root", void 0), n([s([cc.String])], r.prototype, "hideNodeNames", void 0), n([s([cc.Node])], r.prototype, "hideNodes", void 0), r = n([i], r), o.default = r, o.downloadImg = e => {
            const t = o.screenshot(e);
            let n = document.createElement("a");
            n.href = t, n.download = `${Date.now()}.png`, n.click()
        }, o.screenshot = e => {
            let t = new cc.Node;
            t.parent = cc.find("Canvas");
            let o = t.addComponent(cc.Camera),
                n = e.getPosition(),
                i = Math.floor(e.width),
                s = Math.floor(e.height);
            o.alignWithScreen = !1, o.ortho = !0, o.orthoSize = s / 2;
            let r = new cc.RenderTexture;
            r.initWithSize(i, s, cc.game._renderContext.STENCIL_INDEX8), o.targetTexture = r, e.setPosition(cc.Vec2.ZERO), o.render(e), e.setPosition(n);
            let a = r.readPixels(),
                l = document.createElement("canvas");
            l.width = i, l.height = s;
            let c = l.getContext("2d"),
                h = 4 * i;
            for (let u = 0; u < s; u++) {
                let e = s - 1 - u,
                    t = c.createImageData(i, 1),
                    o = e * i * 4;
                for (let n = 0; n < h; n++) t.data[n] = a[o + n];
                c.putImageData(t, 0, u)
            }
            let m = l.toDataURL("image/jpeg");
            return t.destroy(), m
        }, cc._RF.pop()
    }, {}],
    ScrollList: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "5d6d7nAGJJLU664Um7MeW+T", "ScrollList");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const s = e("../../Helper/EventSystem"),
            r = e("../ComponentPool"),
            a = e("../../FullScreenHandler"),
            l = e("./ScrollObject"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        class m {
            constructor(e) {
                this.node = null, this.object = null, this.node = e
            }
        }
        let u = class extends cc.Component {
            constructor() {
                super(...arguments), this.scrollView = null, this.layout = null, this.prefab = null, this.elements = [], this.datas = [], this.pool = new r.ComponentPool, this.script = "ScrollList", this.offset = new cc.Vec2(0, 1), this.element = null, this.orientation = a.Orientation.Landscape
            }
            onLoad() {
                var e, t, o, n, i, r;
                this.pool.Init(this.prefab, this.scrollView.content, e => e.getComponent(l.default), e => {
                    e.Init()
                }, e => {
                    e.active = !1
                }), this.layout.enabled = !1;
                let a = new cc.Component.EventHandler;
                a.component = this.script, a.handler = "OnScroll", a.target = this.node, this.scrollView.scrollEvents.push(a), this.element = this.prefab.data.getComponent(l.default), null === (o = null === (t = null === (e = this.scrollView) || void 0 === e ? void 0 : e.verticalScrollBar) || void 0 === t ? void 0 : t.node) || void 0 === o || o.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchBar_V, this, !1), null === (r = null === (i = null === (n = this.scrollView) || void 0 === n ? void 0 : n.horizontalScrollBar) || void 0 === i ? void 0 : i.node) || void 0 === r || r.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchBar_H, this, !1), s.EventSystem.Event(s.ScreenOrientationState.ChangeOrientation).Insert(this.OnOrientationChange, this)
            }
            onDestroy() {
                var e, t, o, n, i, r;
                null === (o = null === (t = null === (e = this.scrollView) || void 0 === e ? void 0 : e.verticalScrollBar) || void 0 === t ? void 0 : t.node) || void 0 === o || o.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchBar_V, this, !1), null === (r = null === (i = null === (n = this.scrollView) || void 0 === n ? void 0 : n.horizontalScrollBar) || void 0 === i ? void 0 : i.node) || void 0 === r || r.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchBar_H, this, !1), this.pool = null, s.EventSystem.Event(s.ScreenOrientationState.ChangeOrientation).Remove(this.OnOrientationChange, this)
            }
            onEnable() {
                this.OnOrientationChange(this.orientation)
            }
            onTouchBar_V(e) {
                const t = this.scrollView.verticalScrollBar.node;
                if (t && e.touch) {
                    const o = (e.touch.getLocationY() - t.convertToWorldSpaceAR(cc.Vec3.ZERO).y + .5 * t.height) / t.height;
                    this.scrollView.scrollToPercentVertical(o)
                }
            }
            onTouchBar_H(e) {
                const t = this.scrollView.horizontalScrollBar.node;
                if (t && e.touch) {
                    const o = (e.touch.getLocationX() - t.convertToWorldSpaceAR(cc.Vec3.ZERO).x + .5 * t.width) / t.width;
                    this.scrollView.scrollToPercentHorizontal(o)
                }
            }
            SetData(e) {
                e && 0 != Object.keys(e).length && (this.datas = this.Sort(e).slice(), this.UpdateLayout(), this.UpdateShowBox())
            }
            OnScroll(e) {
                this.offset = e.getScrollOffset(), this.UpdateShowBox()
            }
            OnOrientationChange(e) {
                return i(this, void 0, void 0, function*() {
                    this.orientation = e, yield SS.Common.WaitForSeconds(0), this.UpdateLayout(), this.scrollView.scrollToOffset(new cc.Vec2(-this.offset.x, this.offset.y)), this.OnScroll(this.scrollView)
                })
            }
            UpdateLayout() {
                var e, t, o, n;
                if (!this.layout || !this.enabledInHierarchy) return;
                const i = this.datas.length > this.elements.length ? this.datas.length : this.elements.length,
                    {
                        width: s,
                        height: r
                    } = this.orientation === a.Orientation.Landscape ? this.element.sizeH : this.element.sizeV,
                    l = new cc.Vec3((.5 - this.layout.node.anchorX) * this.layout.node.width, (.5 - this.layout.node.anchorY) * this.layout.node.height, 0);
                for (let a = 0; a < i; ++a) {
                    if (a >= this.datas.length) {
                        const e = this.elements.pop();
                        e.node.destroy(), this.pool.Put([e.object]);
                        continue
                    }
                    if (a >= this.elements.length) {
                        const e = new m(new cc.Node);
                        e.node.parent = this.layout.node, this.elements.push(e)
                    }
                    const e = this.elements[a];
                    e.node.setContentSize(s, r), e.node.active = !0, e.node.name = a.toString(), this.layout.type === cc.Layout.Type.HORIZONTAL && (e.node.y = l.y), this.layout.type === cc.Layout.Type.VERTICAL && (e.node.x = l.x)
                }
                if (this.layout.enabled = !0, this.layout.updateLayout(), this.layout.enabled = !1, this.scrollView.content.setContentSize(this.layout.node.getContentSize()), !1 === (null === (t = null === (e = this.scrollView) || void 0 === e ? void 0 : e.verticalScrollBar) || void 0 === t ? void 0 : t.enableAutoHide)) {
                    const e = this.scrollView.node.height < this.scrollView.content.height;
                    this.scrollView.vertical = this.scrollView.verticalScrollBar.node.active = e
                }
                if (!1 === (null === (n = null === (o = this.scrollView) || void 0 === o ? void 0 : o.horizontalScrollBar) || void 0 === n ? void 0 : n.enableAutoHide)) {
                    const e = this.scrollView.node.width < this.scrollView.content.width;
                    this.scrollView.horizontal = this.scrollView.horizontalScrollBar.node.active = e
                }
            }
            UpdateShowBox() {
                const e = this.scrollView.node.getBoundingBox(),
                    t = [];
                this.elements.forEach((o, n) => {
                    const i = o.node.width,
                        s = o.node.height,
                        r = this.scrollView.node.parent.convertToNodeSpaceAR(o.node.convertToWorldSpaceAR(new cc.Vec2(-o.node.anchorX * i, -o.node.anchorY * s))),
                        a = new cc.Rect(r.x, r.y, i, s);
                    if (o.node.active = e.intersects(a), o.node.active) {
                        if (!o.object) {
                            const e = this.pool.Get();
                            o.object = e, e.active = !0
                        }
                        const e = o.object,
                            t = this.datas[n],
                            i = o.node.convertToWorldSpaceAR(new cc.Vec3(0, 0));
                        e.node.setPosition(this.scrollView.content.convertToNodeSpaceAR(i)), e.Sync(), e.orientation = this.orientation, e.data = t
                    } else if (o.object) {
                        const e = o.object;
                        o.object = null, t.push(e)
                    }
                }), this.pool.Put(t)
            }
            Sort(e) {
                return e
            }
        };
        n([h({
            type: cc.ScrollView,
            displayName: "ScrollView"
        })], u.prototype, "scrollView", void 0), n([h({
            type: cc.Layout,
            displayName: "Layout"
        })], u.prototype, "layout", void 0), n([h({
            type: cc.Prefab,
            displayName: "Prefab"
        })], u.prototype, "prefab", void 0), u = n([c], u), o.default = u, cc._RF.pop()
    }, {
        "../../FullScreenHandler": "FullScreenHandler",
        "../../Helper/EventSystem": "EventSystem",
        "../ComponentPool": "ComponentPool",
        "./ScrollObject": "ScrollObject"
    }],
    ScrollObject: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "6a8a2d5sMlGs47jrpSm/U/s", "ScrollObject");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.Unit = o.UnitSetting = o.UnitType = void 0;
        const i = e("../../FullScreenHandler"),
            s = e("../../Helper/EventSystem"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        var l;
        (function(e) {
            e[e.Label = 0] = "Label", e[e.Sprite = 1] = "Sprite", e[e.Node = 2] = "Node"
        })(l = o.UnitType || (o.UnitType = {}));
        let c = class {
            constructor() {
                this.position = cc.Vec3.ZERO, this.scale = cc.v2(1, 1), this.size = new cc.Size(0, 0)
            }
            toJSON() {
                let e = JSON.parse("{}");
                return e.position = this.position, e.scale = this.scale, e.size = this.size, e
            }
            toSetting(e) {
                this.position = new cc.Vec3(e.position.x, e.position.y, e.position.z), this.scale = new cc.Vec2(e.scale.x, e.scale.y), this.size = new cc.Size(e.size.width, e.size.height)
            }
        };
        n([a({
            displayName: "Position"
        })], c.prototype, "position", void 0), n([a({
            displayName: "Scale"
        })], c.prototype, "scale", void 0), n([a({
            displayName: "Size"
        })], c.prototype, "size", void 0), c = n([r("UnitSetting")], c), o.UnitSetting = c;
        let h = class {
            constructor() {
                this.type = l.Label, this.label = null, this.sprite = null, this.object = null, this.settingV = new c, this.settingH = new c, this._rootPosition = cc.Vec3.ZERO, this._orientation = i.Orientation.Landscape
            }
            set syncV(e) {
                if (!0 === e && this.node) {
                    try {
                        this.settingV.position = this.node.position, this.settingV.scale = new cc.Vec2(this.node.scaleX, this.node.scaleY), this.settingV.size = this.node.getContentSize()
                    } catch (t) {
                        Editor.error(t)
                    }
                    Editor.log(this.node.name + " Synced")
                }
            }
            get syncV() {
                return !1
            }
            set syncH(e) {
                if (!0 === e) {
                    try {
                        this.settingH.position = this.node.position, this.settingH.scale = new cc.Vec2(this.node.scaleX, this.node.scaleY), this.settingH.size = this.node.getContentSize()
                    } catch (t) {
                        Editor.error(t)
                    }
                    Editor.log(this.node.name + " Synced")
                }
            }
            get syncH() {
                return !1
            }
            toH() {
                this.node.position = this.settingH.position, this.node.scaleX = this.settingH.scale.x, this.node.scaleY = this.settingH.scale.y, this.node.setContentSize(this.settingH.size)
            }
            toV() {
                this.node.position = this.settingV.position, this.node.scaleX = this.settingV.scale.x, this.node.scaleY = this.settingV.scale.y, this.node.setContentSize(this.settingV.size)
            }
            toJSON() {
                let e = JSON.parse("{}");
                return e.settingH = this.settingH.toJSON(), e.settingV = this.settingV.toJSON(), e
            }
            toSetting(e) {
                this.settingH.toSetting(e.settingH), this.settingV.toSetting(e.settingV)
            }
            Init(e) {
                return this.type = e, this
            }
            set position(e) {
                this._rootPosition = e.clone();
                const t = this.setting.position;
                this.node.position = this.node.parent.convertToNodeSpaceAR(e).add(t)
            }
            set orientation(e) {
                this._orientation = e, this.node && (this.position = this._rootPosition, this.node.scaleX = this.setting.scale.x, this.node.scaleY = this.setting.scale.y, this.node.setContentSize(this.setting.size))
            }
            get setting() {
                return this._orientation === i.Orientation.Portrait ? this.settingV : this.settingH
            }
            get node() {
                var e, t;
                let o = null;
                switch (this.type) {
                    case l.Label:
                        o = null === (e = this.label) || void 0 === e ? void 0 : e.node;
                        break;
                    case l.Sprite:
                        o = null === (t = this.sprite) || void 0 === t ? void 0 : t.node;
                        break;
                    case l.Node:
                        o = this.object;
                        break;
                    default:
                        o = null
                }
                return o
            }
            set content(e) {
                try {
                    switch (this.type) {
                        case l.Label:
                            this.label.string = e;
                            break;
                        case l.Sprite:
                            this.sprite.spriteFrame = e
                    }
                } catch (t) {
                    console.warn("[ScrollItem] Set " + this.node.name + " content Failed\n", t)
                }
            }
            set active(e) {
                this.node && (this.node.active = e)
            }
        };
        n([a({
            type: cc.Enum(l),
            displayName: "\u7269\u4ef6\u7a2e\u985e"
        })], h.prototype, "type", void 0), n([a({
            type: cc.Label,
            displayName: "\u7269\u4ef6 Label",
            visible: function() {
                return this.type === l.Label
            }
        })], h.prototype, "label", void 0), n([a({
            type: cc.Sprite,
            displayName: "\u7269\u4ef6 Sprite",
            visible: function() {
                return this.type === l.Sprite
            }
        })], h.prototype, "sprite", void 0), n([a({
            type: cc.Node,
            displayName: "\u7269\u4ef6 Node",
            visible: function() {
                return this.type === l.Node
            }
        })], h.prototype, "object", void 0), n([a({
            type: c,
            displayName: "\u76f4\u7248\u7684\u4f4d\u7f6e"
        })], h.prototype, "settingV", void 0), n([a({
            displayName: "\u7d00\u9304\u76f4\u7248\u4f4d\u7f6e"
        })], h.prototype, "syncV", null), n([a({
            type: c,
            displayName: "\u6a6b\u7248\u7684\u4f4d\u7f6e"
        })], h.prototype, "settingH", void 0), n([a({
            displayName: "\u7d00\u9304\u6a6b\u7248\u4f4d\u7f6e"
        })], h.prototype, "syncH", null), h = n([r("Unit")], h), o.Unit = h;
        let m = class extends cc.Component {
            constructor() {
                super(...arguments), this.sizeH = new cc.Size(0, 0), this.sizeV = new cc.Size(0, 0), this.nowOrientation = i.Orientation.Landscape, this.units = []
            }
            set toH(e) {
                this.UnitForEach(e => {
                    e.toH()
                }), this.node.setContentSize(this.sizeH), this.nowOrientation = i.Orientation.Landscape
            }
            get toH() {
                return !1
            }
            set toV(e) {
                this.UnitForEach(e => {
                    e.toV()
                }), this.node.setContentSize(this.sizeV), this.nowOrientation = i.Orientation.Portrait
            }
            get toV() {
                return !1
            }
            set sync(e) {
                if (!0 === e && this.node) {
                    try {
                        this.UnitForEach(t => {
                            this.nowOrientation === i.Orientation.Portrait ? t.syncV = e : this.nowOrientation === i.Orientation.Landscape && (t.syncH = e)
                        })
                    } catch (t) {
                        Editor.error(t)
                    }
                    Editor.log("Recorded!")
                }
            }
            get sync() {
                return !1
            }
            UnitForEach(e) {
                Editor.warn("Please Implement Your Own UnitForEach First!"), this.units.forEach(e)
            }
            onEnable() {
                this.Sync()
            }
            get orientation() {
                return s.EventSystem.Function(s.ScreenOrientationState.GetOrientation)()
            }
            set orientation(e) {
                this.node.setContentSize(e === i.Orientation.Landscape ? this.sizeH : this.sizeV), this.units.forEach(t => {
                    t.orientation = e
                })
            }
            set active(e) {
                this.units.forEach(t => {
                    t.active = e
                }), this.node.active = e
            }
            Sync() {
                const e = this.node.convertToWorldSpaceAR(cc.Vec3.ZERO);
                this.units.forEach(t => {
                    t.position = e
                })
            }
            Init() {}
            set data(e) {}
        };
        n([a({
            displayName: "\u6a6b\u7248 Size"
        })], m.prototype, "sizeH", void 0), n([a({
            displayName: "\u76f4\u7248 Size"
        })], m.prototype, "sizeV", void 0), n([a({
            displayName: "\u6a6b\u7248\u986f\u793a"
        })], m.prototype, "toH", null), n([a({
            displayName: "\u76f4\u7248\u986f\u793a"
        })], m.prototype, "toV", null), n([a({
            type: cc.Enum(i.Orientation),
            displayName: "\u76ee\u524d\u662f\u54ea\u7a2e\u986f\u793a"
        })], m.prototype, "nowOrientation", void 0), n([a({
            displayName: "\u7d00\u9304\u4f4d\u7f6e"
        })], m.prototype, "sync", null), m = n([r], m), o.default = m, cc._RF.pop()
    }, {
        "../../FullScreenHandler": "FullScreenHandler",
        "../../Helper/EventSystem": "EventSystem"
    }],
    ScrollviewWindow: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "e65f0lQid1B8b15agkgAIQB", "ScrollviewWindow");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.ScrollviewWindow = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_ScrollView = null, this.m_Mask = null, this.m_nodeMask = null
            }
            onLoad() {
                this.m_nodeMask = this.m_Mask.node
            }
            update() {
                this.m_ScrollView.isScrolling && this.m_ScrollView.content.children.forEach(e => {
                    let t = this.m_nodeMask.convertToNodeSpaceAR(e.convertToWorldSpaceAR(cc.Vec2.ZERO)),
                        o = this.m_nodeMask.width + e.width > 2 * Math.abs(t.x) && this.m_nodeMask.height + e.height > 2 * Math.abs(t.y);
                    e.opacity = o ? 255 : 0
                })
            }
        };
        n([s(cc.ScrollView)], r.prototype, "m_ScrollView", void 0), n([s(cc.Mask)], r.prototype, "m_Mask", void 0), r = n([i], r), o.ScrollviewWindow = r, cc._RF.pop()
    }, {}],
    SelfDestroy: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "69679/wuZFL6LoWStAsD0En", "SelfDestroy");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.SelfDestroy = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_fSec = 0
            }
            start() {
                let e = cc.delayTime(this.m_fSec),
                    t = cc.callFunc(this.selfDestroy.bind(this)),
                    o = cc.sequence(e, t);
                this.node.runAction(o)
            }
            selfDestroy() {
                this.node.destroyAllChildren(), this.node.destroy()
            }
        };
        n([s(cc.Float)], r.prototype, "m_fSec", void 0), r = n([i], r), o.SelfDestroy = r, cc._RF.pop()
    }, {}],
    SessionDataCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "99ad9rSYRxLp71Wb22rjMCJ", "SessionDataCtrl");
        var n, i = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.SessionDataCtrl = o.TakeRewardData = o.SessionBonusData = o.RewardData = o.SessionBonusStatus = o.SessionBonusType = void 0;
        const s = e("../../../Helper/EventSystem"),
            r = e("../../../Net/Downloader/JSONDownloder"),
            a = e("../../../Net/LobbyClient"),
            l = e("../../../PopupMessage/Script/PopupMsgMgr"),
            {
                ccclass: c,
                property: h
            } = cc._decorator;
        var m;
        (o.SessionBonusType || (o.SessionBonusType = {})).Daily = "Daily",
            function(e) {
                e.Init = "Init", e.Ready = "Ready", e.Take = "Take"
            }(m = o.SessionBonusStatus || (o.SessionBonusStatus = {}));
        class u {
            Reset() {
                this.Status = null, this.ItemType = null, this.ItemID = null, this.Amount = null, this.Interval = null
            }
        }
        o.RewardData = u;
        class d {
            constructor() {
                this.Session = null, this.CurrLevel = null, this.StartTimeTs = null, this.EndTimeTs = null, this.NextLevelTs = null, this.BonusID = null, this.Layout = null, this.BonusType = null, this.Data = []
            }
            Reset() {
                this.Session = null, this.CurrLevel = null, this.StartTimeTs = null, this.EndTimeTs = null, this.NextLevelTs = null, this.BonusID = null, this.Layout = null, this.BonusType = null, this.Data && this.Data.forEach(e => {
                    e.Reset(), e = null
                }), this.Data = []
            }
        }
        o.SessionBonusData = d;
        class p {
            constructor() {
                this.Code = null, this.Level = null, this.ItemType = null, this.ItemID = null, this.Amount = null, this.Diamond = null, this.Entries = null, this.Winning = null, this.FishItemBeckon = null, this.FishItemIce = null
            }
            Reset() {
                this.Code = null, this.Level = null, this.ItemType = null, this.ItemID = null, this.Amount = null, this.Diamond = null, this.Entries = null, this.Winning = null, this.FishItemBeckon = null, this.FishItemIce = null
            }
        }
        o.TakeRewardData = p;
        let g = n = class {
            constructor() {
                this.IsUseFakeData = !1, this.SessionBonusData = [], this.TakeRewardData = [], this.SendingTakeRewardLevel = null, this.SettingJSAry = null, this.TimeStampGetSessionInfo = 0
            }
            static get Instance() {
                return this.instance ? this.instance : (this.instance = new n, this.instance)
            }
            Init() {
                this.RowData = null, this.SessionBonusData = [], this.TakeRewardData = [], this.SendingTakeRewardLevel = null, this.GetAvatarItemSetting(), this.TimeStampGetSessionInfo = 0
            }
            Release() {
                this.RowData = null, this.SessionBonusData && this.SessionBonusData.forEach(e => {
                    e.Reset(), e = null
                }), this.SessionBonusData = null, this.TakeRewardData && this.TakeRewardData.forEach(e => {
                    e.Reset(), e = null
                }), this.TakeRewardData = null
            }
            GetAvatarItemSetting() {
                (new r.JSONDownloader).Start(SS.Common.GameEnvironment.S3URL + "/Data/AvatarItemSetting.json", this.OnGetAvatarItemSetting.bind(this), () => {})
            }
            OnGetAvatarItemSetting(e) {
                this.SettingJSAry = e
            }
            GetSessionBonusInfo() {
                this.TimeStampGetSessionInfo = Date.now() / 1e3, this.IsUseFakeData ? this.onRecvSessionBonus(0, this.FakeDataGetInfo()) : a.LobbyClient.Instance.GetUserClient.getSessionBonusInfo(null, this.onRecvSessionBonus.bind(this))
            }
            CheckRefreshSessionBonusInfo() {
                let e = Date.now() / 1e3;
                this.TimeStampGetSessionInfo + 60 < e && (cc.log("[SessionBonus] Refresh SessionBonusInfo (send GET_INFO)."), this.SessionBonusData.forEach(e => e.Session = null), this.GetSessionBonusInfo())
            }
            FakeDataGetInfo() {
                let e = JSON.parse('{"cmd_data":{"Bonus": [{         "Status": ["Ready", "Ready", "Init", "Init", "Init", "Init", "Init"],         "Count": 0, "StartTimeTs": 1670290000, "EndTimeTs": 1670400000, "CurrLevel": 2,         "Level": [        { "CountGate": 1, "Reward": [{ "ItemType": "Assets", "ItemId": "Entries", "Amount": 500    }] },         { "CountGate": 1, "Reward": [{ "ItemType": "Assets", "ItemId": "Entries", "Amount": 100     }], "Interval": { "Day": 1 } },         { "CountGate": 1, "Reward": [{ "ItemType": "Avatar", "ItemId": "FAC034",  "Amount": 1       }], "Interval": { "Day": 1 } },         { "CountGate": 1, "Reward": [{ "ItemType": "Avatar", "ItemId": "FRM022",  "Amount": 1       }], "Interval": { "Day": 3 } },         { "CountGate": 1, "Reward": [{ "ItemType": "FishItem", "ItemId": "MF100001", "Amount": 2     }]  },         { "CountGate": 1, "Reward": [{ "ItemType": "FishItem", "ItemId": "MF100002", "Amount": 3     }], "Interval": {  }},         { "CountGate": 1, "Reward": [{ "ItemType": "Assets", "ItemId": "Entries", "Amount": 2000     }], "Interval": { "Day": 1 } }],         "BonusType": "Daily", "BonusId": "7DayBonus_0", "Layout": "7Day",         "Session": 1666137600, "NextLevelTs": 1667520000 }], "Code": 0 }}');
                return cc.error("[step] FakeDataGetInfo ", e), e
            }
            onRecvSessionBonus(e, t) {
                if (cc.log("[step] onRecvSessionBonus status = ", e, " result = ", JSON.stringify(t)), e == ArkSDK.HttpResult.OK) {
                    if (t.hasOwnProperty("cmd_data")) {
                        if (this.RowData = t.cmd_data, this.RowData.hasOwnProperty("Code") && this.RowData.Code < 0) return void this.ShowError("S414", this.RowData.Code);
                        if (this.RowData.hasOwnProperty("Bonus") && this.RowData.Bonus.length > 0) {
                            let e = this.RowData.Bonus;
                            this.SessionBonusData && (this.SessionBonusData = []);
                            for (let t = 0; t < e.length; t++) {
                                let o = e[t];
                                if (this.SessionBonusData[t] = new d, this.SessionBonusData[t].Reset(), o.hasOwnProperty("StartTimeTs") && (this.SessionBonusData[t].StartTimeTs = o.StartTimeTs), o.hasOwnProperty("EndTimeTs") && (this.SessionBonusData[t].EndTimeTs = o.EndTimeTs), o.hasOwnProperty("CurrLevel") && (this.SessionBonusData[t].CurrLevel = o.CurrLevel), o.hasOwnProperty("Session") && (this.SessionBonusData[t].Session = o.Session), o.hasOwnProperty("BonusType") && (this.SessionBonusData[t].BonusType = o.BonusType), o.hasOwnProperty("BonusId") && (this.SessionBonusData[t].BonusID = o.BonusId), o.hasOwnProperty("Layout") && (this.SessionBonusData[t].Layout = o.Layout), o.hasOwnProperty("Status")) {
                                    let e = o.Status;
                                    for (let o = 0; o < e.length; o++) {
                                        let n = new u;
                                        n.Status = e[o], this.SessionBonusData[t].Data.push(n)
                                    }
                                }
                                if (o.hasOwnProperty("Level")) {
                                    let e = o.Level;
                                    for (let o = 0; o < e.length; o++)
                                        if (null != this.SessionBonusData[t].Data[o]) {
                                            if (e[o].hasOwnProperty("Reward")) {
                                                let n = e[o].Reward;
                                                n.length > 0 && (n[0].hasOwnProperty("ItemType") && (this.SessionBonusData[t].Data[o].ItemType = n[0].ItemType), n[0].hasOwnProperty("ItemId") && (this.SessionBonusData[t].Data[o].ItemID = n[0].ItemId), n[0].hasOwnProperty("Amount") && (this.SessionBonusData[t].Data[o].Amount = n[0].Amount))
                                            }
                                            if (e[o].hasOwnProperty("Interval")) {
                                                let n = e[o].Interval;
                                                n.hasOwnProperty("Day") ? this.SessionBonusData[t].Data[o].Interval = n.Day + "Day" : n.hasOwnProperty("Week") ? this.SessionBonusData[t].Data[o].Interval = n.Week + "Week" : n.hasOwnProperty("Hour") ? this.SessionBonusData[t].Data[o].Interval = n.Hour + "Hour" : n.hasOwnProperty("Month") ? this.SessionBonusData[t].Data[o].Interval = n.Month + "Month" : n.hasOwnProperty("Min") && (this.SessionBonusData[t].Data[o].Interval = n.Min + "Minute"), parseInt(this.SessionBonusData[t].Data[o].Interval) > 1 && (this.SessionBonusData[t].Data[o].Interval += "s")
                                            }
                                        }
                                }
                            }
                        }
                    }
                } else this.ShowError("S413", e)
            }
            SendTakeReward(e, t) {
                let o = this.GetBonusID(e),
                    n = this.GetSession(e);
                this.SendingTakeRewardLevel = this.GetLevelByDay(t), this.IsUseFakeData ? this.onRecvTakeReward(0, this.FakeDataTakeReward(this.SendingTakeRewardLevel)) : a.LobbyClient.Instance.GetUserClient.sendSessionBonusTakeReward(o, n, this.SendingTakeRewardLevel, this.onRecvTakeReward.bind(this))
            }
            FakeDataTakeReward(e) {
                let t = ['{"cmd_data":{"Code":0,"Data":[{"ItemType":"Assets","ItemId":"Entries","Amount":500   }],"Asset":{"Entries":87001}}}', '{"cmd_data":{"Code":0,"Data":[{"ItemType":"Assets","ItemId":"Entries","Amount":100   }],"Asset":{"Entries":87002}}}', '{"cmd_data":{"Code":0,"Data":[{"ItemType":"Avatar","ItemId":"FAC034","Amount":1      }],"Asset":{"Entries":87002}}}', '{"cmd_data":{"Code":0,"Data":[{"ItemType":"Avatar","ItemId":"FRM022","Amount":1      }],"Asset":{"Entries":87002}}}', '{"cmd_data":{"Code":0,"Data":[{"ItemType":"FishItem","ItemId":"MF100001","Amount":2  }],"Asset":{"MF100001":209}}}', '{"cmd_data":{"Code":0,"Data":[{"ItemType":"FishItem","ItemId":"MF100002","Amount":3  }],"Asset":{"MF100002":5}}}', '{"cmd_data":{"Code":0,"Data":[{"ItemType":"Assets","ItemId":"Entries","Amount":2000  }],"Asset":{"Entries":87003}}}'],
                    o = null;
                return t.length > e && (o = JSON.parse(t[e])), o
            }
            onRecvTakeReward(e, t) {
                if (cc.log("[step] onRecvTakeReward , ", JSON.stringify(t)), e != ArkSDK.HttpResult.OK) return void this.ShowError("S415", e);
                let o = 0,
                    n = 0,
                    i = 0,
                    r = "",
                    a = "",
                    c = 0,
                    h = 0,
                    m = 0,
                    u = 0;
                if (t.hasOwnProperty("cmd_data")) {
                    if (t.cmd_data.hasOwnProperty("Asset") && (t.cmd_data.Asset.hasOwnProperty("Entries") && (o = t.cmd_data.Asset.Entries), t.cmd_data.Asset.hasOwnProperty("Winning") && (n = t.cmd_data.Asset.Winning), t.cmd_data.Asset.hasOwnProperty("Diamond") && (i = t.cmd_data.Asset.Diamond), t.cmd_data.Asset.hasOwnProperty("MF100002") && (m = t.cmd_data.Asset.MF100002), t.cmd_data.Asset.hasOwnProperty("MF100001") && (u = t.cmd_data.Asset.MF100001)), t.cmd_data.hasOwnProperty("Data") && t.cmd_data.Data.length > 0) {
                        let e = t.cmd_data.Data[0];
                        e.hasOwnProperty("ItemType") && (r = e.ItemType), e.hasOwnProperty("ItemId") && (a = e.ItemId), e.hasOwnProperty("Amount") && (c = e.Amount)
                    }
                    if (t.cmd_data.hasOwnProperty("Code") && (h = t.cmd_data.Code) < 0) return void this.ShowError("S416", h, -10 == h ? l.PopupPriority.Info : l.PopupPriority.Critical)
                }
                cc.log("[step] onRecvTakeReward , ", e, h, r, a, c, i, o, n, JSON.stringify(t));
                let d = new p;
                d.Level = this.SendingTakeRewardLevel, d.Code = h, d.ItemType = r, d.ItemID = a, d.Amount = c, d.Diamond = i, d.Entries = o, d.Winning = n, d.FishItemBeckon = m, d.FishItemIce = u, this.TakeRewardData.push(d), 0 != d.Code && cc.error("[step] onRecvTakeReward Error, ", e, h, JSON.stringify(t)), s.EventSystem.Event(s.SessionEvent.OnRecvTakeReward).Length > 0 && s.EventSystem.Event(s.SessionEvent.OnRecvTakeReward).Notify(d.Code), d = null
            }
            ShowError(e, t, o = l.PopupPriority.Critical) {
                let n = "ERROR Status:" + e,
                    i = e + "(" + t.toString() + ")";
                console.error("[SesionBonu] ERROR!" + e + " ; reason: " + n), l.PopupMsgMgr.Instance.ShowPopMsg(o, i, "Lobby", n)
            }
            GetSessionBonusDataIndex(e) {
                let t = null;
                for (let o = 0; o < this.SessionBonusData.length; o++)
                    if (-1 != this.SessionBonusData[o].Layout.indexOf(e)) {
                        t = o;
                        break
                    }
                return t
            }
            IsSessionInProgressNow(e) {
                let t = !1,
                    o = this.GetStartTime(e),
                    n = this.GetEndTime(e);
                return this.IsDuringTheTime(o, n) && (t = !0), t
            }
            IsDuringTheTime(e, t) {
                let o = !1,
                    n = Date.now() / 1e3;
                return e < n && n < t && (o = !0), o
            }
            GetSessionBonusList() {
                return this.RowData.Bonus
            }
            GetBonusType(e) {
                let t = "",
                    o = this.GetSessionBonusDataIndex(e);
                return null != o && (t = this.SessionBonusData[o].BonusType), t
            }
            GetBonusID(e) {
                let t = "",
                    o = this.GetSessionBonusDataIndex(e);
                return null != o && (t = this.SessionBonusData[o].BonusID), t
            }
            GetLayout(e) {
                let t = "",
                    o = this.GetSessionBonusDataIndex(e);
                return null != o && (t = this.SessionBonusData[o].Layout), t
            }
            GetSession(e) {
                let t = 0,
                    o = this.GetSessionBonusDataIndex(e);
                return null != o && (t = this.SessionBonusData[o].Session), t
            }
            GetCurrLevel(e) {
                let t = 0,
                    o = this.GetSessionBonusDataIndex(e);
                return null != o && (t = this.SessionBonusData[o].CurrLevel), t
            }
            GetLevelByDay(e) {
                let t = -1;
                switch (e) {
                    case "Day1":
                        t = 0;
                        break;
                    case "Day2":
                        t = 1;
                        break;
                    case "Day3":
                        t = 2;
                        break;
                    case "Day4":
                        t = 3;
                        break;
                    case "Day5":
                        t = 4;
                        break;
                    case "Day6":
                        t = 5;
                        break;
                    case "Day7":
                        t = 6
                }
                return t
            }
            GetDayByLevel(e) {
                let t = "";
                switch (e) {
                    case 0:
                        t = "Day1";
                        break;
                    case 1:
                        t = "Day2";
                        break;
                    case 2:
                        t = "Day3";
                        break;
                    case 3:
                        t = "Day4";
                        break;
                    case 4:
                        t = "Day5";
                        break;
                    case 5:
                        t = "Day6";
                        break;
                    case 6:
                        t = "Day7"
                }
                return t
            }
            GetStartTime(e) {
                let t = 0,
                    o = this.GetSessionBonusDataIndex(e);
                return null != o && (t = this.SessionBonusData[o].StartTimeTs), t
            }
            GetEndTime(e) {
                let t = 0,
                    o = this.GetSessionBonusDataIndex(e);
                return null != o && (t = this.SessionBonusData[o].EndTimeTs), t
            }
            GetNextLevelTime(e) {
                let t = 0,
                    o = this.GetSessionBonusDataIndex(e);
                return null != o && (t = this.SessionBonusData[o].NextLevelTs), t
            }
            GetLevelAmount(e, t) {
                let o = "",
                    n = this.GetSessionBonusDataIndex(e);
                if (null != n) {
                    if (t < 0 || t > this.SessionBonusData[n].Data.length) return cc.error("[step] SessionDataCtrl, level out of range."), "";
                    o = this.SessionBonusData[n].Data[t].Amount
                }
                return o
            }
            GetLevelInterval(e, t) {
                let o = "",
                    n = this.GetSessionBonusDataIndex(e);
                if (null != n) {
                    if (t < 0 || t > this.SessionBonusData[n].Data.length) return cc.error("[step] SessionDataCtrl, level out of range."), "";
                    o = this.SessionBonusData[n].Data[t].Interval
                }
                return o
            }
            GetLevelItemId(e, t) {
                let o = "",
                    n = this.GetSessionBonusDataIndex(e);
                if (null != n) {
                    if (t < 0 || t > this.SessionBonusData[n].Data.length) return cc.error("[step] SessionDataCtrl, level out of range."), "";
                    o = this.SessionBonusData[n].Data[t].ItemID
                }
                return o
            }
            GetLevelItemType(e, t) {
                let o = "",
                    n = this.GetSessionBonusDataIndex(e);
                if (null != n) {
                    if (t < 0 || t > this.SessionBonusData[n].Data.length) return cc.error("[step] SessionDataCtrl, level out of range."), "";
                    o = this.SessionBonusData[n].Data[t].ItemType
                }
                return o
            }
            GetItemSettingTimeLimit(e) {
                return this.GetAvatarItemSettingByKey(e, "time")
            }
            GetItemSettingKind(e) {
                return this.GetAvatarItemSettingByKey(e, "kind")
            }
            GetItemSettingType(e) {
                return this.GetAvatarItemSettingByKey(e, "type")
            }
            GetItemSettingName(e) {
                return this.GetAvatarItemSettingByKey(e, "get_info_1")
            }
            GetItemSettingDetail(e) {
                return this.GetAvatarItemSettingByKey(e, "get_info_2")
            }
            GetAvatarItemSettingByKey(e, t) {
                let o = null;
                if (null != this.SettingJSAry && this.SettingJSAry.length > 0)
                    for (let n = 0; n < this.SettingJSAry.length; n++) {
                        let i = this.SettingJSAry[n];
                        if (i.hasOwnProperty("id") && i.hasOwnProperty(t) && i.id == e) {
                            o = i[t];
                            break
                        }
                    }
                return o
            }
            IsAvatar(e) {
                let t = !1;
                return -1 == e.indexOf("FAC", 0) && -1 == e.indexOf("FRM", 0) || (t = !0), t
            }
            GetLevelStatus(e, t) {
                let o = "",
                    n = this.GetSessionBonusDataIndex(e);
                if (null != n) {
                    if (t < 0 || t > this.SessionBonusData[n].Data.length) return cc.error("[step] SessionDataCtrl, level out of range."), "";
                    o = this.SessionBonusData[n].Data[t].Status
                }
                return o
            }
            GetLevelDataLength(e) {
                let t = 0,
                    o = this.GetSessionBonusDataIndex(e);
                return null != o && (t = this.SessionBonusData[o].Data.length), t
            }
            CheckStatusReady(e) {
                let t = !1,
                    o = n.Instance.GetLevelDataLength(e);
                for (let n = 0; n < o; n++)
                    if (this.GetLevelStatus(e, n) == m.Ready) {
                        t = !0;
                        break
                    }
                return t
            }
            SortTakeRewardData() {
                this.TakeRewardData = this.TakeRewardData.sort((e, t) => e.Level > t.Level ? 1 : -1)
            }
            DecreaseTakeRewardData(e) {
                let t = this.GetSessionBonusDataIndex(e);
                if (this.TakeRewardData && this.TakeRewardData.length > 0 && null != t) {
                    let e = this.TakeRewardData[0].Level;
                    this.SessionBonusData[t].Data.length > e && (this.SessionBonusData[t].Data[e].Status = m.Take), this.TakeRewardData.splice(0, 1)
                }
            }
            GetCurrTakeRewardLevel() {
                return null != this.TakeRewardData && this.TakeRewardData.length > 0 ? this.TakeRewardData[0].Level : null
            }
            GetTakeRewardItemType() {
                return null != this.TakeRewardData && this.TakeRewardData.length > 0 ? this.TakeRewardData[0].ItemType : null
            }
            GetTakeRewardItemID() {
                return null != this.TakeRewardData && this.TakeRewardData.length > 0 ? this.TakeRewardData[0].ItemID : null
            }
            GetTakeRewardAmount() {
                return null != this.TakeRewardData && this.TakeRewardData.length > 0 ? this.TakeRewardData[0].Amount.toString() : null
            }
            GetTakeRewardDiamond() {
                return null != this.TakeRewardData && this.TakeRewardData.length > 0 ? this.TakeRewardData[0].Diamond : null
            }
            GetTakeRewardEntries() {
                return null != this.TakeRewardData && this.TakeRewardData.length > 0 ? this.TakeRewardData[0].Entries : null
            }
            GetTakeRewardWinning() {
                return null != this.TakeRewardData && this.TakeRewardData.length > 0 ? this.TakeRewardData[0].Winning : null
            }
            GetTakeRewardBeckonAmount() {
                return null != this.TakeRewardData && this.TakeRewardData.length > 0 ? this.TakeRewardData[0].FishItemBeckon : null
            }
            GetTakeRewardIceAmount() {
                return null != this.TakeRewardData && this.TakeRewardData.length > 0 ? this.TakeRewardData[0].FishItemIce : null
            }
        };
        g.instance = null, g = n = i([c], g), o.SessionDataCtrl = g, cc._RF.pop()
    }, {
        "../../../Helper/EventSystem": "EventSystem",
        "../../../Net/Downloader/JSONDownloder": "JSONDownloder",
        "../../../Net/LobbyClient": "LobbyClient",
        "../../../PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr"
    }],
    SessionIconArea: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "3f79dQ/wFdBq4b88xHK+1Uw", "SessionIconArea");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.SessionIconArea = o.SessionIconKind = void 0;
        const s = e("../../GameIconMgr/Script/IconScrollView"),
            r = e("./SessionIcon"),
            a = e("../../../LobbyCommon/EventModule/SessionBonus/Script/SessionDataCtrl"),
            {
                ccclass: l,
                property: c
            } = cc._decorator;
        let h = class {
            constructor() {
                this.layout = "", this.prefab = null
            }
        };
        var m;
        n([c()], h.prototype, "layout", void 0), n([c(cc.Prefab)], h.prototype, "prefab", void 0), h = n([l("SessionIconKind")], h), o.SessionIconKind = h,
            function(e) {
                e[e.JoinGameEvent = 0] = "JoinGameEvent", e[e.PlayGames = 1] = "PlayGames"
            }(m || (m = {}));
        let u = class extends cc.Component {
            constructor() {
                super(...arguments), this.iconLayoutRoot = null, this.iconScrollView = null, this.iconLayout = null, this.iconKind = [], this.pfbAreaLinePlayGames = null, this.pfbAreaLineJoinGameEvent = null, this.nodeAreaLine = null, this.nodeSessionIconList = []
            }
            start() {
                this.nodeSessionIconList = []
            }
            onDestroy() {
                this.nodeSessionIconList && this.nodeSessionIconList.forEach(e => {
                    e.parent = null, e = null
                }), this.nodeSessionIconList = null
            }
            SetSessionIconArea() {
                this.IsNeedToShow() && (this.AddSessionIcon(), this.AddAreaLine(m.PlayGames), this.nodeSessionIconList && this.iconScrollView.AddNodeList("ALL", this.nodeSessionIconList), "ALL" != SS.Common.GameEnvironment.CurrentGameTypeNow && this.iconScrollView.SetActive("ALL", !1))
            }
            IsNeedToShow() {
                let e = !1,
                    t = a.SessionDataCtrl.Instance.GetSessionBonusList();
                if (t)
                    for (let o = 0; o < t.length; o++)
                        if (t[o].hasOwnProperty("Layout") && a.SessionDataCtrl.Instance.IsSessionInProgressNow(t[o].Layout)) {
                            e = !0;
                            break
                        }
                return e
            }
            AddSessionIcon() {
                let e = a.SessionDataCtrl.Instance.GetSessionBonusList();
                if (e)
                    for (let t = 0; t < e.length; t++)
                        if (e[t].hasOwnProperty("Layout") && e[t].hasOwnProperty("EndTimeTs")) {
                            let o = e[t].BonusType,
                                n = e[t].Layout,
                                i = e[t].EndTimeTs,
                                s = this.iconKind.find(e => e.layout == n);
                            s && this.AddIcon(s.prefab, o, n, i)
                        }
            }
            AddAreaLine(e) {
                let t = null;
                switch (e) {
                    case m.JoinGameEvent:
                        t = this.pfbAreaLineJoinGameEvent;
                        break;
                    case m.PlayGames:
                        t = this.pfbAreaLinePlayGames
                }
                t && (this.nodeAreaLine = cc.instantiate(t), this.nodeAreaLine.parent = this.iconLayoutRoot, this.nodeSessionIconList.push(this.nodeAreaLine))
            }
            AddIcon(e, t, o, n) {
                let i = cc.instantiate(e);
                i.parent = this.iconLayoutRoot, this.nodeSessionIconList.push(i);
                let s = i.getComponent(r.SessionIcon);
                s && s.Init(t, o, n, this.OnEventTimesUp.bind(this))
            }
            OnEventTimesUp(e) {
                return i(this, void 0, void 0, function*() {
                    console.log("[SessionIconArea] OnEventTimesUp, eventName = " + e.name), this.iconLayout.enabled = !0, e.active = !1, this.iconScrollView.RemoveNode("ALL", e);
                    let t = 0;
                    this.nodeSessionIconList.forEach(e => {
                        1 == e.active && t++
                    }), 1 == t && (this.nodeAreaLine.active = !1, this.iconScrollView.RemoveNode("ALL", this.nodeAreaLine)), yield SS.Common.WaitForSeconds(.1), this.iconScrollView.onScrollingDrawCallOpt(), this.iconLayout.enabled = !1
                })
            }
        };
        n([c(cc.Node)], u.prototype, "iconLayoutRoot", void 0), n([c(s.IconScrollView)], u.prototype, "iconScrollView", void 0), n([c(cc.Layout)], u.prototype, "iconLayout", void 0), n([c([h])], u.prototype, "iconKind", void 0), n([c(cc.Prefab)], u.prototype, "pfbAreaLinePlayGames", void 0), n([c(cc.Prefab)], u.prototype, "pfbAreaLineJoinGameEvent", void 0), u = n([l], u), o.SessionIconArea = u, cc._RF.pop()
    }, {
        "../../../LobbyCommon/EventModule/SessionBonus/Script/SessionDataCtrl": "SessionDataCtrl",
        "../../GameIconMgr/Script/IconScrollView": "IconScrollView",
        "./SessionIcon": "SessionIcon"
    }],
    SessionIcon: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "054ffotNGBKAbodeF924u8R", "SessionIcon");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.SessionIcon = void 0;
        const s = e("../../../LobbyCommon/Helper/Download"),
            r = e("../../../LobbyCommon/Helper/EventSystem"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this.iconSprite = null, this.iconButton = null, this.loadingNode = null, this.bonusType = null, this.layout = null, this.leftTime = 0, this.loadingTween = null, this.timesUpCallback = null
            }
            Init(e, t, o, n) {
                this.bonusType = e, this.layout = t, this.leftTime = o, this.timesUpCallback = n, this.loadingTween = cc.tween(this.loadingNode.node).parallel(cc.tween().set({
                    rotation: 0
                }).to(1, {
                    rotation: 360
                }), cc.tween().to(.7, {
                    opacity: 150
                }).to(.3, {
                    opacity: 255
                })).repeatForever(), this.SetButtonActive(!1), this.DownloadSprite(), this.schedule(this.EventTimeCheck, 1, cc.macro.REPEAT_FOREVER)
            }
            onDestroy() {
                this.loadingTween = null, this.unschedule(this.EventTimeCheck)
            }
            onClick() {
                this.layout && r.EventSystem.Event(r.SessionEvent.ClickSessionIcon).Length > 0 && this.layout && r.EventSystem.Event(r.SessionEvent.ClickSessionIcon).Notify(this.layout)
            }
            SetSprite(e) {
                this.iconSprite.spriteFrame = e, this.loadingTween.stop(), this.loadingNode.node.active = !1, this.SetButtonActive(!0)
            }
            DownloadSprite() {
                return i(this, void 0, void 0, function*() {
                    this.loadingNode.node.active = !0, this.loadingTween.start();
                    let e = SS.Common.GameEnvironment.S3URL + "/Icons/SessionBonus/" + this.bonusType + "_" + this.layout + ".png",
                        t = yield s.Download.Image(e);
                    t && this.SetSprite(t)
                })
            }
            SetButtonActive(e) {
                this.iconButton && (this.iconButton.node.active = e)
            }
            EventTimeCheck() {
                if (this.leftTime > 0) {
                    let e = Date.now() / 1e3;
                    this.leftTime - e <= 0 && (this.unschedule(this.EventTimeCheck), null != this.timesUpCallback && this.timesUpCallback(this.node), r.EventSystem.Event(r.SessionEvent.OnTimesUp).Length > 0 && this.layout && r.EventSystem.Event(r.SessionEvent.OnTimesUp).Notify(this.layout))
                }
            }
        };
        n([l(cc.Sprite)], c.prototype, "iconSprite", void 0), n([l(cc.Button)], c.prototype, "iconButton", void 0), n([l(cc.Sprite)], c.prototype, "loadingNode", void 0), c = n([a], c), o.SessionIcon = c, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Helper/Download": "Download",
        "../../../LobbyCommon/Helper/EventSystem": "EventSystem"
    }],
    SetUseSprite: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "17d2bg33ixGzblbQKMa5qKN", "SetUseSprite");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.SetUseSprite = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_esSpriteFrame = null, this.m_enSpriteFrame = null
            }
            onLoad() {
                null != this.m_esSpriteFrame && null != this.m_enSpriteFrame && (this.getComponent(cc.Sprite).spriteFrame = "en" == SS.Common.GameEnvironment.Language ? this.m_enSpriteFrame : this.m_esSpriteFrame)
            }
        };
        n([s(cc.SpriteFrame)], r.prototype, "m_esSpriteFrame", void 0), n([s(cc.SpriteFrame)], r.prototype, "m_enSpriteFrame", void 0), r = n([i], r), o.SetUseSprite = r, cc._RF.pop()
    }, {}],
    Setting: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "5b972sQGG5F+qFot+QY1l8d", "Setting");
        var n = this && this.__awaiter || function(e, t, o, n) {
            return new(o || (o = Promise))(function(i, s) {
                function r(e) {
                    try {
                        l(n.next(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function a(e) {
                    try {
                        l(n.throw(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                        e(t)
                    })).then(r, a)
                }
                l((n = n.apply(e, t || [])).next())
            })
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("./Download");
        class s {
            constructor() {
                this._projectSetting = null, this._gameSetting = null, this._setting = null
            }
            static get _instance() {
                return null == this._inst && (this._inst = new s), this._inst
            }
            get NeedInit() {
                return null == this._setting
            }
            static CheckInit() {
                return n(this, void 0, void 0, function*() {
                    s._instance.NeedInit && (yield s._instance.Init())
                })
            }
            Init() {
                return n(this, void 0, void 0, function*() {
                    this.NeedInit && (this._projectSetting = SS.Common.GameEnvironment.ProjectSetting, this._setting = yield i.Download.JSON(gd_nowLOGO + "Setting"))
                })
            }
            static InitGameList() {
                s._instance._gameSetting = SS.Common.GameEnvironment.GameSetting;
                for (let e in s._instance._gameSetting.Icon) {
                    let t = s._instance._gameSetting.Icon[e].GameName,
                        o = JSON.parse("{}");
                    o.ThemeID = e, o.GameName = t, s._instance._setting[e] = o, s._instance._setting[t] = o
                }
            }
            static GetThemeID(e) {
                return s._instance._setting[e] && s._instance._setting[e].ThemeID ? s._instance._setting[e].ThemeID : ""
            }
            static GetGameName(e) {
                return s._instance._setting[e] && s._instance._setting[e].GameName ? s._instance._setting[e].GameName : ""
            }
            static GetSetting(e) {
                return s._instance._setting[e] ? s._instance._setting[e] : null
            }
        }
        o.default = s, s._inst = null, cc._RF.pop()
    }, {
        "./Download": "Download"
    }],
    Singleton: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "2b02diqhYpMr4zflYu3n9cD", "Singleton"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.SingletonComponent = o.Singleton = void 0, o.Singleton = function() {
            class e {
                constructor() {}
                static get inst() {
                    return null == e._inst && (e._inst = new this), e._inst
                }
            }
            return e._inst = null, e
        }, o.SingletonComponent = function() {
            class e extends cc.Component {
                constructor() {
                    super()
                }
                static get inst() {
                    return e._inst
                }
                onLoad() {
                    e._inst = this
                }
                Release() {
                    e._inst = null
                }
                onDestroy() {
                    this.Release()
                }
            }
            return e._inst = null, e
        }, cc._RF.pop()
    }, {}],
    SkillGameArrowAni: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "3f7c5accP9JMZn3KjeLU+L/", "SkillGameArrowAni");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.SkillGameArrowAni = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        var r;
        (function(e) {
            e[e.Idle = 0] = "Idle", e[e.Run = 1] = "Run", e[e.Stop = 2] = "Stop"
        })(r || (r = {}));
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeArrowPivot = null, this.m_nowState = r.Idle, this.RIGHT_SPEED = 40, this.BACK_SPEED = -40, this.MAX_ANGLE = 60, this.MIN_ANGLE = -60, this.MAX_RED_ANGLE = 39, this.MIN_RED_ANGLE = -39
            }
            Run() {
                this.m_nodeArrowPivot.setRotation(this.MIN_RED_ANGLE), this.m_moveSpeed = this.RIGHT_SPEED, this.m_nowState = r.Run
            }
            Stop() {
                this.m_nowState = r.Stop
            }
            GetResult() {
                return this.m_nodeArrowPivot.rotation >= this.MIN_RED_ANGLE && this.m_nodeArrowPivot.rotation <= this.MAX_RED_ANGLE ? 0 : 1
            }
            update(e) {
                switch (this.m_nowState) {
                    case r.Idle:
                        break;
                    case r.Run:
                        this.RunState(e);
                        break;
                    case r.Stop:
                        this.StopState()
                }
            }
            lateUpdate() {
                switch (this.m_nowState) {
                    case r.Idle:
                        break;
                    case r.Run:
                        this.CheckMaxAngle();
                        break;
                    case r.Stop:
                }
            }
            RunState(e) {
                this.m_nodeArrowPivot.rotation += e * this.m_moveSpeed
            }
            CheckMaxAngle() {
                this.m_nodeArrowPivot.rotation >= this.MAX_ANGLE ? this.m_moveSpeed = this.BACK_SPEED : this.m_nodeArrowPivot.rotation <= this.MIN_ANGLE && (this.m_moveSpeed = this.RIGHT_SPEED)
            }
            StopState() {
                this.m_nowState = r.Idle
            }
        };
        n([s(cc.Node)], a.prototype, "m_nodeArrowPivot", void 0), a = n([i], a), o.SkillGameArrowAni = a, cc._RF.pop()
    }, {}],
    SkillGameMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "ec5a9X3ZU9N5pPLye14tevO", "SkillGameMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.SkillGameMgr = void 0;
        const s = e("./SkillGameArrowAni"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        var l;
        (function(e) {
            e[e.Win = 0] = "Win", e[e.Lose = 1] = "Lose"
        })(l || (l = {}));
        let c = class extends cc.Component {
            constructor() {
                super(...arguments), this.root = null, this.m_nodePromptPanel = null, this.m_labelUserWin = null, this.m_labelLosePercent = null, this.m_StopBtn = null, this.m_nodeResultPanel = null, this.m_labelResultWin = null, this.m_labelResultPercent = null, this.m_arrowAni = null, this.DENOMINATION = .01, this.m_isClickStop = !1
            }
            ShowPanel(e, t, o) {
                this.m_userWin = e, this.m_loseRate = t;
                let n = SS.Common.BaseFunction.accMul(e, this.DENOMINATION);
                this.m_labelUserWin.string = "$" + this.TruncateCurrency(n, this.DENOMINATION), this.m_labelLosePercent.string = SS.Common.BaseFunction.accMul(this.m_loseRate, 100).toString() + "%", this.m_onStopSkillGame = o, this.m_nodePromptPanel.active = !0, this.m_nodeResultPanel.active = !1, this.root.active = !0, this.m_arrowAni.Run(), this.m_isClickStop = !1, this.m_StopBtn.interactable = !0
            }
            TruncateCurrency(e, t) {
                let o = SS.Common.BaseFunction.accDiv(1, t);
                return e = SS.Common.BaseFunction.accMul(e, o), e = Math.floor(e), SS.Common.BaseFunction.accDiv(e, o)
            }
            OnClickStop() {
                if (this.m_isClickStop) return;
                this.m_isClickStop = !0, this.m_StopBtn.interactable = !1, this.m_arrowAni.Stop();
                let e = this.m_arrowAni.GetResult();
                if (e == l.Win) this.m_labelResultWin.string = this.m_labelUserWin.string, this.m_labelResultPercent.string = "100%";
                else {
                    this.m_userWin = SS.Common.BaseFunction.accMul(this.m_loseRate, this.m_userWin);
                    let e = SS.Common.BaseFunction.accMul(this.m_userWin, this.DENOMINATION);
                    this.m_labelResultWin.string = "$" + this.TruncateCurrency(e, this.DENOMINATION), this.m_labelResultPercent.string = this.m_labelLosePercent.string
                }
                this.m_nodePromptPanel.active = !1, this.m_nodeResultPanel.active = !0, this.DelayToLogout(e)
            }
            DelayToLogout(e) {
                return i(this, void 0, void 0, function*() {
                    yield SS.Common.WaitForSeconds(3), this.m_onStopSkillGame(e)
                })
            }
            OnClickClose() {
                this.m_isClickStop || (this.root.active = !1)
            }
        };
        n([a(cc.Node)], c.prototype, "root", void 0), n([a(cc.Node)], c.prototype, "m_nodePromptPanel", void 0), n([a(cc.Label)], c.prototype, "m_labelUserWin", void 0), n([a(cc.Label)], c.prototype, "m_labelLosePercent", void 0), n([a(cc.Button)], c.prototype, "m_StopBtn", void 0), n([a(cc.Node)], c.prototype, "m_nodeResultPanel", void 0), n([a(cc.Label)], c.prototype, "m_labelResultWin", void 0), n([a(cc.Label)], c.prototype, "m_labelResultPercent", void 0), n([a(s.SkillGameArrowAni)], c.prototype, "m_arrowAni", void 0), c = n([r], c), o.SkillGameMgr = c, cc._RF.pop()
    }, {
        "./SkillGameArrowAni": "SkillGameArrowAni"
    }],
    SkinConfig: [function(e, t) {
        "use strict";
        cc._RF.push(t, "1025bydH7xNzK4x7zSBJMf3", "SkinConfig"), cc._RF.pop()
    }, {}],
    SkinLayer: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "3eae8mGKrlFM5PeVeZG34z5", "SkinLayer");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("./Skin"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.layer = []
            }
            onLoad() {
                i.default.Instance.layer = this.layer
            }
            onDestroy() {
                i.default.Instance.layer = []
            }
        };
        n([r({
            type: i.LayerSetting,
            displayName: "Root"
        })], a.prototype, "layer", void 0), a = n([s], a), o.default = a, cc._RF.pop()
    }, {
        "./Skin": "Skin"
    }],
    Skin: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "bb89a6Cb6xFj5gb6u6Y2bIQ", "Skin");
        var n, i = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            s = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.LayerSetting = void 0;
        const r = e("../Helper/Download"),
            {
                ccclass: a,
                property: l
            } = cc._decorator;
        let c = class {
            constructor() {
                this.name = "", this.root = null
            }
        };
        i([l({
            displayName: "\u5716\u5c64\u547d\u540d"
        })], c.prototype, "name", void 0), i([l({
            type: cc.Node,
            displayName: "Root"
        })], c.prototype, "root", void 0), c = i([a("LayerSetting")], c), o.LayerSetting = c;
        let h = n = class {
            constructor() {
                this.layer = [], this._config = null, this._setting = null, this._binding = null
            }
            static get Instance() {
                return null === this._instance && (this._instance = new n), this._instance
            }
            Init() {
                return s(this, void 0, void 0, function*() {
                    n._instance = this, this._setting = yield r.Download.JSON(window.gd_nowLOGO + "/SkinSetting"), this._config = yield r.Download.JSON(window.gd_nowLOGO + "/SkinConfig")
                })
            }
            get currentTheme() {
                let e = "default",
                    t = (new Date).getTime(),
                    o = Number.MAX_SAFE_INTEGER;
                for (let n of this._setting.skin) {
                    if (!n.hasOwnProperty("start_time") || !n.hasOwnProperty("end_time") || !n.hasOwnProperty("name")) continue;
                    if (n.hasOwnProperty("state")) {
                        let e = !1;
                        for (let t of n.state)
                            if (t === ArkSDK.ArkClient.allowState || "All" === t) {
                                e = !0;
                                break
                            }
                        if (!e) continue
                    }
                    let i = new Date(n.start_time).getTime(),
                        s = new Date(n.end_time).getTime();
                    t > i && s > t && t - i < o && this._config.hasOwnProperty(n.name) && (o = t - i, e = n.name)
                }
                return SS.Common.GameEnvironment.IgnoreVersionCtrl && SS.Common.BaseFunction.GetURLParameterByName("skin") && (e = SS.Common.BaseFunction.GetURLParameterByName("skin")), e
            }
            GetLoadList(e) {
                return console.log("[Skin] Get LoadList( " + this.currentTheme + " )"), this._config[this.currentTheme][e]
            }
            Download(e, t, o = !1) {
                return s(this, void 0, void 0, function*() {
                    console.log("[Skin] Download Skin( " + this.currentTheme + " )", e, t);
                    for (let n of t)
                        if (console.log("[Skin] Download ", n), this._config[this.currentTheme].hasOwnProperty(n)) {
                            let t = this._config[this.currentTheme][n];
                            console.log("[Skin] Download ", t);
                            let i = o ? yield r.Download.Prefab(t.bundle_name, t.prefab_name_vertical, ""): yield r.Download.Prefab(t.bundle_name, t.prefab_name_horizontal, ""), s = this.Instantiate(t.layer_name, i);
                            e.hasOwnProperty(t.component) && (0, e[t.component])(s)
                        } else console.log("[Skin] Config Does Not Contain " + n)
                })
            }
            Instantiate(e, t) {
                let o = this.GetLayer(e),
                    n = cc.instantiate(t);
                return n.parent = o, n
            }
            GetLayer(e) {
                for (let t of this.layer)
                    if (t.name === e) return t.root;
                return cc.director.getScene()
            }
            onDestroy() {
                n._instance = null
            }
        };
        h._instance = null, h = n = i([a], h), o.default = h, cc._RF.pop()
    }, {
        "../Helper/Download": "Download"
    }],
    SocialMediaApiHandler: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7ffecvVgU1DkpgztzfFhgMt", "SocialMediaApiHandler"), Object.defineProperty(o, "__esModule", {
            value: !0
        });
        class n {
            constructor() {
                this.isInit = !1
            }
            static getInstance() {
                return null == n.instance && (n.instance = new n), n.instance
            }
            initialize() {
                return null == window.fbApiInit ? (console.error("[guestsys] fb plugin **NOT** loaded"), this.isInit = !1, this.isInit) : (console.log("[guestsys] fb plugin is loaded"), this.isInit = !0, !0)
            }
            openFbPage(e) {
                cc.sys.openURL("https://www.facebook.com/" + e)
            }
            openFbMessenger(e) {
                cc.sys.openURL("https://m.me/" + e)
            }
            openWhatsApp(e) {
                cc.sys.openURL("https://wa.me/" + e)
            }
            openFbSharePost(e) {
                0 != this.isInit ? FB.ui({
                    method: "share",
                    fallback_redirect_uri: "http://close.html",
                    href: e.href,
                    display: "popup",
                    hashtag: e.hashtag,
                    quote: e.quote
                }, function(e) {
                    console.warn("FB Share Callback " + e)
                }) : console.log("[SolcialMediaMgr] is not init")
            }
            someMethod() {}
        }
        o.default = n, n.instance = null, cc._RF.pop()
    }, {}],
    State: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "e1355l9m2dP5qXoSzNXHPyY", "State"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), cc._RF.pop()
    }, {}],
    StoreInfoBtnCtrl: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "9d6e6UuvVhMRZG9VE+kndBo", "StoreInfoBtnCtrl");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.label = null, this.sprite = null, this.glowSprite = null, this.btnSprite = [], this.glowBtnSprite = [], this._buttonType = null
            }
            get ButtonType() {
                return this._buttonType
            }
            SetLabel(e) {
                this.label.string = e
            }
            SetSprite() {
                this.sprite.spriteFrame = this.btnSprite[this._buttonType], this.glowSprite.spriteFrame = this.glowBtnSprite[this._buttonType]
            }
            Init(e, t) {
                this._buttonType = e, this.SetSprite(), this.SetLabel(t)
            }
        };
        n([s(cc.Label)], r.prototype, "label", void 0), n([s(cc.Sprite)], r.prototype, "sprite", void 0), n([s(cc.Sprite)], r.prototype, "glowSprite", void 0), n([s([cc.SpriteFrame])], r.prototype, "btnSprite", void 0), n([s([cc.SpriteFrame])], r.prototype, "glowBtnSprite", void 0), r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    StoreInfoBtnMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "592dalmqQZEwYYizMtIvmrg", "StoreInfoBtnMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const s = e("../../../LobbyCommon/Define/CustomConfig"),
            r = e("../../../LobbyCommon/GuestSystem/Script/Utils/ButtonHoverScale"),
            a = e("../../../LobbyCommon/Helper/Download"),
            l = e("./StoreInfo"),
            c = e("./StoreInfoBtnCtrl"),
            {
                ccclass: h,
                property: m
            } = cc._decorator;
        let u = class extends cc.Component {
            constructor() {
                super(...arguments), this.storeInfoEnum = l.StoreInfoEnum.Login, this.appBtnPrefab = null, this.btnLayout = null, this.appBtns = [], this.fbBtn = null, this.appBtn = null, this.appBtnSpriteFrames = [], this.appBtnSprite = null
            }
            Init() {
                return i(this, void 0, void 0, function*() {
                    const {
                        showStoreInfoAtLogin: e,
                        useMexicoDownBar: t
                    } = s.CustomConfig.Instance;
                    if (console.log("StoreInfoBtnMgr Init", e, t), e || t) switch (yield this.LoadStoreSetting(), this.storeInfoEnum) {
                        case l.StoreInfoEnum.Login:
                            e && this.ShowAppsIcon();
                            break;
                        case l.StoreInfoEnum.Lobby:
                            t && this.SetDownBarBtn()
                    }
                })
            }
            onLoad() {
                try {
                    this.Init()
                } catch (e) {
                    console.error(e)
                }
            }
            LoadStoreSetting() {
                return i(this, void 0, void 0, function*() {
                    if (null != l.StoreInfoList.Instance.list) {
                        const e = window.gd_nowLOGO,
                            t = yield a.Download.JSON(`${e}/StoreInfo.json`);
                        l.StoreInfoList.Instance.Init(t)
                    }
                })
            }
            GetEventHandler(e, t, o, n) {
                const i = new cc.Component.EventHandler;
                return i.target = e, i.component = t, i.handler = o, i.customEventData = n, i
            }
            ShowAppsIcon() {
                l.StoreInfoList.Instance.list.forEach((e, t) => {
                    const o = cc.instantiate(this.appBtnPrefab),
                        n = o.getComponent(cc.Button),
                        i = o.getComponent(c.default);
                    i.Init(e.type, `Tienda ${t+1}`), i.SetLabel(`Tienda ${t+1}`), this.appBtns.push(n), n.node.parent = this.btnLayout.node;
                    const s = this.GetLink(e),
                        r = this.GetEventHandler(this.node, "StoreInfoBtnMgr", "OnClickBtn", s);
                    n.clickEvents.push(r), this.btnLayout.updateLayout(), this.btnLayout.node.active = !0
                })
            }
            OnClickBtn(e, t) {
                console.log("OnClickBtn", t), cc.sys.openURL(t)
            }
            DisableAppBtn() {
                this.appBtn.node.getComponent(r.ButtonHoverScale).Enable = !1, this.appBtn.transition = cc.Button.Transition.SPRITE, this.appBtn.interactable = !1
            }
            GetLink(e) {
                let t = "";
                const {
                    whatsAppLink: o,
                    telegramLink: n,
                    facebookLink: i,
                    type: s
                } = e;
                switch (s) {
                    case l.StoreInfoBtnType.WhatsApp:
                        t = o;
                        break;
                    case l.StoreInfoBtnType.Facebook:
                        t = i;
                    case l.StoreInfoBtnType.Telegram:
                        t = n;
                        break;
                    default:
                        t = null
                }
                return t
            }
            SetAppBtnSprite(e) {
                this.appBtnSprite.spriteFrame = this.appBtnSpriteFrames[e]
            }
            SetDownBarBtn() {
                const e = SS.Network.LoginModel.LoginInfo.kiosk_id;
                console.log("SetDownBarBtn kioskId", e, l.StoreInfoList.Instance.list);
                const t = l.StoreInfoList.Instance.list.find(t => t.kioskId == e);
                if (t) {
                    const {
                        facebookLink: e
                    } = t;
                    console.log("SetDownBarBtn info", t);
                    const o = this.GetEventHandler(this.node, "StoreInfoBtnMgr", "OnClickBtn", e);
                    this.fbBtn.clickEvents.push(o);
                    const n = this.GetLink(t);
                    if (null != n) {
                        const e = this.GetEventHandler(this.node, "StoreInfoBtnMgr", "OnClickBtn", n);
                        this.appBtn.clickEvents.push(e), this.SetAppBtnSprite(t.type)
                    } else this.DisableAppBtn()
                } else {
                    console.log("SetDownBarBtn info else", t);
                    const {
                        facebookLink: o
                    } = l.StoreInfoList.Instance.default, n = this.GetEventHandler(this.node, "StoreInfoBtnMgr", "OnClickBtn", o);
                    this.fbBtn.clickEvents.push(n), console.warn("No store info found for kioskId: " + e), this.DisableAppBtn()
                }
            }
        };
        n([m({
            type: cc.Enum(l.StoreInfoEnum),
            displayName: "\u4f7f\u7528\u5834\u666f"
        })], u.prototype, "storeInfoEnum", void 0), n([m({
            type: cc.Prefab,
            visible: function() {
                return this.storeInfoEnum === l.StoreInfoEnum.Login
            }
        })], u.prototype, "appBtnPrefab", void 0), n([m({
            type: cc.Layout,
            visible: function() {
                return this.storeInfoEnum === l.StoreInfoEnum.Login
            }
        })], u.prototype, "btnLayout", void 0), n([m({
            type: cc.Button,
            visible: function() {
                return this.storeInfoEnum === l.StoreInfoEnum.Lobby
            }
        })], u.prototype, "fbBtn", void 0), n([m({
            type: cc.Button,
            visible: function() {
                return this.storeInfoEnum === l.StoreInfoEnum.Lobby
            }
        })], u.prototype, "appBtn", void 0), n([m({
            type: [cc.SpriteFrame],
            visible: function() {
                return this.storeInfoEnum === l.StoreInfoEnum.Lobby
            }
        })], u.prototype, "appBtnSpriteFrames", void 0), n([m({
            type: cc.Sprite,
            visible: function() {
                return this.storeInfoEnum === l.StoreInfoEnum.Lobby
            }
        })], u.prototype, "appBtnSprite", void 0), u = n([h], u), o.default = u, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Define/CustomConfig": "CustomConfig",
        "../../../LobbyCommon/GuestSystem/Script/Utils/ButtonHoverScale": "ButtonHoverScale",
        "../../../LobbyCommon/Helper/Download": "Download",
        "./StoreInfo": "StoreInfo",
        "./StoreInfoBtnCtrl": "StoreInfoBtnCtrl"
    }],
    StoreInfoPopup: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7bc19ZPBh1IW6u6aFDXi4xY", "StoreInfoPopup");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("../../../LobbyCommon/Helper/EventSystem"),
            s = e("./StoreInfo"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.popup = null, this.whatsappBtn = null, this.upperNode = null, this.whatsappBtnParent = null, this.entriesNum = 0
            }
            onLoad() {
                i.EventSystem.Event(i.LobbyState.EnterLobby).Insert(this.CheckPlayerAsset, this), i.EventSystem.Event(i.DownBar.SetPlayerInfo).Insert(this.SetUserBalance, this)
            }
            onDestroy() {
                i.EventSystem.Event(i.LobbyState.EnterLobby).Remove(this.CheckPlayerAsset, this), i.EventSystem.Event(i.DownBar.SetPlayerInfo).Remove(this.SetUserBalance, this)
            }
            CheckPlayerAsset() {
                const {
                    hintMinium: e
                } = s.StoreInfoList.Instance;
                this.entriesNum < e && this.whatsappBtn.interactable && (i.EventSystem.Event(i.SystemMsg.Open).Notify(this.popup, cc.Size.ZERO, cc.Size.ZERO, 0, null, !0), this.popup.active = !0, this.whatsappBtn.node.parent = this.upperNode, this.whatsappBtn.node.setPosition(0, 0))
            }
            OnClickClose() {
                this.popup.active = !1, this.whatsappBtn.node.parent = this.whatsappBtnParent, this.whatsappBtn.node.setPosition(0, 0), i.EventSystem.Event(i.SystemMsg.Close).Notify()
            }
            SetUserBalance(e, t, o = null) {
                this.entriesNum = e
            }
        };
        n([a(cc.Node)], l.prototype, "popup", void 0), n([a(cc.Button)], l.prototype, "whatsappBtn", void 0), n([a(cc.Node)], l.prototype, "upperNode", void 0), n([a(cc.Node)], l.prototype, "whatsappBtnParent", void 0), l = n([r], l), o.default = l, cc._RF.pop()
    }, {
        "../../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "./StoreInfo": "StoreInfo"
    }],
    StoreInfo: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7a7f3QByi9KJJJo3WBKBnOq", "StoreInfo"), Object.defineProperty(o, "__esModule", {
                value: !0
            }), o.StoreInfoList = o.StoreInfoBtnType = o.StoreInfoEnum = void 0,
            function(e) {
                e[e.Login = 0] = "Login", e[e.Lobby = 1] = "Lobby"
            }(o.StoreInfoEnum || (o.StoreInfoEnum = {})),
            function(e) {
                e[e.WhatsApp = 0] = "WhatsApp", e[e.Facebook = 1] = "Facebook", e[e.Telegram = 2] = "Telegram"
            }(o.StoreInfoBtnType || (o.StoreInfoBtnType = {}));
        class n {
            constructor() {
                this.list = []
            }
            static get Instance() {
                return n.instance || (n.instance = new n), n.instance
            }
            Init(e) {
                n.Instance.list = e.list, n.Instance.default = e.default, n.Instance.hintMinium = e.hintMinium
            }
        }
        o.StoreInfoList = n, cc._RF.pop()
    }, {}],
    SwingEffect: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "a3da6FKSABGkLDtkf5JX78u", "SwingEffect");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.duration = 2, this.distance = 20, this.scaleVariate = .02
            }
            start() {
                let e = .5 * this.duration;
                cc.tween(this.node), cc.tween(this.node).then(cc.tween().to(e, {
                    position: cc.v2(-this.distance, 0),
                    scaleX: 1 - this.scaleVariate,
                    scaleY: 1 + this.scaleVariate
                }, {
                    easing: "sineInOut"
                }).then(cc.tween().to(e, {
                    position: cc.v2(0, 0),
                    scaleX: 1 + this.scaleVariate,
                    scaleY: 1 - this.scaleVariate
                }, {
                    easing: "sineInOut"
                }))).repeatForever().start()
            }
        };
        n([s(cc.Float)], r.prototype, "duration", void 0), n([s(cc.Float)], r.prototype, "distance", void 0), n([s(cc.Float)], r.prototype, "scaleVariate", void 0), r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    SwitchGameGroup: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "566c5Z8rzlGDI3NPWVsAphO", "SwitchGameGroup");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.SwitchGameGroup = void 0;
        const i = e("../Connect/Script/ConnectPanelMgr"),
            s = e("../PopupMessage/Script/PopupMsgMgr"),
            r = e("../../GameCommon/CommonRoot/Script/CommonRoot"),
            a = e("../Helper/EventSystem"),
            {
                ccclass: l,
                property: c
            } = cc._decorator;
        let h = class extends cc.Component {
            constructor() {
                super(...arguments), this.root = null, this.targetSwitchGameIcon = null, this.gameArrow = null, this.curSwitchGameIcon = null, this.tmpCurGameName = "", this.tmpChangeGameName = "", this.errorCode = "", this.needDownloadCount = 0, this.finishDownloadCount = 0, this.retryDownloadCount = 0, this.onSwitchGameFunction = null, this.openWindowCallBack = null, this.closeWindowCallBack = null, this.tmpIconSprites = []
            }
            _onLoad() {
                a.EventSystem.Event(a.CommunityBonus.TimesUp).Insert(this.CloseSwitchGameWindow, this), a.EventSystem.Event(a.OpenSwitchGameWindow).Insert(this.OpenSwitchGameWindow, this)
            }
            onDestroy() {
                a.EventSystem.Event(a.CommunityBonus.TimesUp) && a.EventSystem.Event(a.CommunityBonus.TimesUp).Remove(this.CloseSwitchGameWindow, this), a.EventSystem.Event(a.OpenSwitchGameWindow) && a.EventSystem.Event(a.OpenSwitchGameWindow).Remove(this.OpenSwitchGameWindow, this)
            }
            OnSwitchGameIgnoreWindow(e) {
                console.log("changeGameName ", e), this.tmpChangeGameName = e, this.LeaveGame()
            }
            OpenSwitchGameWindow(e, t = "", o = null, n = null) {
                if ("" == e) return;
                console.log("changeGameName ", e), console.log("curGameName ", t), this.openWindowCallBack = o, this.closeWindowCallBack = n, this.tmpCurGameName = "", this.tmpChangeGameName = "", this.finishDownloadCount = 0, this.retryDownloadCount = 0;
                let i = !1;
                "" != t && (i = !0), this.needDownloadCount = i ? 2 : 1, this.tmpChangeGameName = e, this.getSpriteFromMapIconOrDL(this.tmpChangeGameName, this.targetSwitchGameIcon), i && (this.tmpCurGameName = t, this.getSpriteFromMapIconOrDL(this.tmpCurGameName, this.curSwitchGameIcon))
            }
            getSpriteFromMapIconOrDL(e, t) {
                null != this.tmpIconSprites[e] ? (console.log("not Download " + e + " Icon !!"), this.finishDownloadCount++, this.finishDownloadCount >= this.needDownloadCount && this.ShowUILayout()) : (console.log("Ready Download " + e + " Icon !!"), this.DLAndSetSprFrame(e, t))
            }
            DLAndSetSprFrame(e, t, o = "") {
                let n, s = (n = SS.Common.GameEnvironment.ProjectSetting.CDN_HOST ? window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.CDN_HOST : window.location.origin) + "/Icons/" + o + ("es" == SS.Common.GameEnvironment.Language ? "es_" : "") + e;
                i.ConnectPanelMgr.Instance.ShowConnectPanel(), t.enabled = !1, this.retryDownloadCount = 0, this.DLSprFrame(s, e, t)
            }
            DLSprFrame(e, t, o) {
                try {
                    let s = e + ".png?" + (new Date).getTime();
                    cc.loader.load(s, (n, s) => {
                        if (n) return this.DLSprFrameErr(e, t, o), console.log("Img Download Error !!"), null;
                        console.log("Img Download Finish!!");
                        let r = new cc.SpriteFrame(s);
                        this.setSprFrame(t, o, r), i.ConnectPanelMgr.Instance.DisableConnectPanel(), this.finishDownloadCount++, this.finishDownloadCount >= this.needDownloadCount && this.ShowUILayout()
                    })
                } catch (n) {
                    return this.DLSprFrameErr(e, t, o), null
                }
            }
            setSprFrame(e, t, o) {
                let n = o._image,
                    i = new cc.Texture2D;
                i.initWithElement(n), i.handleLoadedTexture(), this.curSwitchGameIcon.spriteFrame = new cc.SpriteFrame(i), this.tmpIconSprites[e] = o, t.enabled = !0
            }
            DLSprFrameErr(e, t, o) {
                this.retryDownloadCount++, this.retryDownloadCount >= 3 ? (console.error("stop retry Download!! Exit Game"), this.errorCode = "C38", s.PopupMsgMgr.Instance.ShowPopMsg(s.PopupPriority.Error, this.errorCode, null, "The Internet was lost! Please login again!")) : (console.error("retry Download !!"), this.DLSprFrame(e, t, o))
            }
            ShowUILayout() {
                if ("" != this.tmpCurGameName) {
                    this.gameArrow.node.active = !0, this.curSwitchGameIcon.node.active = !0;
                    let e = this.tmpIconSprites[this.tmpCurGameName],
                        t = new cc.Texture2D;
                    e._texture.hasOwnProperty("_image") ? (t.initWithElement(e._texture._image), t.handleLoadedTexture(), this.curSwitchGameIcon.spriteFrame = new cc.SpriteFrame(t)) : this.curSwitchGameIcon.spriteFrame = e;
                    let o = this.tmpIconSprites[this.tmpChangeGameName],
                        n = new cc.Texture2D;
                    o._texture.hasOwnProperty("_image") ? (n.initWithElement(o._texture._image), n.handleLoadedTexture(), this.targetSwitchGameIcon.spriteFrame = new cc.SpriteFrame(n)) : this.targetSwitchGameIcon.spriteFrame = o, SS.Common.GameEnvironment.GetCurGameIsVertical() ? this.targetSwitchGameIcon.node.setPosition(new cc.Vec2(165, this.targetSwitchGameIcon.node.getPosition().y)) : this.targetSwitchGameIcon.node.setPosition(new cc.Vec2(840, this.targetSwitchGameIcon.node.getPosition().y))
                } else {
                    this.gameArrow.node.active = !1, this.curSwitchGameIcon.node.active = !1;
                    let e = this.tmpIconSprites[this.tmpChangeGameName],
                        t = new cc.Texture2D;
                    e._texture.hasOwnProperty("_image") ? (t.initWithElement(e._texture._image), t.handleLoadedTexture(), this.targetSwitchGameIcon.spriteFrame = new cc.SpriteFrame(t)) : this.targetSwitchGameIcon.spriteFrame = e, SS.Common.GameEnvironment.GetCurGameIsVertical() ? this.targetSwitchGameIcon.node.setPosition(new cc.Vec2(0, this.targetSwitchGameIcon.node.getPosition().y)) : this.targetSwitchGameIcon.node.setPosition(new cc.Vec2(640, this.targetSwitchGameIcon.node.getPosition().y))
                }
                null != this.openWindowCallBack && this.openWindowCallBack(), this.root.active = !0
            }
            CloseSwitchGameWindow() {
                this.root.active = !1, null != this.closeWindowCallBack && this.closeWindowCallBack()
            }
            LeaveGame() {
                this.GetIsInLobby() ? null != this.onSwitchGameFunction && this.onSwitchGameFunction(this.tmpChangeGameName) : (cc.assetManager.bundles.find(function(e) {
                    return e._config.getSceneInfo(SS.Common.GameEnvironment.CurrentGameNow)
                }) && (JSUtility.IsSupportLocalStorage() ? localStorage.setItem("changeToGameName", this.tmpChangeGameName) : JSUtility.IsSupportCookie() && (document.cookie = "changeToGameName=" + this.tmpChangeGameName + ";")), SS.Common.GameEnvironment.ChangeToGameName = this.tmpChangeGameName, r.CommonRoot.Instance ? r.CommonRoot.Instance.GetTopBarMgr.m_DelClickBackToLobby.Length > 0 && r.CommonRoot.Instance.GetTopBarMgr.m_DelClickBackToLobby.Notify() : a.EventSystem.Event(a.BackToLobby).Notify())
            }
            SetSwitchGameData(e) {
                this.onSwitchGameFunction = e, console.log("onSwitchGameFunction = ", this.onSwitchGameFunction)
            }
            GetIsInLobby() {
                return -1 != cc.director.getScene().name.indexOf("Lobby")
            }
        };
        n([c(cc.Node)], h.prototype, "root", void 0), n([c(cc.Sprite)], h.prototype, "targetSwitchGameIcon", void 0), n([c(cc.Sprite)], h.prototype, "gameArrow", void 0), n([c(cc.Sprite)], h.prototype, "curSwitchGameIcon", void 0), h = n([l], h), o.SwitchGameGroup = h, cc._RF.pop()
    }, {
        "../../GameCommon/CommonRoot/Script/CommonRoot": "CommonRoot",
        "../Connect/Script/ConnectPanelMgr": "ConnectPanelMgr",
        "../Helper/EventSystem": "EventSystem",
        "../PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr"
    }],
    SwitchGameHint: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "0f8d8IWelpJor0tKfyEGMXA", "SwitchGameHint");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("../../GameCommon/CommonRoot/Script/CommonRoot"),
            s = e("../../LobbyCommon/Helper/EventSystem"),
            {
                ccclass: r,
                property: a
            } = cc._decorator;
        let l = class extends cc.Component {
            constructor() {
                super(...arguments), this.Root = null, this.RootAni = null, this.GoBtn = null, this.TargetGameName = "", this.LeftLayoutClip = null, this.RightLayoutClip = null, this.isShowingHint = !1, this.fadeInTime = .2, this.fadeOutTime = .2, this.delayTime = 2
            }
            start() {
                s.EventSystem.Event(s.FishHunter.SetMainPlayerSeat).Insert(this.InitLayout, this), s.EventSystem.Event(s.FishHunter.ReachMaxBet).Insert(this.ShowHint, this), s.EventSystem.Event(s.FishHunter.UpdateBet).Insert(this.HideHint, this), s.EventSystem.Event(s.FishHunter.PlayerShoot).Insert(this.HideHint, this), this.Root.active = !1, this.GoBtn.interactable = !1
            }
            onDestroy() {
                s.EventSystem.Event(s.FishHunter.SetMainPlayerSeat).Remove(this.InitLayout, this), s.EventSystem.Event(s.FishHunter.ReachMaxBet).Remove(this.ShowHint, this), s.EventSystem.Event(s.FishHunter.UpdateBet).Remove(this.HideHint, this), s.EventSystem.Event(s.FishHunter.PlayerShoot).Remove(this.HideHint, this)
            }
            InitLayout(e) {
                e % 2 == 0 ? this.RootAni.play(this.LeftLayoutClip.name) : this.RootAni.play(this.RightLayoutClip.name)
            }
            ShowHint() {
                let e = (255 - this.Root.opacity) / 255 * this.fadeInTime;
                cc.Tween.stopAllByTarget(this.Root), this.Root.active = !0, this.isShowingHint = !0, cc.tween(this.Root).to(e, {
                    opacity: 255
                }).call(() => this.GoBtn.interactable = !0).delay(this.delayTime).to(this.fadeOutTime, {
                    opacity: 0
                }).call(() => {
                    this.GoBtn.interactable = !1, this.Root.active = !1, this.isShowingHint = !1
                }).start()
            }
            HideHint() {
                this.isShowingHint && (cc.Tween.stopAllByTarget(this.Root), cc.tween(this.Root).to(this.fadeOutTime, {
                    opacity: 0
                }).call(() => {
                    this.GoBtn.interactable = !1, this.Root.active = !1, this.isShowingHint = !1
                }).start())
            }
            OnClickGo() {
                cc.Tween.stopAllByTarget(this.Root), this.GoBtn.interactable = !1, this.Root.active = !1, this.isShowingHint = !1, i.CommonRoot.Instance.m_switchGameGroup.OpenSwitchGameWindow(this.TargetGameName, SS.Common.GameEnvironment.CurrentGameNow)
            }
        };
        n([a(cc.Node)], l.prototype, "Root", void 0), n([a(cc.Animation)], l.prototype, "RootAni", void 0), n([a(cc.Button)], l.prototype, "GoBtn", void 0), n([a(cc.String)], l.prototype, "TargetGameName", void 0), n([a(cc.AnimationClip)], l.prototype, "LeftLayoutClip", void 0), n([a(cc.AnimationClip)], l.prototype, "RightLayoutClip", void 0), l = n([r], l), o.default = l, cc._RF.pop()
    }, {
        "../../GameCommon/CommonRoot/Script/CommonRoot": "CommonRoot",
        "../../LobbyCommon/Helper/EventSystem": "EventSystem"
    }],
    TaskDefine: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "70686I+Ow1O9bJFEYMNLdTC", "TaskDefine"), Object.defineProperty(o, "__esModule", {
                value: !0
            }), o.TaskInfo = o.Reward = o.TaskData = o.Status = void 0,
            function(e) {
                e[e.ACCEPT = 0] = "ACCEPT", e[e.COMPLETE = 1] = "COMPLETE", e[e.TAKE = 2] = "TAKE"
            }(o.Status || (o.Status = {})), o.TaskData = class {
                constructor(e) {
                    this.info = new SS.Common.Dictionary, e && this.Parse(e)
                }
                Parse(e) {
                    this.roundId = e.RoundId;
                    const t = [];
                    return Object.keys(e).forEach(o => {
                        const n = e[o];
                        if ("Code" === o || "RoundId" === o || "run_status" == o) console.log("SSS TaskData " + o + ": " + n);
                        else try {
                            (null == n ? void 0 : n.length) && n.forEach ? n.forEach((e, n) => {
                                t.push({
                                    Key: o + n,
                                    TaskInfo: new i(e, o)
                                })
                            }) : t.push({
                                Key: o,
                                TaskInfo: new i(n, o)
                            })
                        } catch (s) {
                            console.warn(s), console.warn(e, n)
                        }
                    }), t.forEach(({
                        Key: e,
                        TaskInfo: t
                    }) => {
                        this.info.containsKey(e) ? this.info.changeValueForKey(e, t) : this.info.add(e, t)
                    }), this
                }
            };
        class n {
            constructor(e) {
                this.itemID = "", this.amount = 0, this.itemID = Object.keys(e)[0], this.amount = e[this.itemID]
            }
        }
        o.Reward = n;
        class i {
            constructor(e = null, t = "") {
                this.Reward = [], this.data = null, this.category = "", e && this.Parse(e), t && (this.category = t)
            }
            get Attribute() {
                return this.data.Attribute
            }
            get SessionId() {
                return this.data.SessionId
            }
            get Status() {
                return this.data.Status
            }
            get Target() {
                return this.data.Target
            }
            get Progress() {
                return this.data.Progress
            }
            get StartTime() {
                return new Date(this.data.StartTime)
            }
            get EndTime() {
                return new Date(this.data.EndTime)
            }
            get RoundId() {
                return this.data.RoundId
            }
            get Type() {
                return this.data.Type
            }
            get GameType() {
                return this.data.GameType
            }
            get GameName() {
                return this.data.GameName
            }
            get FishType() {
                return this.data.FishType
            }
            get percentage() {
                let e = this.Progress / this.Target;
                return isNaN(e) && (e = 0), 100 * e
            }
            Parse(e) {
                return this.data = e, this.data.Reward && this.data.Reward.forEach(e => {
                    this.Reward.push(new n(e))
                }), this
            }
        }
        o.TaskInfo = i, cc._RF.pop()
    }, {}],
    Task: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "f2f49u8z/FOD6/kZd7ix5g4", "Task");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class {
            get data() {
                return this._data
            }
            Init() {
                return this._data
            }
        };
        r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    TextBox: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7bdefGGLfFCgZ7fSPmWDieb", "TextBox");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.TextBox = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.label = null, this.bg = null, this.selectSprite = null, this.unSelectSprite = null
            }
            SetText(e) {
                this.label.string = e
            }
            GetText() {
                return this.label.string
            }
            SetSelection(e) {
                this.bg.spriteFrame = e ? this.selectSprite : this.unSelectSprite
            }
        };
        n([s(cc.Label)], r.prototype, "label", void 0), n([s(cc.Sprite)], r.prototype, "bg", void 0), n([s(cc.SpriteFrame)], r.prototype, "selectSprite", void 0), n([s(cc.SpriteFrame)], r.prototype, "unSelectSprite", void 0), r = n([i], r), o.TextBox = r, cc._RF.pop()
    }, {}],
    TimeZoneConversion: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "6bd48lrnYdJm5mQvhbDfeqv", "TimeZoneConversion"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.TimeZoneConversion = void 0;
        const {
            ccclass: n,
            property: i
        } = cc._decorator;
        o.TimeZoneConversion = class {
            static convertTSToEST(e, t = !0, o = !0) {
                let n = new Date(e),
                    i = n.toLocaleDateString("en-US", {
                        timeZone: "EST"
                    }),
                    s = n.toLocaleTimeString("en-GB", {
                        timeZone: "EST"
                    });
                return t && (i = i.substr(0, i.length - 5)), o && (s = s.substr(0, s.length - 3)), i + ", " + s
            }
        }, cc._RF.pop()
    }, {}],
    TmpRegulationPage: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7d3a60B7bZHX50b2ShdeRQL", "TmpRegulationPage");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.TmpRegulationPage = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.agreeFunction = null, this.noFunction = null, this.m_ndOneBtn = null, this.m_ndTwoBtn = null, this.m_scrollView = null, this.m_spContent = null, this.m_isSetData = !1
            }
            SetData(e, t) {
                console.log("Rule Page Set : " + e);
                try {
                    this.m_scrollView.content.height = t.getTexture().height, this.m_spContent.spriteFrame = t, this.m_scrollView.scrollToTop(0), "ONE" == e ? (this.m_ndOneBtn.active = !0, this.m_ndTwoBtn.active = !1) : (this.m_ndOneBtn.active = !1, this.m_ndTwoBtn.active = !0), this.m_isSetData = !0
                } catch (o) {
                    console.error(o), this.Callback()
                }
            }
            Open(e, t) {
                return this.node.active = this.m_isSetData, this.node.active && (this.agreeFunction = e, this.noFunction = t), this.node.active
            }
            Check(e, t) {
                if ("OK" === t) return console.log("\tRegulation Check : OK"), this.node.active = !1, void this.Callback();
                "NO" === t && (console.log("\tRegulation Check : NO"), this.m_scrollView.scrollEvents = [], this.noFunction ? this.noFunction() : SS.Common.GameEnvironment.ReflashBrowser())
            }
            Callback() {
                let e = this.agreeFunction;
                this.agreeFunction = null, this.m_scrollView.scrollEvents = [], e()
            }
        };
        n([s(cc.Node)], r.prototype, "m_ndOneBtn", void 0), n([s(cc.Node)], r.prototype, "m_ndTwoBtn", void 0), n([s(cc.ScrollView)], r.prototype, "m_scrollView", void 0), n([s(cc.Sprite)], r.prototype, "m_spContent", void 0), r = n([i], r), o.TmpRegulationPage = r, cc._RF.pop()
    }, {}],
    TopbarMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "8212f4Fo2REabaptieOix+I", "TopbarMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.TopbarMgr = o.TopbarBtnType = o.TopbarStatus = void 0;
        const i = e("./../../Component/NumberCountUp"),
            s = e("../../Net/LobbyClient"),
            {
                ccclass: r,
                property: a
            } = cc._decorator,
            l = {
                SOUND: ["Sound", "SONIDO"],
                JACKPOTWINNER: ["JP Winner", "GANADOR\nDE JACKPOT"],
                LOGOUT: ["Logout", "CERRAR\nSESI\xd3N"]
            };
        var c, h;
        (function(e) {
            e[e.Init = 0] = "Init", e[e.InLobbyNormal = 1] = "InLobbyNormal", e[e.InLobbyDisabled = 2] = "InLobbyDisabled", e[e.InGameNormal = 3] = "InGameNormal", e[e.InGameDisabled = 4] = "InGameDisabled", e[e.GuestLogin = 5] = "GuestLogin"
        })(c = o.TopbarStatus || (o.TopbarStatus = {})),
        function(e) {
            e[e.BackToLobby = 0] = "BackToLobby", e[e.Menu = 1] = "Menu", e[e.SOUND = 2] = "SOUND", e[e.ACCOUNT = 3] = "ACCOUNT", e[e.JACKPOTWINNER = 4] = "JACKPOTWINNER", e[e.GAMEHISTORY = 5] = "GAMEHISTORY", e[e.INFO = 6] = "INFO", e[e.LOGOUT = 7] = "LOGOUT", e[e.FULLSCREEN = 8] = "FULLSCREEN", e[e.NEWS = 9] = "NEWS", e[e.PROFILE = 10] = "PROFILE"
        }(h = o.TopbarBtnType || (o.TopbarBtnType = {}));
        let m = class extends cc.Component {
            constructor() {
                super(...arguments), this.topBarBg = null, this.btnBackToLobby = null, this.Mob_UpUI_L_Anima = null, this.Mob_UpUI_R_Anima = null, this.Mob_UpUI_WordAnima = null, this.Mob_RedJPFieldAnima = null, this.btnMenu = null, this.menubgNode = null, this.menuListNode = null, this.btnSound = null, this.nodeSoundOpen = null, this.nodeSoundClose = null, this.btnFullScreen = null, this.nodeFullScreenOpen = null, this.nodeFullScreenClose = null, this.btnAccount = null, this.btnJPWinner = null, this.btnInfo = null, this.btnLogout = null, this.btnGameHistory = null, this.btnNews = null, this.btnProfile = null, this.objTopBarRoot = null, this.JpRoot = null, this.objMenuContentRoot = null, this.numberAniGrand = null, this.numberAniMajor = null, this.numberAniMinor = null, this.numberAniMini = null, this.m_bVertical = !1, this.JpBg = null, this.JpNum = null, this.jpFieldSpriteFrame = [], this.jpField = null, this.isSupportFullScreen = !0, this.JpShowLastTime = 0
            }
            _onLoad() {
                (cc.sys.os == cc.sys.OS_IOS || "ucbrowser" == cc.sys.browserType && cc.sys.isMobile) && (this.isSupportFullScreen = !1), this.isSupportFullScreen && (JSUtility.FullScreen.OnFullScreenChange = this.SetFullScreenBtn.bind(this), this.SetFullScreenBtn(JSUtility.FullScreen.IsFullScreen())), this.m_DelClickBackToLobby = new SS.Common.Delegate, this.m_DelClickSound = new SS.Common.Delegate, this.m_DelClickAccount = new SS.Common.Delegate, this.m_DelClickJPHistory = new SS.Common.Delegate, this.m_DelClickGameHistory = new SS.Common.Delegate, this.m_DelClickLogout = new SS.Common.Delegate, this.m_DelClickFullScreen = new SS.Common.Delegate, this.m_DelClickNews = new SS.Common.Delegate, this.m_DelClickInfo = new SS.Common.Delegate, this.m_DelClickMenu = new SS.Common.Delegate, this.m_DelClickCloseMenu = new SS.Common.Delegate, this.SetSoundBtn(), this.SetChildBtnMenuActive(!1), this.jpField && (this.jpField.spriteFrame = this.jpFieldSpriteFrame["en" === SS.Common.GameEnvironment.Language ? 0 : 1])
            }
            _start() {
                s.LobbyClient.Instance.JpShowLastTime > 0 && (this.JpShowLastTime = s.LobbyClient.Instance.JpShowLastTime, this.ShowJpEffect()), s.LobbyClient.Instance.GetJPSystem && s.LobbyClient.Instance.GetJPSystem.OnJPStartSignal.add(this.ShowJpEffect, this)
            }
            onDestroy() {
                this.DisableMenuBtnList = [], JSUtility.FullScreen.OnFullScreenChange = null, s.LobbyClient.Instance.GetJPSystem && s.LobbyClient.Instance.GetJPSystem.OnJPStartSignal.remove(this.ShowJpEffect, this), s.LobbyClient.Instance.GetJPSystem && s.LobbyClient.Instance.GetJPSystem.OnJPFinishSignal.remove(this.DisableJpEffect, this), clearTimeout(this.JPShowTimeOutTimerID), s.LobbyClient.Instance.JpShowLastTime = this.JpShowLastTime, this.m_DelClickBackToLobby.Length > 0 && this.m_DelClickBackToLobby.Clear(), this.m_DelClickSound.Length > 0 && this.m_DelClickSound.Clear(), this.m_DelClickAccount.Length > 0 && this.m_DelClickAccount.Clear(), this.m_DelClickJPHistory.Length > 0 && this.m_DelClickJPHistory.Clear(), this.m_DelClickGameHistory.Length > 0 && this.m_DelClickGameHistory.Clear(), this.m_DelClickLogout.Length > 0 && this.m_DelClickLogout.Clear(), this.m_DelClickFullScreen.Length > 0 && this.m_DelClickFullScreen.Clear(), this.m_DelClickNews.Length > 0 && this.m_DelClickNews.Clear(), this.m_DelClickInfo.Length > 0 && this.m_DelClickInfo.Clear(), this.m_DelClickMenu.Length > 0 && this.m_DelClickMenu.Clear(), this.m_DelClickCloseMenu.Length > 0 && this.m_DelClickCloseMenu.Clear()
            }
            ShowJpEffect() {
                console.warn("[GetJPAward] Start JPShow!!"), this.JpShowLastTime <= 0 && (this.JpShowLastTime = s.LobbyClient.Instance.DEAFULT_JP_SHOW_TIMEOUT), this.Mob_UpUI_L_Anima.node.active = !0, this.Mob_UpUI_R_Anima.node.active = !0, this.Mob_UpUI_WordAnima.node.active = !0, this.Mob_RedJPFieldAnima.node.active = !0, this.Mob_UpUI_L_Anima.play("Mob_UpUI_GameBoard", 0), this.Mob_UpUI_R_Anima.play("Mob_UpUI_GameBoard", 0), this.Mob_UpUI_WordAnima.play("Mob_UpUI_word", 0), this.Mob_RedJPFieldAnima.play("Mob_JP_Field", 0);
                let e = this,
                    t = () => {
                        e.JPShowTimeOutTimerID = setTimeout(() => {
                            --e.JpShowLastTime <= 0 ? e.DisableJpEffect() : t()
                        }, 1e3)
                    };
                t(), s.LobbyClient.Instance.GetJPSystem.OnJPFinishSignal.add(this.DisableJpEffect, this)
            }
            DisableJpEffect() {
                console.warn("[DisableJPAward] Stop JPShow!!"), clearTimeout(this.JPShowTimeOutTimerID), this.JpShowLastTime = 0, this.Mob_UpUI_L_Anima.node.active = !1, this.Mob_UpUI_R_Anima.node.active = !1, this.Mob_UpUI_WordAnima.node.active = !1, this.Mob_RedJPFieldAnima.node.active = !1, this.Mob_UpUI_L_Anima.stop("Mob_UpUI_GameBoard"), this.Mob_UpUI_R_Anima.stop("Mob_UpUI_GameBoard"), this.Mob_UpUI_WordAnima.stop("Mob_UpUI_word"), this.Mob_RedJPFieldAnima.stop("Mob_JP_Field"), s.LobbyClient.Instance.GetJPSystem.OnJPFinishSignal.remove(this.DisableJpEffect, this)
            }
            SetFullScreenBtn(e) {
                this.nodeFullScreenOpen.active = e, this.nodeFullScreenClose.active = !e
            }
            SetSoundBtn() {
                this.nodeSoundOpen.active = !SS.Common.GameEnvironment.IsMute, this.nodeSoundClose.active = SS.Common.GameEnvironment.IsMute
            }
            ChangeJPVal(e, t, o, n, i = !1) {
                if (console.log("[TopbarMgr.RecvChangeCmd]", e, t, o, n), SS.Common.GameEnvironment.TopBarJPIsMoneyFormat) {
                    if (e) {
                        let t = SS.Common.BaseFunction.accMul(e, SS.Common.GameEnvironment.exchange_rate);
                        e = this.TruncateCurrency(t, SS.Common.GameEnvironment.exchange_rate)
                    }
                    if (t) {
                        let e = SS.Common.BaseFunction.accMul(t, SS.Common.GameEnvironment.exchange_rate);
                        t = this.TruncateCurrency(e, SS.Common.GameEnvironment.exchange_rate)
                    }
                    if (o) {
                        let e = SS.Common.BaseFunction.accMul(o, SS.Common.GameEnvironment.exchange_rate);
                        o = this.TruncateCurrency(e, SS.Common.GameEnvironment.exchange_rate)
                    }
                    if (n) {
                        let e = SS.Common.BaseFunction.accMul(n, SS.Common.GameEnvironment.exchange_rate);
                        n = this.TruncateCurrency(e, SS.Common.GameEnvironment.exchange_rate)
                    }
                    console.warn("after convert TopBar JPVal , number is : " + e, t, o, n)
                } else e = Math.floor(e), t = Math.floor(t), o = Math.floor(o), n = Math.floor(n);
                !i && e && t && o && n ? (this.numberAniGrand.CountUp(e, .5), this.numberAniMajor.CountUp(t, .5), this.numberAniMinor.CountUp(o, .5), this.numberAniMini.CountUp(n, .5)) : (e && this.numberAniGrand.SetNumberNow(e), t && this.numberAniMajor.SetNumberNow(t), o && this.numberAniMinor.SetNumberNow(o), n && this.numberAniMini.SetNumberNow(n))
            }
            TruncateCurrency(e, t) {
                let o = SS.Common.BaseFunction.accDiv(1, t);
                return e = SS.Common.BaseFunction.accMul(e, o), e = Math.floor(e), SS.Common.BaseFunction.accDiv(e, o)
            }
            SetJPValShowFormat(e) {
                this.numberAniGrand.SetNumberFormat(!e, e), this.numberAniMajor.SetNumberFormat(!e, e), this.numberAniMinor.SetNumberFormat(!e, e), this.numberAniMini.SetNumberFormat(!e, e)
            }
            SetJPShow(e) {
                null != this.JpBg && null != this.JpNum && (this.JpBg.active = e, this.JpNum.active = e), this.btnProfile && (this.btnProfile.node.parent.active = e)
            }
            SetTopBarActive(e) {
                this.objTopBarRoot.active = e
            }
            SetBtnLabel(e, t) {
                if (null == e) return;
                let o = e.node.getComponentInChildren(cc.Label);
                o && (o.string = l[h[t]]["en" === SS.Common.GameEnvironment.Language ? 0 : 1])
            }
            SetBtnStateByCustom(e, t, o) {
                switch (this.DisableMenuBtnList && -1 !== this.DisableMenuBtnList.findIndex(t => t === h[e]) && (t = !1, o = !1), e) {
                    case h.Menu:
                        break;
                    case h.BackToLobby:
                        this.btnBackToLobby.node.active = t, this.btnBackToLobby.interactable = o;
                        break;
                    case h.ACCOUNT:
                        this.btnAccount.node.active = !1, this.btnAccount.interactable = !1;
                        break;
                    case h.SOUND:
                        this.btnSound.node.active = t, this.btnSound.interactable = o, this.SetBtnLabel(this.btnSound, h.SOUND);
                        break;
                    case h.JACKPOTWINNER:
                        this.btnJPWinner.node.active = t, this.btnJPWinner.interactable = o, this.SetBtnLabel(this.btnJPWinner, h.JACKPOTWINNER);
                        break;
                    case h.INFO:
                        this.btnInfo.node.active = t, this.btnInfo.interactable = o;
                        break;
                    case h.LOGOUT:
                        this.btnLogout.node.active = t, this.btnLogout.interactable = o, this.SetBtnLabel(this.btnLogout, h.LOGOUT);
                        break;
                    case h.FULLSCREEN:
                        this.isSupportFullScreen || (t = !1, o = !1), this.btnFullScreen.node.active = t, this.btnFullScreen.interactable = o;
                        break;
                    case h.NEWS:
                        this.btnNews && (this.btnNews.node.active = t, this.btnNews.interactable = o);
                        break;
                    case h.PROFILE:
                        this.btnProfile && (this.btnProfile.node.active = t, this.btnProfile.interactable = o)
                }
            }
            SetChildBtnMenuActive(e) {
                if (null == this.btnMenu) return;
                if (this.btnMenu.node.getNumberOfRunningActions() > 0 || this.objMenuContentRoot.getNumberOfRunningActions() > 0) return;
                let t, o, n, i, s = this;
                if (this.m_bVertical ? (t = cc.v2(330, -400), o = cc.v2(430, -400), n = cc.v2(300, -400), i = cc.v2(470, -400)) : (t = cc.v2(595, this.btnMenu.node.position.y), o = cc.v2(744, this.btnMenu.node.position.y), n = cc.v2(576, this.objMenuContentRoot.position.y), i = cc.v2(752, this.objMenuContentRoot.position.y)), this.menubgNode.active = e, e) {
                    this.m_DelClickMenu.Length > 0 && this.m_DelClickMenu.Notify(), this.btnMenu.node.stopAllActions(), this.objMenuContentRoot.active = e;
                    var r = cc.sequence(cc.moveTo(.3, o), cc.callFunc(() => {
                        s.objMenuContentRoot.stopAllActions();
                        let e = cc.moveTo(.3, n);
                        s.objMenuContentRoot.runAction(e)
                    }));
                    this.btnMenu.node.runAction(r)
                } else this.m_DelClickCloseMenu.Length > 0 && this.m_DelClickCloseMenu.Notify(), this.objMenuContentRoot.stopAllActions(), r = cc.sequence(cc.moveTo(.3, i), cc.callFunc(() => {
                    s.btnMenu.node.stopAllActions();
                    let o = cc.moveTo(.3, t);
                    s.btnMenu.node.runAction(o), s.objMenuContentRoot.active = e
                })), this.objMenuContentRoot.runAction(r)
            }
            SetDisableMenuBtn(e) {
                this.DisableMenuBtnList = e
            }
            ToggleTopbarPanel(e) {
                null != this.topBarBg && null != this.topBarBg && null != this.JpRoot && null != this.JpRoot && (this.topBarBg.active = e, this.JpRoot.active = e)
            }
            SetTopBarStatus(e) {
                switch (this.SetBtnStateByCustom(h.Menu, !0, !0), this.SetBtnStateByCustom(h.BackToLobby, !0, !0), this.SetBtnStateByCustom(h.SOUND, !0, !0), this.SetBtnStateByCustom(h.JACKPOTWINNER, !0, !0), this.SetBtnStateByCustom(h.ACCOUNT, !0, !0), this.SetBtnStateByCustom(h.INFO, !0, !0), this.SetBtnStateByCustom(h.LOGOUT, !0, !0), this.SetBtnStateByCustom(h.FULLSCREEN, !0, !0), this.SetBtnStateByCustom(h.NEWS, !0, !0), this.SetBtnStateByCustom(h.PROFILE, !0, !0), e) {
                    case c.InLobbyNormal:
                        this.SetBtnStateByCustom(h.BackToLobby, !1, !1), this.SetBtnStateByCustom(h.ACCOUNT, !0, !0), this.SetBtnStateByCustom(h.JACKPOTWINNER, !0, !0), this.SetBtnStateByCustom(h.INFO, !1, !1), this.SetBtnStateByCustom(h.PROFILE, !1, !1);
                        break;
                    case c.InLobbyDisabled:
                        this.SetBtnStateByCustom(h.INFO, !1, !1), this.SetBtnStateByCustom(h.JACKPOTWINNER, !0, !1), this.SetBtnStateByCustom(h.ACCOUNT, !0, !1), this.SetBtnStateByCustom(h.NEWS, !0, !1), this.SetBtnStateByCustom(h.BackToLobby, !1, !1), this.SetBtnStateByCustom(h.Menu, !0, !1), this.SetBtnStateByCustom(h.PROFILE, !1, !1);
                        break;
                    case c.InGameNormal:
                        this.SetBtnStateByCustom(h.ACCOUNT, !1, !1), this.SetBtnStateByCustom(h.JACKPOTWINNER, !1, !1), this.SetBtnStateByCustom(h.LOGOUT, !1, !1), this.SetBtnStateByCustom(h.NEWS, !1, !1);
                        break;
                    case c.InGameDisabled:
                        this.SetBtnStateByCustom(h.ACCOUNT, !1, !1), this.SetBtnStateByCustom(h.JACKPOTWINNER, !1, !1), this.SetBtnStateByCustom(h.LOGOUT, !1, !1), this.SetBtnStateByCustom(h.INFO, !0, !1), this.SetBtnStateByCustom(h.NEWS, !0, !1), this.SetBtnStateByCustom(h.BackToLobby, !0, !1), this.SetBtnStateByCustom(h.Menu, !0, !1), this.SetBtnStateByCustom(h.PROFILE, !1, !1);
                        break;
                    case c.GuestLogin:
                        this.SetBtnStateByCustom(h.BackToLobby, !1, !1), this.SetBtnStateByCustom(h.ACCOUNT, !1, !1), this.SetBtnStateByCustom(h.JACKPOTWINNER, !0, !0), this.SetBtnStateByCustom(h.INFO, !1, !1), this.SetBtnStateByCustom(h.PROFILE, !1, !1)
                }
            }
            OnClickedMenu() {
                this.SetChildBtnMenuActive(!this.objMenuContentRoot.active)
            }
            OnClickedBackToLobby() {
                null != this.m_DelClickBackToLobby && this.m_DelClickBackToLobby.Notify()
            }
            OnClickedSound() {
                SS.Common.GameEnvironment.IsMute = !SS.Common.GameEnvironment.IsMute, this.nodeSoundOpen.active = !SS.Common.GameEnvironment.IsMute, this.nodeSoundClose.active = SS.Common.GameEnvironment.IsMute, this.SetSoundBtn(), null != this.m_DelClickSound && this.m_DelClickSound.Notify(SS.Common.GameEnvironment.IsMute)
            }
            OnClickedAccount() {
                null != this.m_DelClickAccount && this.m_DelClickAccount.Notify()
            }
            OnClickedJPHistory() {
                this.SetChildBtnMenuActive(!this.objMenuContentRoot.active), null != this.m_DelClickJPHistory && this.m_DelClickJPHistory.Notify()
            }
            OnClickedGameHistory() {
                this.SetChildBtnMenuActive(!this.objMenuContentRoot.active), null != this.m_DelClickGameHistory && this.m_DelClickGameHistory.Notify()
            }
            OnClickedInfo() {
                this.SetChildBtnMenuActive(!this.objMenuContentRoot.active), null != this.m_DelClickInfo && this.m_DelClickInfo.Notify()
            }
            OnClickedLogout() {
                null != this.m_DelClickLogout && this.m_DelClickLogout.Notify()
            }
            OnClickedFullScreen() {
                JSUtility.FullScreen.SetFullScreen(), null != this.m_DelClickFullScreen && this.m_DelClickFullScreen.Notify()
            }
            OnClickedNews() {
                console.log("Topbar OnClickNews()", "font-weight:bold;color:#CC33BB;"), null != this.m_DelClickNews && this.m_DelClickNews.Notify()
            }
        };
        n([a(cc.Node)], m.prototype, "topBarBg", void 0), n([a(cc.Button)], m.prototype, "btnBackToLobby", void 0), n([a(cc.Animation)], m.prototype, "Mob_UpUI_L_Anima", void 0), n([a(cc.Animation)], m.prototype, "Mob_UpUI_R_Anima", void 0), n([a(cc.Animation)], m.prototype, "Mob_UpUI_WordAnima", void 0), n([a(cc.Animation)], m.prototype, "Mob_RedJPFieldAnima", void 0), n([a(cc.Button)], m.prototype, "btnMenu", void 0), n([a(cc.Node)], m.prototype, "menubgNode", void 0), n([a(cc.Node)], m.prototype, "menuListNode", void 0), n([a(cc.Button)], m.prototype, "btnSound", void 0), n([a(cc.Node)], m.prototype, "nodeSoundOpen", void 0), n([a(cc.Node)], m.prototype, "nodeSoundClose", void 0), n([a(cc.Button)], m.prototype, "btnFullScreen", void 0), n([a(cc.Node)], m.prototype, "nodeFullScreenOpen", void 0), n([a(cc.Node)], m.prototype, "nodeFullScreenClose", void 0), n([a(cc.Button)], m.prototype, "btnAccount", void 0), n([a(cc.Button)], m.prototype, "btnJPWinner", void 0), n([a(cc.Button)], m.prototype, "btnInfo", void 0), n([a(cc.Button)], m.prototype, "btnLogout", void 0), n([a(cc.Button)], m.prototype, "btnGameHistory", void 0), n([a(cc.Button)], m.prototype, "btnNews", void 0), n([a(cc.Button)], m.prototype, "btnProfile", void 0), n([a(cc.Node)], m.prototype, "objTopBarRoot", void 0), n([a(cc.Node)], m.prototype, "JpRoot", void 0), n([a(cc.Node)], m.prototype, "objMenuContentRoot", void 0), n([a(i.NumberCountUp)], m.prototype, "numberAniGrand", void 0), n([a(i.NumberCountUp)], m.prototype, "numberAniMajor", void 0), n([a(i.NumberCountUp)], m.prototype, "numberAniMinor", void 0), n([a(i.NumberCountUp)], m.prototype, "numberAniMini", void 0), n([a(cc.Boolean)], m.prototype, "m_bVertical", void 0), n([a(cc.Node)], m.prototype, "JpBg", void 0), n([a(cc.Node)], m.prototype, "JpNum", void 0), n([a([cc.SpriteFrame])], m.prototype, "jpFieldSpriteFrame", void 0), n([a(cc.Sprite)], m.prototype, "jpField", void 0), m = n([r], m), o.TopbarMgr = m, cc._RF.pop()
    }, {
        "../../Net/LobbyClient": "LobbyClient",
        "./../../Component/NumberCountUp": "NumberCountUp"
    }],
    UISuperItem: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "82108rxBl5FJomdMUCrthM8", "UISuperItem");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("./UISuperLayout"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            RefreshItem(e) {
                console.warn("Please extend UISuperItem, and overried RefreshItem function!!")
            }
            get width() {
                return this.layout.vertical ? (this.layout.accommodWidth - this.layout.spacingWidth) / this.layout.column : this.node.width * this.layout.getUsedScaleValue(this.node.scaleX)
            }
            get height() {
                return this.layout.horizontal ? (this.layout.accommodHeight - this.layout.spacingWidth) / this.layout.column : this.node.height * this.layout.getUsedScaleValue(this.node.scaleY)
            }
            onLoad() {
                this.node.watchSelf = this.watchSelf.bind(this), this.node.saveOriginSize = this.saveOriginSize.bind(this);
                let e = this.node.getComponent(cc.Widget);
                e && (cc.warn("UISuperItem: item\u4e0d\u5141\u8a31\u639bcc.Widget\u7d44\u4ef6 \u8acb\u624b\u52d5\u79fb\u9664"), this.node.removeComponent(e))
            }
            saveOriginSize() {
                this.originSize = cc.size(this.width, this.height), this.node.setContentSize(this.originSize), this.originScale = cc.v2(this.node.scaleX, this.node.scaleY)
            }
            init(e) {
                this.layout = e, this.layout.node.on(i.UIChangeBrotherEvnet, this.onChangeBrother, this), this.saveOriginSize(), this.node.on(cc.Node.EventType.SIZE_CHANGED, this.watchSize, this), this.node.on(cc.Node.EventType.SCALE_CHANGED, this.watchSize, this), this.onChangeBrother()
            }
            onDestroy() {
                this.layout.node.off(i.UIChangeBrotherEvnet, this.onChangeBrother, this), this.node.off(cc.Node.EventType.SIZE_CHANGED, this.watchSize, this), this.node.off(cc.Node.EventType.SCALE_CHANGED, this.watchSize, this), this.unlisten()
            }
            onChangeBrother() {
                var e;
                let t = this.layout.getBrotherNode(this.node);
                (null == t ? void 0 : t.uuid) != (null === (e = this.brother) || void 0 === e ? void 0 : e.uuid) && (this.unlisten(), this.brother = t, this.listen(), this.watchBrother())
            }
            listen() {
                var e, t;
                null === (e = this.brother) || void 0 === e || e.on("leave", this.unlisten, this), null === (t = this.brother) || void 0 === t || t.on(cc.Node.EventType.POSITION_CHANGED, this.watchBrother, this)
            }
            unlisten() {
                var e, t;
                null === (e = this.brother) || void 0 === e || e.off("leave", this.unlisten, this), null === (t = this.brother) || void 0 === t || t.off(cc.Node.EventType.POSITION_CHANGED, this.watchBrother, this), this.brother = null
            }
            watchSize() {
                this.layout.column > 1 ? (this.node.setContentSize(this.originSize), this.node.setScale(this.originScale)) : (!this.layout.vertical || this.node.getContentSize().width == this.originSize.width && this.node.scaleX == this.originScale.x ? !this.layout.horizontal || this.node.getContentSize().height == this.originSize.height && this.node.scaleY == this.originScale.y || (cc.warn("\u6c34\u5e73\u6392\u5217\u4e0d\u5141\u8a31\u4fee\u6539\u3010\u9ad8\u5ea6\u3011"), this.node.height = this.originSize.height, this.node.scaleY = this.originScale.y) : (cc.warn("\u5782\u76f4\u6392\u5217\u4e0d\u5141\u8a31\u4fee\u6539\u3010\u5bec\u5ea6\u3011"), this.node.width = this.originSize.width, this.node.scaleX = this.originScale.x), this.brother && this.watchBrother(), this.layout.resetScrollView(), this.node.emit(cc.Node.EventType.POSITION_CHANGED)), 0 == this.node.index && this.layout.isNormalSize && this.node.setPosition(this.layout.getGroupHeader(this.node))
            }
            watchBrother() {
                this.brother && (this.layout.headerToFooter ? this.headerToFooterRelativeToFooter(this.brother) : this.footerToHeaderRelativeToFooter(this.brother))
            }
            isOutOfBoundary(e) {
                return !(!this.layout.vertical || 0 != e.y) || !(!this.layout.horizontal || 0 != e.x)
            }
            footerToHeaderWatchHeader() {
                if (this.layout.getSiblingIndex(this.node) >= this.layout.column) return;
                let e = this.layout.footer.index + 1;
                if (e >= this.layout.maxItemTotal) {
                    if (!this.layout.footerLoop || this.layout.scrollToHeaderOrFooter) return;
                    e = 0
                }
                let t = this.layout.isOutOfBoundaryFooter(this.node);
                this.isOutOfBoundary(t) && (this.node.index = e, this.layout.notifyRefreshItem(this.node), this.node.emit("leave"), this.layout.setSiblingIndex(this.node, this.layout.children.length - 1))
            }
            footerToHeaderWatchFooter() {
                if (this.layout.getSiblingIndex(this.node) < this.layout.children.length - this.layout.column) return;
                let e = this.layout.header.index - 1;
                if (e < 0) {
                    if (!this.layout.headerLoop || this.layout.scrollToHeaderOrFooter) return;
                    e = this.node.index
                }
                let t = this.layout.isOutOfBoundaryHeader(this.node);
                this.isOutOfBoundary(t) && (this.node.index = e, this.layout.notifyRefreshItem(this.node), this.node.emit("leave"), this.unlisten(), this.footerToHeaderRelativeToHeader(this.layout.header), this.layout.setSiblingIndex(this.node, 0))
            }
            headerToFooterWatchHeader() {
                if (this.layout.getSiblingIndex(this.node) >= this.layout.column) return;
                let e = this.layout.footer.index + 1;
                if (e > this.layout.maxItemTotal - 1) {
                    if (!this.layout.footerLoop || this.layout.scrollToHeaderOrFooter) return;
                    e = 0
                }
                let t = this.layout.isOutOfBoundaryHeader(this.node);
                this.isOutOfBoundary(t) && (this.node.index = e, this.layout.notifyRefreshItem(this.node), this.node.emit("leave"), this.layout.setSiblingIndex(this.node, this.layout.children.length - 1))
            }
            headerToFooterWatchFooter() {
                if (this.layout.getSiblingIndex(this.node) < this.layout.children.length - this.layout.column) return;
                let e = this.layout.header.index - 1;
                if (e < 0) {
                    if (!this.layout.headerLoop || this.layout.scrollToHeaderOrFooter) return;
                    e = this.node.index
                }
                let t = this.layout.isOutOfBoundaryFooter(this.node);
                this.isOutOfBoundary(t) && (this.node.index = e, this.layout.notifyRefreshItem(this.node), this.node.emit("leave"), this.unlisten(), this.headerToFooterRelativeToHeader(this.layout.header), this.layout.setSiblingIndex(this.node, 0))
            }
            watchSelf(e) {
                e ? this.layout.headerToFooter ? this.headerToFooterWatchFooter() : this.footerToHeaderWatchHeader() : this.layout.headerToFooter ? this.headerToFooterWatchHeader() : this.footerToHeaderWatchFooter()
            }
            footerToHeaderRelativeToHeader(e) {
                let t = this.node.getPosition();
                this.layout.vertical ? (this.layout.isGroupHeader(e) ? (t.x = this.layout.getGroupFooter(this.node).x, t.y = this.layout.getGroupBottomY(this.node, e)) : (t.x = this.layout.getGroupLeftX(this.node, e), t.y = e.y), 0 == this.node.index && (t.x = this.layout.getGroupHeader(this.node).x)) : (this.layout.isGroupHeader(e) ? (t.x = this.layout.getGroupRightX(this.node, e), t.y = this.layout.getGroupFooter(this.node).y) : (t.x = e.x, t.y = this.layout.getGroupTopY(this.node, e)), 0 == this.node.index && (t.y = this.layout.getGroupHeader(this.node).y)), this.node.setPosition(t)
            }
            footerToHeaderRelativeToFooter(e) {
                let t = this.node.getPosition();
                this.layout.vertical ? this.layout.isGroupFooter(e) ? (t.x = this.layout.getGroupHeader(this.node).x, t.y = this.layout.getGroupTopY(this.node, e)) : (t.x = this.layout.getGroupRightX(this.node, e), t.y = e.y) : this.layout.isGroupFooter(e) ? (t.x = this.layout.getGroupLeftX(this.node, e), t.y = this.layout.getGroupHeader(this.node).y) : (t.x = e.x, t.y = this.layout.getGroupBottomY(this.node, e)), this.node.setPosition(t)
            }
            headerToFooterRelativeToHeader(e) {
                let t = this.node.getPosition();
                this.layout.vertical ? (this.layout.isGroupHeader(e) ? (t.x = this.layout.getGroupFooter(this.node).x, t.y = this.layout.getGroupTopY(this.node, e)) : (t.x = this.layout.getGroupLeftX(this.node, e), t.y = e.y), 0 == this.node.index && (t.x = this.layout.getGroupHeader(this.node).x)) : (this.layout.isGroupHeader(e) ? (t.x = this.layout.getGroupLeftX(this.node, e), t.y = this.layout.getGroupFooter(this.node).y) : (t.x = e.x, t.y = this.layout.getGroupTopY(this.node, e)), 0 == this.node.index && (t.y = this.layout.getGroupHeader(this.node).y)), this.node.setPosition(t)
            }
            headerToFooterRelativeToFooter(e) {
                let t = this.node.getPosition();
                this.layout.vertical ? this.layout.isGroupFooter(e) ? (t.x = this.layout.getGroupHeader(this.node).x, t.y = this.layout.getGroupBottomY(this.node, e)) : (t.x = this.layout.getGroupRightX(this.node, e), t.y = e.y) : this.layout.isGroupFooter(e) ? (t.x = this.layout.getGroupRightX(this.node, e), t.y = this.layout.getGroupHeader(this.node).y) : (t.x = e.x, t.y = this.layout.getGroupBottomY(this.node, e)), this.node.setPosition(t)
            }
        };
        a = n([s], a), o.default = a, cc._RF.pop()
    }, {
        "./UISuperLayout": "UISuperLayout"
    }],
    UISuperLayout: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "201bcxW7fVHY4n6RfhHg5Sa", "UISuperLayout");
        var n = this && this.__decorate || function(e, t, o, n) {
                var i, s = arguments.length,
                    r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
                return s > 3 && r && Object.defineProperty(t, o, r), r
            },
            i = this && this.__awaiter || function(e, t, o, n) {
                return new(o || (o = Promise))(function(i, s) {
                    function r(e) {
                        try {
                            l(n.next(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (t) {
                            s(t)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                            e(t)
                        })).then(r, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.UISuperDirection = o.UISuperAxis = o.UIChangeBrotherEvnet = void 0;
        const s = e("./UISuperItem"),
            r = e("./UISuperScrollView"),
            {
                ccclass: a,
                property: l,
                menu: c
            } = cc._decorator;
        var h, m;
        o.UIChangeBrotherEvnet = "UIChangeBrotherEvnet",
            function(e) {
                e[e.HORIZONTAL = 0] = "HORIZONTAL", e[e.VERTICAL = 1] = "VERTICAL"
            }(h = o.UISuperAxis || (o.UISuperAxis = {})),
            function(e) {
                e[e.HEADER_TO_FOOTER = 0] = "HEADER_TO_FOOTER", e[e.FOOTER_TO_HEADER = 1] = "FOOTER_TO_HEADER"
            }(m = o.UISuperDirection || (o.UISuperDirection = {}));
        let u = class extends cc.Component {
            constructor() {
                super(...arguments), this.startAxis = h.VERTICAL, this.direction = m.HEADER_TO_FOOTER, this.paddingTop = 0, this.paddingBottom = 0, this.paddingLeft = 0, this.paddingRight = 0, this.spacing = cc.Vec2.ZERO, this.column = 2, this.multiple = 2, this.prefab = null, this.headerLoop = !1, this.footerLoop = !1, this.affectedByScale = !0, this._isinited = !1, this._maxPrefabTotal = 0, this._children = [], this._scrollView = null, this._maxItemTotal = 0, this._prevLayoutPosition = cc.Vec2.ZERO, this.scrollToHeaderOrFooter = !1
            }
            get layoutDirection() {
                let e = cc.Vec2.ZERO;
                return this.vertical ? e.y = this.node.y - this._prevLayoutPosition.y : e.x = this.node.x - this._prevLayoutPosition.x, this._prevLayoutPosition = this.node.getPosition(), e
            }
            get isScrollToFooter() {
                return this.vertical ? this.layoutDirection.y < 0 : this.layoutDirection.x > 0
            }
            get children() {
                return this._children
            }
            get maxItemTotal() {
                return this._maxItemTotal
            }
            get maxPrefabTotal() {
                return this._maxPrefabTotal
            }
            get viewSize() {
                return this.scrollView.view.getContentSize()
            }
            get vertical() {
                return this.startAxis == h.VERTICAL
            }
            get horizontal() {
                return this.startAxis == h.HORIZONTAL
            }
            get headerToFooter() {
                return this.direction == m.HEADER_TO_FOOTER
            }
            get footerToHeader() {
                return this.direction == m.FOOTER_TO_HEADER
            }
            get spacingWidth() {
                return this.spacing.x * (this.column - 1)
            }
            get spacingHeight() {
                return this.spacing.y * (this.column - 1)
            }
            get accommodWidth() {
                return this.viewSize.width - this.paddingLeft - this.paddingRight
            }
            get accommodHeight() {
                return this.viewSize.height - this.paddingTop - this.paddingBottom
            }
            get scrollView() {
                return this._scrollView || (this._scrollView = this.node.parent.parent.getComponent(r.default)), this._scrollView
            }
            get header() {
                return this._children[0]
            }
            get footer() {
                return this._children[this._children.length - 1]
            }
            get topBoundary() {
                return this.headerToFooter ? this.headerBoundaryY + this.paddingTop : this.footerBoundaryY + this.paddingTop
            }
            get bottomBoundary() {
                return this.headerToFooter ? this.footerBoundaryY - this.paddingBottom : this.headerBoundaryY - this.paddingBottom
            }
            get leftBoundary() {
                return this.headerToFooter ? this.headerBoundaryX - this.paddingLeft : this.footerBoundaryX - this.paddingLeft
            }
            get rightBoundary() {
                return this.headerToFooter ? this.footerBoundaryX + this.paddingRight : this.headerBoundaryX + this.paddingRight
            }
            get headerBoundaryX() {
                return this.headerToFooter ? this.node.x + this.header.x - this.header.anchorX * this.getScaleWidth(this.header) : this.node.x + this.header.x + (1 - this.header.anchorX) * this.getScaleWidth(this.header)
            }
            get headerBoundaryY() {
                return this.headerToFooter ? this.node.y + this.header.y + (1 - this.header.anchorY) * this.getScaleHeight(this.header) : this.node.y + this.header.y - this.header.anchorY * this.getScaleHeight(this.header)
            }
            get footerBoundaryX() {
                return this.headerToFooter ? this.node.x + this.footer.x + (1 - this.footer.anchorX) * this.getScaleWidth(this.footer) : this.node.x + this.footer.x - this.footer.anchorX * this.getScaleWidth(this.footer)
            }
            get footerBoundaryY() {
                return this.headerToFooter ? this.node.y + this.footer.y - this.footer.anchorY * this.getScaleHeight(this.footer) : this.node.y + this.footer.y + (1 - this.footer.anchorY) * this.getScaleHeight(this.footer)
            }
            get isNormalSize() {
                return this.node.getContentSize().equals(this.viewSize)
            }
            getContentSize() {
                let e = this.getReallySize(),
                    t = this.scrollView.view.getContentSize();
                return e.height < t.height && (e.height = t.height), e.width < t.width && (e.width = t.width), e
            }
            getReallySize() {
                if (0 == this.node.childrenCount) return this.viewSize;
                let e = cc.Size.ZERO;
                return this.headerToFooter ? (e.width = this.footerBoundaryX + -this.headerBoundaryX + this.paddingLeft + this.paddingRight, e.height = this.headerBoundaryY + -this.footerBoundaryY + this.paddingTop + this.paddingBottom) : (e.width = this.headerBoundaryX + -this.footerBoundaryX + this.paddingLeft + this.paddingRight, e.height = this.footerBoundaryY + -this.headerBoundaryY + this.paddingTop + this.paddingBottom), e
            }
            resetScrollView() {
                this.scrollView.reset()
            }
            getUsedScaleValue(e) {
                return this.affectedByScale ? Math.abs(e) : 1
            }
            total(e) {
                return i(this, void 0, void 0, function*() {
                    this.scrollView.stopAutoScroll(), this.scrollView.release(), this.initlized(), yield this.asyncCreateItem(e);
                    let t = this.getDataOffset(e),
                        o = this.getReallyOffset(t);
                    this.refreshItems(e, o), this._maxItemTotal = e
                })
            }
            getBrotherNode(e) {
                let t = this.getSiblingIndex(e) - 1;
                return this._children[t]
            }
            isGroupHeader(e) {
                let t = this.getGroupHeader(e),
                    o = this.vertical ? cc.v2(t.x, 0) : cc.v2(0, t.y);
                return (this.vertical ? cc.v2(e.x, 0) : cc.v2(0, e.y)).fuzzyEquals(o, 1e-4)
            }
            isGroupFooter(e) {
                let t = this.getGroupFooter(e),
                    o = this.vertical ? cc.v2(t.x, 0) : cc.v2(0, t.y);
                return (this.vertical ? cc.v2(e.x, 0) : cc.v2(0, e.y)).fuzzyEquals(o, 1e-4)
            }
            getGroupHeader(e) {
                let t = cc.Vec2.ZERO;
                return e ? (this.vertical ? this.headerToFooter ? (t.x = e.anchorX * this.getScaleWidth(e) + this.paddingLeft * e.scaleX - this.node.anchorX * this.viewSize.width * e.scaleX, t.y = (1 - e.anchorY) * -this.getScaleHeight(e) - this.paddingTop + (1 - this.node.anchorY) * this.viewSize.height) : (t.x = e.anchorX * this.getScaleWidth(e) + this.paddingLeft - this.node.anchorX * this.viewSize.width, t.y = e.anchorY * this.getScaleHeight(e) + this.paddingBottom - this.node.anchorY * this.viewSize.height) : this.headerToFooter ? (t.x = e.anchorX * this.getScaleWidth(e) + this.paddingLeft - this.node.anchorX * this.viewSize.width, t.y = (1 - e.anchorY) * -e.height - this.paddingTop + (1 - this.node.anchorY) * this.viewSize.height) : (t.x = this.accommodWidth * this.node.anchorX - this.getScaleWidth(e) * (1 - e.anchorX), t.y = (1 - e.anchorY) * -e.height - this.paddingTop + (1 - this.node.anchorY) * this.viewSize.height), t) : t
            }
            getGroupFooter(e) {
                let t = cc.Vec2.ZERO;
                return e ? (this.vertical ? (t.x = (this.accommodWidth + this.paddingLeft) * this.node.anchorX - (this.getScaleWidth(e) * (1 - e.anchorX) + this.node.anchorX * this.paddingRight), t.y = e.y) : (t.x = e.x, t.y = -((this.accommodHeight + this.paddingTop) * this.node.anchorY - this.getScaleHeight(e) * e.anchorY) + (1 - e.anchorY) * this.paddingBottom), t) : t
            }
            getGroupRightX(e, t) {
                return e && t ? t.x + this.getScaleWidth(t) * (1 - t.anchorX) + this.getScaleWidth(e) * e.anchorX + this.spacing.x : this.getGroupHeader(e).x
            }
            getGroupLeftX(e, t) {
                return e && t ? t.x - this.getScaleWidth(t) * t.anchorX - this.getScaleWidth(e) * (1 - e.anchorX) - this.spacing.x : this.getGroupFooter(e).x
            }
            getGroupBottomY(e, t) {
                return t.y - this.getScaleHeight(t) * t.anchorY - this.getScaleHeight(e) * (1 - e.anchorY) - this.spacing.y
            }
            getGroupTopY(e, t) {
                return t.y + this.getScaleHeight(t) * (1 - t.anchorY) + this.getScaleHeight(e) * e.anchorY + this.spacing.y
            }
            isOutOfBoundaryHeader(e, t = 1.5) {
                let o = e.width * this.getUsedScaleValue(e.scaleX) * t,
                    n = -e.height * this.getUsedScaleValue(e.scaleY) * t;
                return this.scrollView.getHowMuchOutOfBoundary(cc.v2(o, n))
            }
            isOutOfBoundaryFooter(e, t = 1.5) {
                let o = -e.width * this.getUsedScaleValue(e.scaleX) * t,
                    n = e.height * this.getUsedScaleValue(e.scaleY) * t;
                return this.scrollView.getHowMuchOutOfBoundary(cc.v2(o, n))
            }
            scrollToHeader(e, t) {
                this.scrollToHeaderOrFooter = e > 0, this.scrollView.stopAutoScroll(), this.resetToHeader(), this.headerToFooter ? this.vertical ? this.scrollView.scrollToTop(e, t) : this.scrollView.scrollToLeft(e, t) : this.vertical ? this.scrollView.scrollToBottom(e, t) : this.scrollView.scrollToRight(e, t)
            }
            scrollToFooter(e, t) {
                this.scrollToHeaderOrFooter = e > 0, this.scrollView.stopAutoScroll(), this.resetToFooter(), this.headerToFooter ? this.vertical ? this.scrollView.scrollToBottom(e, t) : this.scrollView.scrollToRight(e, t) : this.vertical ? this.scrollView.scrollToTop(e, t) : this.scrollView.scrollToLeft(e, t)
            }
            notifyRefreshItem(e) {
                let t = e.getComponent(s.default);
                null != t && t.RefreshItem(e.index)
            }
            getSiblingIndex(e) {
                return this._children.indexOf(e)
            }
            setSiblingIndex(e, t) {
                t = -1 !== t ? t : this._children.length - 1;
                var n = this._children.indexOf(e);
                t !== n && (this._children.splice(n, 1), t < this._children.length ? this._children.splice(t, 0, e) : this._children.push(e), this.node.emit(o.UIChangeBrotherEvnet))
            }
            onLoad() {
                this.initlized()
            }
            initlized() {
                this._isinited || (this.node.anchorX = .5, this.node.anchorY = .5, this.node.setContentSize(this.viewSize), this.node.getContentSize = this.getContentSize.bind(this), this.node.setPosition(cc.Vec2.ZERO), this.column = this.column < 1 ? 1 : this.column, this.node.on(cc.Node.EventType.POSITION_CHANGED, this.onChangePosition, this), this.scrollView.view.on(cc.Node.EventType.SIZE_CHANGED, this.resetItemSize, this), this._isinited = !0)
            }
            onDestroy() {
                this.node.off(cc.Node.EventType.POSITION_CHANGED, this.onChangePosition, this), this.scrollView.view.off(cc.Node.EventType.SIZE_CHANGED, this.resetItemSize, this)
            }
            onChangePosition() {
                let e = this.isScrollToFooter;
                this.headerToFooter ? e ? this.footerToHeaderWatchChilds(e) : this.headerToFooterWatchChilds(e) : e ? this.headerToFooterWatchChilds(e) : this.footerToHeaderWatchChilds(e), (this.vertical && 0 == this.node.y || this.horizontal && 0 == this.node.x) && this.header.setPosition(this.getGroupHeader(this.header))
            }
            resetItemSize() {
                for (let t = 0; t < this.children.length; t++) this.children[t].saveOriginSize();
                let e = this.getGroupHeader(this.header);
                this.vertical ? this.header.x = e.x : this.header.y = e.y;
                for (let t = 0; t < this.children.length; t++) this.children[t].emit(cc.Node.EventType.POSITION_CHANGED)
            }
            getScaleWidth(e) {
                return e.width * this.getUsedScaleValue(e.scaleX)
            }
            getScaleHeight(e) {
                return e.height * this.getUsedScaleValue(e.scaleY)
            }
            getTempChildren() {
                let e = [];
                for (let t = 0; t < this._children.length; t++) {
                    const o = this._children[t];
                    e.push(o)
                }
                return e
            }
            headerToFooterWatchChilds(e) {
                let t = this.getTempChildren();
                for (let o = 0; o < t.length; o++) t[o].watchSelf(e)
            }
            footerToHeaderWatchChilds(e) {
                let t = this.getTempChildren();
                for (let o = t.length - 1; o >= 0; o--) t[o].watchSelf(e)
            }
            getDataOffset(e) {
                if (this.footer && this.footer.index + 1 >= e) {
                    let t = this.footer.index + 1 - e;
                    return 0 == t ? 0 : -t
                }
                return 0 == this._maxItemTotal || e < this._maxItemTotal || this._maxItemTotal < this._maxPrefabTotal ? 0 : this.isGroupFooter(this.footer) ? 0 : e - this._maxItemTotal
            }
            getReallyOffset(e) {
                if (!this.header) return 0;
                if (e > 0) {
                    for (let t = 0; t < e; t++) {
                        if (this.isGroupFooter(this.footer)) return t;
                        let e = this.header.getPosition();
                        this.vertical ? this.isGroupFooter(this.header) ? (this.headerToFooter ? e.y = this.getGroupBottomY(this.header, this.header) : e.y = this.getGroupTopY(this.header, this.header), e.x = this.getGroupHeader(this.header).x) : e.x = this.getGroupRightX(this.header, this.header) : this.isGroupFooter(this.header) ? (this.headerToFooter ? e.x = this.getGroupRightX(this.header, this.header) : e.x = this.getGroupLeftX(this.header, this.header), e.y = this.getGroupHeader(this.header).y) : e.y = this.getGroupBottomY(this.header, this.header), this.header.setPosition(e)
                    }
                    return e
                }
                for (let t = 0; t < Math.abs(e); t++) {
                    let e = cc.Vec2.ZERO;
                    this.vertical ? this.isGroupHeader(this.header) ? (e.x = this.getGroupFooter(this.header).x, this.headerToFooter ? e.y = this.getGroupTopY(this.header, this.header) : e.y = this.getGroupBottomY(this.header, this.header)) : (e.x = this.getGroupLeftX(this.header, this.header), e.y = this.header.y) : this.isGroupHeader(this.header) ? (e.y = this.getGroupFooter(this.header).y, this.headerToFooter ? e.x = this.getGroupLeftX(this.header, this.header) : e.x = this.getGroupRightX(this.header, this.header)) : (e.y = this.getGroupTopY(this.header, this.header), e.x = this.header.x), this.header.setPosition(e)
                }
                return this.scrollView.calculateBoundary(), e
            }
            refreshItems(e, t = 0) {
                if (!this.header) return;
                let o = this.header.index - 1 + t;
                for (let n = 0; n < this._children.length; n++) {
                    const t = this._children[n];
                    ++o > e - 1 ? o = 0 : o < 0 && (o = e - 1), t.index = o, this.notifyRefreshItem(t)
                }
            }
            resetToHeader() {
                var e, t;
                for (let o = 0; o < this._children.length; o++) {
                    const e = this._children[o];
                    e.index = o, this.notifyRefreshItem(e)
                }
                this.headerLoop || this.footerLoop ? this.scrollToHeaderOrFooter || null === (t = this.header) || void 0 === t || t.setPosition(this.getGroupHeader(this.header)) : null === (e = this.header) || void 0 === e || e.setPosition(this.getGroupHeader(this.header))
            }
            resetToFooter() {
                let e = this._maxItemTotal;
                for (let o = this._children.length - 1; o >= 0; o--) {
                    var t = this._children[o];
                    t.index = --e, this.notifyRefreshItem(t)
                }
            }
            removeChilds(e) {
                let t = this.node.childrenCount - e;
                for (let i = 0; i < t; i++) {
                    var o = this.footer;
                    this.remChild(o), o.destroy(), this.node.removeChild(o)
                }
                if (!this.header) return;
                let n = this.getGroupHeader(this.header);
                this.vertical ? this.header.x = n.x : this.header.y = n.y
            }
            asyncCreateItem(e) {
                var t;
                return i(this, void 0, void 0, function*() {
                    if (null === (t = this._gener) || void 0 === t || t.return(""), this.node.childrenCount > e) return this.removeChilds(e);
                    if (this._maxPrefabTotal > 0 && this._maxPrefabTotal == this.node.childrenCount) return;
                    let o = e - this.node.childrenCount;
                    this._gener = this.getGeneratorLength(o, () => {
                        let e = cc.instantiate(this.prefab);
                        e.index = this.node.childrenCount, this.addChild(e);
                        let t, o, n = e.getComponent(s.default) || e.addComponent(s.default);
                        if (this.node.addChild(e), n.init(this), this.notifyRefreshItem(e), 1 == this.node.childrenCount) {
                            let e = this.getGroupHeader(this.header);
                            this.header.setPosition(e), this.scrollView.calculateBoundary()
                        }
                        return this.vertical ? (t = this.getReallySize().height, o = this.viewSize.height) : (t = this.getReallySize().width, o = this.viewSize.width), !(t >= o * this.multiple && this.isGroupFooter(this.footer) && (this._maxPrefabTotal = this.node.childrenCount, 1))
                    }), yield this.exeGenerator(this._gener, 10)
                })
            }
            addChild(e) {
                this._children.push(e), this.node.emit(o.UIChangeBrotherEvnet)
            }
            remChild(e) {
                let t = this._children.indexOf(e); - 1 != t && (this._children.splice(t, 1), this.node.emit(o.UIChangeBrotherEvnet))
            }* getGeneratorLength(e, t, ...o) {
                for (let n = 0; n < e; n++) {
                    if (!t(n, ...o)) return;
                    yield
                }
            }
            exeGenerator(e, t) {
                return new Promise(o => {
                    let n = e,
                        i = () => {
                            let e = (new Date).getTime();
                            for (let s = n.next();; s = n.next()) {
                                if (null == s || s.done) return void o(null);
                                if ((new Date).getTime() - e > t) return void setTimeout(() => i(), 1e3 * cc.director.getDeltaTime())
                            }
                        };
                    i()
                })
            }
        };
        n([l({
            type: cc.Enum(h),
            displayName: "\u6392\u5217\u65b9\u5411"
        })], u.prototype, "startAxis", void 0), n([l({
            type: cc.Enum(m),
            displayName: "\u6392\u5217\u5b50\u7bc0\u9ede\u7684\u65b9\u5411"
        })], u.prototype, "direction", void 0), n([l({
            displayName: "\u4e0a\u908a\u8ddd"
        })], u.prototype, "paddingTop", void 0), n([l({
            displayName: "\u4e0b\u908a\u8ddd"
        })], u.prototype, "paddingBottom", void 0), n([l({
            displayName: "\u5de6\u908a\u8ddd"
        })], u.prototype, "paddingLeft", void 0), n([l({
            displayName: "\u53f3\u908a\u8ddd"
        })], u.prototype, "paddingRight", void 0), n([l({
            displayName: "\u9593\u9694"
        })], u.prototype, "spacing", void 0), n([l({
            displayName: "\u6bcf\u7ec4item\u500b\u6578",
            tooltip: "\u55ae\u884c\u7684\u5217\u6578 \u6216 \u55ae\u5217\u7684\u884c\u6578"
        })], u.prototype, "column", void 0), n([l({
            displayName: "item\u5275\u5efa\u500d\u7387",
            tooltip: "\u76f8\u5c0d\u65bcview\u7684\u5c3a\u5bf8 \u9ed8\u8a8d2\u500d"
        })], u.prototype, "multiple", void 0), n([l({
            type: cc.Prefab,
            displayName: "item Prefab"
        })], u.prototype, "prefab", void 0), n([l({
            displayName: "\u982d\u90e8\u6ed1\u52d5\u5faa\u74b0"
        })], u.prototype, "headerLoop", void 0), n([l({
            displayName: "\u5c3e\u90e8\u6ed1\u52d5\u5faa\u74b0"
        })], u.prototype, "footerLoop", void 0), n([l], u.prototype, "affectedByScale", void 0), u = n([a, c("UISuperLayout")], u), o.default = u, cc._RF.pop()
    }, {
        "./UISuperItem": "UISuperItem",
        "./UISuperScrollView": "UISuperScrollView"
    }],
    UISuperScrollView: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "6ffadvAY41NV5TD0h+iUylz", "UISuperScrollView");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("./UISuperLayout"),
            {
                ccclass: s,
                property: r,
                menu: a
            } = cc._decorator;
        let l = class extends cc.ScrollView {
            constructor() {
                super(...arguments), this.headerOutOffset = 200, this.headerMultiple = 2, this.footerOutOffset = 200, this.footerMultiple = 2, this.pullDownEvents = [], this.pullUpEvents = [], this.isMoveHeader = !1, this.isMoveFooter = !1, this.isLockHeader = !1, this.isLockFooter = !1, this.headerProgress = 0, this.footerProgress = 0, this._layout = null
            }
            get view() {
                return this._view
            }
            set autoScrolling(e) {
                this._autoScrolling = e
            }
            get autoScrolling() {
                return this._autoScrolling
            }
            get layout() {
                return null == this._layout && (this._layout = this.content.getComponent(i.default)), this._layout
            }
            get isHeader() {
                var e, t, o, n;
                if (this.layout.headerToFooter) {
                    if (null === (e = this.layout) || void 0 === e ? void 0 : e.header) return 0 == (null === (t = this.layout) || void 0 === t ? void 0 : t.header.index)
                } else if (null === (o = this.layout) || void 0 === o ? void 0 : o.footer) return (null === (n = this.layout) || void 0 === n ? void 0 : n.footer.index) == this.layout.maxItemTotal - 1;
                return !0
            }
            get isFooter() {
                var e, t, o;
                if (this.layout.headerToFooter) {
                    if (null === (e = this.layout) || void 0 === e ? void 0 : e.footer) return this.layout.footer.index == this.layout.maxItemTotal - 1
                } else if (null === (t = this.layout) || void 0 === t ? void 0 : t.header) return 0 == (null === (o = this.layout) || void 0 === o ? void 0 : o.header.index);
                return !0
            }
            get isCalculPull() {
                return this.pullDownEvents.length > 0 || this.pullUpEvents.length > 0
            }
            calculateBoundary() {
                this._calculateBoundary()
            }
            getHowMuchOutOfBoundary(e) {
                return this._getHowMuchOutOfBoundary(e)
            }
            onLoad() {
                this.node.on(cc.Node.EventType.SIZE_CHANGED, this.onChangeSize, this)
            }
            onDestroy() {
                this.node.off(cc.Node.EventType.SIZE_CHANGED, this.onChangeSize, this)
            }
            onChangeSize() {
                let e = this.view.getComponent(cc.Widget);
                e && e.updateAlignment()
            }
            release() {
                if (this.isMoveHeader = !1, this.isMoveFooter = !1, this.isLockHeader || this.isLockFooter) {
                    let e = this.getHowMuchOutOfBoundary(),
                        t = this.vertical ? e.y : -e.x,
                        o = !0;
                    (0 == t || this.isLockHeader && t < 0 || this.isLockFooter && t > 0) && (this.clearProgress(), o = !1), this.isLockHeader = !1, this.isLockFooter = !1, o && (this._outOfBoundaryAmountDirty = !0, this._processInertiaScroll())
                } else this.clearProgress()
            }
            reset() {
                this._outOfBoundaryAmountDirty = !0, this.getHowMuchOutOfBoundary().fuzzyEquals(cc.v2(0, 0), 1e-4) || this._processInertiaScroll()
            }
            _onTouchMoved(e, t) {
                if (super._onTouchMoved(e, t), this.isCalculPull) {
                    let e = this.getHowMuchOutOfBoundary(),
                        t = this.vertical ? e.y : -e.x;
                    t > 0 && this.isHeader && !this.isLockHeader && !this.isLockFooter ? (this.headerProgress = t < 1e-4 ? 0 : t / this.headerOutOffset, this.isMoveHeader = this.headerProgress >= this.headerMultiple, this.emitPullDownEvent({
                        action: !1,
                        progress: this.headerProgress,
                        progressStage: this.isMoveHeader ? "wait" : "touch"
                    }), this.emitPullUpEvent({
                        action: !1,
                        progress: 0,
                        progressStage: "release"
                    })) : t < 0 && this.isFooter && !this.isLockFooter && !this.isLockHeader && (this.footerProgress = -t < 1e-4 ? 0 : -t / this.footerOutOffset, this.isMoveFooter = this.footerProgress >= this.footerMultiple, this.emitPullUpEvent({
                        action: !1,
                        progress: this.footerProgress,
                        progressStage: this.isMoveFooter ? "wait" : "touch"
                    }), this.emitPullDownEvent({
                        action: !1,
                        progress: 0,
                        progressStage: "release"
                    }))
                }
            }
            _dispatchEvent(e) {
                super._dispatchEvent(e), "scroll-ended" == e && (this.layout.scrollToHeaderOrFooter = !1)
            }
            _getContentTopBoundary() {
                var e;
                let t = this.view.getContentSize(),
                    o = 0;
                return o = (null === (e = this.layout) || void 0 === e ? void 0 : e.header) && this.layout.getReallySize().height > t.height ? this.layout.topBoundary : this._getContentBottomBoundary() + t.height, this.isHeader && this.isLockHeader && (o += this.headerOutOffset), o
            }
            _getContentBottomBoundary() {
                var e;
                let t = this.view.getContentSize(),
                    o = 0;
                return o = (null === (e = this.layout) || void 0 === e ? void 0 : e.footer) && this.layout.getReallySize().height > t.height ? this.layout.bottomBoundary : this.layout.node.y - this.layout.node.getAnchorPoint().y * t.height, this.isFooter && this.isLockFooter && (o -= this.footerOutOffset), o
            }
            _getContentLeftBoundary() {
                var e;
                let t = this.view.getContentSize(),
                    o = 0;
                return o = (null === (e = this.layout) || void 0 === e ? void 0 : e.header) && this.layout.getReallySize().width > t.width ? this.layout.leftBoundary : this.layout.node.x - this.layout.node.getAnchorPoint().x * t.width, this.isHeader && this.isLockHeader && (o -= this.headerOutOffset), o
            }
            _getContentRightBoundary() {
                var e;
                let t = this.view.getContentSize(),
                    o = 0;
                return o = (null === (e = this.layout) || void 0 === e ? void 0 : e.footer) && this.layout.getReallySize().width > t.width ? this.layout.rightBoundary : this._getContentLeftBoundary() + t.width, this.isFooter && this.isLockFooter && (o += this.footerOutOffset), o
            }
            _startAutoScroll(e, t, o) {
                this.isCalculPull && (this.isMoveHeader && !this.isLockHeader ? (this.isLockHeader = !0, this.vertical && (e.y -= this.headerOutOffset), this.horizontal && (e.x += this.headerOutOffset), this.emitPullDownEvent({
                    action: !0,
                    progress: this.headerProgress,
                    progressStage: "lock"
                })) : this.isMoveFooter && !this.isLockFooter && (this.isLockFooter = !0, this.vertical && (e.y += this.footerOutOffset), this.horizontal && (e.x -= this.footerOutOffset), this.emitPullUpEvent({
                    action: !0,
                    progress: this.footerProgress,
                    progressStage: "lock"
                }))), super._startAutoScroll(e, t, o)
            }
            _updateScrollBar(e) {
                if (super._updateScrollBar(e), !this.isCalculPull) return;
                if (this._autoScrollBraking) return;
                if (!this.autoScrolling) return;
                let t = this.vertical ? e.y : -e.x;
                if (t > 0) {
                    let e, o = t < 1e-4 ? 0 : t / this.headerOutOffset;
                    this.isLockHeader ? (this.headerProgress = 1 == this.headerProgress ? this.headerProgress : Math.max(o, 1), e = "lock") : (this.headerProgress = o < this.headerProgress ? o : this.headerProgress, e = "release"), this.emitPullDownEvent({
                        action: !1,
                        progress: this.headerProgress,
                        progressStage: e
                    })
                } else if (t < 0) {
                    let e, o = -t < 1e-4 ? 0 : -t / this.footerOutOffset;
                    this.isLockFooter ? (this.footerProgress = 1 == this.footerProgress ? this.footerProgress : Math.max(o, 1), e = "lock") : (this.footerProgress = o < this.footerProgress ? o : this.footerProgress, e = "release"), this.emitPullUpEvent({
                        action: !1,
                        progress: this.footerProgress,
                        progressStage: e
                    })
                } else 0 == t && (this.isLockHeader || this.isLockFooter || this.clearProgress())
            }
            clearProgress() {
                this.headerProgress = 0, this.footerProgress = 0, this.emitPullDownEvent({
                    action: !1,
                    progress: 0,
                    progressStage: "release"
                }), this.emitPullUpEvent({
                    action: !1,
                    progress: 0,
                    progressStage: "release"
                })
            }
            emitPullDownEvent(e) {
                cc.Component.EventHandler.emitEvents(this.pullDownEvents, this, e)
            }
            emitPullUpEvent(e) {
                cc.Component.EventHandler.emitEvents(this.pullUpEvents, this, e)
            }
        };
        n([r({
            displayName: "\u9802\u90e8\u504f\u79fb\u91cf",
            tooltip: "\u4e0b\u62c9\u6642\u8d85\u904e\u6b64\u504f\u79fb\u6703\u767c\u9001\u4e0b\u62c9\u4e8b\u4ef6"
        })], l.prototype, "headerOutOffset", void 0), n([r({
            displayName: "\u6ee1\u8db3\u89f8\u767cHeader\u7684\u500d\u6578"
        })], l.prototype, "headerMultiple", void 0), n([r({
            displayName: "\u5e95\u90e8\u504f\u79fb\u91cf",
            tooltip: "\u4e0a\u62c9\u6642\u8d85\u904e\u6b64\u504f\u79fb\u6703\u767c\u9001\u4e0a\u62c9\u4e8b\u4ef6"
        })], l.prototype, "footerOutOffset", void 0), n([r({
            displayName: "\u6ee1\u8db3\u89f8\u767cFooter\u7684\u500d\u6578"
        })], l.prototype, "footerMultiple", void 0), n([r({
            type: cc.Component.EventHandler,
            displayName: "\u4e0b\u62c9\u4e8b\u4ef6"
        })], l.prototype, "pullDownEvents", void 0), n([r({
            type: cc.Component.EventHandler,
            displayName: "\u4e0a\u62c9\u4e8b\u4ef6"
        })], l.prototype, "pullUpEvents", void 0), l = n([s, a("UISpuerScrollView")], l), o.default = l, cc._RF.pop()
    }, {
        "./UISuperLayout": "UISuperLayout"
    }],
    VersionDownloader: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "af979m5ZBxO27wk0MwADwfj", "VersionDownloader"), Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.VersionDownloader = void 0;
        const n = e("./SSDownloader");
        o.VersionDownloader = class extends n.default {
            constructor() {
                super(...arguments), this.OnLoad = null, this.OnError = null
            }
            Start(e, t, o) {
                this.OnLoad = t, this.OnError = o;
                let n = window.gd_nowLOGO;
                null == n && (n = parent.gd_nowLOGO), this.GetJSON(e + n + "Version.json", this.OnLoadComplete.bind(this), this.OnError.bind(this))
            }
            OnLoadComplete(e) {
                let t = this;
                try {
                    let n;
                    n = JSON.parse(e), console.log("VersionDownloader : ", n), null != t.OnLoad && t.OnLoad(n)
                } catch (o) {
                    console.error("[VersionDownloader] Load failed.\n", o), null != t.OnError && t.OnError(o)
                }
            }
        }, cc._RF.pop()
    }, {
        "./SSDownloader": "SSDownloader"
    }],
    VerticalHintMgr: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "7f914ec/ehKY5nNuEGAB3Pe", "VerticalHintMgr");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.VerticalHintMgr = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_nodeRoot = null, this.m_fucBtnCB = null, this.m_fucBtnXCB = null
            }
            show(e, t) {
                this.m_nodeRoot.active = !0, this.m_fucBtnCB = e, this.m_fucBtnXCB = t
            }
            onClickBtn() {
                this.m_nodeRoot.active = !1, this.m_fucBtnCB && this.m_fucBtnCB(), this.m_fucBtnCB = null, this.m_fucBtnXCB = null, LobbyClient.Instance.GetUserClient.recordClickLog("VerticalHintMgr", 0)
            }
            onClickXBtn() {
                this.m_nodeRoot.active = !1, this.m_fucBtnXCB && this.m_fucBtnXCB(), this.m_fucBtnCB = null, this.m_fucBtnXCB = null, LobbyClient.Instance.GetUserClient.recordClickLog("VerticalHintMgr", 1)
            }
        };
        n([s(cc.Node)], r.prototype, "m_nodeRoot", void 0), r = n([i], r), o.VerticalHintMgr = r, cc._RF.pop()
    }, {}],
    ViewResolution: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "8103f97D5pGAKmEpSDTyEfu", "ViewResolution");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("./Helper/EventSystem"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            onLoad() {
                i.EventSystem.Event(i.UpdateSafeArea).Insert(this.Update, this)
            }
            onDestroy() {
                i.EventSystem.Event(i.UpdateSafeArea).Remove(this.Update, this)
            }
            Update(e, t, o, n, i) {
                this.node.setContentSize(e.clone())
            }
        };
        a = n([s], a), o.default = a, cc._RF.pop()
    }, {
        "./Helper/EventSystem": "EventSystem"
    }],
    WaitCheckVersionState: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "72869PzQh9LJYs6LO/huZ1T", "WaitCheckVersionState");
        var n = this && this.__awaiter || function(e, t, o, n) {
            return new(o || (o = Promise))(function(i, s) {
                function r(e) {
                    try {
                        l(n.next(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function a(e) {
                    try {
                        l(n.throw(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                        e(t)
                    })).then(r, a)
                }
                l((n = n.apply(e, t || [])).next())
            })
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.WaitCheckVersionState = void 0;
        const i = e("../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            s = e("../../LobbyCommon/Net/Downloader/VersionDownloader"),
            r = e("../../LobbyCommon/Component/GlobalData"),
            a = e("../../LobbyCommon/Net/LobbyClient"),
            l = e("../../LobbyCommon/Helper/EventSystem"),
            c = e("../../LobbyCommon/Loading/Script/LoadingMgr"),
            h = e("../../LobbyCommon/Helper/Setting"),
            m = e("../../LobbyCommon/Net/ClickLog"),
            u = e("../../LobbyCommon/Net/ClickLogEnum");
        o.WaitCheckVersionState = class {
            constructor() {
                this.CheckAllModuleVersion = !1
            }
            PreUpdate() {
                if (console.log("[LobbyFSM] %c WaitCheckVersionState PreUpdate", "font-size:18px;font-weight:bold;color:orange;"), a.LobbyClient.Instance && a.LobbyClient.Instance.IsSocketErrorClose) return void i.PopupMsgMgr.Instance.ShowPopMsg(i.PopupPriority.Critical, "C14", "Lobby", "The internet was diconnected.", null);
                this.target.lastGameID = SS.Common.GameEnvironment.CurrentGameNow ? SS.Common.GameEnvironment.CurrentGameNow : "", SS.Common.GameEnvironment.CurrentGameNow = null, r.GlobalData.isDeveloper ? this.CheckVersionIsOK = !0 : this.CheckVersionFlow();
                let e = l.EventSystem.Event(l.LobbyState.CheckVersion).Length;
                0 === e && (this.CheckAllModuleVersion = !0), c.LoadingMgr.Instance.SetProgress(25, 5), l.EventSystem.Event(l.LobbyState.CheckVersion).Notify(() => {
                    --e <= 0 && (this.CheckAllModuleVersion = !0)
                }), this.target.unscheduleAllCallbacks();
                let t = 60,
                    o = h.default.GetSetting("Lobby").CheckVersion.Timeout;
                Number(o) && (t = Number(o)), this.target.scheduleOnce(() => {
                    let e = "C68-3";
                    e = !1 === this.CheckVersionIsOK ? "C68-1" : !1 === this.CheckAllModuleVersion ? "C68-2" : "C68-3", i.PopupMsgMgr.Instance.ShowPopMsg(i.PopupPriority.Critical, e, "Lobby", "Check Version Timeout")
                }, t)
            }
            Update() {
                this.CheckVersionIsOK && this.CheckAllModuleVersion && (this.CheckVersionIsOK = !1, this.target.IsFirstLogin && m.ClickLog.DirectSend(u.LogName.PlayerConversion, u.LogType_PlayerConversion.PlayerLogin, u.LogEvent_Login.WaitCheckVersionState, "Lobby"), this.target.LobbyFSM.SetCurrentState(this.target.WaitSettingState))
            }
            PostUpdate() {
                console.log("[LobbyFSM] %c WaitCheckVersionState PostUpdate", "font-size:18px;font-weight:bold;color:orange;")
            }
            CheckVersionFlow() {
                return n(this, void 0, void 0, function*() {
                    yield this.DownloadLobbyVersion().catch(e => {
                        i.PopupMsgMgr.Instance.ShowPopMsg(i.PopupPriority.Critical, "C04", "Lobby", e)
                    })
                })
            }
            DownloadLobbyVersion() {
                return n(this, void 0, void 0, function*() {
                    yield new Promise((e, t) => {
                        (new s.VersionDownloader).Start(SS.Common.GameEnvironment.S3URL + "/SSLobby/", o => {
                            try {
                                this.CheckVersion(o, e)
                            } catch (n) {
                                t(n)
                            }
                        }, e => {
                            t(e)
                        })
                    })
                })
            }
            CheckVersion(e, t) {
                console.log("lobby CheckVersion now!");
                let o, n = SS.Common.BaseFunction.GetURLParameterByName("KioskDEV"),
                    s = SS.Common.GameEnvironment.ProjectSetting;
                n && s.KioskDEVs.includes(SS.Common.BaseFunction.SHA1(n)) && (SS.Network.LoginModel.LoginInfo.kiosk_id == n ? SS.Common.GameEnvironment.IgnoreVersionCtrl = !0 : SS.Common.GameEnvironment.IgnoreVersionCtrl = !1), o = e.Version, SS.Common.GameEnvironment.IgnoreVersionCtrl ? (console.log("IgnoreVersionCtrl , client version : ", SS.Common.GameEnvironment.LobbyVersion), this.CheckVersionIsOK = !0) : e.Maintain.IsMaintainNow ? i.PopupMsgMgr.Instance.ShowPopMsg(i.PopupPriority.Critical, "C07", "Lobby", "maintain", null) : o != SS.Common.GameEnvironment.LobbyVersion ? i.PopupMsgMgr.Instance.ShowPopMsg(i.PopupPriority.Critical, "C08", "Lobby", "updateVersion", null) : this.CheckVersionIsOK = !0, t()
            }
        }, cc._RF.pop()
    }, {
        "../../LobbyCommon/Component/GlobalData": "GlobalData",
        "../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../../LobbyCommon/Helper/Setting": "Setting",
        "../../LobbyCommon/Loading/Script/LoadingMgr": "LoadingMgr",
        "../../LobbyCommon/Net/ClickLog": "ClickLog",
        "../../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum",
        "../../LobbyCommon/Net/Downloader/VersionDownloader": "VersionDownloader",
        "../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr"
    }],
    WaitIconDownload: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "75beeChz3xO+YTuATG3HWLe", "WaitIconDownload");
        var n = this && this.__awaiter || function(e, t, o, n) {
            return new(o || (o = Promise))(function(i, s) {
                function r(e) {
                    try {
                        l(n.next(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function a(e) {
                    try {
                        l(n.throw(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                        e(t)
                    })).then(r, a)
                }
                l((n = n.apply(e, t || [])).next())
            })
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.WaitIconDownload = void 0;
        const i = e("../../LobbyCommon/Loading/Script/LoadingMgr"),
            s = e("../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            r = e("../../LobbyCommon/Net/LobbyClient"),
            a = e("../../Component/GameIconMgr/Script/IconGroupData"),
            l = e("../../Component/GameIconMgr/Script/InGameJpDownloadList"),
            c = e("../../LobbyCommon/Net/Downloader/VersionDownloader"),
            h = e("../../LobbyCommon/Helper/Setting"),
            m = e("../../Component/GameIconMgr/Script/FavoriteMgr"),
            u = e("../../LobbyCommon/Skin/Skin"),
            d = e("../../LobbyCommon/Net/ClickLog"),
            p = e("../../LobbyCommon/Net/ClickLogEnum");
        o.WaitIconDownload = class {
            constructor() {
                this.tmpIconResAry = [], this.defaultJPDownloadList = [], this.isDefaultJPPrefabDownloaded = !1
            }
            PreUpdate() {
                console.log("[LobbyFSM] %c WaitIconDownload PreUpdate", "font-size:18px;font-weight:bold;color:orange;"), this.isDownaloadOK = !1, this.isGameJpBgLoadOK = !1, this.isGameJpPanelLoadOK = !1, this.isGameFeaturePanelLoadOK = !1, this.isDefaultJPPrefabDownloaded = !1, this.isError = !1, this.tmpTypeMapGameNameList = this.HandleIconSetting(), "" == SS.Common.GameEnvironment.ChangeToGameName && i.LoadingMgr.Instance.SetProgress(90, 10), this.DownloadIcon(), this.DownloadGameJp(), this.DownloadGameFeature();
                let e = 180,
                    t = h.default.GetSetting("Lobby").DownloadIcon.Timeout;
                Number(t) && (e = Number(t)), this.target.unscheduleAllCallbacks(), this.target.scheduleOnce(() => {
                    let e = "C69-6";
                    !1 === this.isDownaloadOK && (e = "C69-1"), !1 === this.isGameJpBgLoadOK && (e = "C69-2"), !1 === this.isGameJpPanelLoadOK && (e = "C69-3"), !1 === this.isGameFeaturePanelLoadOK && (e = "C69-4"), e = !1 === this.isDefaultJPPrefabDownloaded ? "C69-5" : "C69-6", s.PopupMsgMgr.Instance.ShowPopMsg(s.PopupPriority.Critical, e, "Lobby", "Download Icon Timeout")
                }, e)
            }
            Update() {
                this.isError ? (console.warn("this.isError= " + this.isError), this.isError = !1, s.PopupMsgMgr.Instance.ShowPopMsg(s.PopupPriority.Warning, this.errorCode, "Lobby", this.errorMsg)) : this.isDownaloadOK && this.isGameJpPanelLoadOK && this.isGameJpBgLoadOK && this.isGameFeaturePanelLoadOK && (this.isDownaloadOK = !1, this.isGameJpPanelLoadOK = !1, this.isGameJpBgLoadOK = !1, this.isGameFeaturePanelLoadOK = !1, this.target.tmpTypeMapGameNameList = this.tmpTypeMapGameNameList, this.target.IsFirstLogin && d.ClickLog.DirectSend(p.LogName.PlayerConversion, p.LogType_PlayerConversion.PlayerLogin, p.LogEvent_Login.WaitIconDownload, "Lobby"), this.target.LobbyFSM.SetCurrentState(this.target.IdleState), this.SetIconFlag())
            }
            SetIconFlag() {
                return n(this, void 0, void 0, function*() {
                    if (this.target.tmpMission90004 && window == top) {
                        let e = SS.Common.GameEnvironment.GameSetting.questListGameName;
                        e && (this.target.gameIconMgr.setEventFlag("ALL", e), this.target.gameIconMgr.setEventFlag("SLOT", e))
                    }
                    null != r.LobbyClient.Instance.m_CommonEventInfo_900005 && window == top && (yield u.default.Instance.Download({
                        PuzzleEggIconFlag: e => {
                            e.active = !1;
                            let t = this.getEventPuzzleGameID(r.LobbyClient.Instance.m_CommonEventInfo_900005);
                            this.target.gameIconMgr.setFishFlagByEvent("ALL", "EVENT_PUZZLE", !0, t, e), this.target.gameIconMgr.setFishFlagByEvent("FISH", "EVENT_PUZZLE", !0, t, e), this.target.gameIconMgr.setFishFlagByEvent("FAVORITE", "EVENT_PUZZLE", !0, t, e)
                        }
                    }, ["PuzzleEggIconFlag"]))
                })
            }
            getEventPuzzleGameID(e) {
                let t = [];
                if ((e = e.data).hasOwnProperty("Enable") && e.Enable && e.hasOwnProperty("QuestList") && e.QuestList.length > 0) {
                    let o = e.QuestList;
                    for (let e = 0; e < o.length; e++) {
                        let n = o[e].GameThemeID;
                        for (let e = 0; e < n.length; e++) "Puzzle" != n[e] && -1 == t.indexOf(n[e]) && t.push(n[e])
                    }
                    return t
                }
                return null
            }
            PostUpdate() {
                this.defaultJPDownloadList = null, this.tmpTypeMapGameNameList = null, this.errorCode = null, this.errorMsg = null, console.log("[LobbyFSM] %c WaitIconDownload PostUpdate", "font-size:18px;font-weight:bold;color:orange;")
            }
            HandleIconSetting() {
                console.warn("[HandleIconSetting]");
                try {
                    let t = SS.Common.GameEnvironment.GameSetting.Type;
                    this.FilterKioskDisableGame(t);
                    for (let e in t) {
                        let o = t[e];
                        if (0 == o.length && delete t[e], o.length <= 2)
                            for (let e = 0; e < o.length; e++) - 1 != o[e].indexOf("BIGICON") || (o[e] = "BIGICON_" + o[e])
                    }
                    return this.AutoChangeIconSize(t), t = this.AddFavoriteToGameType(t), this.SetLanguage(t), t
                } catch (e) {
                    this.errorMsg = e, this.errorCode = "C11", this.isError = !0, console.error(e)
                }
            }
            AddFavoriteToGameType(e) {
                m.FavoriteMgr.Instance.RegisterEvent();
                let t = e,
                    o = [];
                for (let n in t.ALL) {
                    let e = t.ALL[n].replace(/\w*_/, "");
                    e = "BIGICON_" + e, o.push(e)
                }
                return t.FAVORITE = o, t
            }
            cutPrefix(e) {
                if (-1 != e.indexOf("_")) {
                    let t = e.split("_");
                    return t[t.length - 1]
                }
                return e
            }
            FilterKioskDisableGame(e) {
                let t = SS.Common.GameEnvironment.GameSetting.kioskOpenGameList;
                for (let o in e) {
                    let n = e[o];
                    for (let e = 0; e < n.length; e++) {
                        let o = this.cutPrefix(n[e]); - 1 == t.indexOf(o) && (n.splice(e, 1), e--)
                    }
                }
                cc.log("FilterKioskDisableGame"), cc.log(e)
            }
            SetLanguage(e) {
                let t = "en" == SS.Common.GameEnvironment.Language ? "" : SS.Common.GameEnvironment.Language + "_";
                for (let o in e) {
                    let n = e[o];
                    for (let e = 0; e < n.length; e++) n[e] = t + n[e]
                }
            }
            AutoChangeIconSize(e) {
                for (let t in e) {
                    let o = e[t],
                        n = "";
                    if (1 == o.length) n = "BIGX3_";
                    else if (2 == o.length) n = "BIGX2_";
                    else {
                        if (3 != o.length && 4 != o.length) continue;
                        n = "BIGICON_"
                    }
                    for (let e = 0; e < o.length; e++) o[e] = o[e].replace(/\w*_/, n)
                }
            }
            UnLoadIcon() {
                if (null != this.target && (null != this.target.tmpNameMapIcon && (this.target.tmpNameMapIcon = []), SS.Common.GameEnvironment.IconNameMapSpriteFrame = [], this.tmpIconResAry && this.tmpIconResAry.length > 0)) {
                    for (let e = 0; e < this.tmpIconResAry.length; e++) cc.loader.release(this.tmpIconResAry[e]);
                    this.tmpIconResAry = []
                }
            }
            GetGameJpDownloadJSON(e) {
                let t = [];
                for (let o = 0; o < e.length; o++) {
                    let n = "Res/" + window.gd_nowLOGO + "/GameJp/Icon/" + e[o].gameJpKey + "/Prefab/" + e[o].iconSizeType + "_JpPanel",
                        i = "Res/" + window.gd_nowLOGO + "/GameJp/Icon/" + e[o].gameJpKey + "/Prefab/Single/" + e[o].iconSizeType + "_JpPanel",
                        s = "Res/" + window.gd_nowLOGO + "/GameJp/Icon/" + e[o].gameJpKey + "/Prefab/" + e[o].iconSizeType + "_Bg";
                    "power_link" === e[o].gameJpKey && e[o].iconLinkCount >= 2 && (s += e[o].iconLinkCount, i = n += e[o].iconLinkCount), t.push(new l.InGameJpDownloadList(e[o].lastThemeId, e[o].groupInType, e[o].iconSizeType, e[o].isUseSingleRes ? i : n, s, null, null))
                }
                return t
            }
            GetDefaultGameJpDownloadJSON() {
                let e = [],
                    t = ["BIG", "BIGX2", "BIGX3", "NORMAL"];
                for (let o = 0; o < t.length; o++) {
                    let n = "Res/" + window.gd_nowLOGO + "/GameJp/Icon/Default/Prefab/" + t[o] + "_JpPanel",
                        i = "Res/" + window.gd_nowLOGO + "/GameJp/Icon/Default/Prefab/" + t[o] + "_Bg";
                    e.push(new l.InGameJpDownloadList("", "", t[o], n, i, null, null))
                }
                return e
            }
            DownloadGameJp() {
                return n(this, void 0, void 0, function*() {
                    console.warn("[DownloadGameJp]");
                    let e = this.GetJPGroup(),
                        t = this.GetGameJpDownloadJSON(e);
                    for (console.log("groupList:", e), console.log("downloadList:", t), this.defaultJPDownloadList = this.GetDefaultGameJpDownloadJSON(), this.DownloadDefaultJp(this.defaultJPDownloadList), console.log("Default Download List: ", this.defaultJPDownloadList); !this.isDefaultJPPrefabDownloaded;) yield SS.Common.WaitForSeconds(.1);
                    this.DownloadJpPanel(e, t), this.DownloadJpBg(e, t)
                })
            }
            DownloadDefaultJp(e) {
                let t = this,
                    o = 0,
                    n = e.length;
                console.log("[Download GameJp] needDownloadCnt= " + n + ", curDownloadCnt= " + o);
                for (let i = 0; i < n; i++) cc.loader.loadRes(e[i].panelLoadPath, (s, r) => {
                    s && console.error("[GameJp Download Error] pat= " + e[i].panelLoadPath), o += 1, e[i].jpPanelPrefab = r, o >= n && (console.log("Default GameJp Download Finish!!"), t.isDefaultJPPrefabDownloaded = !0)
                })
            }
            DownloadJpPanel(e, t) {
                let o = this,
                    n = 0,
                    i = t.length;
                console.log("[Download GameJp] needDownloadCnt= " + i + ", curDownloadCnt= " + n);
                for (let s = 0; s < i; s++) cc.loader.loadRes(t[s].panelLoadPath, (r, a) => {
                    if (r) {
                        let e = !1;
                        if (this.defaultJPDownloadList.length > 0) {
                            let o = this.defaultJPDownloadList.find(e => e.iconSizeType == t[s].iconSizeType);
                            null != o && (a = o.jpPanelPrefab, e = !0)
                        }
                        if (!e) return console.error("[GameJp Download Error] pat= " + t[s].panelLoadPath), o.errorMsg = "GameJp Download Error", o.errorCode = "C56", void(o.isError = !0)
                    }
                    n += 1, t[s].jpPanelPrefab = a, n >= i && (console.log("GameJp Download Finish!!"), o.isGameJpPanelLoadOK = !0, o.isGameJpPanelLoadOK && o.isGameJpPanelLoadOK && o.ParseGroupPrefab(e, t))
                });
                i <= 0 && (this.isGameJpPanelLoadOK = !0)
            }
            DownloadJpBg(e, t) {
                let o = this,
                    n = 0,
                    i = t.length;
                console.log("[Download GameJp Bg] needDownloadCnt= " + i + ", curDownloadCnt= " + n);
                for (let s = 0; s < i; s++) cc.loader.loadRes(t[s].bgLoadPath, (r, a) => {
                    if (r) {
                        let e = !1;
                        if (this.defaultJPDownloadList.length > 0) {
                            let o = this.defaultJPDownloadList.find(e => e.iconSizeType == t[s].iconSizeType);
                            null != o && (a = o.jpBgPrefab, e = !0)
                        }
                        e || console.error("[GameJp Bg Download Error] pat= " + t[s].bgLoadPath)
                    }
                    n += 1, t[s].jpBgPrefab = a, n >= i && (console.log("GameJp_Bg Download Finish!!"), o.isGameJpBgLoadOK = !0, o.isGameJpPanelLoadOK && o.isGameJpPanelLoadOK && o.ParseGroupPrefab(e, t))
                });
                i <= 0 && (this.isGameJpBgLoadOK = !0)
            }
            GetJPGroup() {
                let e = [],
                    t = Object.keys(this.tmpTypeMapGameNameList);
                for (let o = 0; o < t.length; o++) {
                    let n = t[o];
                    console.log("GetJPGroup type= ", n);
                    let i = this.tmpTypeMapGameNameList[n];
                    console.log("GetJPGroup Games= ", i);
                    let s = this.target.gameIconMgr.SetGroup(i, n);
                    for (let e = 0; e < s.length; e++) s[e].isNeedChangeSetting && (this.tmpTypeMapGameNameList[n] = this.target.gameIconMgr.GameSettingSortChange(s[e].groupAllGameName, i));
                    s.forEach(t => {
                        e.push(t)
                    })
                }
                return e
            }
            DownloadGameFeature() {
                return n(this, void 0, void 0, function*() {
                    if (yield h.default.CheckInit(), !h.default.GetSetting("FeatureIconGame")) return;
                    let e = h.default.GetSetting("FeatureIconGame"),
                        t = this.GetFeatureGroup(e);
                    this.DownloadFeaturePanel(t)
                })
            }
            GetFeatureGroup(e) {
                let t = [],
                    o = Object.keys(this.tmpTypeMapGameNameList),
                    n = SS.Common.GameEnvironment.GameSetting.kioskOpenGameList;
                for (let i = 0; i < o.length; i++) {
                    let s = o[i];
                    console.log("type= ", s);
                    let r = this.tmpTypeMapGameNameList[s];
                    console.log("Games= ", r), r.forEach(o => {
                        let i = o.replace(/\w*_/, "");
                        if (n.indexOf(i) >= 0) {
                            let n = this.GetThemeIdByGameName(i);
                            e.forEach(e => {
                                if (e == i) {
                                    let i = this.target.gameIconMgr.GetSingleIconSize(o);
                                    t.push(new a.IconGroupData([], [e], "", n, "", s, i, 0, null, null, null, !1, !1))
                                }
                            })
                        }
                    })
                }
                return t
            }
            GetThemeIdByGameName(e) {
                if (SS.Common.GameEnvironment.GameSetting.hasOwnProperty("Icon"))
                    for (let t in SS.Common.GameEnvironment.GameSetting.Icon)
                        if (SS.Common.GameEnvironment.GameSetting.Icon[t].GameName == e) return t;
                return ""
            }
            DownloadFeaturePanel(e) {
                let t = this,
                    o = 0,
                    n = e.length;
                console.log("[Download FeaturePanel] needDownloadCnt= " + n + ", curDownloadCnt= " + o);
                for (let i = 0; i < e.length; i++) {
                    let s = "Res/" + window.gd_nowLOGO + "/GameFeature/Icon/" + e[i].groupAllGameName[0] + "/Prefab/" + e[i].iconSizeType + "_Panel";
                    cc.loader.loadRes(s, (r, a) => {
                        r && console.error("Load feature panel false, path = " + s), o += 1, e[i].featurePanel = a, o >= n && (console.log("GameFeature_Panel Download Finish!!"), this.target.gameIconMgr.AddIconGroupDatas(e), t.isGameFeaturePanelLoadOK = !0)
                    })
                }
                n <= 0 && (this.isGameFeaturePanelLoadOK = !0)
            }
            ParseGroupPrefab(e, t) {
                e.forEach(e => {
                    for (let o = 0; o < t.length; o++) e.groupInType == t[o].groupInType && e.iconSizeType == t[o].iconSizeType && e.lastThemeId == t[o].gameThemeId && (e.jpBg = t[o].jpBgPrefab, e.jpPanel = t[o].jpPanelPrefab)
                }), this.target.gameIconMgr.AddIconGroupDatas(e), console.warn("[GroupList] ", e)
            }
            DownloadIcon() {
                return n(this, void 0, void 0, function*() {
                    let e;
                    console.warn("[DownloadIcon]");
                    let t = (new Date).getTime().toString();
                    e = SS.Common.GameEnvironment.ProjectSetting.CDN_HOST ? window.location.protocol + "//" + SS.Common.GameEnvironment.ProjectSetting.CDN_HOST : "../../..", yield new Promise((e, o) => {
                        (new c.VersionDownloader).Start(SS.Common.GameEnvironment.S3URL + "/Icons/", n => {
                            try {
                                n && n.Version && (t = n.Version), e(null)
                            } catch (i) {
                                o(i)
                            }
                        }, e => {
                            o(e)
                        })
                    }).catch(e => {
                        console.warn("No Icon Version! Use TimeStamp!"), console.warn(e)
                    });
                    try {
                        let i = this.GetDownloadIconList(this.tmpTypeMapGameNameList),
                            s = i.length;
                        if (0 === s) return void(this.isDownaloadOK = !0);
                        let r = 0;
                        for (let n = 0; n < s; n++) {
                            var o = e + "/Icons/" + i[n] + ".png?" + t;
                            cc.assetManager.loadRemote(o, {
                                cacheAsset: !0,
                                cacheEnabled: !0
                            }, (e, t) => {
                                if (e) return this.errorMsg = e.message, this.errorCode = "C12", void(this.isError = !0);
                                console.log("tex ", t), this.tmpIconResAry.push(t);
                                let o = new cc.SpriteFrame(t);
                                this.target.tmpNameMapIcon[i[n]] = o, SS.Common.GameEnvironment.IconNameMapSpriteFrame[i[n]] = o, ++r == s && (this.isDownaloadOK = !0, i = null)
                            })
                        }
                    } catch (n) {
                        this.errorMsg = n, this.errorCode = "C12", this.isError = !0
                    }
                })
            }
            GetDownloadIconList(e) {
                let t = this,
                    o = [],
                    n = [];
                for (let s in e) e[s].forEach(e => {
                    -1 === n.indexOf(e) && n.push(e), SS.Common.GameEnvironment.IconNameMapSpriteFrame[e] ? t.target.tmpNameMapIcon[e] || (t.target.tmpNameMapIcon[e] = SS.Common.GameEnvironment.IconNameMapSpriteFrame[e]) : -1 === o.indexOf(e) && o.push(e)
                });
                let i = [];
                for (let s in SS.Common.GameEnvironment.IconNameMapSpriteFrame) - 1 === n.indexOf(s) && i.push(s);
                return i.forEach(e => {
                    SS.Common.GameEnvironment.IconNameMapSpriteFrame[e] = null, delete SS.Common.GameEnvironment.IconNameMapSpriteFrame[e]
                }), i = null, n = null, o
            }
        }, cc._RF.pop()
    }, {
        "../../Component/GameIconMgr/Script/FavoriteMgr": "FavoriteMgr",
        "../../Component/GameIconMgr/Script/IconGroupData": "IconGroupData",
        "../../Component/GameIconMgr/Script/InGameJpDownloadList": "InGameJpDownloadList",
        "../../LobbyCommon/Helper/Setting": "Setting",
        "../../LobbyCommon/Loading/Script/LoadingMgr": "LoadingMgr",
        "../../LobbyCommon/Net/ClickLog": "ClickLog",
        "../../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum",
        "../../LobbyCommon/Net/Downloader/VersionDownloader": "VersionDownloader",
        "../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../../LobbyCommon/Skin/Skin": "Skin"
    }],
    WaitInitAckState: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "b091441lXlG0rhfmoHx/90s", "WaitInitAckState");
        var n = this && this.__awaiter || function(e, t, o, n) {
            return new(o || (o = Promise))(function(i, s) {
                function r(e) {
                    try {
                        l(n.next(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function a(e) {
                    try {
                        l(n.throw(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                        e(t)
                    })).then(r, a)
                }
                l((n = n.apply(e, t || [])).next())
            })
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.WaitInitAckState = void 0;
        const i = e("../../LobbyCommon/Net/LobbyClient"),
            s = e("../../LobbyCommon/Loading/Script/LoadingMgr"),
            r = e("../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            a = e("../../LobbyCommon/EventModule/EventBannerData"),
            l = e("../../LobbyCommon/PopUpMgr/Scripts/PriorityCustomEvent"),
            c = e("../../LobbyCommon/Helper/Download"),
            h = e("../../LobbyCommon/EventModule/SessionBonus/Script/SessionDataCtrl"),
            m = e("../../LobbyCommon/Helper/EventSystem"),
            u = e("../../LobbyCommon/Helper/Setting"),
            d = e("../../LobbyCommon/Net/ClickLogEnum"),
            p = e("../../LobbyCommon/Net/ClickLog"),
            g = e("../../LobbyCommon/Define/CustomConfig");
        o.WaitInitAckState = class {
            constructor() {
                this.isSendEventQuest = !1, this.extraCompsResultIsError = !1, this.isRecvUserInfo = !1, this.isSetDefaultLoadpage = !1, this.AllModuleGetCommand = !1, this.jsAvatarItemSetting = null
            }
            GetDefaultSplashSRC() {
                return "" != SS.Common.GameEnvironment.ChangeToGameName ? "Login" == SS.Common.GameEnvironment.ChangeToGameName ? (console.log("[Game To Login]"), SS.Common.GameEnvironment.OriginalSplashSRC) : (console.log("[Game To Game]"), SS.Common.GameEnvironment.GetIsGameIsVertical(SS.Common.GameEnvironment.ChangeToGameName) ? SS.Common.GameEnvironment.verticalSplashSRC : SS.Common.GameEnvironment.OriginalSplashSRC) : (console.log("[Game To Lobby]"), SS.Common.GameEnvironment.OriginalSplashSRC)
            }
            PreUpdate() {
                console.log("[LobbyFSM] %c WaitInitAckState PreUpdate", "font-size:18px;font-weight:bold;color:orange;"), "" == SS.Common.GameEnvironment.ChangeToGameName ? SS.Common.GameEnvironment.Splash.src != this.GetDefaultSplashSRC() ? this.ChangeDefaultLoadpage() : (this.isSetDefaultLoadpage = !0, s.LoadingMgr.Instance.SetProgress(80, 10)) : this.isSetDefaultLoadpage = !0, this.isRecvInGameJValue = !1, this.isRecvJpValue = !1, this.isRecvUserProperty = !1, this.isRecvLobbyInfo = !1, this.isRecvKioskGameSetting = !1, this.userPropertyIsError = !1, this.isInGameJpIsError = !1, this.lobbyInfoIsError = !1, this.kioskGameSettingIsError = !1, this.isRecvBannerInfo = !1, this.isBannerCmdError = !1, this.isRecvPopupInfo = !1, this.isPopupCmdError = !1, this.userInfoIsError = !1, i.LobbyClient.Instance.GetUserClient.GetLobbyInfo(this.RecvLobbyInfo.bind(this)), this.WaitLobbyInfo()
            }
            WaitLobbyInfo() {
                return n(this, void 0, void 0, function*() {
                    for (; !this.isRecvLobbyInfo;) yield SS.Common.WaitForSeconds(.5);
                    const {
                        enablePlayerSystem: e,
                        enableExtraComps: t,
                        enableSessionBonus: o
                    } = g.CustomConfig.Instance.lobbyOption;
                    i.LobbyClient.Instance.GetJPSystem.SendGetJPValCmd(this.RecvJPValCmd.bind(this)), i.LobbyClient.Instance.GetJPSystem.SendGetInGameJpValCmd(this.RecvInGameJPValCmd.bind(this)), i.LobbyClient.Instance.GetUserClient.GetUserProperty(this.RecvUserProperty.bind(this)), e && i.LobbyClient.Instance.GetUserClient.GetUserInfor(SS.Network.LoginModel.LoginInfo.pin_ark_id, this.RecvUserInfo.bind(this)), i.LobbyClient.Instance.GetUserClient.GetKioskGameSetting(this.RecvKioskGameSetting.bind(this)), i.LobbyClient.Instance.GetUserClient.SendUserCellPhoneVerify(this.RecvUserCellPhoneVerify.bind(this)), i.LobbyClient.Instance.GetUserClient.SendSmsSetting(this.RecvSmsSetting.bind(this)), t && i.LobbyClient.Instance.GetUserClient.getExtraCompsResult(this.RecvExtraCompsResult.bind(this)), i.LobbyClient.Instance.GetJPSystem.OnChangeJpValCmdSignal.add(this.RecvJPValCmd, this), i.LobbyClient.Instance.GetUserClient.GetClientPopUpAdv(this.RecvClientPopUp.bind(this)), i.LobbyClient.Instance.GetUserClient.GetClientBannerAdv(this.RecvClientBanner.bind(this)), o && (h.SessionDataCtrl.Instance.Init(), h.SessionDataCtrl.Instance.GetSessionBonusInfo()), this.target.unscheduleAllCallbacks();
                    let n = m.EventSystem.Event(m.LobbyState.WaitPacket).Length;
                    0 === n && (this.AllModuleGetCommand = !0), m.EventSystem.Event(m.LobbyState.WaitPacket).Notify(() => {
                        --n <= 0 && (this.AllModuleGetCommand = !0)
                    });
                    let s = 60,
                        a = u.default.GetSetting("Lobby").WaitPacket.Timeout;
                    Number(a) && (s = Number(a)), this.target.scheduleOnce(() => {
                        let e = "C70-15";
                        e = !1 === this.isRecvUserProperty ? "C70-1" : !1 === this.isRecvLobbyInfo ? "C70-2" : !1 === this.isRecvKioskGameSetting ? "C70-3" : !1 === this.isRecvBannerInfo ? "C70-4" : !1 === this.isRecvPopupInfo ? "C70-5" : !1 === this.AllModuleGetCommand ? "C70-6" : !1 === this.isRecvJpValue ? "C70-7" : !1 === this.isRecvInGameJValue ? "C70-8" : !1 === this.isSetDefaultLoadpage ? "C70-9" : !1 === this.isRecvCommonEventInfo ? "C70-10" : !1 === this.isRecvPuzzleQuestInfo ? "C70-11" : !1 === this.isRecvUserCellPhoneVerify ? "C70-12" : !1 === this.isRecvSmsSetting ? "C70-13" : !1 === this.isRecvUserInfo ? "C70-14" : "C70-15", r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Critical, e, "Lobby", "Wait Packet Timeout")
                    }, s)
                })
            }
            ChangeDefaultLoadpage() {
                console.warn("[ChangeDefaultLoadpage]");
                let e = this,
                    t = new Image;
                var o = document.getElementById("splash");
                o && (o.style.display = "block"), s.LoadingMgr.Instance.CloseLoading(), t.onload = function() {
                    SS.Common.GameEnvironment.ResetOrientationchange(!1), e.isSetDefaultLoadpage = !0;
                    let o = document.getElementById("splash");
                    o.src = t.src, SS.Common.GameEnvironment.Splash = o, e.FinishLoadPage()
                }, t.onerror = function() {
                    r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Warning, "C44", this.gameName, "Load Error", null)
                }, this.SetSplashScale(), t.src = this.GetDefaultSplashSRC()
            }
            FinishLoadPage() {
                console.warn("[FinishLoadPage]"), s.LoadingMgr.Instance.OpenLoading(), s.LoadingMgr.Instance.SetProgress(80, 10), document.getElementById("splash").style.display = "none"
            }
            SetSplashScale() {
                SS.Common.GameEnvironment.Splash && (SS.Common.GameEnvironment.Splash.style.width = "100%", SS.Common.GameEnvironment.Splash.style.height = "auto")
            }
            Update() {
                this.isRecvLobbyInfo && !this.isSendEventQuest && (this.isSendEventQuest = !0, i.LobbyClient.Instance.GetUserClient.getCommonEventInfo(this.RecvCommonEventInfo.bind(this)), i.LobbyClient.Instance.GetUserClient.getPuzzleQuestInfo(this.RecvPuzzleQuestInfo.bind(this)));
                const {
                    enablePlayerSystem: e,
                    enableExtraComps: t
                } = g.CustomConfig.Instance.lobbyOption;
                if (this.isRecvUserProperty && this.isRecvLobbyInfo && this.isRecvKioskGameSetting && this.isRecvCommonEventInfo && this.isRecvPuzzleQuestInfo && this.isRecvPuzzleQuestRank && this.isRecvUserCellPhoneVerify && this.isRecvSmsSetting && (this.isRecvExtraCompsResult || !t) && this.isRecvBannerInfo && this.isRecvPopupInfo && (this.isRecvUserInfo || !e) && this.AllModuleGetCommand) {
                    if (this.userPropertyIsError || this.isInGameJpIsError || this.lobbyInfoIsError || this.kioskGameSettingIsError || this.getMissionEventIsError || this.getCommonEventIsError || this.userCellPhoneVerifyIsError || this.smsSettingIsError || this.extraCompsResultIsError || this.userInfoIsError) return this.userPropertyIsError = this.isInGameJpIsError = this.lobbyInfoIsError = this.kioskGameSettingIsError = this.getMissionEventIsError = this.getCommonEventIsError = this.userCellPhoneVerifyIsError = this.smsSettingIsError = this.extraCompsResultIsError = this.userInfoIsError = !1, this.isRecvUserProperty = this.isRecvLobbyInfo = this.isRecvKioskGameSetting = this.isRecvCommonEventInfo = this.isRecvPuzzleQuestInfo = this.isRecvPuzzleQuestRank = this.isRecvUserCellPhoneVerify = this.isRecvSmsSetting = this.isRecvUserInfo = !1, console.error("[ShowPopMsg]"), void r.PopupMsgMgr.Instance.ShowPopMsg(r.PopupPriority.Warning, this.errorCode, "Lobby", this.reason);
                    console.log("-----------------------------------------"), console.log("isRecvJpValue= " + this.isRecvJpValue), console.log("isRecvInGameJValue= " + this.isRecvInGameJValue), console.log("isRecvUserProperty= " + this.isRecvUserProperty), console.log("isRecvLobbyInfo= " + this.isRecvLobbyInfo), console.log("isRecvKioskGameSetting= " + this.isRecvKioskGameSetting), console.log("isRecvCommonEventInfo= " + this.isRecvCommonEventInfo), console.log("isRecvPuzzleQuestInfo= " + this.isRecvPuzzleQuestInfo), console.log("isRecvUserCellPhoneVerify= " + this.isRecvUserCellPhoneVerify), console.log("isRecvSmsSetting= " + this.isRecvSmsSetting), console.log("isRecvPopupInfo= " + this.isRecvPopupInfo), console.log("isRecvBannerInfo= " + this.isRecvBannerInfo), console.log("isRecvUserInfo= " + this.isRecvUserInfo), this.isRecvJpValue && this.isRecvInGameJValue && this.isSetDefaultLoadpage && (this.isRecvJpValue = this.isRecvInGameJValue = this.isRecvUserProperty = this.isRecvLobbyInfo = this.isRecvKioskGameSetting = this.isRecvCommonEventInfo = this.isRecvPuzzleQuestInfo = this.isRecvUserCellPhoneVerify = this.isRecvSmsSetting = !1, this.isRecvPopupInfo = this.isRecvBannerInfo = !1, m.EventSystem.Event(m.LobbyState.RecvAllPacket).Notify(), console.log("[SetCurrentState] to WaitResDownload"), this.target.IsFirstLogin && p.ClickLog.DirectSend(d.LogName.PlayerConversion, d.LogType_PlayerConversion.PlayerLogin, d.LogEvent_Login.WaitInitAckState, "Lobby"), this.target.LobbyFSM.SetCurrentState(this.target.WaitResDownload))
                }
            }
            PostUpdate() {
                console.log("[LobbyFSM] %c WaitInitAckState PostUpdate", "font-size:18px;font-weight:bold;color:orange;"), i.LobbyClient.Instance.GetJPSystem && i.LobbyClient.Instance.GetJPSystem.OnChangeJpValCmdSignal.remove(this.RecvJPValCmd, this)
            }
            RecvInGameJPValCmd(e) {
                console.warn("[RecvInGameJPValCmd]"), console.warn(e);
                let t = e.result;
                t == ArkSDK.HttpResult.OK ? (console.log("[LobbyMgr.RecvInGameJPValCmd] Success. data: ", e), this.target.gameJpMgr.ParseInGameJpVal(e.data), this.isRecvInGameJValue = !0) : (t == ArkSDK.HttpResult.Abort ? this.errorCode = "S347" : t == ArkSDK.HttpResult.Condition ? this.errorCode = "S348" : t == ArkSDK.HttpResult.Error ? this.errorCode = "S349" : t == ArkSDK.HttpResult.NotReset ? this.errorCode = "S350" : t == ArkSDK.HttpResult.Status ? this.errorCode = "S351" : t == ArkSDK.HttpResult.Timeout ? this.errorCode = "S352" : this.errorCode = "S353", this.isInGameJpIsError = !0, this.errorMsg = "The Internet was lost! Please login again!", this.reason = t)
            }
            RecvJPValCmd(e, t, o, n, i) {
                console.log("[RecvJPValCmd]", e, t, o, n), console.warn(e, t, o, n, i), SS.Common.GameEnvironment.exchange_rate = i, this.target.topBarMgr ? this.target.topBarMgr.ChangeJPVal(e, t, o, n, !0) : this.target.SaveJpVal(e, t, o, n, !0), this.isRecvJpValue = !0
            }
            RecvUserProperty(e, t) {
                console.warn("[RecvUserProperty]"), e == ArkSDK.HttpResult.OK && t && t.cmd_data && t.cmd_data.data ? (console.log("[LobbyMgr.RecvUserProperty] Success. data: ", t.cmd_data.data), this.target.UserEntries = t.cmd_data.data.entries, this.target.UserWinnings = t.cmd_data.data.winnings) : (e == ArkSDK.HttpResult.Abort ? this.errorCode = "S145" : e == ArkSDK.HttpResult.Condition ? this.errorCode = "S146" : e == ArkSDK.HttpResult.Error ? this.errorCode = "S53" : e == ArkSDK.HttpResult.NotReset ? this.errorCode = "S147" : e == ArkSDK.HttpResult.Status ? this.errorCode = "S148" : e == ArkSDK.HttpResult.Timeout ? this.errorCode = "S52" : t && t.cmd_data && -9 == t.cmd_data.result ? this.errorCode = "S54" : this.errorCode = "S55", this.userPropertyIsError = !0, this.errorMsg = "The Internet was lost! Please login again!", this.reason = t), this.isRecvUserProperty = !0
            }
            RecvLobbyInfo(e, t) {
                console.warn("[RecvLobbyInfo]"), 0 == e && t && t.cmd_data && t.cmd_data.data ? (console.log("[LobbyMgr.RecvLobbyInfo]  Success. data: ", t.cmd_data.data), this.target.tmpLobbyInfo = t.cmd_data.data, SS.Common.GameEnvironment.IsShowDonate = this.target.tmpLobbyInfo.donate, this.target.tmpLobbyInfo.hasOwnProperty("score_box") ? (SS.Common.GameEnvironment.IsUseScoreBox = this.target.tmpLobbyInfo.score_box, console.warn("isOpen scoreBox ? " + SS.Common.GameEnvironment.IsUseScoreBox)) : (SS.Common.GameEnvironment.IsUseScoreBox = !0, console.warn("default scoreBox is open!!")), this.target.tmpLobbyInfo.hasOwnProperty("shutter") ? (SS.Common.GameEnvironment.IsUseShutter = this.target.tmpLobbyInfo.shutter, console.warn("shutter is " + SS.Common.GameEnvironment.IsUseShutter)) : console.warn("shutter is False!!"), this.target.tmpLobbyInfo.hasOwnProperty("shutter_skill") ? (SS.Common.GameEnvironment.IsUseSlotSkillGame = this.target.tmpLobbyInfo.shutter_skill, console.warn("shutter_skill is " + SS.Common.GameEnvironment.IsUseShutter)) : console.warn("shutter_skill is False!!"), this.target.tmpLobbyInfo.hasOwnProperty("preview_mode") ? (SS.Common.GameEnvironment.PrizeViewerMode = 1 == this.target.tmpLobbyInfo.preview_mode, console.warn("preview_mode is " + SS.Common.GameEnvironment.PrizeViewerMode)) : (SS.Common.GameEnvironment.PrizeViewerMode = !1, console.warn("preview_mode is False!!")), this.target.tmpLobbyInfo.hasOwnProperty("preview_seconds") ? (SS.Common.GameEnvironment.PrizeViewerSec = this.target.tmpLobbyInfo.preview_seconds, console.warn("preview_seconds is " + SS.Common.GameEnvironment.PrizeViewerSec)) : (SS.Common.GameEnvironment.PrizeViewerSec = 0, console.warn("preview_seconds is not found!!")), this.target.tmpLobbyInfo.hasOwnProperty("ingame_jp_info") && (SS.Common.GameEnvironment.InGameJpInfoDict = this.target.tmpLobbyInfo.ingame_jp_info, console.warn("[ingame_jp_info]", SS.Common.GameEnvironment.InGameJpInfoDict)), this.target.tmpLobbyInfo.hasOwnProperty("allow_state") && (ArkSDK.ArkClient.allowState = this.target.tmpLobbyInfo.allow_state), this.target.tmpLobbyInfo.hasOwnProperty("skill_game_enable") && (this.target.isEnableSkillGame = this.target.tmpLobbyInfo.skill_game_enable), this.target.tmpLobbyInfo.hasOwnProperty("skill_game_rate") && (this.target.skillGamelostRate = this.target.tmpLobbyInfo.skill_game_rate)) : (e == ArkSDK.HttpResult.Abort ? this.errorCode = "S149" : e == ArkSDK.HttpResult.Condition ? this.errorCode = "S152" : e == ArkSDK.HttpResult.Error ? this.errorCode = "S43" : e == ArkSDK.HttpResult.NotReset ? this.errorCode = "S151" : e == ArkSDK.HttpResult.Status ? this.errorCode = "S150" : e == ArkSDK.HttpResult.Timeout ? this.errorCode = "S42" : t && t.cmd_data && t.cmd_data.result ? -1 == t.cmd_data.result ? this.errorCode = "S44" : -2 == t.cmd_data.result ? this.errorCode = "S45" : -3 == t.cmd_data.result ? this.errorCode = "S46" : -4 == t.cmd_data.result && (this.errorCode = "S47") : this.errorCode = "S48", this.lobbyInfoIsError = !0, this.errorMsg = "The Internet was lost! Please login again!", this.reason = t), this.isRecvLobbyInfo = !0
            }
            RecvKioskGameSetting(e, t) {
                console.warn("[RecvKioskGameSetting]"), e == ArkSDK.HttpResult.OK && t && t.cmd_data && t.cmd_data.data ? (console.log("[LobbyMgr.RecvKioskGameSetting]  Success. data: ", t.cmd_data.data), SS.Common.GameEnvironment.GameSetting.DisableGame = t.cmd_data.data.disable_game_list, SS.Common.GameEnvironment.GameSetting.DisableType = t.cmd_data.data.disable_game_type_list, SS.Common.GameEnvironment.GameSetting.LockGame = t.cmd_data.data.lock_game_list) : (e == ArkSDK.HttpResult.Abort ? this.errorCode = "S153" : e == ArkSDK.HttpResult.Condition ? this.errorCode = "S154" : e == ArkSDK.HttpResult.Error ? this.errorCode = "S73" : e == ArkSDK.HttpResult.NotReset ? this.errorCode = "S155" : e == ArkSDK.HttpResult.Status ? this.errorCode = "S156" : e == ArkSDK.HttpResult.Timeout ? this.errorCode = "S72" : t && t.cmd_data && t.cmd_data.result && -19 == t.cmd_data.result ? this.errorCode = "S74" : this.errorCode = "S75", this.kioskGameSettingIsError = !0, this.errorMsg = "The Internet was lost! Please login again!", this.reason = t), this.isRecvKioskGameSetting = !0
            }
            RecvMissionBonusInfo(e, t) {
                e == ArkSDK.HttpResult.OK && t && t.cmd_data && t.cmd_data.data ? (console.log("[LobbyMgr.RecvMissionBonusInfo]  Success. data: ", t.cmd_data.data), 0 == t.cmd_data.result ? i.LobbyClient.Instance.tmpMissionInfo = JSON.stringify(t.cmd_data.data) : i.LobbyClient.Instance.tmpMissionInfo = null) : (this.ShowEventErrorMsg(e, t), this.getMissionEventIsError = !0), this.isRecvMissionInfo = !0
            }
            RecvCommonEventInfo(e, t) {
                if (console.warn("RecvCommonEventInfo:" + e), console.warn(t), e == ArkSDK.HttpResult.OK && t && t.cmd_data) {
                    let e = t.cmd_data[900004];
                    e && (console.warn(e), 0 == e.result ? i.LobbyClient.Instance.m_CommonEventInfo_900004 = JSON.stringify(e.data) : i.LobbyClient.Instance.m_CommonEventInfo_900004 = null)
                } else this.ShowEventErrorMsg(e, t), this.getCommonEventIsError = !0;
                this.isRecvCommonEventInfo = !0
            }
            RecvPuzzleQuestInfo(e, t) {
                if (console.warn("RecvPuzzleQuestInfo:" + e), console.warn(t), e == ArkSDK.HttpResult.OK && t && t.cmd_data) {
                    let e = t.cmd_data[900005];
                    if (e) {
                        console.warn(e);
                        let t = e.data.QuestList;
                        0 == e.result && t.length > 0 ? (i.LobbyClient.Instance.m_CommonEventInfo_900005 = e, this.SendGetPuzzleRank(e)) : (i.LobbyClient.Instance.m_CommonEventInfo_900005 = null, this.isRecvPuzzleQuestRank = !0)
                    } else this.isRecvPuzzleQuestRank = !0
                } else this.isRecvPuzzleQuestRank = !0, this.ShowEventErrorMsg(e, t), this.getCommonEventIsError = !0;
                this.isRecvPuzzleQuestInfo = !0
            }
            SendGetPuzzleRank(e) {
                if ((e = e.data).hasOwnProperty("Enable") && e.Enable && e.hasOwnProperty("QuestList") && e.QuestList.length > 0 && e.hasOwnProperty("UserQuestData"))
                    for (let t = 0; t < e.QuestList.length; t++) {
                        let o = e.QuestList[t];
                        if ("Puzzle" == o.GameThemeID[0]) {
                            let e = o.RankListID,
                                t = o.CustomInfo.RankLimit;
                            i.LobbyClient.Instance.GetUserClient.getPuzzleRank(e, t, this.RecvPuzzleRank.bind(this));
                            break
                        }
                    } else this.isRecvPuzzleQuestRank = !0
            }
            RecvPuzzleRank(e, t) {
                console.warn("RecvPuzzleRank:" + e), console.warn(t), e == ArkSDK.HttpResult.OK && t && t.cmd_data ? 0 == t.cmd_data.result && (console.warn(t.cmd_data), i.LobbyClient.Instance.m_CommonEventInfo_900005_Rank = t.cmd_data) : (this.ShowEventErrorMsg(e, t), this.getCommonEventIsError = !0), this.isRecvPuzzleQuestRank = !0
            }
            ShowEventErrorMsg(e, t) {
                e == ArkSDK.HttpResult.Abort ? this.errorCode = "S176" : e == ArkSDK.HttpResult.Condition ? this.errorCode = "S177" : e == ArkSDK.HttpResult.Error ? this.errorCode = "S180" : e == ArkSDK.HttpResult.NotReset ? this.errorCode = "S178" : e == ArkSDK.HttpResult.Status ? this.errorCode = "S179" : e == ArkSDK.HttpResult.Timeout ? this.errorCode = "S181" : this.errorCode = "S182", this.errorMsg = "The Internet was lost! Please login again!", this.reason = t
            }
            RecvUserCellPhoneVerify(e, t) {
                if (console.warn("RecvUserCellPhoneVerify : " + e), console.warn(t), e == ArkSDK.HttpResult.OK && t && t.cmd_data) {
                    if (0 == t.cmd_data.result && (SS.Common.GameEnvironment.IsUseCellPhoneVerify = t.cmd_data.data.is_show, SS.Common.GameEnvironment.IsUseCellPhoneVerify)) {
                        this.target.getBonusMgr.LayoutStartInit();
                        let e = () => {
                                this.target.getBonusMgr.OpenGetBonusPanel(), this.target.popUpMgr.ClosePopup()
                            },
                            t = new a.EventBannerData("getBonusKey", -1, e);
                        t.m_bValid = !0, this.target.m_arrEventBannerData.push(t)
                    }
                } else e == ArkSDK.HttpResult.Abort ? this.errorCode = "S311" : e == ArkSDK.HttpResult.Condition ? this.errorCode = "S312" : e == ArkSDK.HttpResult.Error ? this.errorCode = "S313" : e == ArkSDK.HttpResult.NotReset ? this.errorCode = "S314" : e == ArkSDK.HttpResult.Status ? this.errorCode = "S315" : e == ArkSDK.HttpResult.Timeout ? this.errorCode = "S316" : this.errorCode = "S317", this.userCellPhoneVerifyIsError = !0, this.errorMsg = "The Internet was lost! Please login again!", this.reason = t;
                this.isRecvUserCellPhoneVerify = !0
            }
            RecvSmsSetting(e, t) {
                if (console.warn("RecvSmsSetting : " + e), console.warn(t), e == ArkSDK.HttpResult.OK && t && t.cmd_data) {
                    if (0 == t.cmd_data.result && (this.target.accountPageMgr.isShowPhoneMsg = t.cmd_data.data.is_show, t.cmd_data.data.hasOwnProperty("is_accept_sms") && (this.target.accountPageMgr.isSelectPhoneMsgOption = t.cmd_data.data.is_accept_sms), t.cmd_data.data.hasOwnProperty("is_show_popup")) && t.cmd_data.data.is_show_popup) {
                        let e = new l.PriorityCustomEvent(l.PopEventPriority.Sms, this.target.accountPageMgr.ShowPhoneMsgPopupEvent.bind(this.target.accountPageMgr));
                        this.target.popUpMgr.priorityShowEvents.push(e)
                    }
                } else e == ArkSDK.HttpResult.Abort ? this.errorCode = "S340" : e == ArkSDK.HttpResult.Condition ? this.errorCode = "S341" : e == ArkSDK.HttpResult.Error ? this.errorCode = "S342" : e == ArkSDK.HttpResult.NotReset ? this.errorCode = "S343" : e == ArkSDK.HttpResult.Status ? this.errorCode = "S344" : e == ArkSDK.HttpResult.Timeout ? this.errorCode = "S345" : this.errorCode = "S346", this.smsSettingIsError = !0, this.errorMsg = "The Internet was lost! Please login again!", this.reason = t;
                this.isRecvSmsSetting = !0
            }
            RecvExtraCompsResult(e, t) {
                if (console.warn("RecvExtraCompsResult : " + e), console.warn(t), e == ArkSDK.HttpResult.OK && t && t.cmd_data)
                    if (0 == t.cmd_data.result) {
                        t.cmd_data.data.length > 0 ? i.LobbyClient.Instance.m_ExtraResult = t.cmd_data : i.LobbyClient.Instance.m_ExtraResult = null;
                        const e = t.cmd_data.event_data;
                        let o = new Date;
                        e.forEach(e => {
                            const {
                                PurchaseEndTimesUTC: t
                            } = e, n = new Date(t + "+00:00");
                            n > o && (o = n)
                        }), SS.Common.GameEnvironment.ProjectSetting.hasOwnProperty("PopUp") || (SS.Common.GameEnvironment.ProjectSetting.PopUp = JSON.parse("{}"));
                        const n = setInterval(() => {
                            const e = Math.floor((o.getTime() - Date.now()) / 1e3);
                            e > 0 ? SS.Common.GameEnvironment.ProjectSetting.PopUp.ExtraComps = e : (clearInterval(n), SS.Common.GameEnvironment.ProjectSetting.PopUp.ExtraComps = -1)
                        }, 1e3)
                    } else i.LobbyClient.Instance.m_ExtraResult = null;
                else {
                    i.LobbyClient.Instance.m_ExtraResult = null;
                    let t = "";
                    t = e == ArkSDK.HttpResult.Abort ? "S357" : e == ArkSDK.HttpResult.Condition ? "S358" : e == ArkSDK.HttpResult.Error ? "S359" : e == ArkSDK.HttpResult.NotReset ? "S360" : e == ArkSDK.HttpResult.Status ? "S361" : (ArkSDK.HttpResult.Timeout, "S363"), console.error("\u53d6\u5f97 ExtraFree \u9818\u734e\u8cc7\u8a0a\u932f\u8aa4\u4e0d\u958b\u555f\u4ecb\u9762\uff0cerrorCode = " + t)
                }
                this.isRecvExtraCompsResult = !0
            }
            RecvClientBanner(e, t) {
                if (e == ArkSDK.HttpResult.OK && t && t.cmd_data && t.cmd_data.data) console.log("[LobbyMgr.RecvBanner]  Success. data: ", t.cmd_data.data), this.target.bannerMgr.SaveBannerCmdData(t.cmd_data.data);
                else {
                    let t = "";
                    t = e == ArkSDK.HttpResult.Abort ? "S304" : e == ArkSDK.HttpResult.Condition ? "S305" : e == ArkSDK.HttpResult.Error ? "S306" : e == ArkSDK.HttpResult.NotReset ? "S307" : e == ArkSDK.HttpResult.Status ? "S308" : e == ArkSDK.HttpResult.Timeout ? "S309" : "S310", this.isBannerCmdError = !0, console.warn("Error: RecvClientBanner( " + t + ") : Banner wrong!")
                }
                this.isRecvBannerInfo = !0
            }
            RecvClientPopUp(e, t) {
                if (0 == e && t && t.cmd_data && t.cmd_data.data) console.log("[LobbyMgr.RecvPopUp]  Success. data: ", t.cmd_data.data), this.target.popUpMgr.SavePopupCmdData(t.cmd_data.data);
                else {
                    let t = "";
                    t = e == ArkSDK.HttpResult.Abort ? "S296" : e == ArkSDK.HttpResult.Condition ? "S297" : e == ArkSDK.HttpResult.Error ? "S298" : e == ArkSDK.HttpResult.NotReset ? "S299" : e == ArkSDK.HttpResult.Status ? "S300" : e == ArkSDK.HttpResult.Timeout ? "S301" : "S302", this.isPopupCmdError = !0, console.warn("Error: RecvClientPopUp( " + t + ") : Banner wrong!")
                }
                this.isRecvPopupInfo = !0
            }
            RecvUserInfo(e, t) {
                if (console.warn("[RecvUserInfo], status = " + e + ", result = ", t), e == ArkSDK.HttpResult.OK && t && t.cmd_data && t.cmd_data.data) {
                    if (console.log("[LobbyMgr.RecvUserInfo] Success. data: ", t.cmd_data.data), SS.Network.UserClient.UserInfo.mobile_id = t.cmd_data.data.UserID, SS.Network.UserClient.UserInfo.nickname = t.cmd_data.data.Nickname, SS.Network.UserClient.UserInfo.avatar_id = t.cmd_data.data.AvatarID, SS.Network.UserClient.UserInfo.avatar_frame_id = t.cmd_data.data.AvatarFrameID, SS.Network.UserClient.UserInfo.avatar_expired_time = -1 == t.cmd_data.data.AvatarExpiredTime ? -1 : Date.parse(t.cmd_data.data.AvatarExpiredTime + "Z"), SS.Network.UserClient.UserInfo.avatar_frame_expired_time = -1 == t.cmd_data.data.AvatarFrameExpiredTime ? -1 : Date.parse(t.cmd_data.data.AvatarFrameExpiredTime + "Z"), SS.Network.UserClient.UserInfo.new_item = !1, t.cmd_data.data.hasOwnProperty("NewItem")) {
                        SS.Network.UserClient.UserInfo.new_item = t.cmd_data.data.NewItem;
                        let e = "ProfileBarNewRedPoint_" + SS.Network.LoginModel.LoginInfo.pin_ark_id,
                            o = SS.Network.UserClient.UserInfo.new_item;
                        JSUtility.IsSupportLocalStorage() ? "false" == o ? localStorage.removeItem(e) : localStorage.setItem(e, o) : JSUtility.IsSupportCookie() && (document.cookie = e + "=" + o + ";")
                    }
                    this.CheckAvatarItemAvaiable()
                } else e == ArkSDK.HttpResult.Abort ? this.errorCode = "S397" : e == ArkSDK.HttpResult.Condition ? this.errorCode = "S398" : e == ArkSDK.HttpResult.Error ? this.errorCode = "S399" : e == ArkSDK.HttpResult.NotReset ? this.errorCode = "S400" : e == ArkSDK.HttpResult.Status ? this.errorCode = "S401" : e == ArkSDK.HttpResult.Timeout && (this.errorCode = "S402"), this.userInfoIsError = !0, this.errorMsg = "The Internet was lost! Please login again!", this.reason = t;
                this.isRecvUserInfo = !0
            }
            CheckAvatarItemAvaiable() {
                return n(this, void 0, void 0, function*() {
                    if (null == this.jsAvatarItemSetting) {
                        let e = yield c.Download.JSON(SS.Common.GameEnvironment.S3URL + "/Data/AvatarItemSetting");
                        this.jsAvatarItemSetting = e
                    }
                    let e = this.CheckGameAvaiable(SS.Network.UserClient.UserInfo.avatar_id),
                        t = this.CheckGameAvaiable(SS.Network.UserClient.UserInfo.avatar_frame_id);
                    if (!e || !t) {
                        let o = {};
                        o.face_id = e ? SS.Network.UserClient.UserInfo.avatar_id : "", o.frame_id = t ? SS.Network.UserClient.UserInfo.avatar_frame_id : "", o.change_name_status = !1, console.error("\u982d\u50cf\u982d\u50cf\u6846\u4f7f\u7528\u672a\u958b\u904a\u6232\uff0c\u8cc7\u6599\u66f4\u65b0 = ", o), i.LobbyClient.Instance.GetUserClient.ChangePlayerInfo(SS.Network.LoginModel.LoginInfo.pin_ark_id, SS.Network.UserClient.UserInfo.nickname, o, this.ReceiveSaveData.bind(this)), e || (SS.Network.UserClient.UserInfo.avatar_id = ""), t || (SS.Network.UserClient.UserInfo.avatar_frame_id = "")
                    }
                })
            }
            ReceiveSaveData(e, t) {
                console.warn("[AvatarSetting]ReceiveSaveData:", t)
            }
            CheckGameAvaiable(e) {
                console.warn("\u6aa2\u67e5\u4f7f\u7528\u7684 avatar \u7269\u4ef6\u662f\u5426\u53ef\u4f7f\u7528, itemID = " + e);
                let t = !0,
                    o = this.jsAvatarItemSetting.find(t => t.id == e);
                if (o) {
                    let n = o.game_id;
                    if ("" != n)
                        for (let o = 0; o < SS.Common.GameEnvironment.GameSetting.DisableGame.length; o++)
                            if (SS.Common.GameEnvironment.GameSetting.DisableGame[o] == n) {
                                console.error("\u4f7f\u7528\u7684\u982d\u50cf\u904a\u6232\u6c92\u958b!!!!!, itemID = " + e + " itemGameTheme = " + n), t = !1;
                                break
                            }
                }
                return t
            }
        }, cc._RF.pop()
    }, {
        "../../LobbyCommon/Define/CustomConfig": "CustomConfig",
        "../../LobbyCommon/EventModule/EventBannerData": "EventBannerData",
        "../../LobbyCommon/EventModule/SessionBonus/Script/SessionDataCtrl": "SessionDataCtrl",
        "../../LobbyCommon/Helper/Download": "Download",
        "../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../../LobbyCommon/Helper/Setting": "Setting",
        "../../LobbyCommon/Loading/Script/LoadingMgr": "LoadingMgr",
        "../../LobbyCommon/Net/ClickLog": "ClickLog",
        "../../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum",
        "../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../../LobbyCommon/PopUpMgr/Scripts/PriorityCustomEvent": "PriorityCustomEvent",
        "../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr"
    }],
    WaitResDownload: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "f6c3drJGnNOoJCjZt3pv8AE", "WaitResDownload");
        var n = this && this.__awaiter || function(e, t, o, n) {
            return new(o || (o = Promise))(function(i, s) {
                function r(e) {
                    try {
                        l(n.next(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function a(e) {
                    try {
                        l(n.throw(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                        e(t)
                    })).then(r, a)
                }
                l((n = n.apply(e, t || [])).next())
            })
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.WaitResDownload = void 0;
        const i = e("../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            s = e("../../LobbyCommon/Net/LobbyClient"),
            r = e("../../LobbyCommon/EventModule/EventModule"),
            a = e("../../LobbyCommon/Component/BundleCtrl"),
            l = e("../../LobbyCommon/Helper/Setting"),
            c = e("../../LobbyCommon/EventModule/EventBannerData"),
            h = e("../../LobbyCommon/Helper/EventSystem"),
            m = e("../../LobbyCommon/Net/ClickLog"),
            u = e("../../LobbyCommon/Net/ClickLogEnum"),
            d = e("../../LobbyCommon/Skin/Skin"),
            p = e("../../Component/DownBar/Script/DownBarMgr"),
            g = e("../../LobbyCommon/PopUpMgr/Scripts/PriorityCustomEvent");
        o.WaitResDownload = class {
            constructor() {
                this.sceneReader = null, this.m_arrResSet = [], this.isBannerInit = !1, this.isDownloadBundles = !1, this.isDownloadResources = !1, this.t = 100
            }
            PreUpdate() {
                this.isDownloadBundles = !1, console.log("[LobbyFSM] %c WaitResDownload PreUpdate", "font-size:18px;font-weight:bold;color:orange;"), SS.Common.GameEnvironment.GameSetting.kioskOpenGameList = this.GetKioskOpenGame(), h.EventSystem.Event(h.RegistPopupBanner).Insert(this.SetEventBannerData, this), h.EventSystem.Event(h.RegistPopupEvent).Insert(this.SetPopUpEvent, this);
                let e = h.EventSystem.Event(h.LobbyState.DownloadResources).Length;
                0 === e && (this.isDownloadResources = !0), h.EventSystem.Event(h.LobbyState.DownloadResources).Notify(() => {
                    --e <= 0 && (this.isDownloadResources = !0)
                }), this.BundleAsync();
                let t = 180,
                    o = l.default.GetSetting("Lobby").DownloadResources.Timeout;
                Number(o) && (t = Number(o)), this.target.unscheduleAllCallbacks(), this.target.scheduleOnce(() => {
                    let e = "C71-4";
                    e = !0 === this.isDownloadBundles ? "C71-1" : !0 === this.isBannerInit ? "C71-2" : !0 === this.isDownloadResources ? "C71-3" : "C71-4", i.PopupMsgMgr.Instance.ShowPopMsg(i.PopupPriority.Critical, e, "Lobby", "Download Resorces Timeout")
                }, t)
            }
            Update() {
                if (this.t++, this.t >= 100 && (this.t = 0), !this.isDownloadBundles) return;
                let e = !0;
                if (this.m_arrResSet.forEach(t => {
                        t.isError && (t.isError = !1, this.ShowErrorMsg(t.errorCode, t.errorMsg)), e = e && t.isInitDone
                    }), this.isBannerInit || (this.SetBanner(), this.isBannerInit = !0), 0 == this.t && console.log("<><> all init done:", e), e) {
                    if (null == this.target.tmpMission90004)
                        for (let e = 0; e < this.m_arrResSet.length; e++) {
                            "Mission/900004" == this.m_arrResSet[e].resName && (this.target.tmpMission90004 = this.m_arrResSet[e].node);
                            break
                        }
                    this.target.bannerMgr.IsCompleteLoadAllBanner() && this.isDownloadResources && (this.target.IsFirstLogin && m.ClickLog.DirectSend(u.LogName.PlayerConversion, u.LogType_PlayerConversion.PlayerLogin, u.LogEvent_Login.WaitResDownload, "Lobby"), this.target.LobbyFSM.SetCurrentState(this.target.WaitIconDownload))
                }
            }
            PostUpdate() {
                h.EventSystem.Event(h.RegistPopupBanner).Remove(this.SetEventBannerData, this), h.EventSystem.Event(h.RegistPopupEvent).Remove(this.SetPopUpEvent, this)
            }
            ShowErrorMsg(e, t) {
                i.PopupMsgMgr.Instance.ShowPopMsg(i.PopupPriority.Critical, e, "", t)
            }
            GetKioskOpenGame() {
                let e = [],
                    t = SS.Common.GameEnvironment.GameSetting.DisableGame,
                    o = SS.Common.GameEnvironment.GameSetting.Type,
                    n = "NC" == ArkSDK.ArkClient.allowState || SS.Common.GameEnvironment.IsUseSlotSkillGame;
                for (let i in o)
                    for (let s = 0; s < o[i].length; s++) {
                        let r = !1,
                            a = this.cutPrefix(o[i][s]);
                        for (let e = 0; e < t.length; e++) {
                            let o = this.GetThemeIdByGameName(t[e]);
                            if ("" != o && "" != a && a == o) {
                                r = !0;
                                break
                            }
                        }
                        if (n) {
                            let e = SS.Common.GameEnvironment.GetGameIdByName(a);
                            if (null != e && "" != e && "KENO" == SS.Common.GameEnvironment.GameSetting.Icon[e].IconWaysText) {
                                r = !0;
                                break
                            }
                        }
                        r || e.push(a)
                    }
                return cc.log(e), e
            }
            cutPrefix(e) {
                if (-1 != e.indexOf("_")) {
                    let t = e.split("_");
                    return t[t.length - 1]
                }
                return e
            }
            GetThemeIdByGameName(e) {
                return SS.Common.GameEnvironment.GameSetting.hasOwnProperty("Icon") && SS.Common.GameEnvironment.GameSetting.Icon.hasOwnProperty(e) && SS.Common.GameEnvironment.GameSetting.Icon[e].hasOwnProperty("GameName") ? SS.Common.GameEnvironment.GameSetting.Icon[e].GameName : ""
            }
            BundleAsync() {
                return n(this, void 0, void 0, function*() {
                    let e = !0;
                    console.log("%c BundleAsync() - Version Setting", "font-size:14px;color:#00c957;font-weight:bold;"), yield a.default.Instance.DownloadConfig().catch(() => {
                        e = !1
                    }), e && (yield a.default.Instance.DownloadCommonBundles(), yield a.default.Instance.DownloadLobbyBundles(), yield this.DownloadGameFeature()), yield d.default.Instance.Init();
                    let t = d.default.Instance.GetLoadList("Lobby"),
                        o = {};
                    o.TopBar = e => {
                        this.target.topBarRoot ? e.parent = this.target.topBarRoot : e.parent = this.target.downBarRoot.parent, this.target.SetTopbar(e)
                    }, o.DownBar = e => {
                        this.target.downBarMgr = e.getComponent(p.DownBarMgr), this.target.SetDownbarEvent()
                    }, o.Profile = e => {
                        this.target.profiledNode = e, this.target.profiledNode.active = !1, this.target.profiledNode.setSiblingIndex(e.parent.childrenCount), this.SetProfileBannerData("ProfileBanner", u.LogEvent_OpenPanel.InBanner), this.SetProfileBannerData("ProfilePopup", u.LogEvent_OpenPanel.InPopup)
                    }, o.SessionBonusMgr = e => {
                        this.target.sessionBonusNode = e, this.target.sessionBonusNode.active = !0, this.SetDailyBonusBannerData("DailyBonusBanner", u.LogEvent_SessionEvent.DailyBonus_Banner), this.SetDailyBonusBannerData("DailyBonusPopup", u.LogEvent_SessionEvent.DailyBonus_Popup), this.RegisterGameSettingActiveEvent("DailyBonusPopup")
                    }, o.BulletinBoard = e => {
                        this.target.bulletinBoardNode = e, this.target.bulletinBoardNode.active = !1, this.target.bulletinBoardNode.setSiblingIndex(e.parent.childrenCount)
                    };
                    let n = this.ParseEventRes();
                    for (let a of n) t.push(a);
                    o.OceanHeart = e => {
                        this.OnEventMoudleSpawned(e), e.setSiblingIndex(1)
                    }, o.RankBonus = e => {
                        this.OnEventMoudleSpawned(e), e.setSiblingIndex(1)
                    }, o.PuzzleEgg = e => {
                        this.OnEventMoudleSpawned(e), e.setSiblingIndex(1)
                    }, o.ExtraFree = e => {
                        this.OnEventMoudleSpawned(e)
                    }, yield d.default.Instance.Download(o, t);
                    let i = !1,
                        s = h.EventSystem.Event(h.ModuleState.OnLoad).Length;
                    for (h.EventSystem.Event(h.ModuleState.OnLoad).Notify(() => {
                            0 == --s && (i = !0)
                        }); !i;) yield SS.Common.WaitForSeconds(.25);
                    let r = !1;
                    for (s = h.EventSystem.Event(h.ModuleState.Start).Length, h.EventSystem.Event(h.ModuleState.Start).Notify(() => {
                            0 == --s && (r = !0)
                        }); !r;) yield SS.Common.WaitForSeconds(.25);
                    h.EventSystem.Event(h.RegisterLayer).Notify(), this.isDownloadBundles = !0, console.log("%c BundleAsync() - END", "font-size:14px;color:#00c957;font-weight:bold;")
                })
            }
            SetProfileBannerData(e, t) {
                let o = new c.EventBannerData(e, -1, () => {
                    h.EventSystem.Event(h.Profile.OpenProfile).Length > 0 && h.EventSystem.Event(h.Profile.OpenProfile).Notify(!0), m.ClickLog.recordClickLog(u.LogName.Profile, 0, u.LogType_Profile.OpenPanel, t)
                });
                o.m_bValid = !0, this.target.m_arrEventBannerData.push(o)
            }
            SetDailyBonusBannerData(e, t) {
                let o = new c.EventBannerData(e, -1, () => {
                    h.EventSystem.Event(h.SessionEvent.OpenSessionBonus).Length > 0 && h.EventSystem.Event(h.SessionEvent.OpenSessionBonus).Notify("7Day", !0), m.ClickLog.recordClickLog(u.LogName.ClickEvent, -1, u.LogType_ClickEvent.SessionEvent, t)
                });
                o.m_bValid = !0, this.target.m_arrEventBannerData.push(o)
            }
            SetEventBannerData(e, t, o) {
                console.log("RegistEventBannerData, bannerID = " + e);
                let n = new c.EventBannerData(e, -1, o);
                n.m_bValid = !0, this.target.m_arrEventBannerData.push(n), t && this.RegisterGameSettingActiveEvent(e)
            }
            SetPopUpEvent(e, t, o = null) {
                console.log("SetPopUpEvent, priority = " + e);
                let n = new g.PriorityCustomEvent(e, t);
                this.target.popUpMgr.priorityShowEvents.push(n), o && this.target.popUpMgr.onCloseAllPopupEvent.push(o)
            }
            SetBanner() {
                if (this.target.m_arrEventBannerData.length > 0)
                    for (let e = 0; e < this.target.m_arrEventBannerData.length; e++) {
                        let t = this.target.m_arrEventBannerData[e];
                        t.m_bValid && this.target.bannerMgr.curOpenEventName.push(t.m_sBannerID)
                    }
                this.target.popUpMgr.isFirstLogin = this.target.CheckCookieValue("login_clicked", "1"), this.target.bannerMgr.BannerDataInit(), this.target.popUpMgr.PopupDataInit()
            }
            OnEventMoudleSpawned(e) {
                let t = e.getComponent(r.EventModule);
                t && (this.RegisterGameSettingActiveEvent(t.m_strEventID), t.init(this.target, null))
            }
            RegisterGameSettingActiveEvent(e) {
                SS.Common.GameEnvironment.GameSetting.hasOwnProperty("active_event") || (SS.Common.GameEnvironment.GameSetting.active_event = {}), SS.Common.GameEnvironment.GameSetting.active_event[e] = !0
            }
            ParseEventRes() {
                let e = [];
                if (null != s.LobbyClient.Instance.m_CommonEventInfo_900004) {
                    let t = this.parseTitleType_900004(s.LobbyClient.Instance.m_CommonEventInfo_900004); - 1 !== t.indexOf("102") ? e.push("RankBonus") : console.log("[WaitResDownload] [Mission] \u6c92\u958b\u5f69\u91d1\u6392\u884c\u699c\u6d3b\u52d5"), -1 !== t.indexOf("302") ? e.push("OceanHeart") : console.log("[WaitResDownload] [Mission] \u6c92\u958b\u6d77\u6d0b\u4e4b\u5fc3")
                }
                return null != s.LobbyClient.Instance.m_CommonEventInfo_900005 ? e.push("PuzzleEgg") : console.log("[WaitResDownload] [Mission] \u6c92\u958b\u5f69\u86cb\u62fc\u5716\u6d3b\u52d5"), null != s.LobbyClient.Instance.m_ExtraResult && e.push("ExtraFree"), e
            }
            parseTitleType_900004(e) {
                let t = [];
                try {
                    let n = JSON.parse(e);
                    if (n.hasOwnProperty("Enable") && n.Enable && n.hasOwnProperty("QuestList") && n.QuestList.length > 0 && n.hasOwnProperty("UserQuestData")) {
                        let e = n.QuestList;
                        if (0 == e.length) return;
                        for (let o = 0; o < e.length; o++) - 1 === t.indexOf(e[o].TitleType) && t.push(e[o].TitleType.toString())
                    }
                } catch (o) {
                    console.error("[WaitResDownload] [parseTitleType_900004]", o)
                }
                return t
            }
            DownloadGameFeature() {
                return n(this, void 0, void 0, function*() {
                    let e = cc.director.getScene().getChildByName("LoadResNode");
                    yield l.default.CheckInit();
                    let t = l.default.GetSetting("FeatureUIGame"),
                        o = [];
                    if (t) {
                        let e = SS.Common.GameEnvironment.GameSetting.kioskOpenGameList;
                        for (let n = 0; n < t.length; n++) {
                            let i = t[n];
                            e.indexOf(i) >= 0 && o.push(i)
                        }
                    }
                    if (o) {
                        yield a.default.Instance.DownloadGameFeatureBundles(!0, o);
                        for (let t = 0; t < o.length; t++) {
                            let n = a.default.Instance.GetGameFeatureBundlesName(o[t]),
                                i = yield a.default.Instance.GetMainPrefab(n);
                            if (i) {
                                let t = cc.instantiate(i);
                                t.getComponent(r.EventModule).init(this.target, null), t.parent = e
                            }
                        }
                    }
                })
            }
        }, cc._RF.pop()
    }, {
        "../../Component/DownBar/Script/DownBarMgr": "DownBarMgr",
        "../../LobbyCommon/Component/BundleCtrl": "BundleCtrl",
        "../../LobbyCommon/EventModule/EventBannerData": "EventBannerData",
        "../../LobbyCommon/EventModule/EventModule": "EventModule",
        "../../LobbyCommon/Helper/EventSystem": "EventSystem",
        "../../LobbyCommon/Helper/Setting": "Setting",
        "../../LobbyCommon/Net/ClickLog": "ClickLog",
        "../../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum",
        "../../LobbyCommon/Net/LobbyClient": "LobbyClient",
        "../../LobbyCommon/PopUpMgr/Scripts/PriorityCustomEvent": "PriorityCustomEvent",
        "../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr",
        "../../LobbyCommon/Skin/Skin": "Skin"
    }],
    WaitSettingState: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "91e8eRJkiVMIIIRNcHBA805", "WaitSettingState");
        var n = this && this.__awaiter || function(e, t, o, n) {
            return new(o || (o = Promise))(function(i, s) {
                function r(e) {
                    try {
                        l(n.next(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function a(e) {
                    try {
                        l(n.throw(e))
                    } catch (t) {
                        s(t)
                    }
                }

                function l(e) {
                    var t;
                    e.done ? i(e.value) : (t = e.value, t instanceof o ? t : new o(function(e) {
                        e(t)
                    })).then(r, a)
                }
                l((n = n.apply(e, t || [])).next())
            })
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.WaitSettingState = void 0;
        const i = e("../../LobbyCommon/Net/Downloader/GameSettingDownloader"),
            s = e("../../LobbyCommon/PopupMessage/Script/PopupMsgMgr"),
            r = e("../../LobbyCommon/Component/GlobalData"),
            a = e("../../LobbyCommon/GuestSystem/Script/GuestSysMgr"),
            l = e("../../Component/GameIconMgr/Script/FavoriteMgr"),
            c = e("../../LobbyCommon/Helper/Setting"),
            h = e("../../LobbyCommon/Net/ClickLogEnum"),
            m = e("../../LobbyCommon/Net/ClickLog"),
            u = e("../../LobbyCommon/Define/CustomConfig");
        o.WaitSettingState = class {
            constructor() {
                this.favoriteCount = 0, this.favoriteWaitTime = 600
            }
            PreUpdate() {
                console.log("[LobbyFSM] %c WaitSettingState PreUpdate", "font-size:18px;font-weight:bold;color:orange;"), this.isRecvFTPGameSetting = !1, this.ftpGameSettingisERROR = !1;
                const {
                    enableFavorite: e
                } = u.CustomConfig.Instance.lobbyOption;
                e && (l.FavoriteMgr.Instance.Init(), l.FavoriteMgr.Instance.GetFavoriteGameList()), this.isFavoriteListPass = !1, this.favoriteCount = 0, this.DownloadGameSetting();
                let t = 60,
                    o = c.default.GetSetting("Lobby").DownloadSetting.Timeout;
                Number(o) && (t = Number(o)), this.target.unscheduleAllCallbacks(), this.target.scheduleOnce(() => {
                    let e = "C72-2";
                    e = !1 === this.isRecvFTPGameSetting ? "C72-1" : "C72-2", s.PopupMsgMgr.Instance.ShowPopMsg(s.PopupPriority.Critical, e, "Lobby", "Download Setting Timeout")
                }, t)
            }
            Update() {
                this.favoriteCount++, 0 == this.isFavoriteListPass && (l.FavoriteMgr.Instance.IsRecvDone() || this.favoriteCount > this.favoriteWaitTime) && (this.isFavoriteListPass = !0, cc.log("[step] favorite list pass ", this.favoriteCount));
                const {
                    enableFavorite: e
                } = u.CustomConfig.Instance.lobbyOption;
                this.ftpGameSettingisERROR ? (this.ftpGameSettingisERROR = !1, s.PopupMsgMgr.Instance.ShowPopMsg(s.PopupPriority.Critical, this.errorCode, "Lobby", this.reason)) : !this.isRecvFTPGameSetting || e && !this.isFavoriteListPass || (this.isRecvFTPGameSetting = !1, this.target.IsFirstLogin && m.ClickLog.DirectSend(h.LogName.PlayerConversion, h.LogType_PlayerConversion.PlayerLogin, h.LogEvent_Login.WaitSettingState, "Lobby"), this.target.LobbyFSM.SetCurrentState(this.target.WaitInitAckState))
            }
            PostUpdate() {
                console.log("[LobbyFSM] %c WaitSettingState PostUpdate", "font-size:18px;font-weight:bold;color:orange;")
            }
            DownloadGameSetting() {
                return n(this, void 0, void 0, function*() {
                    yield new Promise((e, t) => {
                        let o, n = "";
                        n = a.default.getInstance().isGuestLogin() ? "/" + window.gd_nowLOGO + "GuestGameSetting" : "/" + window.gd_nowLOGO + "GameSetting", o = r.GlobalData.IsCompress ? SS.Common.GameEnvironment.S3URL + n + ".txt" : SS.Common.GameEnvironment.S3URL + n + ".json", (new i.GameSettingDownloader).Start(o, !r.GlobalData.IsCompress, t => {
                            console.log("ftp gameSetting", t), SS.Common.GameEnvironment.DisableMenuBtn = t.DisableMenuBtn.slice(0), SS.Common.GameEnvironment.TopBarJPIsMoneyFormat = t.TopBarJPIsMoneyFormat, SS.Common.GameEnvironment.JPRewardIsMoneyFormat = t.JPRewardIsMoneyFormat, SS.Common.GameEnvironment.JPWinnerIsMoneyFormat = t.JPWinnerIsMoneyFormat, t.PrizeReveal && (SS.Common.GameEnvironment.PrizeReveal = t.PrizeReveal), SS.Common.GameEnvironment.GameSetting = t, SS.Common.GameEnvironment.SetGameMappingData(), this.isRecvFTPGameSetting = !0, e(null)
                        }, e => {
                            this.reason = e, this.errorCode = "C10", this.ftpGameSettingisERROR = !0, t()
                        })
                    })
                })
            }
        }, cc._RF.pop()
    }, {
        "../../Component/GameIconMgr/Script/FavoriteMgr": "FavoriteMgr",
        "../../LobbyCommon/Component/GlobalData": "GlobalData",
        "../../LobbyCommon/Define/CustomConfig": "CustomConfig",
        "../../LobbyCommon/GuestSystem/Script/GuestSysMgr": "GuestSysMgr",
        "../../LobbyCommon/Helper/Setting": "Setting",
        "../../LobbyCommon/Net/ClickLog": "ClickLog",
        "../../LobbyCommon/Net/ClickLogEnum": "ClickLogEnum",
        "../../LobbyCommon/Net/Downloader/GameSettingDownloader": "GameSettingDownloader",
        "../../LobbyCommon/PopupMessage/Script/PopupMsgMgr": "PopupMsgMgr"
    }],
    WeaponActiveHint: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "55519SWY8JBlLCea8nVb8Jl", "WeaponActiveHint");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_FishCommonAltas = null, this.anim = null, this.weaponIcon = [], this.hintLabel = []
            }
            Init(e) {
                e.length > 1 ? (this.hintLabel[0].string = " are available", this.hintLabel[1].node.active = !0) : this.hintLabel[0].string = " is available";
                for (let t = 0; t < e.length; t++) switch (e[t]) {
                    case 56001:
                        this.weaponIcon[t].spriteFrame = this.m_FishCommonAltas.getSpriteFrame("ClicktoChange_Tiger"), this.weaponIcon[t].node.active = !0;
                        break;
                    case 57001:
                        this.weaponIcon[t].spriteFrame = this.m_FishCommonAltas.getSpriteFrame("ClicktoChange_Dragon"), this.weaponIcon[t].node.active = !0
                }
                this.anim.play()
            }
        };
        n([s(cc.SpriteAtlas)], r.prototype, "m_FishCommonAltas", void 0), n([s(cc.Animation)], r.prototype, "anim", void 0), n([s([cc.Sprite])], r.prototype, "weaponIcon", void 0), n([s([cc.Label])], r.prototype, "hintLabel", void 0), r = n([i], r), o.default = r, cc._RF.pop()
    }, {}],
    WeaponChangeHint: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "f3926Kk5VdOBYfU6+97Qm3r", "WeaponChangeHint");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        });
        const i = e("./FishUIMgr"),
            {
                ccclass: s,
                property: r
            } = cc._decorator;
        let a = class extends cc.Component {
            constructor() {
                super(...arguments), this.m_FishCommonAltas = null, this.m_ChangeWeaponRoot = null, this.m_ClickToChangeNode = null, this.m_WeaponTypeArray = []
            }
            Init(e) {
                let t = 0;
                switch (t += this.m_ChangeWeaponRoot.width, SS.Common.GameEnvironment.CurrentGameNow) {
                    case "FishHunterAladdin":
                        {
                            let e = cc.instantiate(this.m_ClickToChangeNode);e.getComponent(cc.Sprite).spriteFrame = this.m_FishCommonAltas.getSpriteFrame("ClicktoChange_Aladdin_Lock"),
                            t += e.width,
                            e.parent = this.m_ChangeWeaponRoot;
                            let o = cc.instantiate(this.m_ClickToChangeNode);o.getComponent(cc.Sprite).spriteFrame = this.m_FishCommonAltas.getSpriteFrame("ClicktoChange_Tiger"),
                            t += o.width,
                            o.parent = this.m_ChangeWeaponRoot;
                            break
                        }
                    case "FishHunterGhost":
                        {
                            let e = cc.instantiate(this.m_ClickToChangeNode);e.getComponent(cc.Sprite).spriteFrame = this.m_FishCommonAltas.getSpriteFrame("ClicktoChange_Ghost_Lock"),
                            t += e.width,
                            e.parent = this.m_ChangeWeaponRoot;
                            let o = cc.instantiate(this.m_ClickToChangeNode);o.getComponent(cc.Sprite).spriteFrame = this.m_FishCommonAltas.getSpriteFrame("ClicktoChange_Dragon"),
                            t += o.width,
                            o.parent = this.m_ChangeWeaponRoot;
                            break
                        }
                    case "FishFortuneKings":
                    case "FishFortuneKingsLite":
                        {
                            let o = cc.instantiate(this.m_ClickToChangeNode);
                            if (o.getComponent(cc.Sprite).spriteFrame = this.m_FishCommonAltas.getSpriteFrame("ClicktoChange_Dragon_Lock"), t += o.width, o.parent = this.m_ChangeWeaponRoot, e) {
                                if (e.hasOwnProperty("Scale") && e.Scale) {
                                    let e = cc.instantiate(this.m_ClickToChangeNode);
                                    e.getComponent(cc.Sprite).spriteFrame = this.m_FishCommonAltas.getSpriteFrame("ClicktoChange_Tiger"), t += e.width, e.parent = this.m_ChangeWeaponRoot
                                }
                                if (e.hasOwnProperty("MultipleScale") && e.MultipleScale) {
                                    let e = cc.instantiate(this.m_ClickToChangeNode);
                                    e.getComponent(cc.Sprite).spriteFrame = this.m_FishCommonAltas.getSpriteFrame("ClicktoChange_Dragon"), t += e.width, e.parent = this.m_ChangeWeaponRoot
                                }
                            }
                            break
                        }
                    default:
                        {
                            let e = cc.instantiate(this.m_ClickToChangeNode);e.getComponent(cc.Sprite).spriteFrame = this.m_FishCommonAltas.getSpriteFrame("ClicktoChange_Normal_Lock"),
                            t += e.width,
                            e.parent = this.m_ChangeWeaponRoot;
                            break
                        }
                }
                this.m_ChangeWeaponRoot.width = t
            }
            InitWithWeaponList(e) {
                let t = 0;
                t += this.m_ChangeWeaponRoot.width;
                let o, n = "";
                for (let s = 0; s < e.length; s++) {
                    switch (o = e[s], this.m_WeaponTypeArray.push(o), n = "", o) {
                        case i.WeaponType.Lock:
                            n = "FishHunterAladdin" == SS.Common.GameEnvironment.CurrentGameNow ? "ClicktoChange_Aladdin_Lock" : "FishHunterGhost" == SS.Common.GameEnvironment.CurrentGameNow ? "ClicktoChange_Ghost_Lock" : "FishFortuneKings" == SS.Common.GameEnvironment.CurrentGameNow || "FishFortuneKingsLite" == SS.Common.GameEnvironment.CurrentGameNow ? "ClicktoChange_Dragon_Lock" : "ClicktoChange_Normal_Lock";
                            break;
                        case i.WeaponType.Tiger:
                            n = "ClicktoChange_Tiger";
                            break;
                        case i.WeaponType.Dragon:
                            n = "ClicktoChange_Dragon"
                    }
                    if ("" != n) {
                        let e = cc.instantiate(this.m_ClickToChangeNode);
                        e.getComponent(cc.Sprite).spriteFrame = this.m_FishCommonAltas.getSpriteFrame(n), t += e.width, e.parent = this.m_ChangeWeaponRoot
                    }
                }
                this.m_ChangeWeaponRoot.width = t
            }
        };
        n([r(cc.SpriteAtlas)], a.prototype, "m_FishCommonAltas", void 0), n([r(cc.Node)], a.prototype, "m_ChangeWeaponRoot", void 0), n([r(cc.Node)], a.prototype, "m_ClickToChangeNode", void 0), a = n([s], a), o.default = a, cc._RF.pop()
    }, {
        "./FishUIMgr": "FishUIMgr"
    }],
    WebViewUIGroup: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "94f22kCJ7JKjKx2/q6c3LTz", "WebViewUIGroup");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.WebViewUIGroup = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.WebviewRoot = null, this.popupWebview = null
            }
            CloseWebview() {
                this.WebviewRoot.active = !1, this.popupWebview.node.active = !1
            }
            OpenWebView(e) {
                this.popupWebview.url = e, this.WebviewRoot.active = !0, this.popupWebview.node.active = !0
            }
        };
        n([s(cc.Node)], r.prototype, "WebviewRoot", void 0), n([s(cc.WebView)], r.prototype, "popupWebview", void 0), r = n([i], r), o.WebViewUIGroup = r, cc._RF.pop()
    }, {}],
    test: [function(e, t, o) {
        "use strict";
        cc._RF.push(t, "98928gFSDdCRIF58W4MS077", "test");
        var n = this && this.__decorate || function(e, t, o, n) {
            var i, s = arguments.length,
                r = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);
            else
                for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (r = (s < 3 ? i(r) : s > 3 ? i(t, o, r) : i(t, o)) || r);
            return s > 3 && r && Object.defineProperty(t, o, r), r
        };
        Object.defineProperty(o, "__esModule", {
            value: !0
        }), o.test = void 0;
        const {
            ccclass: i,
            property: s
        } = cc._decorator;
        let r = class extends cc.Component {
            constructor() {
                super(...arguments), this.gameWebView = null
            }
            start() {
                window.addEventListener("resize", this.SetResize.bind(this))
            }
            SetResize() {
                this.gameWebView.node.setContentSize(cc.size(window.innerWidth, window.innerHeight))
            }
        };
        n([s(cc.WebView)], r.prototype, "gameWebView", void 0), r = n([i], r), o.test = r, cc._RF.pop()
    }, {}],
    "use_v2.0.x_cc.Toggle_event": [function(e, t) {
        "use strict";
        cc._RF.push(t, "8ca37iy34pA3LzqORVip44r", "use_v2.0.x_cc.Toggle_event"), cc.Toggle && (cc.Toggle._triggerEventInScript_check = !0), cc._RF.pop()
    }, {}]
}, {}, ["AutoLogoutBtn", "BannerMgr", "DownBarMgr", "FavoriteMgr", "GameIconMgr", "IconGroupData", "IconMgr", "IconScrollView", "IconVerticleLayout", "InGameJpBg", "InGameJpDownloadList", "InGameJpPanel", "LockEffect", "GameTypeElement", "GameTypeMgr", "JPWinnerItem", "JackpotWinnerMgr", "EditMobileLanguageMgr", "EditPWLanguageMgr", "GetBonusMgr", "SessionIcon", "SessionIconArea", "SkillGameArrowAni", "SkillGameMgr", "StoreInfo", "StoreInfoBtnCtrl", "StoreInfoBtnMgr", "StoreInfoPopup", "VerticalHintMgr", "BtnState", "ClickLogDef", "FishBundleManager", "FishCommonRoot", "FishUIMgr", "LobbyShipInfoMgr", "SSCanvasHandler", "SSMouseMark", "SwitchGameHint", "WeaponActiveHint", "WeaponChangeHint", "CheatKeyCustomData", "CheatKeyData", "CheatKeyManager", "CommonRoot", "GameBar", "GAME_APP", "InfoMgr", "JPTimerMgr", "BaseMachineHost", "MessageMgr", "AvatarNoticeMgr", "AvatarTimer", "AvatarTimerMgr", "NewRedPointMgr", "NoticeInteractive", "ProfileBar", "RewardBroadcastMgr", "RewardNoticeMgr", "RELEASE", "Achieve", "AchieveDefine", "AchieveMgr", "AchieveName", "Task", "TaskDefine", "ActCapsule", "ActCapsuleDefine", "ActCapsuleMgr", "Asset", "ItemBag", "BeginnersGuideMgr", "BeginnersGuideStepItem", "AnimationAutoPlay", "AudioMgr", "AudioList", "AudioPlaySetting", "AudioSetting", "AvatarIcon", "BundleCtrl", "ComponentPool", "CookieCtrl", "DateTimeCountDown", "EnableToPlayAnimation", "EnableToPlayParticle", "EventCaller", "GifRender", "GlobalData", "Key", "KeyboardMgr", "ScrollList", "ScrollObject", "NodeDrag", "NodeLongPress", "NumberAnimation", "NumberCountUp", "LayoutHandler", "MultiStateNodeHandler", "NodeHandler", "ParticleSystemReset", "ReturnLobbyHandler", "SSColorAssembler2D", "SSDontDestroy", "SSEncryptSkeleton", "SSNodeParticleSystem", "SSSpawnPool", "ScrollviewWindow", "SetUseSprite", "SSStateMachine", "State", "TextBox", "ConnectPanelMgr", "CustomWidget", "CustomConfig", "DisableMultiTapHandler", "EditMobileIDMgr", "EditPassword", "CommBonusBtnCtrl", "CommBonusCoinCtrl", "CommBonusData", "CommBonusInfoCtrl", "CommBonusListCtrl", "CommBonusMgr", "CommBonusMoneyMgr", "CommBonusMsgCtrl", "CommBonusTokenCtrl", "CommBonusTopProgress", "CommBonusTotalProgress", "CommGetTokenShow", "CommonBonusTakeAvatar", "CommBonusBtnCtrl_Rank", "CommBonusListCtrl_Rank", "CommBonusMgr_Rank", "FinishPageTimer", "NewPlayerGuideCtrl", "PlayerRankingCtrl", "PlayerRankingMgr", "RankAwardPanelCtrl", "RankBonusTotalProgress", "RankingBonusListCtrl", "RankingBonusRowCtrl", "SelfDestroy", "EventBannerData", "EventModule", "EventTipsMask", "FishFakeScoreBoxCtrl", "FishOceanHeartBtnCtrl", "FishOceanHeartData", "FishOceanHeartDropItem", "FishOceanHeartInfoCtrl", "FishOceanHeartListCtrl", "FishOceanHeartMgr", "FishOceanHeartPlayerRankingMgr", "FishOceanHeartRankAwardPanelCtrl", "FishOceanHeartShellCtrl", "FishOceanHeartTotalProgress", "FishPuzzleEggGetAwardState", "FishPuzzleEggIdleState", "FishPuzzleEggInitState", "FishPuzzleEggPuzzlePageState", "FishPuzzleEggWaitCmdState", "FishPuzzleEggAwardMgr", "FishPuzzleEggAwardPanelMgr", "FishPuzzleEggAwardPanelRowCtrl", "FishPuzzleEggData", "FishPuzzleEggDropEgg", "FishPuzzleEggIconCtrl", "FishPuzzleEggIconMgr", "FishPuzzleEggInfoMgr", "FishPuzzleEggMgr", "FishPuzzleEggPopupMgr", "FishPuzzleEggPuzzlePage", "FishPuzzleEggPuzzlePageMgr", "FishPuzzleEggTipsMgr", "MissionBtnCtrl", "MissionCoinCtrl", "MissionData", "MissionInfoCtrl", "MissionListCtrl", "MissionMsgCtrl", "MissionTopProgress", "RepeatingMissionMgr", "SessionDataCtrl", "TimeZoneConversion", "FakeScoreBoxCtrl", "GetBonusShow", "FixEngineUtil", "FullScreenHandler", "GDC_APP", "GiftHistoryDefine", "GuestGameUiMgr", "GuestInGamePopupMgr", "GuestLobbyPopupMgr", "GuestLobbyUiMgr", "GuestLoginUiMgr", "GuestSysMgr", "SocialMediaApiHandler", "BannerController", "BlinkEffect", "ButtonHoverScale", "DraggableItem", "GuestButtonController", "SwingEffect", "CrossDomainCookie", "Download", "EventSystem", "EventSystemObjectCtrl", "Layer", "LayerSystem", "Setting", "GameJpMgr", "BackpackMgr", "ItemDataStructure", "ItemIconCtrl", "LoadingMgr", "LobbyCommon", "LobbyObjectSetting", "MarqueeMgr", "OpenBoxEffectAnimation", "OrientationHint", "ModuleBase", "ClickLog", "ClickLogEnum", "ErrorMsgDownloader", "GameMsgDownloader", "GameSettingDownloader", "ImageDownloader", "JSONDownloder", "ModuleDownloader", "ProjectSettingDownloader", "SSDownloader", "VersionDownloader", "LobbyClient", "PopUpMgr", "PopUpTimerMgr", "PriorityCustomEvent", "TmpRegulationPage", "PopupMsgMgr", "ErrorCodes", "QuestCmd", "QuestData", "QuestEvents", "RotatableObjectCtrlGame", "ScreenShotTool", "Skin", "SkinConfig", "SkinLayer", "Device", "SwitchGameGroup", "TopbarMgr", "Dictionary", "Functions", "RichTxtClickEvent", "Singleton", "UISuperItem", "UISuperLayout", "UISuperScrollView", "ViewResolution", "WebViewUIGroup", "GameMgr", "LobbyBeginnerMgr", "LobbyMgr", "LobbySceneReader", "IdleState", "WaitCheckVersionState", "WaitIconDownload", "WaitInitAckState", "WaitResDownload", "WaitSettingState", "LoginLanguageSwitch", "LoginMgr", "use_v2.0.x_cc.Toggle_event", "test"]);